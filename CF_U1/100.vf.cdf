(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 11.3' *)

(***************************************************************************)
(*                                                                         *)
(*                                                                         *)
(*  Under the Wolfram FreeCDF terms of use, this file and its content are  *)
(*  bound by the Creative Commons BY-SA Attribution-ShareAlike license.    *)
(*                                                                         *)
(*        For additional information concerning CDF licensing, see:        *)
(*                                                                         *)
(*         www.wolfram.com/cdf/adopting-cdf/licensing-options.html         *)
(*                                                                         *)
(*                                                                         *)
(***************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1088,         20]
NotebookDataLength[   3991839,      71390]
NotebookOptionsPosition[   3855832,      69099]
NotebookOutlinePosition[   3916933,      70350]
CellTagsIndexPosition[   3916890,      70347]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Unidad 1", "Book",ExpressionUUID->"39fa89f6-e6f1-43cc-8506-adc311f022c6"],

Cell["Conjuntos num\[EAcute]ricos", "Title",ExpressionUUID->"cc75dd0c-4423-4b10-800e-16924e3d5aff"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ". N\[UAcute]meros naturales"
}], "Chapter",ExpressionUUID->"0a866ca4-bf05-4950-9ab0-88cc915ae365"],

Cell[CellGroupData[{

Cell["Un poco de historia...", "Subchapter",ExpressionUUID->"6978bfa9-91d0-44bf-8a0f-a612667de848"],

Cell[TextData[{
 "En la antig\[UDoubleDot]edad, la necesidad del hombre de responder a la \
pregunta \[DownQuestion]",
 StyleBox["cu\[AAcute]ntos hay",
  FontSlant->"Italic"],
 "?, lo lleva a los or\[IAcute]genes de la matem\[AAcute]tica, tanto de la \
aritm\[EAcute]tica como de la geometr\[IAcute]a. Si bien la respuesta es un n\
\[UAcute]mero, el que da soluci\[OAcute]n a esta inquietud se llama un n\
\[UAcute]mero natural, ya que permite contar y as\[IAcute] responder a la \
pregunta \[OpenCurlyDoubleQuote]\[DownQuestion]cu\[AAcute]ntos hay?\
\[CloseCurlyDoubleQuote].\nHist\[OAcute]ricamente, la poblaci\[OAcute]n \
establecida hace unos 20.000 a\[NTilde]os a orillas del lago Ishango pudo \
haber sido una de las primeras sociedades en hacer conteos, seg\[UAcute]n las \
marcas que se encontraron en un hueso hallado hacia el a\[NTilde]o 1960. Otra \
civilizaci\[OAcute]n que escrib\[IAcute]a en forma cuneiforme, usando una \
aguja laminada, dejando huellas sobre una tabla de arcilla suave, eran los \
babilonios, quienes empleaban un sistema sexagesimal posicional adaptado de \
los sumerios, los hallazgos de esta cultura se remontan alrededor de 1900 \
a.C. Si se contin\[UAcute]a revisando, los egipcios, los griegos, los chinos, \
los mayas, los incas, cada uno adoptaron una forma de contar, con diferentes \
tipos de representaci\[OAcute]n pero que significaban el mismo \
n\[UAcute]mero. \n\nFueron necesarios miles de a\[NTilde]os antes de que el \
hombre hiciera una abstracci\[OAcute]n del concepto de n\[UAcute]mero y lo \
tradujera en la creaci\[OAcute]n de los s\[IAcute]mbolos matem\[AAcute]ticos \
que hoy se utilizan y que sirven para contar. A continuaci\[OAcute]n, \
aparecen algunas actividades que permitir\[AAcute]n dar uso a este conjunto \
num\[EAcute]rico."
}], "Resumen",ExpressionUUID->"1218192f-8c88-44a9-b9ad-80d7c3b3d943"]
}, Closed]],

Cell[CellGroupData[{

Cell["Situaci\[OAcute]n: Sistema de transporte", "Subchapter",ExpressionUUID->"2a7a54ad-3737-443a-9dff-c97a5c9e608e"],

Cell[TextData[{
 "El sistema de transporte integrado de cierta ciudad ofrece una tarjeta \
recargable con la cual se puede pagar;",
 StyleBox[" ",
  FontSlant->"Italic"],
 "esta tarjeta est\[AAcute] personalizada con el nombre e identificaci\
\[OAcute]n del usuario y cuenta con los beneficios de descuentos por ",
 StyleBox["transbordo",
  FontSlant->"Italic"],
 ", ",
 StyleBox["viaje a cr\[EAcute]dito",
  FontSlant->"Italic"],
 " y ",
 StyleBox["recuperaci\[OAcute]n del saldo",
  FontSlant->"Italic"],
 " en caso de p\[EAcute]rdida. Los costos del servicio se describen en la \
siguiente imagen:"
}], "Text",ExpressionUUID->"25aa8028-ce11-4e99-89b2-b0e40f32e37a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
HDl18XL0DyXjv4uftmLLj8W1Fy/3Je6venTactnL84dP9H3hi3W+MfszClsb
W7pOnusGpq+ru7eitiMnr2F/fsPB4taM4pYNP+S/7rl+yIuz/vJasHpDZm0b
rDJ0nDm3M7MiwpiX/FNZY+tpWHruOKfbcODxyYtko2a9NG1Z9NaCcxegPW0/
cfbHQ9XbMyvL6ju6r1wGkqzili9Dtz/4RpBs1HdD7Lwem7Z45vLdVXWwkytX
+o62dGUWtWzJrtqb35hb2m5KL/9m6Y4H319+35tB0/1TorYV7cltrGg83XkR
GvfGts7vwr7/67uLhk/UyGyA70N5/knKR6csnrt6T3ntSejRenuKa45tPVD/
U3HLifMX+3qvNrWdCU3KeeKD5bKXvvmTi8+MJTtLGs4AzQs9l47UtO3JqN+f
39Jy+iLa90rwltxHPl8rm+Qns1UKKxuzuoAkz09G9WhQVoq5Zj9uxK+acAes
L6oO0FFGjF8oAmTOKOnxi64LsMjf1RrmIn9zzAwLjjPtaToIcgEN9KRj5oyU
62y+CsFzh+vRfAESw+fhOJ/UBVj8L8bJ1NAxM5iMDSOeq2XJMCbQegGeqMXM
bxw3EklkqFlZlpfDusD+cGCQsSvh4nlRixwKOIZ4vOIQcyLY0dST4ayIHXA9
1BcKbo7l9s2ifWvxvyAR6gKQCyQHLIXzBYZNUskmoboAuApwOIcaOX0uNYqZ
guDEf3ZdQHHLMXo2WaA1GCyn+XwnboRPP5gleSQY69ijJI8jCh1JdQCzAyWq
HeuIz8ILGoCtk7z/9HbozOW7SipaT57p9Y3OevC9JQ7aWMPB6u7evrSSVvs5
8XcDTmEzb+RrAX+eHDrmq6hvV/2QXtAELGR5Q8fM8F2jPl/95Dshoz5e/cqX
65/+cPV9TgF3y32n+KTsP9wGQuu2k11LDQfHfrHuj44L//buEtX6H4+dBt7j
6ta8SrnXetk49d8mL12acvDomfMnzvXEbStVfBX17LQV0wO2pRUfBab12PGu
pQkHH/9kncxm/gOufpMDkn/Mq+ntvXK+58quQ7XfhO0aPSPq6Y9Wj/o8cuzn
kc9/FP7gWyHDXQNHvhH416mLn3x/0bNvh3wWaPipoO5iT291w8kZS7b96d1F
8GI5IC8wbu59LgFvqQ0/5h69erXv/KXezT+Vv+Wd9Lf3Fk+YGbEkOauu9SwI
+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
wgg4C2DyAoxjxalSoyBk8eDASudZ/mjThx0THI6PZrwfnD2+/de5X/rW64Zv
/dO6Z9/ZsKlonbS/MYeUkg0MfETL+rlsRrgT+qZEOp8slyJMmdYlU9iEYNG6
FyG+jRCKcyCAlkIrSIv/7geH3jI1eE+eICT03hhhyh5+nQWMryX30S0jiP6/
/45xAaFDGYFYO8DMARgOwgK8yAhA53bQOXS950jnie37jv4VmfyT+YanTIbv
ZRu+ZzY8XWD4nsnwdLbhaSIXopxjeNqEslEv0w+Xv7eGvJaO6P9evJzDzvsd
Mqti7Mce0n4n3fDIO4ZH39r2Tp5ihbfM/Mv0mekRu7ZeAO8NnhdwSJ45wRBr
NEHM5E+SjY1BbC7bhVcW5S9UQl/dya0PlGWuzRHoc6oID5/nuMmP7qKumhhN
OhZGHvyg53hTbW6BaXd6Vnp69r592fvSMysOlV470/1h2Dt1w9rZVrFzT1ra
nszOtnr/dRe5sAOXulsaqopKiiwHLW57y6Lf/WHENXi+s6XhkLHQXHHw0Cml
dWxQXRnzzvhcF7wdrY2Hi8zmjNyCPVkFadmFOQUFtVVlF5ztE4OuwKDV5Wiy
7LdkZOc01pYPXuxeibjuTLrHB3pPtNbk5hXmGk09HUdC1+wjV3vbjlXl5eel
52RnZORlZednZmYVGY2tjTVXzxyfHoEXZAev99p76g4eKs3KM2bl5KVlZ+/J
yC4yFhxvrPZft5H5kKs0PWwjH0ht+AgP6mtrOZKVnbNnb1pWVnZWZu6+jLzC
YnNfV13gSl/wqs3RfcxcXLwvKyczy5SZacrIKMgtLKyuPnjO0TIzpMxF3GRW
andjucWSl5Obk5+9Nyc7PSunqMRiP9Ewer373MljZQeLs3ONTbUVwx+cmB1W
+88er689lJ6et3tvVnpWxt7MzJ1pWbn5xhOdRwfPd19yt9dVl6dl5e3LzDUW
FGRm5GZk5FosJT2ddUOXe+cCxIo5x65Z1RMN5eWW/LzC7CxjTm5BZlZuQX5h
z/GjI/19c2HnvF/5DNgr9+Tj/XzGArDWy8ldFDkdrOiPlWUrPpj0WKAws2SS
OE6cPtG00y8CLMAHexVS8Ic5BPBuD6m/nTp56f2ulF/lG/7hLQCHpwiOlTAA
0bUCfIo5iFFwM+qBLpejEOo8LYHVWrIGbsUcxPgZyecpBC4N9IoRyoyGJ02G
J/L/OsXy4r6q5s7uoWuwBbQAfDkvwGU1rl/OC7hp+Ii05P4nfAHf60qMhQt7
XLMjfdDSvACaUXILuc+deMvS9Pc7Kh9MKnrwJdNDqZavby97MMXy9W0mbMse
eq3koddKH04p+RrKX3ut9CFZTiXywYe2if6D2JNI3ibpx/cnlsseTMVzaUeV
8db84ObC/5aauTP7wCmlWcoLsP1/4N4Ia1VAcJ/AmhqslECMXZLiKoi0a1Zs
/meysehZxcsKxXnxQj3JEjmlxSBrcYRYOxIf/6fRMHIUtTuCJI5c7uloq843
5afn5x/cf6DEWLSP+MYZue2N1eMDjsDN3u7O6rS0rL17srrb6kPXbR+G3NfO
dVdXVRKdzIK83u6jCyHn6pT7+vvHqw+Xvrcno7Cg2GVvmxpR74y7hy5am5pq
cnMJzGbkmfIsB0vzTeZde3P2ZOQcrTncf643POQ47WgqKCr8wS/fMZmKPvC0
zofBfAyd76k6vP9nO/e+uzeTOL1TQ87QQG9r0+G8wvxCs7GstKykyJiesXfn
zjSzsbi3oyFwtXcxRFz3rqpyS1p6xntp6abSwpIDJYWFxQeKirubagNXwQqg
JbXP+HC7TmIBL9na2mqzsrJ27ty3b1/OnrTMXbvIZSjo6T7iv2oNXLPZeo+W
lBUXFubvLyoqLSnOzc3buZvYq4KWxurBKz2zAdf1Cz3Nx2qzMvJ/9V5aWmZW
VmFBvrHwgMWidjcFr1o9jsbM3Jxf/Crt8IH91891EZt47dyJ2trK9PTC3WkZ
e/bu2522952de3KzC7ra6m+eP3HF3dFYfTAvJ89kNB2qOFBYaHxn196d+zIs
B0rdSsutEahrunG2o6aidE/aXjJbo8m8/0CZ0VRoLDL3dtT7B2zzuFD6M2Cv
cSaA+fnIPSkLoDJjCqIWeu3EMRtBOtZ5y2eLcnYgWtLPNXlyk3ANFuKAL7vk
A3ZAvshvZ05eP3/i5znlX92U+eCWYgIgDwnQSJGgI8XytW0m6HntIIAYBaLX
yh4mQKeTiWYx03mt9MHXQH5QkuV+euyDRH/bQQKVcF46/jZ+XnYumMnXXyt/
cFvx17eV/20KtA8SnVdMf5Na/Dc7Dr1raTp7zjYz6rgbTpwXoJ4/h3ch20n7
b2gF2IpgHj6aD/Sh7KLhI3rULGkJI4CWXEnHzLD17Fnbwbbm3aXHsg82ZFU0
ZB9uyKtpzjrckF/dkFXXkF/VnN1Qn1XdnF0L/dn1DXlUJm1DQx75L9Gvbsqu
Fv1NdIQEcg3qVJAefT89lpwrZhzUNx5uyBWaFQ35NfSM0GYdbiyqPNrb2Uz8
roWAsjLhmfEJhoh5gbAkU4T0S2gJq2Udi8F4j/2PmY39RJRmsvDnqZ8vrMNa
HIHbFCIzUoxHaYRRxMToyJoNCjqHLx4/3laTX1BQYCxuaa5rba4pKSt7d1e2
Mb/gnNp67YOO7uPV6enpyAWOBvuVlaD72umu2urDGZl52bkF1p6j8wHb6oS7
/1x3TeWhd9MzzZYSl9oyMeKcDTpP25uLjeZduzLMpgKl58jV053Ovsb9By27
9mbn5eZ7+5rH+p1XT7YfLi/55bu78goKVNux8WHY4e19T8eBg6W/3pdZaDad
Vo7NBSB2d+1Mq9d29Ky76eqpznPqsebGA1k54O3X1JRfPA0xnDOOJrPZtGtX
lslodpw4eulU5ym145St+dqptskbVqwaJVxAnRtWl4lP61MHL1qbW2v3ZOWk
peUeKi3uaq50Hq9Vu49cPtsxOWibHLENXOk47ao/7Tx6ydNMrkZbS43JZExP
zy3bX3rS0zoxqBJsrz96mPQQElFVebCn68hJR8s5e9PwBz0zg45T1vqcrNxf
/Tq9snz/1XPdU37XtQ+6qisPpKfn5+WZiNDRfLirvULtrr9++jikia/3XvW2
nOxrPO9qv36mW+lrPFBetjszd09GbtOx8vDNvplR51mlxVRQ8KtfpVnMxX1d
Ry54m8+46r22+oGzxyeHYO3e3GfCXtH9YN6+LC+GdLF9OUfAi5EcQj+KFUEU
suSsAfr5TunY2MeQa+rGEV7xUsCDnALYsX+gr6uzxVx3BCCrujGLQE1FG4UU
DToATBoYpMiAVt+QRXpq2+Ll3OomYz3IRtBnstxP9Y217Fx4LAM0OG8FnquB
nSu/ujkLwa2wrj4P5fyahozDDT8pratob/ngrHV60PVhxLGUOC9AMwJ2Cv6y
/G//Cu8aI1xAmI95P/H5++ZxZyHiA8wAC2CGAxkB4QLehYBzarBvcsjtH+wO
X1X9N5RJvzI6oEzcUEcHesZHVf+QMu5T/IPKBGmJfMPhH+odp7LPwf57A9sB
bOl/b2A7rOhlB9O5gePQo1g/G5N0Bm5I42N/mGmykTUd0j+qhAd65whVh5oH
ZhyJY0AZIl1BPI9VUlxWFwEJXYIpLIQ1hJTQ8o+ZjV1DFgzCQeswhUWgjwOX
E3OERN6+Fh0VEcV4fUK3fRe7WhtqsnPzC8xF1r6mi6ePK13NhXmFe9OyWo6V
q331bQ2VGRlZacgF/P22paB74HR3Y11lTm5BQWGxYm28HXLcmXQNnj9RW1eV
lpdferjslLt1bNgZGFY6Wmuys3MzsnKb6ypGLlsXRr3+K9YTnUfzCozp2Vnd
LZX+C9bApR5re2V2Tk5Bgamj7cjo1b7xm1Z7z7GiUktWoamhvnLwYucSOcWU
i9y94zfJT+wIXnbc+KDHZTtmLjbvSsvYX1Z8xtE6dUM572wtNhelpeUXmYrd
fQ2hG/bpIBQgrcD2O2zx6awPVvsuQ5TM7btsa22uJSYpJyuvp6k6cs16dxJ4
2dSQHV+e65qLOMdGHMGbsG5u4GKvy956uOJAdnaeyWxSe+snBhTiwLfWV5K5
m4qLbT0NoWu9K37XvA/WYq+MqWcdDYV5BTt35RypOtR/oeuW33Xj/InqqgP7
sgospfvV3saxgZ4ZyJ/CW4TQasN3HLvpDPTbfJd7L50+0doE12rn7rTKQxb/
tb754MkzrjbChn7+XlpZWYnL2kg050IuKBTBEbDO1vUZsNc1PH8nty/UM5cT
viIjoGUQaIAuhgtIfr6KjpBLVP7QyYszynMQrxSU06BgXEasc4OOMIOm3gmA
GjcBk8CQEhBwNKRoADWkaycA1tzxMhkhjHJYkv2JZZWAFQFMcka/D8CKIBWC
HoNH8phADwIsGY2C7eQo0VRuXrMGrpyYGCL8iwK+lyY3NXDDNQJ0lQQP+NiF
y/dvmBeYjcB2ZxoX0LEAKjuoPEuOjXihhZCR46OI67cRx/2Zk7+dsN8jbdhx
b9r18YTj/vTJjyfs9295P550QBvx3L/l/HhSuT9NeojsYf28/YgcRf57ixyr
fBSh/U4i3wfZ8xE5ioxJ5DHP/WkPkVHHI3Tuj5Ez4vi3eD+V4Sh6Xtf9CLRE
htEmyTydH4ZZ/F9yDOgNT/qxxZsf0NKHlR4UFYlrEZc5/VNkYz9h/LXzAsyH
X4sjUE3h+Yv4v7BZ+KTzY9H2oT6sPyK8qaOpOjMvP8dUaLM2hwZs/ksnWurL
07PyTKXm8sqDFeUH96VnZmZkdrYeDVyH/Wf6z3fXVx/OzskvyDe5+44tBpwf
Trj63z9RUV25e2/O/rL9Z10dxFjfuHCipu4gMQHg9x4ut3U3n1Nale7GmprK
jNyC3WkZtZVlV7xtE/32i66W0pLivfvyDx8uv3quy3/VWl9fkZFTmG8y9rXW
Rvr7yA86N6r6LtpPq8d7uo62NlY1HK2qqjiYm5v/3s69JUVGr+1YNOgeudhT
VQ5RqXf37isqMXY0VV04eXzqproSOomVojbc+dm+6LctBVysRqixioyQk5Fp
7aieHlJ+Fz21MoYgBtspq6PXbOe97dbOxtaW6ob6Q8TbNxrNGRnZhYWFxE6R
B3ngXG9bY3VuQV5hidneVz851PfPU67bYdfqmOt2xHHGdjQ/h8wwvbbi4I3z
BPBd5NJVV+zfl523f7/lVF9z1Oe8N3HyzphzZdwZDbnGh53ETJy0tna21TQ1
VtbXVZVZ9mdlFuzcm35wvyVwsY+Ys+vnuysqDvw6be97e/aWlpjbW+vPn+oa
u94Lu17APkiwBO8zYK/c25dZgObtUw9fShyLeL4tKsX5xVYGembB/HxkBO6E
jECMg2uHrbMxlJ/X0oPjRG7OCILMBAIFgZQxAjUAPrcJgEQorCE0RRBYJPj6
I7QwsnaW+wBZzvsR7I8oHxFgJCA55gWs4wBLwPajaeedSS/ph88EPNfU558P
0FogZgKo5780Yl+K6Prp1QAu8PHixIWGeShjtuNuQtAuayyA5QWIvEDaiANa
NAFEExySsH2VOEIBaFf89hXSjmMLsnN13LMSUlcCjpWwdwXlVSGH1ZVxIjux
30lM2CrIDpBHqIzHhokOsdp26Alr46COl46/Ggb9VW1ML5Xnxx2rIedqmMhs
/FU6PpUDnkVi+EI8/q+xACstMJBk9PZlFJUqIoQR+aNnYzliK/ztvaygYjEk
qpjUGN8+Pi8QwxHi2AFMgxoLarOYvpD9nPX7FN8Ve2trdWZ2fk5eoXLi2PgA
BJAvnG07VF2+Jyc/IzOvsLAgPT09Jyerq6sxcN25HPJeO9ddVwsOcGFhsWo9
Nh8iN63rxvtdlYcOET98f+n+DzwdkRuOmxc6K4nfm5GXngdEo6y05NDB4uKi
4tyCwj37stPTc2sqLRfcrYTt+q44qqvL392dlVeYf9LeePlM18HSsl17c8zE
yVealtBvv0Yc42O1ZZaSPGNBjtFIiENuXn56etbu3RmlxeZT1obliDof9qi9
TZYS8+70Pbv2ZGRn5R4oK+5orYUIz5AdmZEz6ie82LGMv53vsr21qXrX7vTc
zGx7R+3kDeX+1GmMJMBuDP1nOjtbj1SUlxWYTFn5+Tm5uTm5+ZmZ2XszMol5
UnoaJ2/Ybr7f1dJYTQyiqaiI0KKxQdvqOGw2Ox92E+f8nKMhLy/3l7v2EP//
xoW+mdDJ6xePV1SV7ssu2L+/zGVtmhxSViPkwYSbKjyonHF2NdRWWorM5JoX
wnc0ZmTn7c7MeS8t69ABi/9S5/0p19iQ3d7dVGox7dmbtWtXVnaOqaS4qKWh
8pL3OOEm8JqG0GfBXrm3H8sIkESImn/myUsBSRuv/6E+rfD2dePQlQLY4iND
Hgoe5OQgr+nPjFiF57+EFe/LEc5EsAf21hsBiAAYiThXRgiIeVYDsDxwHsDH
ifCFQERgB0AGISXMZAQfdeV/UWbH4sir/CyrIdBZpTLu+AcgNmJH0EPI9QMk
zk+QuXlXhm3QP+HBwlc7IYkzETsHagzj+J0zYfsye2GKE0GeVQfRFrLDV2le
wCXMBLIAct2ImVaYHAB5QWMHdtAftk9GgB1MDrpmfPblgGsa+0m7RBjciH0W
TQ9BEsyyQU3+jN/JZQjo4Za8HnQGaD/0MDkM+gDU4r9hWR/GnEWdGeyfZWNC
uSztn6L9INuncIRZ7JkKoIwhQV4w4BH8iDoGOtkvo6hTzq7KhuCPno0V5+L1
GCIGq2F+nG+/Vl7AufZzClvIStEt1CcPUUi2fbb5oHv4Yl9Ha3V2Vn5BZmFf
e1PgmuP2hDoWcNh7jppMxp37MtMyMne+ty83J7+n46jvmivq914/31VXfYhA
X16+2UG4QND1m7nTwxeO11buT8vIPXyw9H13S/iGY/B8Z031fgKxWbmFRZbi
mqqDR6vLG2oON9QcrKsqrz1S3tNZN3ima3nUGxlU25trMvblkHMdPXKgu6W2
IM+4Oy27onL/0OXOe7dOBa7YO4hCQUF6VnZZmeVo7aGWporaujJI1+7cZ7GY
vErD0ph6d/pksN960tHYfPQwsReZWQW792Tl5Rc2NVReP9M973dDzIQA1DD5
4sqcT6VcYOeevRk5mT3t1VPDjo9mzi6Nef5/3t4DPo7i7B8XOIQWagI21cYk
AV4S0hMgwcYNd7DpmGbc1Syr93oqVu+yernb60WucsNFXTpdUTvVu5PcjQnk
hcSS8/5e+/7zPDO7tyfJSd7Pn8Sf/cxnPDszu7fafZ7v9ykzw1aNpVklr8qL
CA/39SU6Jyo7Q1JamJqfmRAdEbVzV3gYcIGsnjZZ4/HaosLMnUGhkTHRCmm+
uVFmNymGjHLyVjtN2gPy4tDgkE3bfTN3xwMX6NKfJJpxdwLRjEnxCRpZgaVR
Sg0yDpPi5L6qjHRCwYi6CU5OjC0tSCsvSk2WxAQEBxA2kRwf03609Hy/btio
aznK7VWXVBSnJ0vigkOifHyCA4NCiwrSTu2vhD2quoR38t/IXnm0r2G0ulPJ
I3mhVIqQvFgREBHN8ZZ/oc8UZsH3pHXyUfCfkijokfWnubEs/K+Lfj6UHXCD
fMsICgdHBwgK1qdLOUSFCdQ5QSgx4WMWhAwTX47/Yx3GAtyidbjKINYpWxlC
wdXfwjHBBUIVxG8/mGWU/aQzCFstE7ZtVIAr7LRkghrt/1Z3fcyjDiXkCzQW
kD8uFYNEsyBHkKHahZJnAVgydoDqxgJPlainUZN2tAXqYgXkRD9CH6RMagUF
BJFFLPZGwUfXTKkr3SXMTOuis0Z3f/L36of52Zz9Fri60E5abO3u9lHWDi02
fHP6OxSChxSvxa7CDF8deuHskEU16uE5VYujdKZJ1+/MG4vXZWN5NiGf0v9m
lv+bcYTp/uURPumeTuvuL2IE6BdQNR+trSjIDA8MCw2MkFcWdJyUnu/Vne3X
tx+r3VOwOyw2cov/zk3bvAkOrqsq6DypIS/J6YM1hYQLECweHs7V5I+ZdFeG
69uOVmXlSHyDwyTxifuVpZaT6rYjsvys1IDgkMiwiMKsjH3aqqZjitbP5e2n
uNNHFMcOShuPSPubNed6DASf10sLk2Jj/HYGREWHJ8bF79oVGRoWU12WNdDK
XR6sP1ZfkpActXGHX2hYJFddaDomHWxVnDhclZKSuGWLb0xU2F5lCXnIFwf2
E9w7ZFR3N6oOaSuyM9N27SJiPDApMc6gLOtt0cBqzATH4pMZNeo7jslLi7II
a9gVHFxTmdnXpvhq6OD5bv2gWd12EhLKtvv6bvfdVZiZ1nKwxmZUnmwoz89K
Cw2Ni4yMVtXl9LUom49KiwsyAwIZF7A2yVGoKs/16pzdWp2yKDQkfPv2nTkZ
iU1HagbMuqajlTkZCeSuEhMTNfLC7mbOadaPWYE87ueKA0MCN+3wl8TF65V7
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
cHziDKujNRXwLXkfxs36s2b9eI/uAjm6oO7wQP4EqKucEAeIS+0xJK8BIOqB
6nWODh21+fM+AsgjEPehqceIRfXDZhUeCO87IVjIgaZyitgFXwCqAEJJ9GKb
PE0BYxE7zJ6PRyeY9IdhcoLqwV8ADAICTWXICJjndNCkOtOjumBRnutS0x2g
zln0503K85jMSwQp6YyLJ8CSSn0tmubjyoZDsuOHZLY2jqgMvJyiv0PaclzW
eFjZ8bm2r5Xa0EDwDnZAnA9D7Gj/HzZjMjXzEQALoLFA0AdXoeFdw2DMH7aQ
n6YxNylPH6ttOyHrb+FGjQzb41jqDqb5Aryz2AxqiLIDFk0ELh7w8CK9pX9H
JVs70ajm/SborehALISkmEfmCsE+TwW42M4/pQ9td6JfAM7yrIEgHEa3sT/4
ofCsJwugzjV6b1o07AjeZ8pkaX93u8jvoBUzC5ZCJUqkIjNcHNT2NKnyK6qX
+uTe9acYr18EeS2KvPWlmFsWR3m9FOW1ONLrpZgp5a3/l/IWj7FRs8icS6Ju
fZlMji1LIme9HOP1h38yzyzR1WfhKK8XYZ5ZL8ZC/XfRD7+zO6Oy4qsevcPC
TDrkhw+0ybCcuU5F+t++pH4BBUX+DjcL4Cg7GMeWcdIiRB+hU95hbbC1K784
JLlU8Po1/zl/33H3RNBD17Y/NBE07+8+D08EzZ3c8ZAr6PFr3g9PBD6M5RPX
vB/yKL3nXvMh9bnY8vDfvR++ETh30ltomYuj5tL2ax7trPRspzP/aNL74ckZ
2un8T4jaf/R3nzlXU145pw22d0oHuvc66HOzUMAAz8qJdSLZhmCtKt1UbykY
1RUImTy8q9+ZN1YYy3gHk+qYLqoQbD54D1PnvBlH+KeMAPtQvUZ1intdQWcX
eGPHzdozkOSlO9etvmjVniEgvEsAjcpRk364QwfyhzCFVoSdGP+P0JeFtYxi
Au8oBcBGwUfA+mBmgcppMoCj3EiBqGaYGmQArnPDnRqG8KlDmfcXUPvMQKeG
HGxZBha3T4Mk3XE+ti44WPQO+hFo3hn6GmQ0wAZyzVox68EKSP5sl8baqPy8
QXq6gRtsU13p1nwBizygu4FMCGvZac726/bW1/gnF60LztmZVnLyqOJit3rM
KG8/WVdaW7Y1usA7obigrKL5sNJBtEYrN0TdmmDJR+SPln8IIHT7CDhMB8M+
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
rFqQCcAXOAy0UPHL10DcPoTcd6iuWLVjHXItV/tWYM49S+JnvRL9ql+6Rld1
qVdz3sqWhSF43mbiTI3ykweVJxqUxhPqAYCa8v4WRftRZXODrP24tKcVllOA
LXRblU0N3P69NTptlVZWsV9X23REBmuqm1R0Dw47CDEiTjWtp5T1++Q6Vc1+
bU3TUakNHgjEcJ4hiB2ymJXtp7n6fTUcV6NUyRoOqtpOKPpbIaFgpJNjkT9G
8ttV/W2KtqPcYV2NVl2rUtdqVLXH90nJvY2b1SNWFV2YztaqGjPqL/boW07I
o3KKf/K2xOvlqLtWxv5+W9pbUXnrAjP+uCn1pS2ZIbuLO48qzwO7IUN0+3Sy
sOSyjWFlIWlVnFLWdRooz5c2PVFJGh23dlcO0QKPv568Obqwulqm03AH9nOd
x1T2Du14FwhbQlL62uQth6WH9tUolLVyeY1eWX38EGdpU56zQAjoMPn6wEmn
Ib/a0qg6vE+6v74mr7JsrV/eg2sTHnw9fntM9rFD8uEuw4V+3bhVZW1UnDhU
t09drVfWHN8v7zkJ2nnMCNk9Q52cnW7OiHWa1mHvEtZlVfIRQTRyicNXQsPH
5yjEyJ9HI+71eTzrGvGHI2YKwucgnkfANnzpZh+iV10nhIk6+FQycaTQlP7i
efiPWicwAuoXGLVwlwkXMOrzK2vWeufeRnA1kcAgxqOYSEcMD0phBVUNkn9W
p2OxzsZii7su8VqeOGtp/K2vhIOE/2MIdKYCn/WJwhlE89D5F2ELqABSkpZk
6LkoGRTNAsnst5PyucoL3YQLoF/AIkQEMas+Lamph9apkAe/QEOBo5uaO3Se
yoJjsUOYHeBwewpk4BforrdjjNBfCt+bDHjUBQj8YVfwfMoF/oYlj94JSp87
rQ4C+Ubws4je5074zHEl/c5V/f71sg8mEl++sfneaz733VAGuAYaXH89e0Mb
e9Xn4Qnvh1zhz18vXHu9bMOEZOGN8OeJ8EddMG9SmD8YGME1MifvU8CrIBcI
Qn5BWQaevR407+vdvF/A3DBAaDhyAeYm5hmBgLqFd15YldSz/h17Y2ec33NO
t3dANI+Sr+udbKVTBY/8qdOZwUUEeHrGDjqVTitlN2oEVOgnYj4CSAEYMamv
9MAotVL6TmjB7a8l3bIs6Y8BmZp90i9thsvdaswG0p/p0Q+Z1WqNLG53xc7E
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
vLO0+2su21RnumGt5nM9+r8O63ualQEpe554I/G2l8IXfZwpq+OMLaqYwpLH
VyV4/Tr86Q8zMsoqjtUrysprFntngL391cgfvR7/1Ptp962M9Xop4r7lSesi
ihv2yi8YdaeOcL6pxY8QNP5K5D1L4+esS3lgZcysl8MfWp20Pbn4xEFlc4My
IK3ksXXJXi/H3bMycc5bKfevkDz5puSdiCytruZSN9jVIU8NdqVRdzerSyvl
64KKH1uXNmetZP67yfevTrzllbjbFsS+EZR97KDsDAYADHaozlvVfx7QtJ7g
onPKn92QTvTdPasSf7s9Y3t6abmi1tyo+mqg/rJNP2zWXe7XWxq5kMyS5z7M
emRN2vx1ksfXJVAwOfcNSWZZpa1Tte9A3bqQnPuWS8g8338t9uF1iQ+vSbz1
lZhb/xj/+Prk0Kyi7tOywVZtWaVs6Y68OW8kzX0red7bSQ+uSJr1+7gfLY3/
ICT34AHuSl990xHFZxE5j62J81oYOWtp7AOvp97/esatS2O9FsY/tCZt1+7K
5qPK3kZleW3VHzZlf29p7C2L4u5Zlvijlam3vhxHHuCT7yQFZlV2nNQ7TXoa
HTTcoR/p0sMqOrAqqdKJ+3+NmDV8EpZCtOcvZQTubVBmqstFeEY+vQ997UUb
rzAW4OQDOKd5B/TTPhzB/i/Y/PVCu5Pfr0rkUNPzd+WOLBIihZhfgKBcs+IS
9QtIq9f45t61hPcLrBJjch6ZU6ONuwXt+YIxZ6VIBYjxP60TVL8mFsxNv9/1
xPqsTxL0LWZHZ8+5WGn785uKvYgi+B1lBOIrxnj4GlYhC/DwC6SgvyAFY4Qy
CpAL2M3oF7C4XcM0R8BpkfKCnTECKuK+/bK/t7GILiuBiqCelDS5DJ3IpAUV
RLcezxr6gR2AQrFZwS9wifcLTPIswLOcdw0ROGEBgl8ArPQQ4UM0wtzJ7Q9c
3fr9rz/xmvz01muRz7n00a7xzhsX+ycKXr/6vhcZ60pbMJH3+vXQeVff8ppI
e2XyaInr2qUbx4sng56Z3HHPxEffn/zEa2LHDyd8QNpPIP6f9J2H5Ww34/Bh
foobbr5AuMA86hc4rw2h+QJjvCEIQIJVDyDB7PYLCImK02z1Wtx7QkDgnIDk
hbqnOXSqKVWsDsSMg0YHieuUqZFjWqDF1LHie3Zn5nYIjMDDR4BfOl+nvgD0
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
ASeHuADHAgAmd4Z5QXi+QNBIKtyDCh5jCRxNBTxHrRtoTZhFV16g//qtt7ON
EgZb/QZTq16gVr9g/fZFatXfrN8/Rx9YRFVI4JO6X9NzbhUV8Ar1pcC6wak3
xsMSMpaKcLWuH81GAVBp69chLsByARgXyINrimpRXAA9B9vyGuBvxLtIEzAj
F63IJyLgR59zAXhMAX0pfcQLiBYor0X7UKMNmGw7XBuZNYuwzkydggd7HO7B
ri9YkhuCO24OTrSzs4aZdmY9H22JWAt3jMpq0+boijOFmecWbT7wtznxgjdj
X120ZebK+CV+Se99t3vOF7s/+GZv+PYjx1PTDien+/jt+/u/4557a6vXV3uX
hRyZ4bd7wNsxgjejx61I2J+SfO1iRkpa6qzvEgRzopw/Tojbn6q6JfnhgnCR
//6B/4551Sc2cMfxy/nnT6elv7tpr2D2lsFzt/qu2/fdrhObDhz/KvbwF5GH
9h5LLrkhvnI5Y8Pek59GHPSLP+SfeOKjqMMjl+8UzN36ygfxGxOOFV0VNVVI
mtWS5jKJuTTnnDBt/GfxgI8MeX/bxxH7gg+c/CDiMADwghnho9/fGrrz+M8X
s2D+ZFm2qVTSViW5fVW0JSnZZ/WBiR8nzl+9+6ONSYvXJ834MumVubGCadEe
n+zadTRFnHU+ZNdR52Xxf58ZNWXl9q+2Hv0m/vicDQdfWgCG9K3vb94vEqZn
iIQfhx4cNDd20Nx4z292rYg+8lHwodEfbRPMiv7bgi3fxh6+WpCx/egZ96/3
CLwj3li05dOYA+v3H/kwet/w5fGCmdHDlu2MOwBDupJs4cLAQ/8AZGd21MiP
diwKObA4fA8wN3+bE/fC21s3xB6/c1l0teDs+vjDL78TJ3gretSHO3w3HVgY
um/sym3gvy/Oi1sRvO/HS5nG4uy2ihwD3O9MopWLUcAIzyDO1paLtMwcAV68
AM8d6OvVZUyAvm/fPlqSl/ei2vv2DcyU+Ty7q+xCb3hLFEd5jqrb9c7vl5PJ
I6dKQUYA8+fhCjlmdSaKC6Qu5eYL+LLDO4f8fdm8fY4F+GCUjpw270cNfC9e
MDv8ube3guH9xUWAdYYJZgT9470I17XHV+7Ojz7+y/uRWQMReh8ALp8c8PLS
+Hc2p12S15JWQNXQ8d2OK6M+ShDMDEJTwxKIuAC6B44R+OASGoL/8bVxAX5c
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
B3lsCGCMAHEBx7iA0IijALy4ADd3AMcFWC5w7As0dxitKeoYF4BZOq/R7MRe
cFDBTsAi0IcX0dJoWnOTbrhG3zhojZhAJ39K/9VEd3XSlZd7t3lTKwRU+Dgr
9u2vH4qc/0Poiwk0MBvWX2lpTO+e96zHltAVmbShgi5KpY5+SG2GxojpC5IO
F245C4T/yToTF3i0x+fRpS2Gkgzwd2mYtfptLMAuLmA3mOPl5sh2VpJE7IwM
WTog+UxHtG9kw/omds6Co37+WTumYKs7zA62YwTZLCMgZBA4rOc2uGfnDhgq
pKo7ORcvnjt2PvlgasqhNHgcS0s9lX7uYFrykdRkYdaZ4iJxa6XUpMj56aLw
WOrZiKQU/20nN8Uf23ksJUWUdumisPS2uFaRU35HJMpLP5qWJpEIi67BFtUd
8aUfMlPPJ4NB7MdLGfVlua2V4qbyHMVtoSjv7I6TKRsTjvvFHY/am3IsNe2C
VFghz64plvx0UXTgzOmgxON+W09siD8RfyxFnJNedltkLpc0ouUv6lRoJwK0
xLRWJrl5WXg8Iz1sb4p/3AmgcOuhlKPn0nILhMU/ZWtL4YYFWN5cll8vz5dd
zxbnivaeSg5PPO6/7YTf1uPRe1NSMtJvXBZqZWiFUvAVlOWX3MrPyTm/91jK
5t3H1yUcj9idsvtE+qnzwus/ZFffya5SZN++LsnMTNt59Oj6xJPfxx0PTjp5
9GzK9R8yK2/n3y0HSsSNqhzlHbH0knB/elronpR1W45t3nUy/nDKyfSz+Xmi
OzdFepmorTqnpSa/ojBfkn1+z7EU8EgDtp0MTTqWeDItI1v0y8+iapmwuTqn
uUZcfUf0Q37qvtMpG/YcW7f95Pb9KQV555R3RHfLc+8y2L4//z9ekM22phBu
wSWLqDGSJ+tZ/ORPRxzCS+NkUXrfjEDPhoaJT8b2EfXFIOzvh71z8tPDLSI8
45iNETCza4G1aq+VwrhAKooLcFzAh4gLkKVPDMkRngcj8NzIMd+dOJJZ0txi
obvo9t86k6Xl3kHpA/AojbVhl877Mc8vA/QtWDB/y/z1py+omng2AFiB33r2
nb8zfQ2yAj4sF8ABYkANuLiADxcXSAQ2aCCKC4z+Zm8SigsYlRzaf1baJzdB
jIsLsDlCcCeCRrW0Bvn/a3B2UBGKCxRBI1LDjwvcA1wg6cPHQSPAEE2FjaH8
ubiAC+WPVw19jfPPM4ZgPZpTEOZq3fZv6/bZ1v1vU6GTLGtftu56h264Q3fe
631YZzn+JbXuJTitINQV5vwEjKbWvUwnzqJvn4RPqk3XKw6g1o+mNjhZd0yn
971HbZ1JbfGggocg1xNav2g9NATU+qFcbIJfx6sYvd7JcQHwuJhYgC0ugNIJ
eHEB7MNHGxXZIfA8DvlzfIF7qzmUbofh+eid5+fnvixOD9o7W9SXjN39kP1C
mWfGBWxo/xntOHEU7XIIx6v7lVkPqiUt6qwWVLZW57eW57dU5LWq8+7WwB0u
zKqcpipxe03O3VJx5S3JnR+zym9K6oqz7lfmP9LlmyvRyqiqnLuVWR3Vkja1
uLmGmbbWVCm+r83/VZt3r0ZiLINL3BhLxO1Vkod6uLNM4Y/Zt65ll9/JbqzK
vqeD+fzGCkl7tcRQkl1yK7voR2HFTWFDSfY9ZXY7ygtidw3Au8DDiM/dask9
fX5bdX51kfhnuP+juL5Y/KAqv0OX31SVjTamkaCN5tG28srse1XZ4FRjVV55
ofjWpezCS9lgrGhT5j+szr9XzciDG3tYLe3Q5zeUi8tvZiuuiatviZuK4aqk
TdXMfjfNoN9K0JdE8aP41mVh6S1hizrnYZW4WQWRua48R6sSN9bkPNKJWyol
pb+IZdeExdeE9bKc1hrxI10OsIYmFc7bkTSr8u8p88Ftl8MtLIXltyW1pXCV
IfDA2b13c1pV4nZwbyXwsSt+zGqQS9pV4vtqkaFEpIVzADn/fy5eRwhOCSmX
9EkPydKR8LJ1EftyMuwAMwUWt5NrCtlwuyMLQPrF5FkHcm0fCCPb8VxgDi+R
d8jOF7B91DguAJdBQIswtzNxATRf4B0u84fI+ScPjgXAATlWMDMEWIGR/zlw
OKfC1NxJP6Hvtv5+UqL2Wn16wNJE5Mxh84h8o59bukswK/R/50Q4fbIn8OyN
puaHfCNAN7ZZdgrvTPzqAOICUc8vIe5h8U4bC2C4AMcOUFxgBccFCrgoAMsC
mEyhGjiMS1FZgE0AqOO4AMcRGJeRijAiKlu7iWlHgWNVnrESzh3+FccFMAtg
M4Uw9rYxAi4/h3HRIF+9/yDqm/+hvhTQ6516Yyb1Hv2Azguj/2oEj6LXeKv3
+PLeyPGW7wZSa16kNg6iD/nSsmT6z7vwSeku0wcW9iS8aVk3tPc7geUbAbX+
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
Eann0Xa+HE+HufmyaVzVXK58mlhNJo6nHZdcNbSLaLvaMybbgq8yDV+3s91n
TE99Oq3j6cyTTRNDOV2smcqTTxHL54tEy6WiU7qi68q8rL1Hz89cdegvH26F
3Zj3iZT+crkFsobNpNs1PqWX5oNN3WbGs+10x/5lmk3dPvDUsTDvbZ/5f1wR
2v9sHFyfSBDExM0wID4mbHp1wa7955KrSjKJjVA6LqUeXQBtoSiAtKf56A7S
yY4Qqxf4/xwiXKYRD4I00nJDI8lW5yS0ZEY0Jc227ZnfuDfEdmRe4x5chnhL
6+H5TXtDLIfmNe2dbzlC6rTlcAguraRsOjK/mdSbve2HSPthaLccYikJDYzD
tuP64fnWQ5RmXhNtwVc5NB9KuMo0y+EF3iviMa3kbPPe+WS0adbDC5vPfFv1
JEmTf1UjuSkXZ+hEKXLRfoXsoLJwt0KWKC9MwKVClKAoTfAt5VAmKsWHlaUn
leJEXO9Kk6QoPUbqBxWi3S+fFSYoCg8qxLv/6ywZ509GS+hsESYq8C2J8V2R
GysldUojTSgrTNKIkhXiG9rCuxXPzrRkrmw5vsic+FHrgZmmhJDWA/NNifNb
D4SYEmmdts/vbGdpSJlAznZp963P9Zz1UPqOkxjSdGB+U+L8Nkq/P8R0OKT1
MNSbDoQ0JYa0HVhoSlhM6rPbDsxmx2H7zmndM820f07z6W9rb23XcFPLC7OV
+VdU4tPywiRF4V5FMT7wQ8DHPkXxHlJPgENEymJ8JKqLj+FDUZykKNonL9oj
JzQlhXtLgH4fDAJ99+KziiJa7oGOQLOnBNoT/uxIBDIgTiTHn9KQG4B726Ng
x0ksKcbDHpfnJ6sFV5TirDLJ1Yrc441pkU175ph+G2/9baJ19xTrzkm4bN05
yeQt90427Zto3fm+dfdE6973rfsmtu6cSM5ONu2Genv8FOuOSdb4Ka07Jpni
SEnqtN3WWZ9si5/YumMiPWsiZy1xU6x7J1n3sX3pOFD6tPv0fb89fqJ1x0Rb
/NSWHR+Yd3/YdmBu3bVYsBEqzFKIL+NPrgz/XukWhWizUrqrSBQnK90NH7YU
l1sVpTvloi24VJBSKd6tLE1SivcoOmnYs0rpziLRblnpLjIpPO2yLUqZp122
mxxbFTLcvlspj5OItshKdyhEcYR+KxnHp69oN74fiXdMfK3CzUrZLjFM7d3i
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
SjK8dhEa/K8cjyPBZRYZjY55Uya6Lxezo7FjkmtpX67DG5dxb8pg8wduTA6N
eDT4dfhZARMEfHRDxk3DV4ES6ukaERbk8NnrCn6GGosxuBThMt2nnqGT4B9+
g20hpYZtv4YlDdwiJy1aQi+Hvjfk/Buk3TsOHj9VXZiG5XlCk+E7mhoWw/Qu
LXh8brqaC3eFJ7KMn/H/+HrvJ0dyJE30L34n9u1Md3WJVNRaax2SjAjqZJIp
qLXWKchUVZlV1T2zdzc775fbH86eO4LMqt5n9srCwlAgAoEA4O7fBzg8l0MB
ucBQWHVgSkjXHYksc0l3Y9A/yQ3e05tx7mYsbUnPwE+3Y2lD0itMy2WkzUS6
nWS2g9yyi4MC4wXdhb9OsPxWLtOXVl3ow8RqzMmPr/rJVVdaDaTbrrQZSJje
5e/S8lOAuO7kNJkh+N5JciOXwWeT291TiVsEz4lVF4Alfdeib1vU7urzcN31
qbsBXDxeJB8T8FOPuu3Rd324sOQDuSB/2aPguiNpfBYvfiPn93f5tz8uDq/e
/r+9/SXnv5XpvZX5c3m5hcAR9vlQ+Q3Y5T5906Xho2660t1A7gQYjsyGyMjj
Mn8zx/TNRLqb5G666bt+7maU3ixzN3McOGJ0sLzcsZtxXn72Bjpwkr8dp1fj
3ApzcuiSSjp5f9+95eZtiMmALnf1yOXFfck03uX3ztJ3I3xWnkJbsOxwh/nQ
QaQBLIBMWoI6cFoKKBRkesuTHybqQ0d8ALHt7ERgS0QA+MLDRAQZf5TT5C7X
AMLyONkLWnsnXGTCg7BIsrD8+V0/0tdvb/khUG8iI2Crxijgj+M30ZbFHPJx
eRyE5b5FfxtLv4/p79d4//1a+j6h/3kt/TGRvl8nf5/Q/7hJ/jGhv4+l7/tf
seRU+geWobHMmMEcucyE+ccN5DO/Yw4j1/A7yf99Ij281bPGnO/4Xiz58Of6
f/9zGrD377egxxh8NZS/hTfGvo/hTv+B+T8Q/qpJr8AENJmfFDgjGwWZIMjL
QfIl+wj9CfkPd7sAhBHIuwByPdIbX7jH8SK8oCnniA/Dt3xICzDBSI4o/0qU
PMwHAXgijMhyCHwN+h9nCLkLuDyFJYV7UmYzFJcDQa4T7qsWME1hTVT0ckRv
ByJovPsh1glvXMs1jEhJbLlcj7hvrfjntIBqHw0KPkXSIAsM3nE+ADCAGUK/
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
1iTF8fALHb/e3fZcfad/Unwzp8fnpGMd/T/b0fKbvS19Qh+sjffysALl3XVd
332sadsr7YpiXYmK6zFR81juf679B7taGzr7glPOi4viRkRxOK0/2t78050t
XRaAaJihPDPqer6h59uPHtv6YtfkGfdaEna6NnHavvXV1n/b0vjskc6Zcffr
KSU1oxzvt/z86ebvbTvWa+87l5QvJqXApKuure8HO1rufaZVFh3rMVTdSJrj
d692/MfOlp31nfEZ6f28FzCq39X/m33Hf7L7+JGOvuSM/FZaWZhw763r+umO
pt/ub1N0+2tZlMpbe7u+u73xRztbevttmTn0UkvMyvuP9X7roaP3PHtclKzr
MeV83HtSlx5+oev//K7x6aOd/gnxXFJZCkl9LtsPnjj+b482Nbb3ZeflN9Me
/6j71aae7z/R9PM9LW7FcTEJFFM6cdJ+3/PtX3+gacsrnRMjsIQ85YCno9t2
79OwNpoPNHcDlX+v5A3NuZ9t7v7G483/+WQXkDl4tDey3gGv8MD+th/tbtl1
uOfUkPv1JQ8srT637V93NX3z0eOH2vpjs+53ljwJn/Lc0Z5vP378gX0tgJaw
nS9lvVNnxMeea//6vY3bXm0ZPS1ciHnOxT1up/XH25t+8FjTsVZbek57K6cB
v3Gks+dff3fs+9uaXaJ9JSafTyszw8KuurZ/+F3jlhdbz5xwv531AJh3O/t/
+XTr13/btP9Yz9KC8MYS8CpiU7f9Rztaf7K9tdvSvxqWrpT10RH3g/vb/uHx
5l/sbT990v1ebvB8AviP/nuebvnRE037j/bMnXHBS1hLSC+2dP3jo80/3NHa
1GUFmvJ2Wpk643rsYMe/bmnc+krbkAdjtc4lPILY951Hj/14V0ufFaiP542U
Nj0s7avr+qeHjz780vHIuPPNRXkt7h07KWx9peWfH2ved6x74az8+4KeXPAc
7+r5+dMd39nW1O+0vLnoeS/r9U9Ir7Z2fXdH00N7W09KQKnVS0uyrLruf+r4
T3Y27z7cAUj+YWlwPeppsfb85Onjv3ziWGdPX97n+kPBG52RnjjY8f2t7b97
tUdT7W9mlKtF7+io6679zd98tHl/fY9vTHkdKEhC67X2f2tLyy+fOtbn6E8F
Xe/msLJtfa8NgO7uvS0DJ4XltLKW9E6NSA881/ON3zW/1NYRndHeTEkXoqrm
dd71bPu3HmpqautfiXlfL6j+aXd9j/UfHmj61b62kdOut9NDvy/qE6OOHa92
fW9r82/3dwZGgePSz6EDmwnO/JxJAVgfmauSDJdIUhmx/77D4wUUruYKVaUA
rqrabCMwVUm10gG5dEqZsAKIsRzzAkqMjgt3v9px0931n7+/buCE/a3MwKWM
LoiWH+5q+Ztf1v3qmTav1/bHovdiSnqyqfcLv2m8+RdHdjV2Xc5q7+R0QLb7
n2v73D3133/sWEt3fy6ufFjRPaf673ik7qY763+0p21q2P7Bijftl+Dz3P6b
w//7/oZXmrsWxsXX00AF9McPtd3001e/9ciRjv7+ixnlclZ3e/p/+vTxm35y
8IEX2kcH7aj0Tsr9budX72r4X3ceerahJzkvvpGT50dde470/82djV+654jF
al2PKG+lPAMD/T/Ye/xjP6v/1VPNZ0873y1481Gtua/r21sa/vrXB7ce7Ej7
Bt/JDSYW1K2NHbf+uuFvH2g4BlQgBfvrhKQJd+5p/cr9R7+/87jkFd5aGlpa
0F9pbb/t1wf+/bFjNgHkuIELCW1kwPGTp1r/6u4jDz7fPHLKcnlRPRfRbI6+
f9nWdOuvDu1t7I5NqK9llOi0/GKj7bO/bvinxxt7nP1r0QHY12cG7b97ufXz
99Z/b1vTyAnh8hLqMXosfd9+vOnz9x3Z1dARn3ZdXfJEZ4Tnj3Z+85GGr//2
aENnPzAhFzPa0JDt3n2ttz9wFJa6NmB7e0l7M6F09PV8Z0fz1x9seuyVzulx
4e2cJzLv3tvc/b/va/inLceaLH2FoPLektd/Vrxr7/Ev3F3/8yeb7G77xqK2
Fldsjt5vbz32N79t2NPYNX3WcWFRLIfko539f3t3/dcfPHK005L1SUBYx4ed
j73Y9Ve/OvKj3U0nTjoqSbgWBK6en+4+9ml4CS+3T5wW3kiriVnpQHP/1x9q
+Nv7DjX2dq0l5PMxceK0c+fhrjvur/uPx49YHUAaVGAkrE7LT/Ycv+O3R+99
oT0wJl7Nehf96pG+nn9+vOHvf3v0habe2Jz05pIyOep++PnOO+478m87GnuF
/tdSnqVZ6WBT51fuO/K1B4/WtXTHJ92vpZXgvLztcOfnfnnge9uOAg+JhCbu
kSThp3vaPn1X3b0vALV1Xkp7loLi0f7uLz985Pbf1L10rGvR734zp0yfdu15
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
XDO9m0hdzOBIIpWyUopsGoFtdpRNKB6hzDwiNvcpBDFnKVN9s3ZTd1Ti/kg0
PuURpT4KpzIRvLYUNKkAeTcxPf//nQqY5zHMM/nfUAGkNcsRcSUijZ0Qf/di
+5cfaPjOY81NnX3pBWk9VcPJcy8jztXfgPYlomLM86donJvXstka98XUxxxI
mZ2XUIK0LkopxvUtlJy2SqCN+3pMXU2tjaDEvIZIpqgQoSRokst+TzGgMj1S
idsRFMPLyNzgIrrgBhn/jBwyZt3EsgtYvoFkJYmKWUhsI2ej7lyY+gRZO9yI
8duUuJW14FFA9KZzhpOFUFXpwWhKgZMhvG++es7DrJjyoVilOGgpYNryMklS
RoW76jgG0ZENssLBFosTGXIiPR3Xz1QYh29YBAyKw4yPBods9OHthpKZWRNM
ec3k5DMxoUodaqS5gsn5c1sAb2T9C+a56TBT9R2SMz6iAqFN8zFtClSQCMBW
4cx21YDrLXC1DysYVKv/2WQLQK1RnLyDjD5XLzHrsJoP1YYPb6IFKIYQFVjm
VKC2D9O7umqvZcEC/GhohDbTAo7t6PfOz03PHDLfG302SxPkwRutavINrHNV
x4+J64PP/r7pO+89/6X3995xdd+X333x9nf33v7ui3e8u/cr1fP9X353P7Tg
8X3zfN/t7++74yrvece7/No73nvxS1df/PK7L9zx7nN/9+7+L2HPZz//7p7P
vvvUX7/33B1XseXv3t3zhXef+sK7ez/77r6/eu+Fv33/ua9gO47wpXfx2tth
cOMcx3kP7rvvdurzd9i+/8vvwZ/7/tc7r37lTeu9G2eOLkXdGcPvlK9n1EK7
mVsFM9UBs3o+ob+W1tdTepm5r8PGCVXxv8ZeX12iH6UChMNaTTfZ8O0Xc6if
RxVWvmpBRnU61mum2jTI4obdxahWNjxX4dqloGdxQc6SF27e0DtxuYMhPOmC
0LmRSxzYk0kZTFtVYkoJokQlStjLnXAiSlUnH7kRkzkOh8ldP2zShZqryNRb
DIrlkJiakUXZ2tDd09pvHTrhzGJh7o9ochjnHyHf/k023+qYf0oqqTlHGwrW
GDLFrhJpTkzdO54HaPyYqawzbbWMaNZ6ELER6PMFRZIpFDPskXkEMQnC8Cwl
TQt7XXzDfoQKIPILWb90AxUw+lBhl6iIJvsq5htYGuItpFdB6lAGMTBs2msY
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
scytD+5avhfzvG3ixmXz3GzH+9Zw5pXN5wVDsDWObkO7pVDyn1p7sWJIIrw/
kyBM/T/nRWskBSZBZPxVKYNz7zFqZ8bHGjjKmPFcBifPWvi1TE0dFIo0Dtfb
hDY9i0lGPwLpAgPVTZJIiHPvVTvFR676b4BXNq9dpgwSaLStcdSpzorljjAA
JB/kSUENdr06Tk02uVqDsstc/zWEu1YuUAx/0RvauTRRS+4NQmYSUKbGN0mb
YN6LewfVSA2beX4uslWM+CnDmmz2R3X0mrTn7Rf//uouQNdbruy5BZF2O+D5
Z0gncxvqZLbecn3Hx65svRVpBG+H38eubkXFEVIB0hFd2/4XVx7/GJoJttx0
Ffrv+DjKAttuut7ysw/fKH/44Yd/fOvcf3X++uo9f3b9yL98GFGw5b0L1zx7
rx/4P9e2/vmVrTdf2f7XcK9r229GI8L2m65u/8srO269uuNW4PmvPvmZazvY
8ZarO2+7BlRg+6evbQUqgLLAxuk6dIxBu4BUZu8nxPT86BCCKROjyuiw+OSx
ts//5vCffev5P/vX5+74zaGtr7T2OC3+KWcpol5O6pcy+lJEBqB+/OW2bz5U
97Pdx4529UWnpY0I+vNTnjq5FBLPJ91raWlu0nWko/+bDx/77C8O/a+76//6
nkOf+Xn9bf958Kc7my1Wa2oeo5Mk0XH/C22fu7vuf377xf/xH/s/+fMDP9tz
3GJxZibVS3FMgTh8yr3zQNcX7zny/3zvpf/5by9/8uev/HD3kVZnTy6kXEp7
ViLo1l5BnpzZBWTuX8rZYwqMolQGbOUQ3ipkgJCLm3h+RgUQ/4sUscs4bS5l
1HLgnAqQnTdMKib65SitqG/E/Wpr72/2t2473CUpjkJYWk0a3D6TCCgWjFQl
xh3DpjlAKwIh4BKBYtIFc570A+FCNCzOItWs34T2RigH3yab7QW1tgCthgqw
ntymYOR8qMaUsWsLIVPiqBmHopJ5rMEmDp9JHCz7hFI0NDZZv3tpQazt8xF+
+/9n7C3Ao7ja9+GlQt/2bWmLO0FLKXWnxd2KQ6lRKJJA3D0bdxfitm4RIIEE
CxCiKwnEXYBAgUKB7GYlmf+RmdlJwvv7Pq695no4c+bMZOV57vuxg9G4kLYa
L0XpTO5AyUJaHnUk2QQuQmSMAJlHMxEmg8A9hVqqRvr/26kkpZbhcQdS7VB+
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
7QNDUKcSN4MjUOzlQhr5U8YFKvxGapy6FpsALtPoUMififb5mC8MQ/VGtxXJ
FChGwB3hwupgMJSWaiNHaEWdhVpVwm4B5AJ6exOD1eR+QAZtTTAjwNEBeLSa
pDafpvb6TCexIorDtJmn1OzvdRZT1VYT1Bawg5wucL02x0VblkGo8oha2VBZ
tq4ocohnPRC4CnrvLWeog37UZx4bOh+qO+NFRG4bsAVfszm6sJ1Dl6N0V+OH
Un4fsJmuPva2zu1jbepx/aWoodtndLXnh1RnddeSCY651u8HSDYtpmmsZmst
F2DsobGZo4Vuxg+eRO7qLQhsqOTWAy5Aftv57QougkC8O3IIrorzODxuqntE
wmeHQ1hrvd/b6r3POepcLqexQtKF2st0KqRdsKmvtOoyLzI5+Zh/tGtULFeY
WnuT33dbrCoVRqSf/tM78jeXyKi05II8bmx6illA3C67qDXHwlYcD9vpGGEf
kZCRlX3jorAV7sYlaasQqkqEPGGGedDpDeYRa0+EHfeMTslIl1/k3akWoxoE
UeUlfjY/wyE04Se7yE3WEX94xwYnJhWdA1RCeEchxZuQwpJSubEv2agjHwcH
aRbQCKuuaOQvpDsPY0ZAxQtEdP9hJmvAMto1fli8oAHh9h6YtylokgvaUOHV
qCwgZqzBWJnLfAZyTbLKmBzvqBbeRXGBwrPZ+52i/rvFc+waNkDIAll2Z43k
32bZiyZpSRFnl1P0G5u8X13jBd5MPj9DflkoEfP22MaO2+w9ZrXLe0DZ7vJ5
awubtdJ96jZfU3bclUKO6qIYwP5Z+/xYy11YG9mTd/pO2eX7xgbPMbCprPeb
232n7fd9fzv7lVVerO/dv/szOC4xVXlZcjaPv+pkxJjlHhO3+NkFna4oEmZk
Zm86Gf32GjZrhcfkXf7zDvi/t92PtcztjVVuW22jskXpbWjP6Njk1M9+D3p1
rQdrpfOcXb5Lfw+aDnDCcgfW146bTgRfLODeqRVfKOQccIp5HzznKi+wyJx9
PpO3erF+cJ+4wfdPl/DcHE7DDUlUfPKin8D6Lm9sYC/5Iwyss2hPwM92kTl5
6e1yfi/aRLu+WgQrDhTMBELIC/AINQ6zZeoV3EbECJqpuANiCjBzoEku7bwQ
/iRuv9rxE+2pCRrLGVpbhPBRP3kt7BI5XX1iotpsovr4RLXtNK0FUBFAIczU
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
VnksORhk6hMnlnLAV7e3RgIInVTE+cUlesJP3qwf3IHuHbvSmbXMhbXM87Pf
g31j4iuu8BVXxW5hqZO2QI/KzL1+qZmZtdck7mEpkzb7sD51WnnMjydIKykQ
egamTF7tw/rWC6DuTG765YLstcdjWF97jlvvZ+V/uvyCOA16e6JZP3pO3ORn
F5iI4gLcwx5R/1nuxfrCc5t9xMXzvCeNslvVEv+EpO2WEYsOsOfu917yW9Dc
fb5vrnV/fZnzdquA8+c5Xarc0ktc69DY2ft9WT+6gT/qtbXOr65wY33nPHtH
kHtYYtkVYWkh71f3mDeWu7GWub2/jf3ONi/WcnfWCo8vfwkLT8oAf1SbQtYN
UQ34CfNwphCF9kVG//+w/jlUHQGOC1BfcviFr5Z0FYX/A7gAjgvYzNTaweSN
Abt5Gpt5sH/vibcHPL8cuhIL937qvE0UhcCa3wewM6T20mm129J+v68NElui
rYwYuEs87YVNAx53IStwn7iZqA1eqbadN1QYSDy+A3OEyjkDDh8T7p9B31H/
Y0L7hCj0H/D91hCyhqjgwBLRgWfE8zvEPTnRWQV3mIK7DfYT9+u1GYfUv7+q
PTUVFTIDLmCiBWzFbDasF/Bcco9zolOV26jMwyidjgvQahmcpZUzU1FTCN94
RGeNMlM5o/k59LU4LgBgJ8Jv0ts3OBSqlOC7YIXfWJ6NOo3z6egAko33oucw
70WZISO2p2Q+LdM1BSPiBR3I1QOL47BBkYvr0XyA+WFEABhBiPyxIcDzYR0x
YgTSRoW4o0rYCLh8rRDJYsYRjEg6qvIbFSJSrs6B49UMGY/X5jfK4VVNSklb
TV4TQIBVeZQswXJHTV77/5eM5sOeOU1K6chrybNiGPJWgHEZOLYrcsHZVgR1
2pS42hq8S3CLqCaM8GEppbTDWFks6WBWGStGH4fl5Bv986S//SXIfxQjkGH0
TitD9G0R04gdsQD+8HES1eONxRELEA1nE+S1VAxiGAtgPBueY0T4CPwLRjCC
EfKIDCLUu5iMCzSj4t+eWtGNSzzX0KT9VjEWPqf5Im5TpajnthTRImY9wrDa
AXoHzNE1COgqtA+LUtqpgl3grl/OdoqI/e540KKffefu85uzw3fWT76L9wZ+
eShku02Ud2RyQT6/rVLaq5KCD7r7tqiuUigSZx3zivv8SNjMnYFTNvnO3OGz
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
p/YfrG48CsShxwyZgZBgo0OfuQSpaMMR8cF9lfv3VajrqiEv1ygju4d79PIu
PfQHsByVHj4g3r9T1Fgnc+vlp8yKDp3EBj557Plvwk32uP2ReRbA1SP42QGX
HQSyEP8HInAyyDOC2yBzksMvHEd/TqdF3qqT7dxF1UirYbvew1KXXtZl8O9E
cBtmMWQdwRx0irgd/41QL6AGW3DSDjsdK2WVH29Ke2BKWND4kDmrUnZtrzY3
ymJzip6aFRU0fsu4X+MLqfLjZmW3CSyg2yDTHaYSckrHL0m+94Mt900JG/td
wpeh6UvCsxdtzf5kc1ZMTtGx/ejzF22IzR/+Ycxdk7b+e3HC1yH5q2KLx/+Y
9MDU6CfmxC2LydcdoNIrS5/9Ijbo/chH5sbMXZv2fUjWd1vzNiYVqeRVJ4zU
/m1V09ek3j0j7J6pW4d/GvvK10lvfJO6Mip/387qrKLSCb8k3/X+lmELYjck
FoVnlM1ZlvHQhPAHJm1dkZB7cLek5Zjsp6iM+z4Iu2vi5vkbU/bsEFXX1Ez4
Ie3uKeF3Twp+/dvUuWuyJ/6c/Mic8KAPQp76NDomt1C9U5qdVzXiy6SgCdH/
WBA9aVXGV8FZy6LzNyYUVVZWmw5LTuFt9dg8IiPnz9TiQHBgYREOfvENkGmS
ocTP586VkJAZ7tMiaQMZRjrNuOgJH72c7NSIgQM2UU4d7NXlNsPeGVjVUJ1+
WQIAFcnYHeGBcXQUO9D6GsqhhjkQlG+i2ng1hVfwQPtlpMwpjHUpkn4GGVZY
LUP0XIubP2gQMoFrcQ4Qv4oTjgh8/jwLILhdRdykPBcQMgWhMifzyQpEUZM5
l866Wo6SeoEA9M65lUj1Lh1oRHiXFD8uZA0wIpD5bCIW7fN5RIFZRoQFBIzz
5gyqiU24XQaZj3OBPFABiufzM9E6GqXdgazAtEbse0cIHylnNXj4Rw+Rkboe
o3WMVHeO0Xieb3T/S+1Fr9FacOYjFQ08orlzwYnLFf03Tvzp6z19obL5xCyN
5xkj0ueef6s9o7ED56VGzwvqjhc1zhc0nUirE8U+Blufl9XIXnhHILkJ4gWg
8I1gKRBHQMYCyWMJF8DsAJsD70vIJFk7lrYZs6DcScsIPgGOBZho9KM9ZaN/
b61tPKj4eF3mw3Ojn/wwck1avl1Hn3SqOvRSO+QUUSds9CknJBXsU0mKSipy
yqq376DsjbKTBtjLuMNAQ1a8Rd5lkh43ybvMspYGOSUpD07KXxSc9Xlw5qqY
gkqxqOmQotvAnDBDHMHaKFEpRZsz8z4LzvhkY86GpEIRVWZtkPbgalZ0V84m
5Z4dkpTc4m/CEMDOXB2bL5HU2I4puq0KN/AFpq2JQX+XBzfQI1lGfAUQqUfw
CsaFcQH/TgEYgWOfPN7kl2UBQkbAxQgwMocXyfwxQd6+twm66Lib6B49fbKF
OdfGIGN6pY0+4wBU38GeK+MoAO//lwVel92VzMPO5K8LLAOKc3W0twl2Geg1
M/pDsqiC4heQQn5ny4TvY8uqyxil+LvwvEfmRD4xN3pJZM6BA9TvDuZkM3TF
8SAuUC9PKSh9H9GHaWFBE7feNyvy3plxd05FL+jnOWlZhkJRVV5TPv7XlKAp
YcMWxi7eUlBaIaEZ0fqkomc/jQmaHvn+sozt20TxhaVPfJYY9EHYs5/HLwsv
LC+v2a2SINTda6L7OphdO0WTVmXdMS380Xkxn2/KzyypKJdUN9Qjqy0tEVdO
XJb6wKyQlz6PT8opl0okUTmVL86JeWBC+PdhmRRVQytFn6zNvntS2NNfxKxK
ydc3iqOy8x6ZnhA0MfqNJakxmYX790qrqIoP16ffNz0saGrk58FZSkVNdFbJ
yEVpQRPjRy5O/j4it7xStG+HRH9YYT8KDfE6zUAMIS5ACK9xaKUwi/YDkD/L
GkjNAqk1gO8IF9BhXoBjCliWuHC+PW56Rkqi8BaK5hqnhTYdk6oPSI/urwKN
Cht8YFRpIDOVDjYlsgZX8qqw55msAOVLjsYa7KpS2Y5KD24vN2O97SFNmNG1
LOC48KBzzbTtGGU6ID22vdyhYZDudRsoOwJaGhqqU43kfpT+9Eu4N4mbV4OC
Qq1AxcseiSEIjA7QQ5Q5M4RHsCOXzrpbjpYT/zxvJgKzgCg+0MwhfxoboFp8
dSFrIIaJvTpZTcgCBD5/YU2BUsAChPPJCDTEQ0bcq6FcZsEcfHRalOSz4owm
1FybLOEmx+xGhM8RF3CMwZof+/8xC1CzMQIkv9xof6bB9VxD6/N697gm15Qm
1/ijrlFH3c/X2Z9HulrrGK3xjtN3z287s6zlzCr7iYVqzytq90tayBp6vtHx
TIN7eKPnnebjH2ld4461j2h0PItQvdo5usE9ot7+tME9vsk1SYfeco9Uu57W
OV80AhMZQ5S/2j0W4guesVonNgRgNRAXGKH1vG21f+swpbWZqzHyBwTOV3a7
4YlgupuV3RZq7w7xzwkFY75NumvG1ntnbh3xWfTnG3KyyvKO7K/yGqWXnPRF
p6pNqxKJxZ9szn5xUdLkX7Jjs0qajkp6LDKXXgkJKmpA2j1mGil57RF5Wn7J
1J8SH5kWetd7wUFvb3pgZuQbP6RHF5Qg8H/KSrccporKKj9dk/b0gpg73g0N
eifs0emR05el5RaVNx9GFkfWaaW3qUTfRmYNWxhz54SQO98K/fvUyPe+T08u
LHEaJKcdkD9ja8TZSoDwxW6DmA8cC/3/gmpiwhTEOC9Icju0fxu/PSfjF0Hm
ehwLwKGBDhIdBmCvcBskJ1olp22KHguEjwetyYP826+P64L/KkbgapLbm+QO
vfxsqwpRswqq5IOfkoLeC3nlk8TgpNKQ9JJxP6TdNS36uc8SNyXlNeyvPoke
Aag4ho9Ie5hKzCt96/uUeyaGI7X/0IfRT3+e+MTHsU8viH9kTvRnG7K2K8tz
q4peWBIXNCn44XnR439M+3RD1neRWZNWpTw0Lzzov1tHf5VQicx+dfkHP6Xc
NSUkaFLIS1/EfbQxIy6vZCcjOd5MX2mXb9tWNWl16h3TYh6dF70xvlS9X9lr
pa+4mN+cqsKasvG/JN05cfPwhTFJuZV7d0kLq0te+yTqjjeCZ65ID0kpiEqu
GLs4PmhqxLjv0uPyquoPUL/E5dz/zpaHpkR8tDyDllf+3k57Laq1abkPfRwb
9Hbo5OXppdVlecVlk1Zn3DctPGhy6Oiv4j7ZkpFYUKbeTZ01092wjYgYSsPY
IC/NNwHz8P2F/M4i1s8JMQKyFaNJjEtplG1aql3HtB6VOUC1ImSCsDp0enHg
+gU3l2/vJnW1SNsjlWVWWo9QDfsry/Kyy/LSj20vRtjJifORPCboS4nUmtvf
yRNaGYBCNsI4dLBX0/ieJR1N0j3Kwvz8jAN0Lun5Y8d9n9xa2qaRnMSJdge3
V4iqMvPz0w8x+egJpRWFtVR+/a6yViPS0qD0SLiWXAu6RZkh955Vg1z7OILe
OcXrd7nYGgNiBESBcyq9VoD8GcEcv8K//oen+UgeNiWDXElE5v38BJEGsADi
ww+MBdCc82oQjr2tz1/CzVfiz8GP/4ewhhrw/wuzg/C4Dal9i5LPIPICo1Ha
7OEm+zyTd5wa8DxS+6+Dzx9HB5AJMBPXkOdlpJBtvfPbT67uvpzcfbn0zGXF
mT8qT1zMcvQssfR80Oh+Qe1+WdP5pu3kIveFsK7Lqe29a5p732/0vKTueEnt
eNF2cm7Hb8Fn/pCevbL71KVq79nN1p7piCMYXa8YvTPazwWfOF918Y/tpy4V
u85s1PVMMrhegcCx93UdywXGGF3YBHjYETWOC2jd71ghLpAOjQ60KhIXIBXT
CAJ16aieFsbWQG9Tin6MzH76w+igKeF3zox+YG70AxMiH3gnYuHGLClTDa0G
WpmdO2u2ZBRNW573z9kx90wJH/F58sbU4mMHoVsOxtiMTYvwBn3cqnJp5IUV
pdNXZ90zI+aJebHvfZ/42qK4x+dG3zstbvKqNEpeZWtUHN0v/SI08+H5UffO
DHtsbvTT86PumR7xt9lRU1Znl0orT9hpXZ14Y3zRcx8nB02Kfmxm7GPzE+6c
Ff3gjNgpv2RUSWvsGmiq6TayTh6o+jdRXpMf+XMsQI63IuXHZVzn0tugfT4W
MCh7xyNoBIT9+VKoXDCD357N9sEvu06mOSw5vJ/SH1Q41aC9OVQvZ1kGl1nk
FcYFzDi+wI0LmQK5B3CsmWU2vay1UXaqWX7SKt+zS7w4JP9/58WO+Ch54Zq8
mauyH/8o8d55MRPXpNTUlAGChZxSCMGcsCjMh+QpmaXjvkq5a3LM32bEzFye
FZFcnFRQFpNbFpZWUFFdYTwqyZGWPvttUtCk0HtmRj84N+6BuXF3Tw8Pmhkd
hKzzuIgRXybUSEoNhyR5pWVTf02/f1Zs0KSwexG2Xxz745ZsihKhx1C1vXzG
6oy7p0YO+yRuU3KRtk5+wqTqczO/t8nLZJX/XZ4SNGHrc7PiEgsqj9VTO3dL
pq1IfnBa5NhvUhauzZuxMvuxufEPTItaE5W3Z7uoqVH1TXjBPe+FPj434uuw
fERDBnq2X3ZvTyguefTzhKD3Y978NimnqHL7dklORekHP6fePRN3q54VO/qr
+A3JJbW1iCQSgq/0YlePhw3y4jxwngVATyGSTgbfBekn6YVQMqlcRuQXepaq
D1Yf2F5xeE+FHQP1EzbGa6VOmBWnzaqLduasVQUqCGNvj5o50UKfaVP1Ntce
2VOdlZmYmBBdt7vqpIM5hdXURefus07VKSePwykhI0DTzlhUpxx7TltUnWbG
doRSyAuiYkL2SgsRLz7tZNANQPJqo+SEUXnGqfqttXb/9oqKwvyk6JhdymLj
fqpGnFdZmaU9Vn3SxJxxMmfaatFZSD/zPMJOuACXCcMzBazwB/n8eUfNX40L
j0OVPP3HeVvL0Vy7GtpToPUDg8tCI1KLrw5Gh2cBgvkMn2KKPiJbYw0aR0fS
2lro2gqMEdCcK4lnBP8HaxCTugDuXCUXC+DnYBnxO8QFvHPVjlf4uIDGHwvA
cQHPKLV9lNb7VtuZ4At9u/t8rpu3Lt+89cfNW9dv3jp3ceCQ41xw0/EJjbYX
zJ3vt5/ecPHaoSvXbKcvVends9TeZzTe/9hOfOu9UHTtlst3q+/WrVs3b/Zd
unKk+fgSg/t1s/fDE7/nXOg337rV5/PdvHHjj8tXm3oupWt7Zje6RkGOkHcM
xA7crwIXcI1VQzbRG4h6qN3/UTtHICtgsS91tOS3Ncrdasj5dws6JvVY6F67
6vAB2ero3Jc+TkRP/T8+jn17WerCzZnvfhM/fEHUV8EZe7dV/maT6Q7LFofk
PvM5AnWhQW9vufvdTS9+krA6PvfYPnmPgbTIlnUYYNfvXoOyfrtoWXjhsAUJ
d04Inb4iJa+4NCGzcPYvyUHvBD+7MHZjQtkupURUVfTGooQ73g99+Yu4b7Zk
bojOHfN1fNDkyL/NjfoxscDQKC8VVby9JPmeiVFPz4j5emPuV1tyxn6Xds+M
8EfnRfwcmbVLJXLrwQDxHMRlVLSjJ0UjJllDgSyAyJAiy+Ug/R+1ALfJ3uHy
gjDyJ50/hdlETXKPQd54gErJr1gblZ+QXrJHJerQIcLr71wqyCy6XVxAMD40
RkAu3aaTd0KrCpmuXh6dXvLiF7EPzY966fPE5z5KuGtKxD8/jfkxJsdQT11o
lTl14ma1uNsgP6mXGQ5RCbmlby5OuePd8P+dH7cqOl+/X+LV0M3HaO0BCfpV
eLWyPFHpc98i3b71jmlbH/sw/sUvksd8lfjKkqSx3yaN+Trx461ptXQFUj4t
9dKSivLFGzNe+SbmwRkhQRO3Po6+rLCCI3skO5jK6YgLTA19bH7k+sS8o7tF
PVZlXxvzu4MprCl9/5eMO9+PGP5hQmRaoXqPHN3/ipgC9PN49qO4kej+v0C6
PXz4J/GF5QWdelnLMcX3kbn3Tgx7dFbkwrVZMln1Hw7mnHN7SHr+P+bHB40L
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
Jrk9kssnnTjakwr5ykmwubiOHxid6QxY2FNHJX+w5/RJb3bYfTbum0UIIenL
htyZqK8cwRu7k80lo7DxRGFENkf9ZhKq3Bej7rwWyEXpYq7pBOS0DB/tUdwH
TviPxE9LE4kgUu9kQ5MyUgj9rlN9PbJb8vilE8d6ihF5Nimd14MlNE4Sj8NX
BLNcIL5kjK0jYClzRJ7kNYVAoZXjnqPPHt62fVtXd0fo+MEXx58ffu7AhvUr
OnZvToTluewz8YGe9vZNOzY3d+5tbmtp7mxr0fpdhZBv4Hh3e/vmLc3ruva2
K+7d69Y99Vxv54vV3sqo/8D+HRs3t0iH2tDfZTKlZoY8e7ZtW7t2fXvL+qDc
cTp48OSz+194dl/0jNvbtX3N2nW9vvZzujJvqMVR9Yx66EDH1k1b1vUfOzCh
+c8cO7Jn747Wlg3tHU297l2IdyiuXd4j27r2bm1u3eD27Onq2v7UU09t3LJW
P90ruFAUulwLVF+Q4HATqVmDon2mbLlCdsYI7OzAUuYiI8BWYKdpqA4jwpA8
dyWpjYyLZZKYgVDFuADrKyas8nUHZEwb2rcfF4sLWGPmdMwOSEscF0DEMJNf
qeXu0Mwbw5gL8LiAcFwarl4Zqd04ZXGB8cK5/0qX7q7MPfE6Du++9YepyQtP
JKu3Tb28/r+RFfj9H85fOpqevidd+8bFV46/9dZrb/7+t+df6c2f+0G8/Pn0
9LJ4eZle/ershV1vvfXfkG/0hpGZuj8+fdPE3GOvvx7DZsUsvbgmPnVrNP8R
zbwmWv0MYgGkhF20eg24hmpLtdml0fJNRuYnxWRbJdlHtsVkm+9ANlRVJxW3
XOWoqxL2Lmi9CGiNR/ySp/trj+961xfXvf+uDf/6aIca9M7pUOb9rK4+c8zz
+Z+0LLllxce/ueVXrfsQFzif8lWSnmIkkBvylcPq2aT67An38l9uf+eX1vzV
P6/d0L5fH/Sd7PU8sGr3B+/e8J4vrrnppzseaj7wyOb9f3Pnqg8uW/Po5t2I
Of629OzGffve/42mJXc3ffb/bl29c/+9D2977z3r/uwrm37w9M54vzwVCx48
eOSmH0HQ8JPf2rJ+14EqiQvgXcZqeMsqkh1kYohbxb+xBBvIupnrkuyJbPPJ
448Xf0RkrnI52SnMht7JqmHOGqDgp28q7T913PV/1+2+6cdbv/pA+67O7nzM
dzbrXI/A5rKugTOOumsgbayAxUJRMaL+7bsP3fXj1r9avuZPb13x7jvWfPjf
Nj20cad2Gulwr4nrZCJDIC6gRvfhbFY5P6b8Oqe8OKac19WKjvfzZS3Jbl9k
t98X876LGXUCvaRhTy0Grpv5nDI1BkuzZ3Uvsu8TabCwiPSdzSjn08p8Vqmk
6XbVJdh0EtpPpINTmoL6IlY4mVZms8o8mj2rXBhTzoEEr+rVPNNZ9OSov8kr
F9LqPKIS2BXD94FCx1nd/Zs8wieQ8oc+MzllPu2eMmD7v+lk4DyeC2kzdDFl
9C2apeiaLyJTCGwib6F6vqG5/VyzVhCQrQarNH9e4fvnTqWUU0ePbN++raV1
o3ygZfj5w6ePHtnaumF72xbPoW0IcrsO7mhrbzmwq23w+Z7Dh3a3t7d6Dm87
7u+UD+zYtGnDxk1rT/TuG+w91Nqyfl9HS/jYkT5X+66tW3du3dKvdKHLPl9U
M6Mul/tQc+v6lpam/R2tA+qhgRMHw/2u9IDnWd8ehOS93e2FsIy9+mox6nId
6Gjb0nLw4Nbjx/fu37dj2/ZN65qeamtvlg+AFZAPtAblnTubtza3NB3es7Vn
/44HH/rl1k1rtdMkVAp8B6s4wgioJKtLNQHJC2mZDheN6KhxsgP7eVDgAmK4
Wa0zNDxTyBGkVgXjIp5TRpBzVjRVOeZHRJKbvMXbMLSPJPjc5GPqVlosdxZB
L31VsvblcM7OBarXR3JL2fnSSO5q3by1CFyghND7m3+4OH8psHDJe/HVBFLY
SItffLUvV7k3YX6+PN8EPp7f/+Gll0+Nlu+KVD9rTq78/ZuzoNjfXFh49dnz
Lx+YvnCkNr89PvP18vn/eu2VNE4pev3XbwyeffHwa79NvPHWi3/4/VsXXnx2
bPbboeo1kfJHI3moPkrK2YXzuIiceXUEcYHaJ6KVz5O4AMJ4+P1ysbcsmI+6
JxEL0GRtsMclH9rRebD7yIFK1P9Syht5Tvruk23vuHvNe5avuufBtp6e7lpc
PZdGCiHoC3Z/DlmBL6746Lc3Pbi+Y/iUbzqtZKMev//Qrj0HDh86OHjS2+1D
bVqX3PTER762pmXfXkgCH/Bubjv4119d/Y47Vn72J81NO/e37Dr8qX9Z82c3
P3bfU63Hnu1KhZUfr931nmVrkJK/69GtPb5Dj7W0f+jete9Ytv4ff7o1oPb0
P+9e29Z55X2wiOwL97fuPXSkHMdxgRBbL8B8/kUGdO2OIEeOkKWBxZR+B0rn
AN4ud2YWIUYwkZQR797XfWRF+74Nu/epz3QVo/JEAqcG8fYxazqRfZBMJEEu
jg8zwpsSky/k/bEhualj7z98vWnJtY8vufHxj39zLTKRSrBrQnOdjcmFkCz+
TBoNRzcn4i1E5HTElY248mF7G34e8+Qi/tSANzMMqypmc/7ppKcU9ufDnlzC
lxv1oI6kbw1qCUI2fh4h5xiUcs3hnbzQbc+HXTgREX3rLSTlfEwmm7vlI/58
xIO423jEmhf9xkLElUJXhUemOfzYb08e0RyVB2sY/yOWgX4FEsLGdlFIg4cc
ePzthAEbZOQjgXyYsgkS9uIGRTQu+QjlCBXHkW1rXqXngfGUGhv27NmNsPqG
tWue2tvZ7Jd2+np27tzZ2tq6YePGFVu2rG3v2PzC0SNIwww+d7h91/qdzU0b
16/c2tT02ONPbm/ZONDXmT7j3tnRunlLy7YNG1ua1reuX3M0uCf2glRNIhOG
LKbarx7s2dexubmpvbnpYAdS4x0nj+5Pjbp7PbueXrW2Y+vm0Cn41efyCuIO
/ccP7m1raW9p3bZxQ1PThtVrn9y6cc3uPVsC0s7OzmZPV/upY/v9UseWdWs7
Wlu3b9j4yK+eaG5apcEICldrOV4amjhkSBaQDe331jECMVKwWAaRdY6tQLtp
9NpdTDwKIBoahYCuhoFme9BZNFJBkQvUo3rRBCweOyBoH0KfOC+IOMpYG8oI
FMIO8vnVWoGuHQ6zNQIY/4vnS0drN+K4wPhbdf9eey2ZnfmxVr0hVbvtwis9
RPjqm1pq6tvh3IfH5u996dKzZHEB//fm72cn59fp5lcq8+tev5Sh6wRYk9d+
mx2/8ESoAmuWwxAXINVNyaqBvycVTWEtG+x0c30KcQF9eyXpg9XQ5N5qNEfI
jLl/MxZEKuufVm//0Lc2/P19G7/2cOtP1uz92uM7Pn7vliU3rfzo19f/fNXO
gec8L46pL+WV6aR6NOC+/afbl9ze9Invb3mstTPaH/h1/tiZE94frdr9iW+t
v+5HzU+3H9p5uHvZz7a9d9nqP73r6bt+0fL09gO/ajv8xQfb3v3lNX9+96p/
fbRNknr8fveN97UuuWH1h7+z9o6nd369ad8VP9y25LaV/+vLGx5Y05EPuWVP
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
    "], {{0, 317}, {514, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{514, 317},
  PlotRange->{{0, 514}, {0, 317}}]], "Input",
 TextAlignment->Center,ExpressionUUID->"7e52e36a-baec-4bea-b0c3-339126bd6d60"],

Cell[TextData[{
 "La tarifa por ",
 StyleBox["transbordo",
  FontSlant->"Italic"],
 " maneja una ventana de tiempo de un rango de 75 minutos y se mide a partir \
del momento en que se ingresa al sistema (solo por un pasaje). El costo del \
transbordo var\[IAcute]a de acuerdo con la hora y el d\[IAcute]a, as\[IAcute]:"
}], "Text",ExpressionUUID->"72c589f8-7d16-427c-b3e1-0901a672fc3e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
2UFiJqyUq1evytHjZyRq4DzJ+59OkiF/A0mv7wYPqN95msxfudfthWqq+vkr
H7WT9H+r62Ixv1NesVjLBAePnZNa7acoV2nu+EGm1xtJ+Sa/KDc6IFuUx/RS
Dlbs+96S4eW6kkU5Ra3WE1X/jnO697QF2+WDSgMc34AbFCvfW7oNWSTrtx6W
bbuPK5/ZLSs3HnR7pW7eutOneCvh3zv18bizl2Tmsl1uz9yitXtlk7b/9t1H
Xf7Muh0muTg7ePEzhZvKT81Hy6pNB1KVi3DR+v1Sqt4Q58ejHV5UbsQeu3Xa
zjv3n5Ql2h5L1u5z+9mCiVyOn7og0xdvl7GzN8li/fumHUddbo6p87dITeVH
uVQW4C1ZijSVqm3HywZtM0Auj4iOUyX7u61c+2TQdv3HNz2kea+ZMmfFDvl5
hvKtsKGSFXnDB5cvXOV2qCxcGdrfSN6ZfYfOyqwlu2TC3K2yROu/Vdthy86j
Mn7OFikVNkzL1P5+pbbLmxjRZXqIn+p9M5dsky/jOXz6fPUdD/9a3z124mq3
B61+p6ku/pAxkP7VevLKJyE/Gf5SsHzjAXm/eozzJeNj40w/zo5YsWG/rNl8
QDoqFy78bY/Q3/OGSZEy3d1+O9ej+nz8fdgQchdvI6+V7CgNOk+RVXrf73cl
Z7mblxsMBoPBYDAYnjzczckay+d1h8q0RXfuJ3OcbPluKVEFP1lN5yvJ/VF7
aT94keMBC9fsdXtsMhao73RV9lDNWLIj4X74xZe1Vad/tYE8rfo1/G2p6sl3
5elLhKT3k01J8CuAvqNXOL711DM/Oh29apuJysmOJvx92dr9Ui5ipPIm5WR5
6kqezzq5vBtXr17T8s9KVMwCyfOfjqr719e6RUjJWoNk+tKdLvbu3IVfZfC4
lfKvb7qqfl3XcdZyjUcrBwlxmXXKnz4PG+x0c+5nz1T0sCVy7Wpof9Ja5SyV
Wo6TZ7RdMym3+LR6rMxftVfOnrviONmHlZWT0WZ5lCv+p4PUjZokq2iXq9fl
xs1bLr7zjha6h/qNz+SKcs0LV666/JLki9i155hMX7BFGnWdKq+V0vfIF+H4
5xe1tS7aL/fqA7Bo3V4pWXewi0XFr5WlWAv5vsloma3tdOnyb44DkZMycR5/
/ndZ2/mi1oX4y6MnzsmOPcdlyrzNym0mSX58ScpLiLEs02C4LFPeAjiHLKLT
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
tyK+kYJfd5Mv6g6VHyLHKHcYIX9XvbvwN921rec43xw+pmGT1sh7P/WTV7S+
xb7vJeUajXSfd1QXz/pWS/e+mV8Pl2/qDZZVm/an2E74sWInrg2dR8B5Zy/V
khdKtJGyTUZKeNcpylcGu31PGWiDl/FbRShnjpX55Pi4nrKuf/nKdZk8d5t8
qW35t4/bSZGyXZXPDZZKLcZISf2OfPbpctZwZyB/WLm/OyP6zIXLMky57Guf
dwlxD+Vr5IGEz9bvMlU5zyB3drjrkzwhP1qZ8OHKWUPvSRxfeIfJLieJ406v
1HV8/NXPOson1QdK8Z/66Pu1DuWzV16VsWAjqaPXw7E5n6yryhf9Tj56fJuF
y0S7XP5VVW7fVg4Z2lsY5vIekgv/G+3TTbtDvtcdu49L7aiJ8tyb+uyXQ3XP
XryllKjUzz07v44NYjHd2emcCf1xe2naY6bzDQJ8x826z5CXtP2pWwa9lhyl
n9eOlS/rDJF/KB8j9hcem/3NSKnbfoJsivfrcp4ANpIc77SSjOQfeb2h/LtC
b5WV1W6sJgWLXDQYDAaDwWB4ssG+ruY9ZklW9t5kqyrpslYK/cxWTdI9X83l
OUj3bGXlOzXkadV786v+SS548jfARzyuqN6+fMNBqd1uosuPgK6LvwydONOr
ES7OK12uGq78Z1W3rtVukstpcC+wp+aXmRudHo0O7eqj9cvDHp5es1QPjnOx
YJ9zHvVr+PFqOF03k/KAZ1TPf7ZIpONwL30QykfPuzz3Zkvp8/NyF8N2WDlZ
ZM9ZLibyqcw/SRatZ4OOk9yeIYCfLHb8Simoeni6LFWcnzCUr3B3wt4k8vJz
PhU5FYnTS5e9qtv7Rv4HzqDOoNyKuEq4R4XGI2Wb6vynlEt2iZ2vvCQUv5bu
hepa5wbuTG3Xdvod1xcp0136jFwiR0/cm78uXX9AKijnyVy4sdtHlS5nLdXp
G2jfNpZn9DtyVmZ2eS1qS7rnKsv/lOokY2dtdLGkKeG89sHg8WvlDfb05aiu
7V9Z30m5Drkm9R3JvZIuZ02XjyTScZNTrl2Qh7LKx8mL4upDLJ+2x7OFm7q8
GvRNZvaCUZ9sVaQI/sBF29wzDx49IzVajXXtx3sQN5r1zebuTDDOl6asdNmr
h/Z8Kf/nXOdhk1e7GE1ylkxewN65gS4m0l3DHkjlRsgEbUBZnOOdLlsNV3/y
siyN54Ocb81euDfL9dY+0PfLUjnUH1pGxgINXN05Ny2T8kTkOYv+H7/yjn0h
maE9F6/eJ1VajFXO1SJUV30H+HAG7VM3DvRDXUqHDZVZS7YnxLWeu3RZInvN
cHlJnspY3slrgZKdZOCYFe5MuztwK3RG+K0EVma5Fw0Gg8FgMBieRJy/8Jvq
/Mvl7bI9JJfqjzlV582l+mbOYpGSo2gz/URKTuUwBT7tKF/UjpVW/ebI3FV7
5FwSOezRK4nXC+s0RQp/HS3ZtYwsqvc+6z4NJevr9SV74Ubyznc9pXPsomRy
Cd6tU27YfkQadpkuBT/rLM8pL8xaIFz+ofynbXy8WNyZi443faQ6+AvvtJDn
VNd9rmCEvPh2CymuXK5B1+nOj/HO970lxz+aSrGyvdyZzDdVd487ddHldy/2
TbT+rYn87+edpatypYPK1QD69cT5m6R0jRjJrZzmlXdbK++c4Pb7+JwPxJut
23rE5bR/+4dekuOd5pK1UBN55nXlhAX1vfXds2l9CikHat5zhr53nMsfOHbW
evkyLFZe/rCtZIOjFGzs7oEXZi/SVIp+G+3Oytq885hcu4cvC5xSfj1q+nop
WTNGXtA+y+LqECHZijV1Z1WXrj/C+Sz5Pcc/GktxbQ/ycdxrr9Il5aWcmQzH
eK1kR8lWpIlk0ffh3ahzNuWzBUt1kdpRk1yc6vX4GDvqQ5zqh1UGyAvFlE9p
Ozz7WgPJpjL1D5WPb8JHuDqxBy2HcsYPf+ojM5SfgONxF6Rt/zlS6PMukueD
9lKiYn+3j69U3cHOLpCFdtJnZy/aXIqW6yVRA+e5vCMeew+dkh4jFiuX7yXP
u7ZtKFkKqExou/y7fG8Xx/l1nSHy6vtRKuvNlTuOkGUbDyTcv23PCec/Lfpd
b5XjFk6Os77RWPJ91EFK1oh1PsIPv+/pZKKItmen2IWy7/DpO9ps5rJdUrX1
OCnwWcf4OjTWclQ2dQy88mGU9sUI+Xn6Bref0OPy1avy88z12hb9dKw0k5ff
aS0Vm/2i42qPOyMw8XAxTmYwGAwGg8Hw5IP9YOuVTwybuEq6D10o3QYv0J+L
9edC6RK7QLry/2GL3T6wmYt3uP04F68kn78en8paLY99Ui17zZKarcdL5cgx
7lM/aoK07z9bRkxZK2u2HnY+gdt65K07fg2CHH2c2dtrxFKp126y1G0zUTrH
LHT5KThzmjOdDh45LWPnbJLWfedI/Q6TpZHywq6D5stY1W837jgqW3Ydl9HK
w7rELJDYCWtCZ07fErenbK3WJXb8Kv3bfIkZu8LtdfM+QHLe7VIONXbmBumm
enfPYUuUn+yUY3Hn7zjfF+7G/rAxszZKVP+5UqftJNWlR0ulyNESFjVR2vSa
qW24Upau3+f4LPvJ9h8+JdMWb1VOuESad58mNVqOk4pNRku15mOlpXLIYZPW
KR87fueZ0SmA6hw9cU6mLNji2qEq5enzG0dPc3u8aK+5y3dp36yRjso3Bo5Z
JVv2nJTrN1LO68f5y+TAhxewP7B179lSi/z+WtfqWtemypf7/7JSlq8/IGcD
Z4BTH/bbTZi7WWVhplRtrnLQdLREdp/h5IOz0eYobxk8Ya10ipknsRNXyM4D
8f5J5ffkURk4ZqX0GbVCxs/e7HIfku+/06AFUrPleKnZaqJE9pglI5WHblc+
di3AWdh7tUO/GzZljTTuMlWfPVZqKqeM6jNHRk/bIEvW7JNZS3a4c8LwV46d
tUkOHL3tiyRXx9bdxx1natlzttRoNc5x8W6DF8m0hdtd3cbO3OhkgjqyD+58
ovPP6ecVyvNixqyQJl2mSTV9frUW46VR52nSc/hStyfv+Knzd+7du3XT8cnR
+tw22s6dVCZnLtup111IrtfFeJjBYDAYDAbDkw20OfRPzuI9duaCHD19QY6f
ueTOzuX/fDizCV37aipzv6GLw5U4w3jN1kOyfON+Wa48Z4PyooOqo8PFrl6/
fgenSahMMrh+7abq9+dl/Y5jsk4/7F9D5w3mb4S77Tl0RjaqLr1930k5rrzp
ciCPCHzxyOmLEnf+V/ktXn/Hx0BOfnK3H9F3J7cgHOj3QF3Q73n/o3ov7XLx
0tUEH1li/Hr5quw/clbWbT8mS9x7H5CNO7W+qu+f1jKuXLuekAf/1s3Qs+PO
XnS+M9qK+MOVmw87HyK59JM/Qzh5XNE6kJODNl+iz9+hPIezua9f+92db8Dv
h09yJsElt1csNSo9dYZ3sqdp7+EzsmbbUVfXVZsOyba9J+Wkysz1ZHJQsEdq
14E4lYODjrtwTgCc9/r1G06meM/DccjZBW2fEP/8XbkJcaNxZy/Hnx9wVX6/
ftPt79t/5Iw7w3nVliOyQ2Xs/KWkzx2H35zS+m5RrrxC67lW63xA++aiPpu8
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
r1frs/OayA3ZHtjva06mRYsWLVpaW2h7cUwityEX4djIuEX6Ajim0gbkfHxz
8fYcH2nTqVxu2qscT6mM41K1ApQdeT7h2Eh/FcdixmrRNnW3B2kXcGxljQPa
IYxPoV1LXwG5JK+DNjjPx2vgGE37lnyT9i25Fcdixms1xcnUGlDKvqbPgZyM
NquqY0ZfBG1ctWaU5mSeKSoHUa0rTh5PLk1bjlghDvjZ+TiZEoUJPm+VG0N8
X2idF/qhiEfmt7CNsea4e50Eth36tvgZ8Uuc05fG6+e56HcmtjkvQfwxr4bz
IkpUPQ/at4wf4/fZXhQn47yEOidtV+Zbcl/6mxW+eX+0mdmuaedrTuaZwn6L
mOIzUhz+k08+Fn3dO4KTzxPP+3nRPylOdu46FsQEMbd06RKJa/aHFxPTxzGC
/T/nDjjnpWrXuAvxyf6a56Iy9kDxOLYJNZ9GTkbexTGE8Q1qnoPfJ6fjZ+yT
6bdT9aDYHuh7U3MLxDHHNeKb83KKe7H/5na2B/bvmpNp0aJFi5bWFPqQOE6R
h1Bpm3GelDyNdivn2WkDMm6kOU7GsYy2HPkT5ynttZc5TnLsZAwVfRPnqxVC
+1nN75MP8rjnytOifaxiw5RvjbkK5F6c/+c4TvuXc6ccu2mb8ni0A+jjYFwM
x2OKnZNxXpX7qrWkuJ02Cm1ZNdZrTtY2hNyGnIsYJHchlvnsiA3ajORl9pim
CxW2HR6L2KKea95CCfHPa6EdyOux141rShS2eVyei3YlfWKMq6X9TG5GzkRf
mJ2TVZjrPdFvTXuWNq+dk9n9ZIqTsc3Z/WSak7UNIZb5fBS+ma9Fv1FmZobo
j9/D7NkzJCeLjaXf/9yczFgz7xPRJqZK3xRxdq48Yruwr6Q/ln0kxwLyMvrD
ztUmFL7J+zgOqfkNFXdITjZt2nTZV9s5GfH9/vsfyHbHMYJt3J2TqbGGn5F7
Ed+Md1B+Ms3JtGjRokWLJwnHJ45p9EnxVa3pRSU3ov3HeXbGSJ2Lk9GWI4ei
j80+ttG+U+Mk7UDli3CudWvzK9DGpF3J8Zdjulrr7EJrFBvzu0slJ2O+DfNn
OKZzG++DNi3Px+MxlpH2JjkZ+RalOU7G7cpPxjloNdZrTub5wmdNHyoxzOfK
eQY1Z0D7U/F1crILrYGghJyGvivO1dMe5nmU/Uoez/Zij19kW+P5FYcjdpR9
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
rdXVqI2Kwal1G1A4cy4K5y1E4fzFraIF9r/nLRGvQheobUtQsMD4+9TSV1A4
ZyH+vncUPhY2K2MW1Zgu51h9WZPOF5sDgvDTkP8ibfwkFInvHl/0svj+0kbn
LGjh+2rqPu3Keyriq7invFnzkLtyDQp2foczuTmthpK2KU3Ecgm7vyYlDae2
vIvCKbNRMH1eq+G7sQpMC80X7/PnLxT4XiRwuhTFC1+Rn0c/+BB2dOqEdYzv
Enhe7WtwMsZ18f0GPz/s7N0PSc9MwImly3F84VKJo6JWv6+m9bi4t5xpc5Ay
fQ7ydnyBasHLtFyakNeW7/8Tx9e8gYLZ85E/c57Zny3xOCzwWo7PE/he9AoK
Zs5H7IMP48uICLxJDiYxbdb2ENjmPNvb/gHY2a8/Ep8ch+LFy4Uuc/afRRwb
5l/5vrtZFW23YP4C5IlnkCX68WPvvIfTaak423C2tSGiRYsWLVo8Vtyiuyoq
UfbdD8ge9QiSukQgpVd/pPQZiJTI666oJlP78FWcW7ym9L7OeBXbU+Xn1yMp
crDcL73f9UgTf8f1iMQPIWHY5PATY7qvUdfDzxjb1/k58FFAMPZ17IYkcU9p
kYPEsa4XOgip4ripfdzOa6o65+XWVP6mvQfK39Z+zhTer1B+nhrRH/HdInHk
pttxZMUK5MXFnuc5ajmfNFRXC5v1AHKenoCksB5I6txH/P6D5DO40hhvrOI6
+gxCksBBknj+SXLbYKT1HSIwfz1iuvfGz8Fh2CawTHyvNuvSGbarD97398e+
sM5IiOiHtH4Gto3jXvn222ybNpVtOEvcW3R4T/zYqTsOz12Aksy2Ho/W+lJf
VYWT73+E9DtGIrl7JJK69pE4SjX7OaMv9wQ8DHSOK8R2hsBCQs/++Dm0E7Y7
HBLPq0xfsKq9+F5AAPaGd0VirwFI7TdY9vnOY4h2wzGC40WyB9yfxLno3+O7
98feiEjse+5Z5Bzcj9p6uy9Y99latGjRosVd7JysAiU7vkTK0JsR5e1AjCMY
Mf6hQsOusIYi1qZxVAffh5gqrskR7vJ5QkAo/ggIwkdiTGce2WrW6jLrLm7z
88cuRxAOB4QgXhyf+8eI/eMCwsxjhxivbudtqfuLNe8nzjyHy32K+4vn9fgF
44C3P36K6IufZ89E2tG/z/EMG68VoKWx0GYt/W030u95EFHtfRHl5S9wcKWx
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
OccQYJuPcDt34/k2t/M750cubmxTa0SrNVXUOZJFG08Ur787jLjFGQLfEwW+
nzPjz9mPb5B1F3fruotXRBqg7UUtWlpadPu6fHKO39IZu9hynMw+hlv2YIgL
J5McLMCyHZ2czPw+7Q3analiDM+bOQ8nP/0cJd/9iMJX1yJ1xO3SbpVz9Bz3
nWOyxf9kDRAXXug6v9ocJ3OPFXPmg/lfbM6DWcs8wMi1IT/80s8fi+gj8xFc
TIzpzA2f6PSTTROc7OiVg8hVIY3HZXKyUsnJHpSxri3LycJsMYtu9qgLJ7P7
ZM19HJxvCEHa8FtRtORVnP7qG5R88TWKFi1D2rBbjP38gtzaZ6i1lnQjTqaO
HeLCnxrNSQSENr3dvU00yclC3HzSoU5Oxvff+QXKuNwJcs6hvYzv0pzs8kqD
0082VOKDfjKnT9Xfnb9ceF9lPH+DY6m5LBUbqzDrihdX36pa/1nu6wg25tPI
Z64bLvvv0198iZKvv0HRijXIuH0k4sO6uMQ72DlZjK3tNIVVF87odm3Wdy+e
k9l5qOJk/Ds1wKgn+qUjQOL7RfIxs/9m/DlzgzfKfDJXTqYtmpYUzcu0aNFy
FUhZBUo++7KF8slCG3EyZ02OJudxXesgG98NQRyvSdgaiZ0ikDthMsp/2Y36
0jNoqKtDdUwcCuYsRHLkICOu0S/IxrEsf5bdX6G4mr02s/u6vK5+PWvts9jA
MOcaOxfNyfyNenS0dVjbY6uvL2b5GDFdk8y6i4x9md8jHF/Mni44WdQ5Hpwe
expL4zGZsV0lv+1GmgsnC8Plw7ilrn4D123utrGFqxDJx2izJnbpjfzp81AT
HY+Giko0lJWj8uBh5E+ZiaTuvQW2A6UvTWLZLVfSil109X8ZeOZ+4U6b0u4P
i22ibXI+wrkGmq32ozsni7WvLyW/HyLvh77tA4Kbfejnjzk+Xhjn3U7Gdk0W
Os6MXTTqLurYxUsV4rtw4xYkDhgq87JkTKC/K3dy+jAvGseKkxn8OzbQjpUQ
Z+2LuAC3PtyMB4hXf5tcMT64C7KeHIeyvfvQUFsjMF6O6rh4FC1dLvrv642Y
9EZxjOHWsW3zYc65OreYijgXHube7pqKZzzH79AoN9OIy00W13RQ3P87fg4Z
d/6c5GRGvcWJgpORo20adRfS9mk/2RWTBvWP/r21aNHShqXcxsm8WiKfrPH8
u32NGjnW221DWx6OMQaLz5kD7h2AlIjrUPTyStSk2Wy5klKUvvMBMm66S4zn
ITI/wTkm2/hYc3OrRlyK8tmZa+a42M7ucTDiPW2TwNCLyEuy7jfZtG+/Ffb1
q74+Mm6RY/rz5jyr5GTdQwUnm4acaO0n+2dijcvMJyv5dQ/S7h6N6PYtm08W
48bpLXvQHXuuvqxo32AZt5Uq7NITb74NVFRZ1198Aqfeehvpg4cjzmHU1Yu1
z/fLmFxiqqOwFzu6tC873zLWjwiz4djO5ew+PWV7us9NuMeC2fwXtvtJkH7g
UPzsH4TXzbhF1vYgJ3vR5GQT5Ppk43U+2WUQg5NtRsKAIRJH0d4BjfovZz93
oVg2/UIuObbsIwNDJN+LcX7uFifu9CfZY2bFNvq/xHXFh0fg2Mw5qMnJsW6g
pholn+xA2rDb5H6Mh1A+Omc+l0tuprU+erwLvq3Yd2c7DLDwq+r0XvQci803
Z6yBbq5JJvD9pg3fjF183vSTsS/feP/d5prRrQaNf5noH1qLFi1XgTTUofrb
b8SYeGuLcDIrhsaKSXHmugSqsTPEmrtX47rd7mPtAzGmJ3WNRP7MBaiOS3Be
/tmcPJx4bR1SB4+QnEzmuftba+la/KupeVLFyUJd1t919dWZ6px3DmlU3+5C
ORnvMUUc/6gYzz8VfGyxdztM8b4Wk72uxTShUztcgxeFvbqsWyB2zZ+KU0mx
rQiMq0UaULv/T2Tf94jMJ4tinbeWqvHhUqPA8k0p+9A1v8ay9SRu/QRf794f
x5evRP3JU86rr0vPRPHLr0q+xrkJ+hssPwF5VkfzPOEGLtWa6fYYQ9v1OXFs
/gbxpqqYS9e6Da48rSlOptaxVjZrojxuML7088NiwcFeEhh/yctU8f7Za67B
8wLjn7/wLCoLcs7x3LRcmJzF6a3bkHTdEKNehre/yzOPs/VxF4PjuADFfezx
3yGIMvMf41zaUKgL/pUfjTmS8m9f8d47CHFhPXDs+amoSkhyXn39iRM4sXGr
zCuTfTf5m8RaR6vWjC1uMVq1JbtPzN723DhZvFtbvPh2bc1xMCaXtT3+lvh2
YIXgY8T0iya22Y+/0F704eJ164N3Iu+v/a2Ii3+zaH6mRcvFy7n9zPX1DTir
teW1rBSlOz5HKvPJvPydedaX01ZVY6mzBpwjzIqJ8Q+zzWeGynwCGavoFvvP
+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
73HoIJ/D/PM8s9bGTRvWAYKT9ScnG4Xvg3uasYuBbth2z+m9mPk0VSvJyDkk
bzq+6GXUpqVbuBF9aV3hcQE6VzxJKa9A5a+/o3DmfOQ9PQGln33RGKuZWTj+
6lok97kOMYKTJQ8ahuLX16MmPgmwcTxDzLYh+F7h8jVIvW64jDEv+fh/OHvq
VKNjO6W+DrWJSTix1lgzxaj7EWTNq6na+gF2X7ArtuNlbG6QzCfbHDYYt/ZU
nGwhLA52vj5J66WrfawUf/cjJ5uNDt0egpejM/wdvrjttlvxyScf49S5MKFF
i5YmpVLY3YcPH8a2rVvxystLsHjxQkyYsgQD75uvOdkla3OcbCauHCcza8ox
B7xjBAoWLBU8ynVdIvoDqtMyUBUVh9qsY2iwxYNLu3X7+8gf/wIKps5F2Q8/
o0GMyUpq0jNQMHs+kjpHIKFLH+S+OEMcx1rXq6GiSq4xXf7L7yj7fhfKfv4F
p4UdnCuOl3bjHShasQb1x00buqEBdcJ2Lft1N87s/N7wQ5RYtZyqj8Ygf+ps
JHRmzKOfWTPyn3GyXoKTdXDOqV4MJ9PatLrONbQWJyt+423U5VlzDhT6DLgm
U2V0rOBoeWioMblUba20b08IGzT3medQtHgZyv886OKrrRbfy31xKhJDOiE5
oj+KXn5V2LHZFr7LysU+yQLXv8qYsfJffsPJDZuRxZyeYbfI9laTnGq1p6Ji
VP5xAGe+3onyfX+itsjKia+Jj5cxlsm9r5NzDqzhqNYOvjhONuICOZnWS9Ir
zckELo4LjNYkJrviW/TfVSmpqIyJlX17Q0Wl9WFJCUo//RzHHn4S+S/MQKXA
HGMdlNSmpktMk5MlBXdB3sSXUB0dZ+G7qlqODWW/70Xpzu9Q9tvvKPl0B7LE
8dJvvktiva7AmvNg/12xZ5+Moaw49Lfov82xQvCymtg45E+agsTgzjZfmY2P
uXAy198gXvTfFicbcoGcTOvlVzdORj+Z2OYV8Sh8gnrCq0MHhAYH4emnn8Jv
v/2mYxi1aLkIqa2pQWpqKj799FOsWL4cy5YuxtKlS2ycbI4V19LqfUFb1Fbm
ZM68baPuW3x4BPLnCU4meJcSxmmV7T+AQjEu5zAnYeM21NKGNOfxG6qrUC7G
2GOPPYOUiOuQN2sBqpMsm6A6NQ3502dLTpY69DaUfLwDOGPGc9XWoervaJx4
bT2OPTEOmQ8+iqxHn5D54ulDbkTOk2MFx/vJeSyO7ac/2YFjYych885RyJ85
F+X7/7SutbRMzsmmDb3JqB/mF3JBv4PmZFdCPYGTDZdz/HU5uRZm6mqFHbkH
+bMXyJybU+99LH0DUOvpCJwTc/R/pfS/AYWvrsHZEiteqzouHjnPTkJS1wjB
sx5GibA1oeyMsjIZ31W0bCWyHntSrtN37BFhq954p/RpZD0wRubg1JvtgXMZ
zDvLe26KUcfmuZdwWhyvodKYA6GvoZT27siHEM8YXdaPVPlJtjXJNCfzEL3i
frKBMs6wJj7RwndlJcr+PIiCpcuRK/jOybe3opqf11v+3rJ9+wV2H0PadcNR
tGS5y/drU9JQyNjFyEHIHHY7Sra8L2MTjQ9rUR0Tj+NvbEDW42Nl3fysRx+X
a1SmiP1zRJ9eceiw81j1J0+j5LMvkPv0s8i4836Zi1m2/5AVUyleT29+FxlD
bpI1nViT0VovwloLwnWdPs3JPEvtY6WRw2dwssfgG9wbPt5e8PXxRkREBObN
m4fExETRxVo+XHa77kuZqW1Xs6r71GIJcUGfUJkYR//NWiF+g0rRj/M1PT0d
O3fuxGuvvYbFixZh2ctL8PLLS/HsS4sxcOQ800+mOdk/Vw/wk9nWmUmgn2z+
y6jPsvxkdbl5csxlzEpcWFdZk+7Mjq9kzpeS6rgEHBszVq77lDF6DMoOHHJ+
VpOSgoLps5Dco7/gXE+g4q+j1rGzc3Bi/RZZ7441vJgLxhqNrNGRGnkdipe8
LPifxe8qDx5G3uSZwv7tg9gOvkjqPQDHN25Gvc1Gpo+BuREJHLd9g8w1tjUn
a331QE4mxsCzWdk4/spKJEX0l/Xnc558Vtb5aLBhqvT7n5B2012yBn7WhEmo
OV7k/KwqNg45Y5+TNmju5BmoOBJlYT8+QWD4FaQOvtGohc8a90GdZC3HpE4R
EsvM81GDcU16JvIYBynaIe3QxO6Rsu4Ht0upr0PV4cPInzwdyayfoNbya9K+
15ys1dUDOFltXr7sI5OvHybXL8m8fSRKdnwpc8WcfWZ0DI4J3Cd36YvsxwWP
En2o8/uCkxXMWYiU/kOQ98xEVO//y8nn6sSxT219R9aniQ3qKOMJ5ToOoh9P
6dYXhfMWSb+zsXM9qmMTZD2mBPF5tJevrKFbvH4zam1xGZW/70XeU+NlTaho
tb62M0cy3Dn3oDmZJ6s9HpR+sllOTubn62PyMh8MHzEc69atQ0xMjMyPKSgo
wLFjx6Tm5ORIVX9f3Zpj02NyvamaGl2bknwkIyND8vZkYQdeKU1KSpL6Tz+/
3JoibGhyMZ7zp59+wvr167F06VKZR/bKsqWCky3TnOyyqSdwsjAnJ6MtWEhO
lm3arPX1qPo7CrkvTJf1BI6280KSGLeLl611if+izZg78SXJgzLuexile/ZZ
nyWnoHDmHKRdNwzHJk2VdUOkCDu04sBh5EycgnhhN0e190aUtwNRXkIF30q5
bjhKtr2LhmIzbrGmBme++lZyQnK/I9e0k36C3FnzZc0E5/li41E4ZZbMLZdr
R7nYrJqTtZ56CifbKDhZvgmWWlTv2Y+8x8fKNe6I77Trb8TJtzbJPEjn2LD7
D1mvkTXDs54ah5pCKxarKiYW+c++iMyht0p/WJUtDpE+XvpzGUMb1cFPxtNG
CVuU65al9LkOxa+scsn9qTz0NzJF+yH+o9r7SL7FuY6KffudfmnFIfl9Y90+
A99x/ufOK9OcrBW0tThZgsXJqkR/mDdzrpzvOnLNNXJ9sqK1b6LuuJWfW52Y
jILp8wSmBiHzwTEo/22v8zPWlykUn6UNGIbCBS/jrGo7PHa0wP5LM5AY3lVg
1sfArVCu4Zc28AbRjjai/pQZW15ZhbKff0fmyIdFO+uAv0X/zXVS8qfNQVWU
NY/BvLKiBUuQ2DlCthc7H5Nx6C41JzUn80y15en1s3OyXnA4fOEreJm3lxdC
QkJw9913Y+XKlfjss8/w4Ycf4J13tpv6jtTt27fbtl2tatzntm3bsHXrVnz/
/fd6HTcYayHv27cPP/zwA3755Zcrpj///LNUvv/1119d1P3zK6E8L+N8ycfe
f/992V6WLDH8Y6+88jJeXiY42ZQlGHSfycn66nyyf64ewMn8jVrhnHNPCjc4
2VmTkzGmpPzX3ch98ll53mhhVyaF90DBzEWotfnSOM+ZP3s+krv1QdYjT+LM
7n3Ouf/qpBSx/zxk3nynrItfk2Xk2jAnp5Rj9MNPyjV8aYPKtUWF3XtU8LKU
4bfhzBdfAWbuA3McSj74VNY4oI175NoO0ibNfX6arO3o9DWkpqF46XJZ41mu
O01fwnlyyjQnuxLqCZxshMHJcg27knmSZV98g2OC5zN/hXZlirA9i5evRU2K
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
hrzFwnpIl2Cy9+s6qfuu5Y6KLfwxJWgfMi8auSKSsm/it0Eh4n9qODAYx85f
MryXnH4dk+ftgX3LmYqv6v85JpNppXB0p1aqhpu0p/91Rempy7koz06dpT13
HNmEtcWGTCPbML0q/99O3Z9tVb+m9lzMra/GqqwVO5b3ZZN+Mvy62JYVpO9Z
Gl07s6YzMmo4S9/qFI5LaOdzP1w+n/dq+p39rum0v2dUqy2xN8m/5PfKKO/z
fZLUfK6kj7R1/tWYrPoEdHJbh8vXjbwTqVk3MMh7Myo0mYE2w1dhZ3Qa/n6t
1OZdv3EPQRHH8FO3QMVeVTGZ4DKyiS1M6iaL8ll8e0yWXa8x7gQG469rKiZj
3rhDR3C9759Iq/Aj2YCVBPszT71BvkXu7A2ynVS2glEuaaaocqrIGtmQ1qrv
QfgJbKW2MYP9FA7OkvfFtixfO5n77Mo6UXtRWJdXereTPPMayKDnUNaCvcLB
wxyi6n21z0arK1LiJhVh3kf334XJVH1ZV9GzItvVJkje+R9+UUjIumGQ78Mn
s9Bx9CpYu/jgd/e14mfQ+NuzL9+WmHHN9nNV7g/3L/fMXwiTpahYTMNlJphs
qikme3EhQWq6uJcJ55YztmcdzryGIm/sb2A5pOsmyrWUOJWirxU8JXrXoCsr
qvpW0d9JpKvTKv+ErJq/IKOms1Fm1Wtq9W7SJ5KvRfdN5T2k2k/Se4XXDPdS
5+ul8PMUwY/2r8ZkHB9zcEOpuh6o1zsIkwL3IHJPPLYeSRX5rdtzoYLHWvmj
/5QNWLX1DLYfScLi1TFoPzIM1g39jDyjJjr4343J3od7GO/8+OOPJvGxokx+
Xs5fLFWqlPRVGzp0qPA6aIO5HmbO9Efr1i0NsTLGWu+Ll5VgsnePz4HJNBzG
WEnrMcav8zV5MtaJjY3FlStXBFfl5uZKTZkW2+L7Mx8+x7/4de18xmyM0RiL
cz1ZRkaGIYbGHCGc28jX5ntq/PnaNYuK0f43MJniQ2Kb044wmfeifbh42chv
nXG5AK6DQwmTjRFsdjzByH2WTnv/FNKPlVoxJnNTc7v0/MpFmd8ek8lebGUr
tV4p9jUkTvbXFTVORpjsOWGy68PHCn8B9w1LKmUtvcSk/y3zvqn2aJLGxS21
aWqvMTqWfbCy35ataOwto/pb2U5O0K7De3YZtX8Tn1uGJtutmv3K/XE5psDv
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
kp11JPf1us2HJclJp5ErsS82S2ohefAK4BxH5qthztBbtx+a1CXsjiVM1nuJ
yHDbUW9zfLwLk126dgcByw+jDt3XFJO9kfXzXOrRX4g/luvSn5J8P1fl+/mL
1ziZcAXD/LZKrjH31zH2SC+Jk32d+QUwmQlXrl5HGXGZcOcSPqnTdQEWRBzF
LTW/nGUj6lAK+k3djL6eG7H7mNGe2XWEdPCgELJ1fQU7nU7ini8vBD9xv4f7
95+I7s6+lI/bdx9D3wIi+uRFwmTz8UMtwmTehMmydbyLwoXPuYvM8RGJCyl6
THYLowMYkwUJ30gs2aiG8UbJ7WK55tpg5o18wvL9QpFvnqcIp/WaulF6SjGX
vvQrc9bn5urryfxKMNlXkvXPi8n0uEzL4+G+6J5oO3ql1IhrPUGev3iBxRuO
o0bHuajQZDq8Fx2g/V/R0SxDG/YloBH7xlgXEs75qcs8DCT5mbXiCNbsPE96
Oh1Hyb7IJr2rcYuyzXDweAZaDVuGck388CdjshQdJsu8KbE5BZOFYNP+BIMP
5MH95/BfHoManeZLbRv3cNBqxkR+4y8LZ0iN1rNQu8MseC3cjYwc49rhuhCu
32Sfg6G3WjHBZHpsxrirZcvmGDCgHyZPnoQpUzwxaNBANGvWRM1ZNGIgxkVV
qlSBjY2NSY8yLQZmntPIv2v8ilp/aCcnJ3h5eUnOm2bDFzbYL5qTcxFz584W
3Mh/m8ZLUoLJijb+KSZ7V4yL8xo1zMUcHHqeFo5ncc0XH8vH8LGFcTZyfiPH
vPh4/bnMJcLncm6i/lw9pivqM3+9OJmHro7WQ+3J4Y7yLfwxfu4uJGXkaa4o
nDifi7EztmBG8H5kXVLiWWzTMo9rne6Bwte9cM1RqZfVRjz3dVp1FIN8t8Aj
aK/ouAePtVq8l2QnJIsfinkTGOtlmGCyW/iNsN73lccRJjONk51JuSacz036
LoH/0oMGXkUejMVOJ16W+vMNu+MlZ3zdznMI33oGEdvOYum6OIyavoX08nzF
HnLUetyUYLJvOb8KJnMYL34H9o8yp9s1NW7F8dsztE+OnBaF8bO3EwZSXmdO
+plh0dJHqRJhp5khh3H7jjHmmnOtQPruDp62hfbnXdi0NwHXb5jWk9Xts1jy
ad7GZDfxB9mjXJPWcvjbmGzmskOoTTLafVIkLuviZMzpxT3Td0WnYMMeRb4j
d53H6u3nsGrrOazYfFbyYji/UrgXa074OI6PEkz2GecXjJPpv0enSTpuNrU2
luSb+ysN8tok/IYi34TjD5zMwiSSi8mBe3E8Xqm1YYy0cB3Zsh3monqHOViw
5pghr5/jaOy7X7g2lvR3lNR/7T2WSXan0edw5FQ2nMgO/oGwYH/m+NDlFx4+
nokOI1cRbvJFV7dInE+9ZvDjCSYjm9O5RyD6E0aM0cfJyHblmhqW7zWktzfs
TsD6XfEi3+Fbzsj0WrwP9fstVuqHamnci6rO1vPUqfVkJZjs68i6HpMt+2yY
7O0+0PV6L5SeHzd1/R7X7j5P+GcRGvRZJLULWo/SS9fvImBlNKq3my29n9uP
WIGQjcelDx7nLejrGPWD7ZNDJzKlzpj5nQd5R+F8spGrNCnrJibMVeJkjbie
7ABhMvVaHF+esSwatbosQLsRYdhxOFm3rl5L74m485dEf2/aFy8+Zv1zsK/N
d8lB2Db3N/7dxQSTFcYnz+cx30erVi3kp7GO7GcdH349NX+xghr7KiV4iydj
L21qrzEO49gY14/Z2tqiffv2CAoKEpz0PjzGg+37nTu3Y8iQPw140JzPowST
fdz4p5hMj6U07nuNx57zGjlOxjVlzMWhxbo4VsZ9x5irkbkZNT58DYvxT36d
sRfnIur7k/F5HAvT4mR67nwttlb8MZmuNprt1loTYNnQS/on7jicYuAnZp6u
xbRnc6+Pa6rNyv2SmE+jJtm4zCvHHLKaPyj/7kPMj4gRncV2Yc32c+j8WKk/
48E5MVEHFUxWoamfcHxw3rc2Ui7epH13Cb6zG4X6/ZeaxcnypN6gFuHACQE7
pC+TNhifLSU7ox3p3v90mw8nsmu5X1O9HkH45feFcOwyD5VazJA6dkOdvIE7
We9n1WOyiQZMxjZVqrp3J5lP2oukb2jJLPJMoimYjOyl2AqMydq+g+Pj0/I4
5HtmDhqy4awaeGOwXxTidTVlXHOzMOIoFqyKwU2V/+B8ylUMIbxl33IWGg8K
FS4bA+/cy9eSA8b9pTk3kWstmdcrRcfNxZisHtkJheUuMu8C8x5zD1PmcNxK
+7YBk129gxkhB4Xzru2YCKTq1gXHebnPQ0/3tfj590CS73mKfP8eRHMhyfxC
VG07W3LGNP/yx9ST/UqYbBVhsquEx3Ktya5SZVqT82Qb/dR/d3ZIUee3lqHi
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
ldqc0vWmotuENWSDGjEZy+/KLWdEPn8kO5G5P/YeSzeJI+w6lgGnngulx167
MSuRp+PJZxkOWh2LTqNWCb/NgbhMA+66f/8Zth9KxSCvzeg6fjXJ+gnk6fIX
U7JvYu7KoyT/KyRW7EjP0H5UGIZNj0Ifsi3Yd8scZdIT3YDJzOwbZ80P4Y1S
9Nm61PwDkeXr4a5lOeSTjOeQXOdaKXJ+pYw9LtHvmWUqIKU0y7YVfV9Wuu/P
Sp3fXo6Kw0xSP4+E0sbPJEF9PbOUJU6WLof55RqiQY1BKibz/jyYTMUp3P+g
UpsABEbE4M6dhyLbXH94kXT35by7EuNlPoJt+0n//hGKCs1nSh6tHpNdJNt1
1ooY2mMC4dAyAGP8t+P4hUsG3lweh09mw7HtPFjUdMdAn81Iumj0qXHOw/Sl
B9FsUIjYrmzDajkXt+8+lJzbruNW4be+izA95KDk62rj+s17CI48gU5jIsQv
4dglCG2Hr5K+1D0mrpP4Q2mpBZ6o09Waj82M/6Sekrv4R7WuOFq2JvJIhm/Q
ZPlWZFyZOWVIvi0V+WbZjle/M9blylR+TzS8/u3lrHhNKyTTzCAdHk+f4TIb
Z7Ss1ocwmcKzYtxfi4rLFGyhYHAFk7G+avxnCDbsTzDozAsp1ySfcTO9dk3V
lVzXzj3Hq5OOrPt7kNSOafzLnCu4autZ/Lf/UljX9ZDefMP9txnsnRcqJms5
dLn4Apg3RN9nnW2ZEdO2wLbpNOEyZW7Spyom49xFnyUHhNOxPtlHa7ieTOWo
4Wdi/sYpQXvRbMASNKNz2/6xDC0HhkpdZ6vhy9B44FLxN5dS/YhG7ppvh8ne
h830MbPCcBvjHL6+0ke6nuAtHx9fhIWFCX/i7NmzVft2BgIDA7F69WqJi3Dv
34/FYjzYBt+3bw9Gjx4BV9eGwg1Z2DOVYLKPH/8Uk2m5gvx9MlbiHEU97uLv
jDk+GC8xXwf3LeNeY3quNM5J5HgYn6flAGuDj+Pj+TzGXfys5jE3xn6M67Rc
SC1eV6xyFw02rTmnstJblyf73Yf5b0Wabp9l3PNU1S38WSwhW7Fck+nSu7PL
uAhEn8wS/ysPxl7cY3TeymOS88L7udZjiQfbBdujuRfvcpRvPA3Dp21F9qUC
k/fPJV3BNMJlkxfsxoU0oz5kvcY9ybiWZ/SMbZi17AhSdP1KOd6QSfgu6mAi
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
j8nCM6Lgqg9z35dgsg+PT8FkWgxK61Om9RHjHFQtZ5HxN2Mk5qnnnEY+h4/n
WjF+jT97xmuMuRhP8eTzePL/GcczZ77Wg4Gvr92X/8/XYAzI92P5ys/PF75O
rbZMu19xw2Q/mGEyA5eXozJ/6jpf8g/P095ZcO+RcNnfpXnt+l3sPJSEzqRT
xAaoMk44jzvS75F74nGZ3uee9syjwrWt9wgTnUq4JL1BOd7FfUpv0F6/g35n
XqLSdK/6PQKxcusZ5JLdyTz5f716Lb6qQ3FZmL7kIBaT/mOblnEeb85vSOdy
LGxUwHbJ1Wo+ZDnpyOO4QHqTr/3s6XO8UeNyzOXFMQzO/9pLeran2zqUpefV
/k7Flpmii4+Z2vyl6L3q9fuiR9PqGNPSEiNaWGNYi7IY1rIshjS3Qv/GpeDW
zh6Ro7oiY14A7oWtwb2Va3F3RQTNVSXzI+ad5avwcFUEnq5Zg/SFYQgYuQCO
zX3U78gYu7R4K/+uiPs8X49rsOgav/QOQghhefbZK9j9sfRkvpJ3B+G0ZzI3
PteifFdhBErV9UCbUSsRvv2s8I4+oD2dcT5P5tJPz7kt/fA4nsD9Qflae46m
o83IMFlr1TrMxdzwY5Kfy/L95u/X4qNgHpF5q2Iwc9lh6RXKuExizfTv0cPn
CIyIRcWmM+DA56+METuYfQ9sO2v9/vh4tgN434+NvwS3+Xsk/sHxa+FHd5oE
U54PfczRSz5T2/r90KGxI8a2LIPRNIc1J/luRnLe3Bp//NcSY1pXQOigljjn
74MC+q4eRETi3opwmXdlfnsZKk7zTpjyudyjz4qn6IKwCDyOWI2rS1cgfFIQ
mrSfrmCyOv8wfmCGyZjng9eMbbOZwrPIMldA8s2yzfM6yQ/3A2kxdJnUEn5f
Y6zId6fxEWJbMvZnvK/1JWPMn5R5C7HnL+Mc2b3cz+8OYf+9senSL5dzDer2
XoTgjaekL8Qz1T/BvryzCZcxM/QgvBfvw4kLuSK3Wr4Ec9eNnbNbuAx+bBUg
z3r0bI7Eru89fGLMU3nD9ccvcZP0Oueo+a+IhmP3IAV31XFX88+NvTYtDHXC
LPfe8hk71P8d3V1/wrCmNhhFOnt4c0W2hzQtgyHNrODWvhIihndA8mx/3F2+
Gg9Wrafva618l/dWrKRJP8PClZ/0Xd4rkXlFzulzuKN+FvfCVuEx6fCCZSux
xXsJOnWdqcShHJQcU4si1ZTp/Gj63Ajhz3VD6bpT0MNtDQ6fyDL0SLh3/4kh
DsZ5Olv2JaFx36UoRXqQOZCYG+mZ9j7ZBHGkr4PWxmEO6V/uyXdD509m24O5
Q1sPC5N6ssG+UYjX5epw/SP3iAzbckZ80bsJg91Uz+ccXe5fErHzgvQuazEk
FDsOJ0kehjZYV++nZw/dchaBZLespWc7cjpb6uICwqJRq9sC+Ts/jd/j82Oy
wmvE9L87w8WlgfQD69q1s/xkTvx+/fpi7tw5CA5eSrhsiGAeB4fqklfYrl1b
eHt7C57KyMgUO9s8N+1dg+1sjrGxTb527VqMGjUKTZo0/uheZCWY7OPGP8Vk
Wv4ix680Lg/+XDmWpeEoxjmMlfg1fo9xutbPjHEUYzmejOFSU1Pl/3wM83fw
Nfn/Fy5cEGzG19HiYIzvNC4Rfp//Dv2zFTdMVjiPnVZLq3D9WLv6ij6ZFrwP
q7efoXkWa3acxxLCR0O8N6JmxznQepWyrWvbzF9yGAPXHJWepYdOZWAr6SKu
hxnqF4VuE1ZjUuAerCI9tDLqDDwX7iVdGQgLzpVs6I2u9P4i0pEHaK8/fj5H
9C3XJLBt3GzwMjp3r+hOzseJPZONULKnW41YActfvYTH45fei6UXKb++k2yL
6FOZOErH7TuWJnz480n3/jF1o9S4iR9K9my1nsxJ399GZ/dL3bw3yjT8Ew4d
HeHSxwoufa3QUKY16ve0xE+df0DboT9iaZg7cpNO4s2d+3hz7wH+KriDv0jP
lMyPmPm38eb+XeDJA1zJuIQgkjnmhRGurdpanfM/4V5U7QG21RwV/zrzBfC+
HhhxTGoLhG+bfgatPoa+HpGo0nqW2H1cn8PncJ4uYyzOedxyIFF6j+88lIJl
G09i4oK96O+1GSP8t2Mh7dGRtE78lhxE/T6LJObM8uY6MESw14HYNJxMyEH0
6SzMDz8q1+TcyHGzt0vNOccWjp/PRdT+JAyYshFluHaGsNV/ugdi6LQtWExr
ZPM+uv+JTBw7e1Fsh6h9CZhPf8eQGVvxC9kh1q7TVNnl3NxJuroEszwvR8WH
XabhIFRvXx8Ne9vApZ8lGvYpQ/+3pmkF5x6l0GyQLfwWDMS5k3vwIj+fCcvw
pqAAf98u+PayUwzna/lc6PMhueb5+vYdvOY+Ko/u4f6Vq9i48RiaDwgWvCA2
6+fCZDwdFZzHNVdN/wzB7LAjiFB7gbCvgWtxh5EcVWtH+ttpovA6sZzYtvRH
V8Jl81cexQ6S6/2xGaJvOR4wJmAn+k+Nwrg5u0S+19J1uA+UY49AOdfa1Ud8
FgvovQN0HvMscD7tbFor/x0Ugl9pHUwhfb8nJhUn4y9Jj6bQzWfQdnQE2e1T
JP/RoeNcDPLejHm0JpjbfP/xdLKbc8hOzaK1kCD35Xgx57vbNJmh7nsKL59m
f7Ldb2HY39if4yVr34r0d9W2DVGvR3nS4Zb4jeSaZfuXHpakw8ug3fBqmBc6
BukXjuJVfgHpokf4i/Q4f5d/386nSd9rgTpv35Hv9lvLWPGYBYbP4u87/Lnd
w8ub+di/7zx6jFkFK9ZdVceJ/i46JvMw1lk4aTXfvF4mSF2wSz+l95fWR1U/
+DWuua1MNskP1cejcgt/+AYfQq6ubpGx090HT3Dr9gM8pONfiA9Crc34+430
/+F6Xtb7HceGYz/p+7//Ng06X7p6V9YK14xxzE4/bhY8gtvcPfiZ9DbbS2yL
aHE6bTD24xiwFh/m68eczUFjsne4n6bk8hQjTGbOu6hhGc5Z5JhYv359EBg4
H0uWLIK//3SsXLnS0CPYw8NDjuf4GcfSGP80bdoEAwcOxKxZs7BhwwayyxV+
c85dM8ZHHhr+X0A2VXb2RbLZjwkWmzbND7179yY82FDFY46fhMdKMFnh43Px
LvJk7M04jKdW16X1hNb48Pk75u+fcRbHzxhj8fGMrw4fPiw5kPy7xqWv8Xlw
PE2rKePrMk8n4zKNp5GPZUxV1PjY18dk+mn2nuNk2dtsCJc5dp0nsX/uecQ1
4b/2WYzKrfxVXKPGHmhftiC9y8fX6xko/UJ7TFqL1mRv/tJ7ofSFZt7v6u3n
wqV/iEzHrgtg01iLV00WfrsGfZegO9nJzJnQa1Ik6vdaCJtGPsJf7tB5HjqO
C5d6274e64Vb0ZZ0rdRQ1JooOSqV6PeGhM06jg5HL7Kr+9BxbGewXeBIWIx7
SlrWm2r0pRr6rhb2mWgY1Qel6o+BXeumcO5ph/r9rFC/fxma1nDuVQY1CZO1
GlUNSzf54tKNrA8Lesl477iW/1D6Jv38+0IVk00yw2T6mqgiYjLN71pnksh3
xeYzhGfbZYAi24ybWF4rkXyX1uRb4xwnObV28YZjtwWCo7q7rUa70SvRoN9i
VGkTgHKN/SQH7Jdei0jelsnz2zTRYiGTCPd4SU+mbnQe98pl2eR1wH5YXkvc
I6r1iDB5r9+USPr/Cun7x7LK/KNc216R1hFz3rcaFiZ8B33puB5u64Qf7D/d
59M68xO+0VJ11b/5rbpRM0yr8v2UJvmu0Kotfur5o8h2gwFkq/a1Qr2+ZeD4
eyk0HmIL32XDcCHrJP5C0XL9S4bpYH6BzYS3WwwJUzGZ++fFZJrvgWZZkkmW
V5cBS0m+g0WHs/7+se1sWJJOVWR7slp3OFn0tzOth3ajVgmvTbvRq1C35yLY
t5gptumP7WbL+mhC12H+Db7+D47ugu3KNfZBfdK93UkemU/pd/e19PtCWDfy
heWv3qjdeT46jY0g+d5M8r0RTQcvh734PSaJnc11jbwWHLsvQNMhoehO8t2f
9gHu4849/P7TLQiVms8U/x3H9fQ5uRYmNqjOtyZ5c16wqOcGm+bt8VMP1t+W
+LUf6W+azj1Lkw63JP1dA/PWeiDzSgreX8VQMj40WDscOp2LnrR/WzHv8o9a
3/qici9Ogane1jCZO76v6Y6qbeYQzt8nWOiN7kvjHBt+jfnrS3EeT7Xx0qux
9bAViNh2huzMuybPy/k8zEkWey4Xpy5clrwHxmRnEi6hL/crcZ0uPfxmLT+M
6zdNz827+QBhUWcwifv3HU03eY/5RwKWR+NH2ht4Mr/jgWNpdP/7eNfIp71v
3a541OUe19xbsk7xwGQfrjFzltmvX29s3LgeiYkJNONx+fIl3LlzVzj1goOD
0a1rFzmH42Q8GUcxz2KrVi3p3H7w9PTEokULsXp1hPAnbtiwXq7HPyMj1wnG
mzdvLtzd3dG3b2/hu+caNSMe+ziOxRJM9nHjc/aM1nPi63uNMWYSzkU1h5Vx
GcfTNAzE92d+Do6ZMb5nnMXPw3iNeWC03FfOa+QYGvOJ6O+h5U+a83oUK97F
t/CHXv/p8pocdXhLcvQVX5eFAYdNNvY303rj1HKXGlzuS8P9Qpmzjvdsxbel
xOLlOjwddfEozrMi27uU+Oy9SQ/6Sj4k4yzhguTaXme2a6eSHTCN3vNTOe0n
G2MfDupx9NxsA7AtYN3ID2UaeKnXcVeO0fi6JG5glrNu4GCcYvzd0UvuXc61
Nxw71oFrHys07msJ197WaNDDEk7tf0DHYVURut4Pl/Iyv+US+lcMrtkKWhOH
umQbavWNb2GyT7ZXdb5XjXtTk29nT3VqeU+T1b1N81Oo9Vl0Hss1y6nS526y
iWwp68RTya1yVHstSO9PTYa9pTeDIsNK3YDW+5Zjvors+xBOmmJ8XjUPkdcR
fyYs+1Yu3OPBR64na4Gu/32NccoxTvqcF3PORd2ad1JsHf6by7r2Qa2O/4FL
L2v8t29p+mkFl56Ey7qWQotBFTEjeBji04/j9Zu3a4tKxsePx8+YczYJzQZ/
GUxmITl8kwx6UeGX1ef1ecCUO16Vgzp6+fYiuWIZ9FJkT/T3BN1eMFnR31qO
oOQEK34xKzrPhrCaYCdnxf+h5VMq8j1N+jiwzFpofcVYfzP/juwR7uJT4P2j
bKPposdLc//z2u5ipxqew0QP6OMqnmY8QF7iV7Nq2A+OHRzQiOTatXcZNOpt
hfrdS+PX7pboMLwGglZ7IvNyCv4qQWX/aHCt+MFTOegxMVJ467U4WdEwWWF+
YvX7raPICteEM66fsewwNu1PwpZDqdhKc+PeRPiHHsHPPRdLDFrWF9kg5Zv4
oePoMOEj3R2bhkNnLuLI2RxsOpAEv5BDwj06avo2LNt0GtuPpGJu+FE0G7pc
WQckq5yrwz3UD5zMxJFzOXJ+8ObT6O2xHg37L8W4OTuxJy4dh+W6F7HlSLL4
llnXs01SqdUs4YkOpOtuPZRMuPUios9domNzsfdEltR9BCw/gh4T1qBCs5mq
L7L41JN9KH7GWKZ16xaYNs1X4hx6rnK2sxmnrVu3BlOmeKBLl05yP8ZSGj77
ue7PaNy4Mdq1ayPYrWfPHujdu6dhcl0an9e6dSu4uroIhlJw3U8mPapLMNnn
G5+rZ7QWm9L3kNZ4NlhWOC7Kg/0jnJPKeYuMf/h9zj/k+rP/Y+++gy2rqvyB
/zFVVE1VV1EURVFaWo6WOgooMnQPwiiIggEdEyCShiwSlKDQOdDkAVQaOmdy
N0FFsgGUKCBRcmpAgsLIOAg/grB/57PvXe+dd/u+0N2v+93X7EUd+r57z9ln
h++Ke+29YWjZsmV5LizyIe0PYs1YkDkzeY+xli38rvq/7T4PvU/W0x9r5HuE
vByX45YjwmcZ1dTp2TYO3drMJfPOUTU52zwfJ3TwOps1/LSc8z9ydJfeztfI
5t5C9X31mmt9un7P5YzttitG1r7frFlWM3elkafSlGHxXNgCPcqI+5tt77En
Xat/WrPhq8/rf/qwtPFXP5N1+faVT7Zd9e9nsk+2TtrxoI+mOecdk5546sGh
Yp+1hp76k/Obf5dzPhp4GN3IfanN+axYHky7GESzrC5MBj7Djh1b44WYm2ti
f/NG/KDhK47tzqGKtW/59zFNzI9p+nQT2uA37OWxtRhIDb8jaz5d5q/4rclP
m4+u8cXYnvzSA8+tvmzNfo01+NW1/tYHpY/+52fT1ru/L22/1/rZdm34ZOul
HQ74YDp+5iHpjvtuqOTmwHL+C7Una7WWXHF3ZePNX03zZA2frCsmEJgbWcNH
V8whzpeY2MTfmJ5ys4e8Dvw24ySbj2najE2cjYzYQ/d9jWcixje2Vpe6Dmji
tYuPanXYbFxT74zOMYeu8rIM6JbbI0ZNyFdXfLDrrPQmvkeaPz40few/P5O2
3vV9lQzfIG1b88l2PHSTNO2s8enhJ+5N/3irxBxWhd5866109S2PpF1Hn5/P
mLN//YqfsTWuGVsY3zWmYgAjuvIWGvmq4rOb7vTj9Kl9ZlR+0ay0zX6z06f2
mpm/ExvolqNjMk9Yj+HcsG2/Mzt98dD5+QzUrfeZmTb+xql5f8UPfPGE9O+7
npE+s//cNHL3M9P7vnRiI+dAjkTlW42sfvvCwfPTV49YlHb43vz0yb2np/d/
+aS04bbHpo9845T0uQNnVd8vSF85fGH1jlnpw189pXq+EXfLeUfq+60f53p+
8ZCF6SvfX1zdvzB9rvItzY1t/I3T0ns+d2zeF3rl9sAfWp/Md3vssUe2Y+tk
D72XXvpruv/+P1b2/dJ05JGHV/7X55r7I47qcX3yk7XPW27RNQfXel/3793r
2opPNrg0mPNk9Sv8MXmI9k2MfTYbvvvdea7LHJc5MevIYg7txRdfTDfddFNX
GXIZPR97LJor83zsG7Kie94PpU82YjkbdUKX3Zb1ee2c2S5bNGzGiLGO6i6v
5xqsuh1Qi2/l38a02AP1PKrxNV09ulue1s8F3XxczU6IdUZjm/HWkN+N9/fw
IWPt2KhWe3VCSz/UzlHJa8zC9ifXRqcPfOGrlQ7/QOWPbZB9sm0qn2zkN/85
ffPgjdJsPtmTxSdbVXrqmf/Ja7rkUHXbduPS8r7FivhjNdtvOayObeKyhvEe
fnrMKdT8uK56ja3NOYxL9VywxlqulrMWuny6ms1aP3etyyer2aj19tbL37zb
7+vBYz36KM53q/N7K99Nzte6Wx2Z3v/Fb6Qtd9kobVf5Y9vtuUH6XHX9xy7r
pi8f8IGmT3Zj8clWkexzsfSKu9KXKjts9fhkgff6nHBtXnhUTabW1812xQ66
54+7YhX1/RYiVtAVM+i2m5fzqUbWcdjwrXrGMmq8EfUa2Y1x93btjzuqxis9
9E58rv7dMuaWQyc0fx85tbJzj0of/MI30yd33jh9FrYrGf7pyieT67DToRun
aYvHpocfvyfHanunkrfbH9nz8JpbHs651V3zZCu8f+C4nphrl5e6RdgXjbjy
us2chjwf3CPuUJObmzdkNT9rva0aay7Xhc2R3djk+62b49STGrG/Lsw3fP91
t5qU53vzs5FD27Rz1MH38ica+ePjuzEdMY5m+fm+rSbmOWD3jmjuz9OYHwt7
prXtneWT1X0z+99b1zVu3Pi8p0KdrPe56aYbK3t2Xpo0aULaffdd873hb0X+
I5/IvFfMnS1//VttH4+Vz1MsPtnAaHX5ZPV9FvUzfMhBtJfitdde25V3KD/R
vh7OJ0Puk8dojkydlMFHi7Vo5tPkOMb+IcPWJ+taQzuuRQ7UZGIP/6vVrqvr
9za2czMO3y1ru/PBRiwnc2rPjqq/uyW23+U3tdqb9Xu7yx2xnG3d+s7wxybW
2j2xWe+JqbFf9fj07s/uWflgI9Nnd3932n6vDbI+zz7ZIZVPdn6ZJxsM4pOd
zieznmzk2BafbHw3NlZIv9d98Rp2W8+cbYvLbrtgRA9sx3et2B9fiznE/tzh
/7TDbC/xgVG1cuo82PbM95Z821E1TLfsXzOiB+9O7OJP37/rs3unzb7xybTt
7u9J2++5fo49bNXlkx1cfLJBID7ZhVfcuZp9slZc1PLSW+VkD36q3xext1bZ
2v2untivX1FWi1ztKm9iNzbjnT3k/YSedVtOxjf5dFRLvbZsqX88M7KxhnjD
bQ5Im359izwHvH2F7a0rn0xcbadD+GRj0sOP3d2PT1aoP/rHW2+nX1Y+2e6r
5JPVbZMYx4lpOXxnX2d83geqK84V+QOjWuRc9r0mdPlGORdczvlmEUOLPJuI
546tYTJ8OnmTYxs5kZ8Y3R2XGzmhK9aWc3CbV9ecbsjfrnhaY5+pdT5xVOPy
uSuGXOfT1vhx5/lkMU9mzoqvZS3YXXfdmfcil2smL82ZU2eeeWbacccd814g
7Z5vnXcbyLX6fLKDi0+WVp9PFpe9Ouz/wo+Cl9tvvz37Yd4X+zH25pPFWjH1
k/9ofsy//o79PAarngP3ySZWPlkz9rPC68mG+qrbhy2+YKxRWGl5tBqu7JvJ
7zo0feTLX6h0+b+kL+y9ftpm9/XSqG+u01xPNiU98XTxyVaV+GRnVD7ZlnWf
LPbHrNtqK4SN1YmjVv+qXXyjE3DczXMjuuzimu0+akpa79PfSx/5yvbp09/+
QLZZP1fzyU6YcVC6s+QurjLxyZZceVf64mrzyVYvfnp+1xqPaOWHoa7zhJpd
bS74qPShL3++ktvv6fLJtt618skO3iSdsWhcevjxu0vu4ioSn+yamyufbHTl
k21V+WQfjfVkq2NsJ9TmVptXy/mivd9fm6sd1XKN7PYFe5wbtNycV+RJtNaj
Vm47LNbmgpevx+Dw6or5ZCO7fLJW/6jVf2rny7jsRe8cspkzp1f+17Q0adLE
NH36mXl9j7mM4447rvLHtsnzXSt6nvOauBo+WWMO7pBDDql8sj8ONSsNOa1u
nyz8HbmK9lUMf4rvw9/ik9m3I/bxcF4CLPHJYr2Yz543N+b+mIcb7Dr25pOd
fNKJ6cRB2eOjE642ervrXJk2cw9DqtcbMV35i+/d7tuVnfrR9EV7hu+xXhq5
4zrNeTI+2QP9oLxQf7R6fLI1gZFunPbU451S125buWuNW9f8uM9TK5v16PQv
n98pbbHzxjl3cbs9109bfWvdtAOfbObB6a4yT7bKNHx9ssDQhDZzV4NpT64m
3I+cksQe3vv5XdKWu8hffFfaZtd1q2v9tGPlk01bPC49VObJVpnWqE+2mq8R
Pf6unadS2wOqI3VRXz7Zhr3PkznPeaDzYq1/b7fdtmnnnXdM+++/b/rWt3bM
Ppp5s5NPPinNmTMnHXnkkfkMs9gjcah9sNbLPF+3T1bmydCa8Mla9+GIz7F/
Ph/MPvf2/nDWmNzG1nmwuH+wfbF3nk/WRgYuJ+taY7BDdEX+18gJOf9l82/+
e9p+r3dln2xU5ZN9o/LJZllPVnyyVabh5ZPV4gW1+Gz3Xo3jOscnaxc/rucs
N8/Xfde2+6VNv75V+oz83Mons57sS9knOyTdXXyyVabh7ZNNSO1zGie0+GlD
Xcfuqys+0jyrbINtvps2+dpn0ta7vTd9ZrcR1b/r5TyH0xePLT7ZINDa5JN1
X937fvW0UTpJF9WvlfXJ+s9f7C9vMPb74NvwwZwhfcAB+6ddd90lfe5z23St
HRtqH6x3n6ysJwtaEz5Zq1/V6guZ+7LurH42WTtfbKh8spy7eELlk/2g8sl2
auYuDmufrCXfq4fd2CH+WF0uj7J+V37X59PWu36gslvXS1tUPtmOB2+c5pw3
NS17qvhkq0rDxyfrLW7QWq8Os1O77OnW+k3O13qfOjJ9eIcd0qcqfMtd/NS3
RzRyF6cfnO76Y8ldXFUavj5Z4L3Oi634rvNEJ2C+Xp/G2uB1tzw6vf/zO6Wt
diG/K5+skuHfPJRPNibv8VFyF1eN1hqfrHUte4+1FZ2mi5bH/UByFzfccMP0
wQ9+oMd6sr58rv79se79ESOnUbn282hdR9ZpV/ceIyNzDmbxyRo+GX/I2q3V
7ZP15at5v3OgYw1Z+Ent/KaVORN6ID5Z5EvWfbLjTzgunXjS8WuRT9aQZ11n
6UTsaTmfbKjrGVdjP4R1t/pheu/2307/vvMn0raVPv/kTnyyjZo+2f1DzUbD
noaTT9Y486mdT9Zufc1Q47d5jRrXxi9r4tv5utXn9263W4XvTdJn9rRfePhk
hxSfbBBo2Ptkzf0aGnPBrft61L/rBMyPq+mWwP+ktOE2+6Z/3+njaZvd1s0+
2Y7FJxs0Wrt8skYMYsQWzT0/63tA95gn64D6tvDqgH2yD30w+yEDnScbyDxa
/XPMPw3GGWKr1yf7ZHMf/jJPFiRf0NwUfyjOFFsdV5zxHOvI6p9bf4/v6+ec
xd+t558N1hXzb3zCefPmpVNOOaXhkx1f+WQnVj5Zda0duYux735tf6N2e34M
eT1DRk/I+3ep3wbbHJg+9vWtK52+QfbJvnnwRxt74T9dfLJVpeHjk3Xrv56Y
Hdetw5t7KY9Yzv8ZIvx2nZPekn8Tubl5X3znvR+YPv61T+X8roZP9v6mT1Zy
F1eVhr9P1vp3p+7xUatfPady5JR8VtkmX/1M2upbG+bcxZ0O+WhzL/yyx8eq
0lrjk2W8jO22UZrx4hGtZ+8MOc7b131ge3w05sk22+wTPeaJIocvLt+1+77d
1e7egT47lJe5wn/bfNOqLzZNBx54QN5b4p1OzmC2f8aSJUuyP7KmLrmSA/kt
fLT6761/D8YVfiDfdO7cuem///u/G7mL1cUnO/6E49NBdZ9s2O672Gpb1/db
nNAlAztG5mWfrLJZR05M633q8PThL3+l0unvS5+Uu3joRxt74Zf1ZKtMw8on
67HPfPg3cZbS+BT5Uiu2d//q5LnWdelNezrO3B3Z8MnW2+rI9MEvfi1tuctH
0qe+bY+P96XjZ5S98AeDhq9PVsdRYH3C8vt9dMw+H60xvuaZJhW+5TrIX9z8
6x9Kn9l13bQzn2zR+PTQsuKTrSqtXT5Za4y4bqPEnh8dZKPU6t7ferINm+vJ
3v/+f0mbbLJJ9kn4Zp/4RMMviX/j80D/js/1313OL3P19vtQX5tu+rGqHzZK
G2/80bTvvvvkvdXf6SR30X6I5omc37wmLuvFWv+OayDfr47Lmja+qbky82Qn
nnhimjp1amOe7KQT1iKfLGKYIdfa5Lx0mrwzjzByShqx5Zj03u13S5t+/WNp
1Df/Oe38vQ/nfRcfLz7ZKtPw8slaYwux3iDWRtbxPtT4bdNvo8KHbO6Pn3lx
YmOvj8/um/7tm/+W9/jY4Tv/kk6YdVC64/7ik60qDVefbMQWtb1ruva1mdBz
D/KOiqO1rAPaYkKKMyfZqPZq2vjLm1U+2XrpW4d+JJ2+aFx6qMyTrTKtVT7Z
qHG1c9Fb8xZrMrQj5oV71r3febL110/rV9f73ve+9MktP5l22GGH9IUvbJ+2
2+5zabvtt8v7Jrp8zt9V1/a1z3Hfclcvv7Urr+3zQ3Vtt23ek8S6tyOOOCKf
i/VOJ+eB8U1///vf57PD1tTlvDJX/bvbbrttud981+771VGfO++8M59/Zr7s
xz/+cTr22GOra+padD7ZhNTlg8VZHcvJuZpsHPK61uoxakqWc/bv+vAO/5E2
+9q66Vvf+1CafcGk4pMNAg0fn6yR29LzPOq6/Vfzz4a8rk2besta/llXvmKj
jt05OXhyalrv04enjb66dfrkzuunL/PJZhefbDBouPpkbXMSe5wLVefNzsB8
N/YD9+NznsOICvvrbXVE+sDnt03/scu7087f+2hjPVnZd3GVaa3xyeKc6JG1
PO8e6xJb9/ropDb27ZNtsMH6ab311s3ryfhjhx56aM7HcobY5MmT0pQpk9Mx
x0zJl89xtf49eXJ8ntK8JteuKS33tbuncy51dKbaxIkT08KFC9PTTz891Kw0
5OSs5hdffDH9+c9/Ti+88MJqu5w71vp3XK3f9Xff6rr4p/6V0yqX05qyqRU/
LL+ebPj6ZOtuOaHSi+Orf5ux1ZF1nV+3cbv3oR1KGddtf1d1GXlMVfcfpPdt
9+X0sS9vmL516IfT3AsmpyeeKmdGryrxyaad9bu0xW5ndJ/N2ak+WS3XtjGP
0G37+bzeVhXOu/YBGWqeCz5qtR9q8xtN/2ydyiezP90HvvjVtPk33pu+vP/7
04mzvpvuvO+m4pOtIg1fn6w7zzX+HlFhZb0t+Df2hqnL6E6wURt1aPBlTV6M
mpTzHaz5fPe2X6vw/a/5zOgzz/pheuixu8o82SrSW282fLLdKp9sg+HqkzXn
fxsyvGGj9Jwj7pxYW2/Yb/XJ1mv6ZBtW/tj6662XfbLNNtssHXXUUXkfhwce
eCDPidx2263p9ttvq80T3NZ27iDmKGKeov29t+Wr93tu65ir3p4HH3yw65zi
dzq9/fbb+Vrd72j3zvr37erR7r7VTX/729/ynNmCBQvSccfKXzw2HXf8cZVP
dlwtd3F8B/tkbfR0M6a64TaT08ZfnZo+8Y1j03s+e0yjDSMjZl/3yYa6DVH3
2Ad6QiN/Uf7L1rumD3/+Q/nM0XmVT/Zk2Qt/lam9T9bXvoZDiIlRY7tipV25
XRWG19lsTMWbE9LHKnxv9tVj03u3ndTETWuda/GGHuvSVhcvBj+2ec+o2jVy
cp4ze/e2+6aNvrxp+tJ+H0onzTww3VV8slUmPtnSYeWT1e3Q8Y351ZFs1XHp
X784OW3+9ePSh3c4tvp7UkMXjZqYOoNHwydr1GVEPb7HL2Nv/8d/pY/ssGX6
5kGbpplnH5EefpxP9tZQQ2RYU/hku3b5ZEc282CGGsdNGTiqnQysxYNHNewp
MYYPf+mYNGrH49IHvmCNbXdeQfceH+O7yx3yuHE7nvV5Uo4Lrrfp3tknW7/y
xfhj1pHtv//+eb0QOzPojTfeyHPF/V3uW5F7B3JfJ12FCvVG5sycl3bGGdPS
CSccl6ZOPTYdlH2yyZXdNzGts/mEDvHJesnfj9j8lo046zqbjcu2yEb/eWza
5dBT04E/PD1tvdvJOdYauQIjunIExndYPKqp10dOquo4qarzgZW9PTJ99cCR
lU82KT359B+HGi7Dnp565q/p9LP5ZNMac8Cbj23JEemUMxKac6ej6nMHE3Kd
1/nE6MpOnZy+dUiF7yN/kj6724lp/YpXc3u69kWYkJbzk1r37R6qq2m32Ovj
/dtvm76430bpxFnfSXeWPT5WmV5++bV04RV3py99d37n+GT1cyF7nBHZzW/Z
p8n++oQsp9+3/aS044GnpIOOOj19Ye+T03u2mVzhvpmL3hW/ajnLrPXc8tW5
9019nXLr3lHx+78fnN633Zcq+b1FmnXuEemRJ/rzydZcPHa40ptvvpWuuunh
9O2jK5/sU5VPttERjfy/ToixjqrL2zo+Yw44chXHp/d+bkr6xndOSQePrvC9
10np3dtObrPOYvzqxfAqY9/fTZ/s43un9d+3aVp3xD+nd797w/SVr3w5nX32
2dm+LFSo0MDJvNxTTz2dLv3FL9Jpp56Spk45Jh105LE9fbJRcVbSEF9bjm+u
Wen+bjndX9mlG2w9qdLjJ6WpJ85M0348L+1zxE/SB754TCP+NDL2Ee/274a8
XW39zamVX3Zk2uDTn01fOuBT2Sd76k9lr55Vpaf+1PTJdp/W0I9NHThii546
PXIFhw4PYXdG/L1hq8L3+ltOSNvucVKacPyMdMa0eem7R03LMdcRuT2tZ+42
ry0ndgzeG/WYlK93bfO1tN0+/5ZOkLt4//WVzfX6UENkWFPMk33poHm5r9fZ
9OgOGe+wL7vnfcNeHbFFI44Wa2zWrT5vsdPxafwxM9KZZ8xPB4+Znjb9+vHN
vTsj16F7rqzxnjreu/esG9FV/mC3aULz3TWfssU+X2fzIyp875K+sN92acY5
o9Mjy+5M/3i7txj526n4ZP3TW5VPdnXlk+3a5ZP9IGNiqOX1iMBC00bpPley
tv6xwqMcB7mKoyp8jz5meiW/56bvjz2jwvdxDQxt3iLzu3A++BhesSv4ql6v
xt/sqnU/vkda790bVz7ZiLT55pul0047rbIrnxpquBQqNIyoW/6/9dZb6f4H
HkjnnHN2Oum4E9J+h05MI78ml39MWmfj0Vmvr/OJDrg2a16fGN28js5x4Px5
0zGNmHAlnzf6yrHpu0efnhbOXpjOmb8oTTl+Ztp2T3MJDRul+/Ls2O6yhvLa
9KjG9Ymjmu2p9M0mP0z/vOkOaatdt0/Tz5qanny6+GSrSk8+/T/pRwuvS5vt
/KOqf49qXIHvwAQsDTkmAg/q0cD2OhsflX2uTb5yXDrgB9PSmWfOT+ctXpxO
OGV2+tI+J6cNt57YrH+NPzLfVJ83G5vtgfx5qLGOhzcdV12VHbX5Lmnkjlun
SdMOTXfcd23xyVaR/u/lV9N5l92Rttt/VqOvP3LE0I/3J0bXeKuJ5+X4K/TM
6PT+7aek3Q/9SZo2bX46f9HZ6YRT56f/PPC09O7PTW48+/Gj2zw/pvtq6oJG
eSFTV0ObetRhdMv7x+Q5nHVH7pm22OUb6ZR5k9PDy/6Q3n77tT5Gr/hk/RGf
7KobH0rfOvKstH6l6//pg4dVeOgNU2tarv2w8sMrGb15E4+bjq7Ju9Fdlzng
XQ45Lf248sfOWbA4nfqjeelrB5yaNtxmUk/8xPNdtsEQ83C2laKfa39r94d3
Tv+8/ofSRz70oXT4YYelO+64Y6ihUqjQMKRuHfDS3/433XTzjWnWrJlp30Mn
pM2+MjqtW8mXdT5S8dvG1fXxIb7Cfv54Uz7Ry5sc3fy++n2jxj0bbj2hsk9P
ScedPCfr83MXLkrTz5iXDvjh6elfvzw1/TMZstFR2b5tlDGmUeZQt6/eTnXb
eFxev/xPH94pffyr30qnzTs1LXuq7J+6qrTs6RfTafOvTZt+s/LJPlr190eO
bGJH//8grfOxHzQ/DzUOmnwX/8LsR45OG241MX1l31PSsSfNTgvnLkrnLlqc
Zsycnw4ff2ba9D+Pr56t9OTGRzfK2PQHzbJaeGWo24bf1FG8Z6O90wc+v2M6
+pSjK5/s1+kfb9Vt1jJ3sKL0fy//v3TupX9In9tnRu7rf/rQYUM7zh9vYi5j
7+ieWGzFe3WNGDUmbbPHCWnSCTPT3DkLK3yflWbMWpi+P3F6GrnTcWnEyDEN
vg1d0PX80U1MHVXTFau7bS3t6Grj6PzvP324ki0f+07a+D/3TlOnn5wefvwP
1Qi9Whutgu8VJbmLV974YNr5iEVpvc3HpH9636EN+W0sOkqPN+VbxsJReT6P
HF9/i3Hp07uemMZOnZEWzK3wvfCsNK+S44dNmJ7+7ZvHp3XNpW1ELh7dkPtZ
H7Vgfah4Ofhqk8D/6Mb1sSPSP71/x7Tuez6edt1ll3TN1VeXPSwKFVopqs2V
vf1Weu65Z9MVV12Vjpr847T1tyan924zMW34qWMqP+eY9K5tXFOG6PLuqc16
VH9vOyX/3XVV32/4qSnpPZ+dmv5jt5PS4ZX+njljQTp7weK0aN6idNb8xdlH
22HfU9MHtj82l7dhs8x3bXPsELetZxtzO/Pn46o2TU7rjzo0bfntI9O0xQvT
k396ZAixsnbQ08/+Nc087/r02cpmtZeydeIbbh1jMLl5DTUWAg+NOm24dXV9
emp677bHpk/ufHL63tjpacaZC9KiuQ18L5i3MJ3647lp5wN/kj70hePTuz9b
YWfbYxrPak8X/07tIKzjwSlp/a1+mDb5+pFp0rST070PX1/Jofo8WbFX+6ee
dv3Lr7yWLrnqrrTj9xekd+vfLSYM+Th3X1NbrgYWN8zXMem9lfze9BvHpQOO
Pj1NnzEv43rR/EXZdj351Dlpt+/9KG3y1eOqdsFOyMl4V5RZf2/r58G86u+r
y43udm6wJb00IW3x7fHppLlz02PL7kk9fbJCfdPyPuubb76dfn3rI2m/iUvS
+7efmtarfHS6vzNkWx3rUaemvVHJ8HdXMnmzr5+Q9j3yJ+n0M+c17ZPFaXFl
n5zyo7lpz8N+kj72tZMqeX1c0+4KXA21/TWlzfu17bjcvvW3ODptsNne6VPb
75Kmnzk9vfjCX4YGLoUKrWX0xuuvp4cfeTSdd9FV6egTz0l7jzsn7TXporT3
5IvTvvm6aIiuxvv3qeqyz+Slad8pS9M+1RW/7Tfl4rT3xKVpjzHnpMOPmZ9+
NG1+mjd7QXUtTPPmVD7ZgrMrWbEg/XDSzLTvmIW5jL2jjK5yhvia1GjLPtpS
1W+f6ru9JixNu41enEafdl667De/S3/5n+dSsVNXjf7nry+nq6+/P02ZflXa
e8L56b8mLKkwvjRjIrDVKZjowjosVPjee/y56fuTF6YTT52X5s5YmObPXpzm
z2nYrDNnzk+TjpuTvjNuQcb13lMvaTw/qXkpc0rzGuq2NXkPzvcYd176/knn
pfOvuCw99ewD6e1e19sUak897dbXXn8j/f6uJ9IpC6/Nfb37uAuGcKyXNq4u
noqrgcN9un5v6piKHw+dMDedcMqcLL8XzF2QsT1/zsI044y5afIJs9N3JyxI
/zX+/LT3pIubWF7aXU7L5653rRYMN3C83+Ra2yYtSftNan5X3bPH+Asr+bI0
HfWji9LFv7wuPf+XJ6sRKrm5A6flfbJ/VH/e++hzafoFN6bvHLs0fXv0uVn3
7zek9sny8m3vKUuyjFOv/Y65KMu6vSp8HzRhfpp60uw0p8I3X4yNQobPqeT3
CafMTQdOWJR2G3N+ZeuE7O8MXRS81cVflb3C7vLbTofPSXsc9qN0yukL0h1/
uCO9XfYWLVRohamntOv+9Mqrr6RHH38q3XTbfem6Wx9KN9y9rLqeTDfd1QHX
nU+mG6t/b6zqdOPdT1Sfq6uq2633PZN+d9tjacnPb0hz5l2Y5s5eVF3zq2th
vhbMXZzmzJifzqj8svOWXp2uveXBdNM9yxpXVdaQtyu3rWrTXcsabburcV1/
x7J03e2Pp9vvXZaefvYv6bXXSox1Ven1195Mz/z5f9NdD/0p3XDX4+kG/d7s
+5uq6+YKUzfla+gxAes33/tUdT1d4eCRdMmVN6cFiy9Js2YtzDp87qyFDazP
WVDp+Plp5qxF6ewLLqt8znsqbFfPVbxxszLubJZ3dwNfQ96uuwPnT6Yb7ngi
3XrPE+nxP/0p/f3V/61G6B9DDZFhTW+9/XZ64a9/T3989Pnc12TI0I31sgYv
3d28qs83Zx5ryF3yO2O0wur1FQ4uvebWtGDRRTnHYW6OqTXianNmLUgzz5yb
ZsxcnBad+4t02a/vSDdW7brlnqer559q8m6j/PrnBi8va16D3La7u3VHl8y+
8/FKjj/e9f4b6Kvq+sN9T6Unn30+/b/X/55KTG3VSO+99PKr6aEnnq/G/vH0
2z881hzzTpDXy7rwd0NVtxvveTzj+/eV/L6+wsUvrr0jLTjnZ3kdMEyLNfg3
Y508F2M769J0yTW3Z974/X1PdUzbbrqrwa8Nm6vRTryHl6/+3V3p6utuTfc/
+Fj6+8t/H2qIFCo0LKk3nwzJ2X7ttdc6b1/qZqXfbv7R+K9Bf3vpf9NN19+S
zl18QUPW8cnyv4uy3Tp7+vzKN1uUfnX1L9PTTz7ZgW17u3HVR+VtNlbzp6Gr
2VpHb6c2Edj6l2vwjMCBkjNe7rjtjrT0/ItyvGH2zIZeh28x19nVdwvmLUpX
/uKK9OhDj2b+7aIuvqlzzNDR2/UPPXi6x6+FBkSd3l9vp/Yc93YPPstnZd5+
Z7p4ycVp7qwK37Ma8bS5MF79PXPGvJzz8LNLLksP3f9wev211vmmWvkhS9cQ
H3eLjd7a2s/DhQZAOuqt1N1hy+vLoaa3439vL4+BV195Jf3x3vvSJRf/rJLd
89Is8pvsFl+r5LcY28K5i9MlF/4s3VvdJ2epR8Ed0cxGRbr/36D/9+qr6ZVX
Xl6jZ+sWKlSoc+kfb7yRHnv00XTpzy/L+lvcydxBD59M7LWSexectyT9/pZb
epxjWKhQJxN8P/n4snTNlb/MeS4zZ8xt+mOuhfmaXf09e0aF73OWpJuvvym9
8OeS0//OoBaDbViaRW+nZRW+r7rimrRowdkVjudlTDd8MvPB8yp8N/yyRQvP
TTf87qb04gsvDHWlB4eG5XgNBfHHzKEPzw57/pnn0q+v+U2F77PSrEp+w/Nc
OYs5praw8Xd1wf91v7kuvfiXPw91lQsVKlRopejPz/85XVvJsbMWn5vt1dmz
FzZlXSMOxUeb05XvNT/9/KeXpkcfezyf/16oUKfTX1/8a7rphlvSuWdfkPX5
zKbN2nXNafw7q/LJGnMJP0/33Xd/z7myYUMdExTuUOqrb4Znv73017+mW265
rcL3khxrEFuY2xVzaOR28c9mTp+X54cvuvCSdM/d96RXXy17u71zaPjKhf/7
2/+lO/9wV7rgvKUVtud2x42buG7I8cZ8sDm0pRdclNdl/V+JGxcqVGiY0auv
vpbuuuOedN65S7O+Fm9qzI0tbqy1afpkjZhrpdfPnJMWLzg7/eba36U/l7mE
Qh1O/KoH7n8oXXzRpWlmpa9deQ5hzqIePlnW7TMXpFmV3bpw/lnpV7+6Nj39
9J/SP8p660IdTOT3/fc/mH7+s8uz3JZjPrfC8dxZC7rWAzeuRQ18s2kreX7l
ldekZ555tuRLFepoevPNN9PDD8nhuTzLbPJ53uywSeZ3Ybthq8D3vHzfpRU/
PPbo4+nNN8qeR4UKFepU6hkrs6bg8ceWpSsuu6aSc4vyOvA5WZ831s7m9bMz
G7ZqfJ/zYirf7fzzlqa77ro3vfF6mSsr1Jn01ltvV37VM9m/WjD/7HTmGbPT
rJkt+YrNKzCOB2ZOn1vh+8J0221/aMnRHb6x5kJrJz3zzPPp17/+bc5JNA/G
Zg0st7vMoU2fNjudd+6SdPttd7bJQS/4LjSU1BN/L77413TdtdenBfPOynkM
1lBkLIsdu5p2SbZZmvgmw89edF668fqb0wt/ebHEHQoVKtSh1FM2/U8l7377
2xvSwspepadds5p6XTw1X/Jdps/PV+O3uWlGtm3npisuvyote+LJ9PrrwzHH
q9DaTi+//Pd06+9vT4sXnZv9selnzkkzZzTW1bisE+/6DNuVLscDZ5w+q/pt
Xrr00ivSo48+UeG77L9dqPOIP/WH2+9K5513YZp+xpxKLs/J9miXDG93nTkv
nVnhm/928YU/Tw8++Eh6q8dccLFfC3UGvfzyK+nuu+9LS5dc3CW/Z505v8U+
6Yl3+Idvv1209Kfp3nuGaw56oUKF3knEj3rwgYfTRRf9NJ05bVa+pldyL+YJ
Zk6f07hqOr7x27w0o5KNZ54xKy1eeE66vvLp/vrXvw51cwoV6kHmb594/Ml0
6c+vSGdU2J52+sw0Y3pjLZl/l/sM22c27Fr6f9rpM7Ivd+MNt6S//PmFEmst
1FFkX7nHHn0sXX7ZVXmed9qPZ2S53MBx35f7pv1kZs5Vv/ba3+W5CHPKhQp1
CokTLFv2dIXvq/NeY+yNHFNjh3TZJ01bpQXbZ4ovV/fLhbjm6t+k5555PudA
FipUqFCnEj/qjjvuSj//+WXp3HMuSOefuzRdcP6FaUl1WSO75PyLqr8b15IL
Ls5XfPav3Bf32xvk+efLHkeFOovMkd177/3psl9cmfF97jlLuvB8wXLYvijj
HuZd51efzz77/Byfve6669NTTz1d9rMp1FH0yiuvpPvvvz9dfvmVWRafe9YF
bfHd/rqwIfPPX5p+/evr0pNPPlVy0At1FL322ut5DvcXl16ZZbe1Etk+qWR1
2CdLzu+2S+qXvPPME5VNc9VVv8rr0eylX6hQoUKdSnT6n/70bCWvHslrxB94
4KH0YPN66MGH8xzaAw80/n3wwcb1QHz22/0PpfvueyA98fiyyv59eaibU6hQ
D5Kv8uyzz6VHHn60wuqDGa89MP1ADc8Z0w/VPj+csf3AAw+mx59Yll566aWW
/K5ChYaW5Dn8+c9/To888mi6v8KqKzDd3wXrmSfg+/EncnzurbfKPEKhziHz
Wn/5ywuVLfJIUxZ32yZhn4Rt8kAbuQ7f9933YMUfj+c8h7K+olChQsOB+kvJ
KilbhYYvvV37/8o9X3IWC63NVOBdqKNpBfBZoFyoUKFChQoVKlSoUKFChQoV
KlSoUKFChQoVKlSoUKFChQoVKlSoUKFChQoVWrP0di+fCxUqVKhQoUKFChUq
VKhQoUKFChUqVKhQoUKFChUqVKhQoUKFChUqVKhQoUKFChUqVKhQoUKFChUq
VKhQoUKFCg2EnAv0xhtv5LNfncHujONXX311tZ0X5IxCZ8M+9dRT6Zlnnlnp
c98999xzz+VylDdQ0lZnd3ru+eefz+1enaSe3qOtf/vb38o5TCtB+gwu9eHT
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
Ec8j1/GvskN2w7a/8VjoJzJZvkQ8715lkM1hG/qdPQDfdBls0wkhA/Cv79kJ
JVey0HCiyF0Mnwx/ttrmeBT/4j9ynDxhP7FnyQ58SHeJbcslJmd601f4EL+Y
kzM3xy6LddB0jLrIF2F3+U0MHY97h30C+A70j9ijdQDKYIOqd/0deJX+Uy/r
j5TJBqObYj6BLUl/R4zf+8mSeI4fJV9L+ers3X0R3UZWyJuWi+J59qY1EPrP
RaeGjaePyA19qG9dnvO39vS37xc5pR/crz/ldbm0l8wlwxCZRBeTi9pmjOSY
a5d1O94rrlXPd1O2urlP/+sP92kP2ftKTd6yG4yN8eK3K1Mf8DH9zdaQt8Ce
1u/KUHZd5vOz+UTK0AfGWz2ND93jfvpKH2qfe0PWGjfyWQzdb/pdf8AOHzDm
YGL9sRiDssSs1dO9seeE31fHPtuDSXQPHBlrY6Od2o7/xPb1W4x9zEnxn9xv
HOHeuMB0f3tm0JfKZp/CQsT2+Tf4T6wm5rmMIV1N9xpn9kOrHIj4AP5UD7jw
mTzR78afzSpeHOOG8DT8wpL3+tv72OkwrRzvdcGpMaa/633G5pEbZJzxjH/x
JrzAQWAYX8Af3oc/fVTs1jVHxpXPYaxC9sOgS16XeTLYDT0FN+w5uDBmoYv4
8OTjQPddDduPnoALOCQjAvOR70AGeVfMD9TJu8gr9+GZhQsXpGefta/vm1mG
aQtdywcL4lvSq7H3gvt8R8YpR13sCUKHed49MArPwV9sT36qe2AZr3qWPMQf
vsNT+tTfyoF7z5RcyTVPYkB0LnwbB7IocmngBu7CLoEp9kDo4sB42Fr1va4G
QmwB8p/v5z0Rj4U7dSFDycF2+MYfYgORX65OkfdIB8OmMhpzww3+xM9syNhf
hN3oO3zGFjCHRh7DrraFjUAXh19G3tMtvncvPOsvuhsvwLYr9hdgQ8C59xZ8
FxpOVPfJ8BI+aF2rgb/YT+5hZ8XeqPgW/5D7bCA8QKbQIfV8jzrRITfffEvm
vUMOObiSMf+d7T6Ed/hi4i/0Hp6T60y3xvrS0EPkinvZoGRLzL/TZT6TXfgS
DyuDf0DHsc3IDr6cfGq/8wm1mazRB2QH/R/v9rf2kwl9yT+yie3LbuB/kBt0
qbocdNBB6Ygjjsi2dPgS+ohu14dkHPnIL459l8Q6e4vx8OvYCGS5+42B+npf
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
Rs7bcJl7d6aI/BJ7Ffe3rzA5aL9XZyHVn/fZns/yqus2LD1un9w4c8mesa17
vBcqNJjEF7MfMUzCpv3o4XYg8Qb4tx9BYBxfWMtofrad/nc/eyfyauWxWP/d
11nphQqtLJGtZGycnZD3oB9gjD58K/YsWe1cSOcpysGqn9FSJ/fbCxwfOG/N
c9aGlXmB4UHOZXG+ljPrnP823M8NIJudf+acMjK3xMBWnPQZnehsubPPPjvv
+V/XV+QE/4sus6ekc67tY0InFrutUKHBI7ajsw2dUT927Nh8lqdr8uTJee8M
Z3zyl/qKu9r/0BmJ9huyD6yy7E+vHPwrphJ8K2/FOZLOp/H78ccfn0466aS8
hyw5UGKuhQaT6BI6276c8EyXONPTGQrOooX/vuKq7FJ2C/sFVgPbJ598cj7T
U0yx9X6xBvc7p8Z+Bt7pLF32csF3ocEmMS5rtODN2bj8qYHaSXwp9qwzoQPf
ZP9pp52Wz3Cu7x0Xvh+d4FxIcpsMP/XUU9M555yTYx5ljqLzyRkydP1hhx2W
z/Uc7uuerCV3lnOcU9p6rmuh/gkGxCrDhhOXifNr8T0/Xt/ieWe+04F8tyxr
SiymUKFBIX6WGCc+23vvvdMhhxySbU22qz3mnT1vXkHctS+iu/fZZ5984VU6
2vP0ur1h6Wo2glgM/U+PT5w4Mb/HOTXjx4/PF9+w7B9baDBJbI/vxc5kh4gF
wBycsj/9Zr6rt5iD+QO49KyzbvlXnvve976XRo8enZ/nh3mebhJHhP8xY8bk
OAVbl47zLLuVD1dyPQoNJokrkKW77rprlq3mcAdqJ4mDkfOwTAbDN9lsv3r/
xrmPiN1GfvP9nD/infAtxuF5sp6uKOt6O5vY12JG5KD40XCfJzNnqz0wKbY7
3H3MoSC2mXl2MXTxQ3mJMU8GH+KS5AT7cPbs2Tmuzh8r/m+hQoNHbEM2JNvx
Bz/4QZZr+FK+otxC8SfzWv3F9n/605+mAw88MNu9V155ZeZVz/qXDRprysjO
n/zkJznOYq9YecnyJp1ZQ8+zZW+55ZYSay00aGRuSvz0qKOOyrktcAmTYn78
MvsW9zV/ZR5BfpaYoLk294pjzJw5M8eZxTPMA3uePcomgG84d2/MQ7B16TO5
uq+W3JpCg0RkJZkN4+Jq06dPH3Bci+/EPie/+VPib/KXxMj5WvBNJtMF7sU7
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
xTt4l61t33x5Jrkl9cQzaz5rH5MVL5Ovzz770yFe+NnhHX+75bbIr48yzLf1
rrjx2BjKfpwMV4bvv//3gV8/3fbC//LLv271IStiMvGY9yFn3kf7tTe/9vLc
fT6589FPxWSNRReT0WPvUTzDB1uvLSbDxcah1YV+ty6T7NfW/up3Os+HWjlC
TFZd1Q/nf/DBr7b2cC/u0O9kiK0wTkZXvGf7o6nLuZjMNcVk+i6/jL4di8na
y5J/th8nq+/JjN/VszVxE5MN7hvoKx5jq4xrk/PQ3Dz2ujngp7A/kxD8G3fh
XB+xlfLKkcoTrfrp+v2Z7vxCcZK8j7rghWN6yF/ENe3HSHdbD4OzWp8A2S2c
4b33MZm6rr6EOrIZcozNXZyY7G4Av7N7ZJivsM6hkiMVT5EZ11y6t67Yhd9A
Ntldz97k+yBfZKlzNNdzLzszgm1kI2+am2/dc2els538Y36y+pdjDOS7eWGu
ORaT8TcmJrv7wHXkCX8bJ4qDxfr8yWKyY3MXG++Xc+pMBB9xCr579OjRFqvx
/fhpZIUfxUfr7MhVvtdzTnDlqbVIe5QbJ2vkUO6++cJycb7zDuuZUXQJf/st
3escif04WTGZ97rPMRkbxOaJIdYxBmif8pcx2ZFYS1/qM3NmtJcxoGNyA8Vf
63oy/dWe5Xjn3LwY/dA4mTqv8f6pmEydv/jiLwc+//nWZ81DvaR98CiZ0e+r
PXj61Ly43x/49BcvZQ3niWvFTWzEpefdiDvFNmzEPu8nF45v6ZncHH+jNc7a
lC4F9eCDtVZ+XU+G/7X/KdAVXKBPi8kCe/Dhh79+GeMEcxn5NurdejJxrv5i
S+n2MbloPZn64wEywu/yDH6Ytlz3ENDPfCfvTJbEyK3/PBeT0Xv1nbmLg/sG
HEe2jSvjYDa9c2jwA9nHGeVKTqH9cY1v8+XkmOgSvbavK33jA9NZnM9G4ob1
/CT34Bk829wGuokvyteUSyuu83/lth8QzmoNa2uVi+faE1zuyLgfvwEXtM7X
++HGYtA1JsNBrfNd5y62x4d3mZjs9oEtYdv1NS5v32J+ZfOZjtnLPdp7w/PY
R7kBtoRsyl2Si8Yh2Co+D7vOb8wvkb8lL8Yf+ATWapBRcuez+i+dG6FObLe8
pzlBZJBOkXn3kDt6u+ZVyaHvvRvZXMfJ5LPpiOvbA6c9y9h2cWLvUU4j/ZmY
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
g8FgMBgMBoPBYHAO/wXGGz7M
    "], {{0, 300}, {869, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{520.9, Automatic},
  ImageSizeRaw->{869, 300},
  PlotRange->{{0, 869}, {0, 300}}]], "Input",
 TextAlignment->Center,ExpressionUUID->"da8d1d44-30a0-4699-b818-c5a15c1776ec"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
jpaDe4HhMCfb9ftBa1C3uyNq/uJA53VA6+HOmLT4CEbb7keNXxajfBPWAtFz
M78CV4iITqE23MaQ2TtgNsQVjfuukfy8ur8uxXf9HGE2dA1GWO/DYU9/vMz3
vp3f4zvvukb27Ra0+M0JvSZvJX51BQfO3oO54zG0o2s27rNaxq0hzcEPY9Zj
DXGiq74h2Hn8NsbOO4jWQ9aiUa9VdL3laNR7Bdr/7kJ2+QUk6PxaD4hPs33f
grh280GrZWvaZwWdayOWEhd9bMC3bxOHGG5F+9JcdZ60kfilFw553pf8w77m
29Fy4Ao0pj7V6+mIRjRmHcduwLp9NxAdk1wgDvWOfwQsHE+g3Yi11P5lEhf7
bbel+M9wF0xeeBg7jtyCC3HJXyZtRpNflqDblK04ev5hAb8Gc/zjxO+4D21G
uKJJ3xXaWqLxrd/bES1/c0afqduJn96g8UwuMNPsK2ROMtf5DFoPc0aDX6kt
1B7m3bV+sUcdmqsWQ5wwYu4eHDp9T3xhRS2ljMxMeF4MwFi7g2hF8920F43l
6HXEYU7h7kNjfcKMjCxc8nmGqfa0zqid39E67j7FncbMB+FRBduqxyviyA6b
zqPVgNXSxkrt5mn6jG2sUbXjAtSmz5r3X415xDcidH3m2hdX7jyHJbWj/Ug3
1KP1UPOXpajdZZn8uwXdL8Pm7BOOFifaIcakx8cvBFZOJ9Fh7DoaI0fJtaxF
88U+87r0symtnzELD+CQ131cux1MPOeqrKFq7edLjYkKrefQNlfaWpf62W+a
Oxw3euM48fkV2y6iAz8Hemv3fvNBzviexm08PR+eRSXhrn8kRs7dh9Y0Rs36
rKRxdcGE+Ydw5lIgzb8xfzpw+gE6j1uP5rQOvqO5/JH+vZvW6FsdB8ohbn3z
Xphwy46j3dC0v3Zv1OnpgAZ9HenaTugycSsWup3Foyf5dWc1BD6NwXLio13o
vmzcayWtXQfUpK02jUOd7kvQhJ5hvWfshvuRe4iNS5VjuLb7VuKKbX5fi/q0
npv0XYlx8w/jml9h9ds+XVy6goKCgoKCwtcDjZtdI1ue881sc7mZJXEz/6Di
uRnb1hduPMEosqWrd1woMZHlvp2CcrUmo9w30+jnNIkTLN90JtlXq7DA9Rye
hCQanYNrJjltv0bcZjUdP1O0ElkHrlytqbRNkbpO/LNO18Vk/3khPvGViZYU
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
elY4N2N79syVJxhksRtV2ms6jTWJB3ANXf+gPF151uDjvKxf/tis2VEtZqMm
8YTpS4/m1gvKD9bj45jNq8Q1hs/ZjUptOeZKy1lp2m8NDpz2L5G+QgzxipVb
LqPlQGctR6b5HNQnTjB3zSnRwtTj/sNITLM/KvWr2M7jXKEff3fDQV3taa6p
ue7ATVSRWmEzpE4Sa1JuOXrX6Hpxya8xz/Ws1CuTODriTR2JS54iDsSxUMHP
4/Gn3SHU+EnPzaww3GY/fMke1FNNzn2TfLPGswy42UZjbhYaj2mOx7X4wIYW
783NpL4ZaxrW18WFtWb79oJRn4xjGi0lhrDHtO2Sh8a4di8MLYiriP+imeab
6kNtuX0/VHgXg/2oM1d6Sj1j2aehvr7ZbdH04njcY94P0Z3WiBbzOB0Nejli
8TpvyW/Qg/VUjpx7gH8PW6vZ8q3moC7ZzwvWni3ABfXg2Dn2R3leCUKPP3Wx
ps01jZX/jtyAMzeeyvuAopGj+382jfFzqRPHmp2sC1PnVwca56MYynXNiNOz
L481ZSYs4FjVgpylKAg3o3vRjPVGOKethaXoyuzx8JMcMQZrwvC9pGmhWMp+
P47fgIu3n+F97X3mnKyBzfWUf7Pco9WSaKZp39f91RGHvPNiIS2I50juJmsv
0rpqPtgF10xwszTJN9Nxs+80btaa+PZtg5oTjP3E7evTGtTn8HE9Po5HXbb5
vPhjy307Q+KZF6w7h+cGmp03aN31nrxFdBXF5yuaMMfx5Hle7C/nE5698oie
UTu0uaE1U6e7I2Y5ci5t/nhtDTmSX/pK6rXx+ap0WKT5KKl9VTrMw5rd1wz3
lroN7FcoWG/agIvn5H2mGJlC2UPB90Z/ZWbJ3+CnoYlSayZL+csUFBT+p1Da
v9YFn6Oip5D2VuK9nkW+EL9VSa0A5mbOudzMVmwQ1jLjWLD1+67jzNXHtAXi
zOXH8Lz0WDTM7wZEIfllutRSnk0crirbqexvamuHDiPWwv2wj9Qu45pSgbTP
QpczaMS68k0sJNav1SAnuGy/SufQ7JnkV2+EV1wi+5JrGWfq3u8z/7ImW7AK
+4eaa/Yd22u7T97P1RQvCi9fvsWe4w/w0xitTi+//+a6yJ0nbSQb31+075KS
Xksd3HbDnFFJNN5nSQzVj7+7Yv+pvPpmvH8j0QuYnRtDNYVsz6CnceLb4XhG
to9/nbIVldg3o4vD7G2+HQ91tct430l2Og19HTf73eag1MXSc7OkFF2+WWOD
fDPiZkFFcbP284mbuRvVLnsvbkb2rSlu1nPGjrx8M+Jm3aduR1S85ncMfB4n
taUrCJeYK7WouBb5fKfT8KH2+JMtvvfkPeGoWp6WleTS1af1sOHwLbzJyBQf
6AMag3ELD2u+QOJmPE+cF8RxpawJz2vC90EoZiw7itpdHTVdSamT7YodR27n
roe4hBRcuf1U1hPX3dHnB3Fc3ni7fajYWqulwNzsPyPWC2/OLLHdkYPElFSs
2cU11Diebgqq/bwQnUetg9kgZ4nt5T6yVqPj5nMIjyxa3y8/mB+57LiiaUFK
zOIc0S/dffy+1FaQ9UH3yoTFh1GV+FMFjtEkDtWwz3Is4npyQbFS543rcL8j
XpL84rXki3F+on58eDxiyea68yBC8qe4hhnXj2XE05xarvFERb4P2AdKHLpW
F3sc4PpqOsxYeUrHCTVdmO8GrJbYWL6mIfK42WyJc+U1yL7QO4+MudkFnyf4
efRaVGqj1QSsQByq79SdmDj/EGp1X4Zytabg2x7LseeUn+jE6fHkWTxmEYf7
tttSrb5ZK67NtwFb9t9CHL83oDUVRlxugfNpNO61XL7nNnB71+/1obF5I3l0
rGng9yiS7p3noun4l+7Zw37KVduvoPrPSzSfMa03fr6t3JmX0+YXGEX7XMX0
pR6wcT6L4+cCJB8n35LJ92tOCTyoCgr/JIx1tTiOn3Ow2V/GObBsI6gVq6Cg
oFAcTPEzsjPIfnvK+iDxKUh/V4S+vgGEm5E92LzfStGul9rL7eahfg8H4lmu
6E48psekTaJt1mXcBnQavQ6WKz3Jrgsne/clNh+5iXo9HeSdNHONasQThlvu
xT7PBxLzx/p7zNcqt5ufq2s+YNpOeF8JFnuRbcVLd55K3a/BxGMct17AwTMP
cOnWc6lJNdhiFyqzVgCdm30zLX5zwpmbwSZ6UrCvb9OzcPVWCAbO3KHFRH6n
1d9i/9joeQdEK3zrIR/0nrpNNPwk7pHsYa57LPXNDLjZbeIFwy136Wqg8Xv6
OWg71BnziINwbeUjXn6YvfIE6vZw0HgVXYc14WYQh0pI0fEY5mbzDuKbTsbc
7K4RN8ufb2YuMY1BhcU0fiA3M9ZptIb91nwxjXE6btZAq4HG9niPae65tafD
o5LoOhynuVDHf+dK/Fhr4t+sw2K+9Jjwpyod5ot9LPyloSXq91qJDTT2r3Ua
+QlJaVKnoBqPDddaoHPV/HkxJi48iKPnHxKHegQ7F0+0HryabOR5whWZQ7M2
IfMwfd2JExcCMMpqH0ZY7oYTrevD5x7ikm8Idnr40lreJJr67I/ice08YRN8
A/Q+nxyD/xcN1kps1Jfz9CbL+ep1dUCtX+x1WvCz0XHMehw564eXL98UfzID
RMW+gNP2y/ieYxpF62Ou1F7ec/xOrl/wNd2vG2nc2nJ9avqefUaV29tJXXTr
Naflnjl1KZDG4RE27LtB438cSzeew/3HkTJGHJ/rcT4AM+yPYaztPjhuu4iD
Xg/heSkIu07cwwDL3doYcQ23llZo/7sLzhrUimCdxgo6DX3eanVbhrnESy7S
/RpEHPCNjgOmZ3BMo4fGzVibtf50tPndFb75uNmDoEj8sZh4WNfF8u6EdYVa
9neR+vQcf1i+3jS0GuKMG/S8MQTXRt968JbULhRtRbrf+J0H12DfQp9f9HmK
tXuuEu9bJ3G04utrbI6fxm+A941g4ZKsqXTp1lNYrT6BkXP3CL/dd9pfYn0P
nr0vteXZJ831+Pi9Q9PeK7Hn5H3hdKwtyn7dmp2XyHiwT/j/6Pl4+mqQgV5I
ToGyeTnifVVRYQplDXkL9S+6L/gd6TOyJfidb+F2hFrJCgoKCnkwnUvONUai
41PxPOYF4l+lGekxFAaJaWSdRj03I77Ammf8jpg5GnOqKmT7V24/T+wP1rL+
7+9rsfngbYm/u+Ufhr7iK7LV6re2ZE3FpWg9zA3/Hb0BjfuuRJUf5uviJWeh
Kp1vidsFJKeki40TlZACp92X0azfKlRtays+gH8Pd8UPozfSTzfU7rpMi7Fq
qel2d/1jE+4/iSq2XzJKOZxLlkxc0kPjXqwDwfoJZnMlj6310DVoMXiV+P1E
J4Kv0XKOaBJ0pD7uP5WnPZD0gmzBIz5ajWzWb28xS3w7HPNlNtwF/6Gt3q8O
koek5zk/jVlH/M9XcvMYj4ibTSBuVoP5B/sdmnNMoz7fTPsb9+JVusbN2E/V
WKsh9bOJmMbpy1mn0daIm5mKaazB3KzeDOqj6Xyz2notkIYzxQ+1JB83Yz1G
jZuZ6+LYNG4WrtMCeZWWjl0ed4iPuGnj12yO+F+ZP9WkdcB+F7b1Of+OYyal
flmj2VJ7euPhW3ip0x/kuFHWZWw/Qm9LW8q+rBnaZoQr2o1yQ71ejjI3mpbj
TNTubA+33ddz4/3CIpKw0M2b+PFyVKO126T/Sslx+mHMRpgNcZVYQ70GaAXi
Z0Pn7EFYdME6XsXVob5DY9uFeF6FFppeB+cnViI+z2uC576v+W48DI7Pp+lX
PKJjNG7WarA+38xK8iv3HPfN5Wacn3+PuPz4hcfkPmXfFvepsqxFB7Smddh2
5Fq0HeEm8b+1aIx+Iq647eht8b2FR73AAuK4zfutoHW4UO63NnS/8T39b+I5
tVjbsrU2j9U6LsJoq93w9c/jRQs3eNN6s9W4Dj0rKtH93KD3cnT7cwuWrD+P
YF0OKceqCjdjX6us42lyn+TnZjHxLyUfU2rSNdO0J6v8sFC0O7h/7B8cOnMn
Hj+LNzqO4xUfB8dhOPFwuXepPTwO7PNvSePXYex60feXdymi0ToLNTrOw/Rl
x6R2GiMu6RVW0Xi3GeqE6nR/1KN7ofXQtbTe3KS+Xt2ey3LjO3l8+0zZhqu3
n4uOymX62Zt4oObPny55cVwXbfm2y1K7LQ+FrQHlh1Aoe+D3W5xbFso5qnGv
DGpo5K9ZU7RWmYKCgoKChpzsHNFE5BpQoWSD5ddLNAWOE1qx5QLqdlmqaa+J
Zp9mY3LuPP/O9rhsZH9wjFGNTosx3+Ws5HOlvEzH3uN30WXcJrFR5bh6tG9d
3n8G/Zyh+WW+sxQt++Fz9uKGAT8IeBoNc+IZorNRfRLK1Z4i9aHkWnQs256i
l042XrP+q7F6xxWp8VbiMcl5J/pu7YevFXtT4vf4PXsjal+tP6mtU8l+W4Rv
uzkKF2AfE9uILelaO4/5GpwIxI8SYOl0Gg27LdPFxZkL75H2yjZdxou189hH
4Lr7qpGu24MnMeJTZJ4o/aRj+5HdeZv4LbeTkUh8l/O7yn0zWcaax4S5yePQ
PN2UoOfE8RYdFpuR92P/xq8TN5G9+Cx3n9v3wzDB7qA2rjUmid3KuXtXDXT/
j1wIQJWOC+kaf6BczcniV7Bd7200fmFkx3aatIXO8Yc2XvSz4/hNssYYXG+U
8xwXbfQm29ZBt4bMxU9S7tspMm9c+7lRb0fhw2LrEp9s0GelcLMUA90Yrtfn
suMa2hNPqCi1uy00u1c/vjReshao33WIc7JfzjBvyNcvDGNs92vxa7yW6kzR
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
avtzDQav64GiVcl1vaUuF9eJqj1N26TO1AzRyuDa4/W6OcDc0QM37oUgPf1j
5TT8M3ZydnaO1IAYbLlH62uNKajecYHUjTt99THefJFxQPm5z/utg0+Dj+Un
+5Qoi21SUCgdeAW/SksXbsZ+s78yPy03Yx2q9Xuuo0EPR60modQ2nK7VxuS/
F1JfcLrUGFRbWdimG288TzX+lLkbY3cQQc/i1GNQQaEE+PzcLCfvR06+z0py
XIn3L+r4ku5fUj/8xxhIU/GYRfmBijtHadv2vtczDfYTsTYe10zuOWkrmg9w
Ep2Pb+lvrn6r8+tyNOy5Au1Hr8ecVSdx426YSU3498c/Zx9zTob78btoN2o9
GhDPnDj/kNT8Zu2Nj4nCe/O+fqsi9s091Xuet9jdS3Pej+GXK+36LsHhH/cA
BYUyBcOYxoSUNNH4+ZR49y4L2w77wIy1lCRnl2Mr5qJCa2upE6m2srhZG2w2
KN94NiqY2WDKUg88DS1Yb0VBQaEgWIeQYxpZD7/k3Ozj+B+0M5SVuONS+gNK
1P2PZIv9U2GYH+U6ptcGy+BxfarwyBe4HxCB8z5PpXbWuv034bznGlx2XxOt
/GPnA3DTPwLPI5JEA8/0+T95Jz4KQqNf4PA5PxzxfoCg5/Gi61c2UHpeU/JR
/bRz8HHP/DGeY6UbGQWFLxlsI4jfLOHlJ8s30+4TzSZgvxlzs/8MWYNKbW11
vIx+mtHWxkZsfvmptjK02Rpt5ZvNprmzw1SHE3jCedbqQaigUCzYXgwJT5Sa
VP80NzM+1+fE+8Rp6Y/7/K0vW9CPZfHg2L+XL98g6UUqkpJS8eplSes4lF3k
5PstM7Osakz/M/GdH4ay3DYFhf89/HPcTPs/czP3Q7c0btaOuRnzMTsdN7M2
yQXUVlY2O42bfTdLePUUx+MICo+jNVQW3sUrKJRtfDg3+1x+jPc5d7bOT2fY
9g/R6C5MF+FjoLRjbNgfU/sU18+P5T8pao/3eSb/U/Z5jsl/lvYcJas996Eo
S77mT7X2S3NfFnafvE/bPkaspILC1wl9fTOubfZPaOhz3crth26j7W/O4nsR
btbGkJspflZWt4p6btZkNirRHE1xOKZxM6Oaleo5q6BgCu8X01gS/C/dc+9r
j/9TY1Q25qH0o1QU31RQUFBQ+CeRy82SXv0j+WbCzQ6z38wpL6ZRYhltdfGM
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
mvIDoYfIzJkzkZqaKhlSS7OZlpaWlpaWVuYqOGzmLC5kzjk0e334WP1CrHVo
XoZforuXiV8En7nXCLBtw85vxNfufjo2qx6Eqq0nIXL+Tjx98tz2/l++srDZ
QAub/WJXrvVIfBeTEgSbtZwoecutqs8bWNTfOg9362OTh0k6L8e3/XzN64r3
V2mI5Lw+4StxMu2mrHu6eeMmdmzbjUULlmBX8u4MvSO0sibWf7GWjGymchoZ
N2P9mYqb8TNes2YV+vXrI3MayWYJCdmPm6maMeYwMuZFLmP8i34eT8V3mxUx
vubn5yc9SchmjJtNmDBBeu2TIbU0m2lpaWlpaWllroLBZk74zC73UNWd+cHd
0avQy7y8Q6xN1XB5qribaR92/o7m3EFf8Z685Xv7os1kRC7YhSdPn9u9/2GT
Nwo2GyxzGgNm2rPZn4//xuT4ZMFmE4y5VvO2sZi5tszqHUl28za9J3s/EKuv
5Ft/ro4syHqz4XJ/PUKSsC35CPbs3ov1azcgIXYhIqdHY/vWnZrN3lHMaVR9
zcz1ZoGBgTh9+rRcRtWb9evX18JmXREfn5BpfZij6BFCP0f68ZOrFJux/iyr
PaTp8UjPfsbLuD59QSIiIqSXZGY91f4t0mympaWlpaWllZkKDpvZ8xnjTfR6
tw6PEbbezmaGsdSHuVXxlssYy7IPtJ+lL7TYloe38bxgErdKQy1juOG1WFnc
Vhlh8uwgm40w6s1ak812O7DZS8FmGwSbDRJsNhgBkZvTsdmUOMbNxhts5mmw
mbuXLQZmvDdvY/+Vhoj7Q6TnozEHR45z4My3Gcyl5OcgmJPfV1GxbY+WoRgR
MQ+LF6/BgoSFiJoZg2lTZyFy2mzs2rFHe0C8o1jjdfz4cck3qtc08wV79Ogh
67joXU/+3bx5MwYM6C99Gn/66SckJMzNNpsxRkffDvo9ks2UVz/9PbIaNzt1
6pTMgaR/vmIzejfSz0SzmSHNZlpaWlpaWlqZqWCxmS3GU7hWEIrWDkHRr4Ll
bZGvQmQNmF0sTdWZiftFagbKZYrUHokitYJlL2h3S5yocE1/sY0gFK8zEsXr
haJEg1AUrx+G4l+PFM8HozDzHqtZYlyMz0kvkABUbcWcRvu42cuXLzBsispp
HISAGZvooGF93WCz7SY287H5NZItxfYLi7kVqxMi9h8qR7E6o8R8gyz79rb4
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
/fHTZ9i08zR+8FmE4nWCUUy837rdZsncy5t3bOfAKWeuwXvCWpRpGAa3yiOM
/EUzjymWVd76ll5m9Mqv3jocPw6cjJCIWZgxPR7x0fOQIPgsdk684f8RzVxG
wWUydhZnsNlsg81mzpgjzom0h35uiDGtNWvWyNgZ+559J5iqS5fO6NatKzp2
/F6wWmvJSKz/Ip+xN/SxY8fSfTepqanS37FbN8VmbaVP4/r1G97Zp3H+/Pk6
p9EizWbvS/a5jOx1npKSgsSFCxAYHIrvegSg0jeBlp4k5utSerjCcK/hJ/ve
2HLtVR9Sy7lBjVH4oMpAuJf5CiVKlkXrNq2xM3lH3v3ctLS0tN6zCg6b+dri
QuwF9ukw/K9PLI6l2vuJ7z54Hu2HJshcv3o9o7H9wDm8fGU7V139y3E06hEj
cxIZb/rkm7H4OXAp5iw/gC2/p+HQyWtISb0lzrHuic/soWCpJ+IzNM4L+P/U
y3fRO2KV7F1doXH42/k0xm1HmXphKFZnJCYv2i1zMZWeivO7/ceuYvrcXeg7
chl6BiQiNPIX/JJ8GvdMMcK79x4jctEewzfy06GWmrNAWDmWPbc9Lf21lc+l
p+HhyLmXqhuMWt9FoNfwGZg4KRbxMfMQRz5jzGy2wWZzog0f/dnRsYLX5kiP
xqgZuvd0bomfMfMOWeP1nexv1g2jR4eJ7yIKgYH+ko+UpyN9Q7p06SJZybH/
2dmzZyWbqbhZu3ZtZdyMtW3P39ELRPs02qTZ7H3Jxmb0r71y+QpWLF+OKRMn
ICgoFB17BaOyA5u5y2tTerjW8LNcI1QeVT7GcanGSHGsGoyiFerD3b0YypYt
C18fH5w6dSpvf3ZaWlpa70kFh81UTkSAjHUVqjgYnj9Mwy+7z+DF83+s+z+d
dhPDxq0R3DMKjfvH48xFex/GqfN3o7R4ze3zEagp1p82dzv2H74kfeszExkt
9eJt9A5fKfMRK74Fmz0W38XkuB0o/XUoitUNwazl++xe/+fVK9x/+BQXBBue
OH0dR05eReqFO+J82z5X7ZXgucT1x1Cp9UTZK8A4J3HoZ2aJldk+d0stWjUf
6e9YpKY/Pm8WjubdJ2CgXyTGTogRjBaPhfGsRUtA7Oz5gs3mWfIcY6WHfpQY
u7SHfq6I8YHVq1dL33rmIfbs+TPmzo3H8ePH8MsvmzF8+HB06NBBxs/IaMw1
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
TZsm42VkMsbPzKNx48YynkbPkbi4OOnXqGsXMlZW2Yxxy9xgM3IXGYtxTsZU
Dx8+LPMVzXEv/v4OHjxo5+vJ3njMcVTxMrXszp07cfLkSRw5ckT+7shp77MG
LUM2C7f30Ff9zTSbuep4ezbjcCU2I5Ox9u2zzz+T3v7kL8b2mH9ZtGhReasG
566e5+BjxsxCQkJkXjhzE5gnzrgb3x9vc2Lems20tFxfBYfNGLeyxLFU7ErF
yOy8CQMtj837UxxjWUbynOrRHGCJcQWYllfs42TYeSGa+MzKjr62eVhjbH6m
fZvyD+U8VM9nh+15BZq2YZuXu9yPmoufaV8BprzEtzyGpvMCEWx24U7mX7rW
W4v5JvT9SE7eKWMRZKCoqChZ68X6msGDB4E9ychsrBHz9h6OefMSsG3bVsl2
79JfjDESxtt47s39jRs3TvosMG+Mg495TswaNHq/0+tfK2O5iheIuY6M3MU4
6YsXL3D37l3s2bNHMo8jm5mZ+/z585LpzPmLXI6/U14D4HUF8hv5TMXhcjtu
NtraezoMP/RW9Wb/AjZTvVJUvoczX15zT5R38e3NsZEzXiAZ+STmJIe96Tmy
U9WqVSUrlipVysqOaigeczb4WuHChWWOI/PGmTfM6yW8LsfeJNx+TuQ3OmMz
fT1NS8v1VDDYzBjuKv/PjpUs3GbhFhurGPszchrNzBRkbMvLz8ZnVg5ymKOp
55eVh5wed9T21XwCjdxFPq4h5lvDxoXuMl5ni3cx7mccp2yM5i5zNQMtw8ZM
xrLqM1D8plguAPYc9/ZDe4HkrpgzSsaizz3Pe8lM7CHH3tKMjXXv3l16f7C/
WWxsrMyHzKmez9w398vjN2vgGBc5evQojh8/Ln0aORee12tlLldiMw7GtXj+
p74/fs9paWnS60V55nMuBw4cSMdmKm5GLuL5HZmOeY9KivOceYa8bzYLlx76
tnozFTf7V/g0qvx9a06GY56/6fVqKmc/r+ed82z2vjwPM8otJJd5eHyG8uXL
yzhZZizmbDB2xnUbNWok/91QvOY1f/486cHL/Rg+Hu/GZ7reTEvL9VWQ2MwW
mzL/nfe1PG9hIetrFjazPq/WMxjIYDlfh3Uymp+/86Fq2azz8M8grmbej/3n
YGM1+3XcrdtR27Bwm11dXCAcPx/n/JjJcOrTqOrNdNwsr8QYBWMWffr0kT77
3bp1w8KFC99r72/FiJrHsi9XYzOelzGPUf1eyOFkMLI38x3JZqre7MGDB3IZ
xkbJb4ybKS5i7iu5nZyulmEe7fbt2+32l1ds1jlH2czx73xmx4EAmK+rZbx+
RtvM6LVA++16qfpnPxSpGYRiX4WIW4vvsNXfymC3wuy9WStYjCDLZ2Kqh7Y7
NjnZv1OOy4nPNP+yGVmJdWWsGXsbJjMPd3d3WX/GvITHj43rIbdu3cDixYno
3v0nS/zM6534TLOZlpbrq2CxmbNjmHm7aj/2rOVu97w67tnnI2bdf970XiSb
BTnMTbFOgI3dLPEud6efgeN8Hd+juh9kmrfjdkznBe/koW8MI6dRs1lei4zE
c97evY1eZvTjYNyMXotarqfcZDPH3mOOz6l8RPITr82be96x5o3ejGpZeucz
R5Hcxt8W2Y0xN+XtyLiauR6NHMeaM74PtYy5Lu19s5k1pzHH2cx8nPA1roF5
qetiFqawy11Q+Q+Btr/P1jpgVdusrt855HrYMZD52qE6hgRZtmk5vnj6iL/J
vvi4+Vg06RGN1v1i0bD7LFRuOQ5FvwqWx1lehyzXeCz+23kmmveZg2a9Z8Oz
/UQUrRNk8cnyM3ym7HL+neV9BFiOm6b8D6+3PLbkIJu9j5xFZ4/N/cpYX8Y8
xrJly74Vi3H+HGY2423fvn3lvzMlxqETExehS5cudnz1Ngyqcxq1tFxfBYvN
8vNw9fduOy9hbwH3moGazfJYjJvx/JRxM+Y0Mm5Gb0cex7VcT3kZNyMXkWGU
f6JiJZWPyJozJd7fvXu3lXsYOyOrcTn6fSi/EL7GuR47dszKdoyrnj17Fr/8
8ot1H2r/9DfhOo49rPMFm9mxh4VXvHxMNb0GR7jb5Un42Pyl5Ouqbtnk4+t0
fw75E3LfJqaz5tkrLhMs4+mLj5qOhs+kddicfBpb95zFxh2nMD5+Byq3mYxC
5QagaG1eT1uFtVtP4tddZ8Q4jekLk1G7ywwU4b5kPmSAiRXNPGjyxzIfr+zy
NzLLL8ns2PL+2Sx9zCvrNWrOWMjTs6r0/ChRouQ7xcsUn7HmjNvp0KGD/Ldl
zoFgrnpcXCxatGhm5auM5v6m96HZTEvL9aXZTI/sHT81m7mKyGasDQoICJBe
iuwZzfNmfax1TeUmm5FbzB739GtRfaP5uuppptiLPh6MfTG/iTWF/F3xvI1z
4TrMYTQPbo+vcZDjVFzt5s2b8jG3zX1w+8qjnzVqyns/Jzz2c5fNVGzI1Nsk
HZsFmuJZAbD6MSnfKLscd8d5qHUdcx/87eqa7Xyi1LLVfAVbBaD+j5HYuP2U
3e/pzMX7qNdrDv5T/GeUrB+C5VuO2r1+7tJd9AhMQok6IZb6NPV+zLn2gdb3
o+q23a1xP/G8p6VG20lOfvaOLbkTN3tbNnNcnv3IPvnkY2t92bsMxWZFihSR
t/TSnz17drociDNnTiMkJAgNG9a3eIM4z+PUbKallb+l2UyP7B0/NZu5ihij
SE1NleenCxYskL579GlgrqOW6ykvchpVbIx1ZfRuIXexPkx5MZKRuDx5ivEv
1paRxTgH5jseOnRIchvZi3Nj/iN/Y9wOeyZwW+Q0chfXVesr/0bl4ciYG31D
+XvlOiqeZs63dGk2M+epO+TGM6+P3lHu1ria4jMj58/dcVvmGJw1lhZgYjeV
Lxhoz3Z2+1Xz8ZeeHqwda9JzNrbsPmP3e7p04w/8r2+sYLNuKNlgJNbsOGn/
+pX7GBi6EqXrhVlifN6ChUx12Iq/FAfKxz6Wmmabf5a77BX6tnmNuZ/TmJ1c
QMfljN7SX8qe0exb9q5MpriMt8pnn36N/v7+8t+bWU+fPsGWLZvx88/d8EW1
KrL2LDtz12ympZU/pNlMj+wdPzWbuZKYS8ZYB2t8GPfQXOa6yg02M7OO8vIg
d7FfHVle+W2S1VRsTHnlc3B5Pk9OY93ZvXv3rL8reny8ePFCxmv5HK/p89yR
tWUqHsbtqf1ze7t27ZIcx3gaf6vKX5Qs51j/5tpsZoph2dUhq9phc/5foJWz
JJvVMG8nEHY9WdR9u3xJVQdt6n2i6pMd/hbTx4M9LYvWCkSTXrOxIdmevc4J
9mrQO0bGzUo0CMWKrSl2r589fxP9w1agTIMIiyeIYDMrcznWYQdY2Ez5Uxl5
mdI3mHV2+YTNMqrTyiie5rgs2YwxM+73XWNmis3UUGzGbQ8ZMkRez3DUjRvX
ZeyMjPWm2JmuN9PSyr/SbKZH9o6fms20tN5Guc1mZBbGtNjvwHz+RT9G8jz9
FsltXIe1YDxPU/mJT7Ph9UneYjyM/cxUviJjuIyrMVZn7ntOvmPdjDnvMV/k
NKZjiADr30Pb8cshnlXd0rulhr1/k7uVzcxsZ+Y9E/dY923jPdtcfKWHh1tV
b+nN2LhnNDY4xMXSLt8VbDYH/ynWCyXqh2H5b/ZsdkawWb/Q5ShdP8JSb2bO
mfRzyFNUfWj87Ya7tR7O9XMaM6sny2quI73sP/ywjJjDu+UyOuY0Kjb75JNP
MGzYMKdsRj/UOXNi8M03TeWczD2pNZtpaRUMaTbTI3vHT81mWlpvo9z2AlGM
xD62jJs59gbnOR59O7gM+YY+H+QmM0tlVYyJMR7HPEgyF/MWGVNz3Bbjbdwn
Xzd7heQ/NrPcN8fLFKOky0H0tT7nbq5Bs+sB7fCcdT0HPw5rXMpSe8aat2q+
KFprJJr0ihVsdtru8067fBv1+8ShUPHeKNkgDCt+O2H3+tlzt9B/JNks3FJv
5mOar7/Mb7R6mniq92viJifHB1dms5zJcTR6mZUuXeqd/D+cDW5Psdnw4cNl
/rCjGP/euvU3DBo0EHXr1smw55muN9PSyr/SbKZH9o6fms1cWa8zOunXynPl
NpuRfcgv9EwknzG2RQ9P1Zec8S76dHN/jHmxJ5ljz3LmMjKvkfmNjKeRv7gc
z+ccWY98xnNJchdzHMlgKseWTEbuO3HihOQ37vNd31/u5zQqvgqwcYO8FX8T
Pbxl30e3z8XwGC6OayNMvGX2xxfHu2o+YpkRxvhcLFtlhK3HWDWxrSqW1ysP
g9unQ+D2iRiVxPhsiGXbNtaTt7LebCSaCjbbmI7Nbgk2i0WhEj0FmzGn0ZHN
bmPAqOUoU3+Ukc8o2Uzlb/rJ59w8hlrmwduhxtw4B/VZ1jB/Rq6b05gV/8U3
MZpRZ1ZT5hHSA6RUqZI5FjdTQ8XNmDM5ZswY+W/NUfwbz3ja1KlT0KhRA1Sp
4uF0zprNtLTyrzSb6ZHdcxPNZlpa2ZeZzTLS+/LQJ6exJxl7kTGGxpxG1n3R
t4PsRqYycz3vk904H65D1mItGmNs9HtkPRq3Y+6LRvExvUO4XTIY1+e+yGns
k8Zt5FQv6txlM9WTzFQLRl9FL8Ozo0itIBSrM9IyQlDkqyCD4cy9IS11Y+wN
WeSrYBStY4witYNQuGYQjD6XASj6VQiK1R0lcxBLNQhHaTFKNQgTj0fJ5eV2
laeiZDNf6QXyTc9obHLwaUy7ehv1rfVmo7Dckc3OCzYLXSbYbKTBZtV8oHpU
8z7rytj/rET9UMF24Sj+dSiK1g4x5lDN21Kf5veWn6njsSV32cx5H+kvZQyK
eYLOPUAM3/yKFctba83M/cneNaeRHvq8bd68GRYtWmTt+e4oXmOZOzcBTZs2
ljG87MQINZtpabm+NJvpkb3jp2YzLa23kSObOcadqJxkM8faM5XjyNzFvXv3
SiZjPRq9PBzPz/g4JSVFxsBUD2nVn4zbJOeRtRiLM/edphhnY5xO+YrQo5He
H5yP8tTPaL5qzq7HZirHUNVdGdzAGBd5pUmfOfg5KAldAxLRJXAJGvaag7IN
R1uWs+QmevpK7qrWZjJaDIhDp4BF6BKUiKZ9Y1G5xXiUFDz28bdj0axPLPqM
XA7/qRsxes5WTJi7HaPjtsJ32iZ08kuEZ/vJcruMXxnxNh/JZk17OGMzS71Z
8R5G3Myx3uzcLfQbxZzGMAvveUvWc6vih8KCPT1aTUJnn0UInvULIuK2YcSk
jeKxMQfmU7p9NtS+j0A+62/mbND7kPxiruMyD/ojlq9QTvY0yyk2U0P1nmaP
af7bY96xM5HZ6M37zTdNJJtlp/+0ZjMtLdeXZjM9snf81GympfU2MtjsDq7f
+gMvX77CPSc9wnM6p1H5baheY4qveJuUlCRjW8rDUYmsRW9Fchvn4diLjPe5
PgeZi54i5vjZixcv5HN8H0uWLJHbUPtVbKb6q6m8S5dnM7tjlC2fkHl+n7Sc
gKikvdhz6CJ27EvDjv3nELd8H9oPnYfSDcIsfh1iVBqKsk3HIGT6Jqzecgxb
96Vix4FzmDZvB74fNhcdhs3HKMFAKzYdwYHDF3Huwm3cvP0Qdx/8iZt3HiH1
4l1s/T0NMxbuRFux7bINI2Tsys1jmIXNYtL1N0u7ck+wWSwKFe+ZCZtFWPIp
h8NdMNcn344TDLYY0+fuwrY9qfJ6As8Pzpy/g217UzFz0U509E3ER03HSZaT
8TY7j5D8xWbMU/TwqIzPPq+EevXqonXrlmjQoL7kNMbRzOswh7BcuQ/lvnO6
3kyxmY+Pj8whdnb9hmLcbN68eZrNtLQKqDSb6aHZTEvr/Uux2c07f+L58+e4
KM69HPWubGbOF1Ssw/MvM//wlmzEfTB+5hj3Yk0ZcxgVQznLPzQzH33yb9++
bZcTydoycpsjgzmOt2GyvGMzB39GTz8UqjgE1TpMQ/KhC5K31SDLRC5MhleH
KUYtmodgs4+HombXWdh3/LL4/l9al1237ST6hi7HzMTduHj1nngu42Mwl38k
jtc7Bf/1CFkm8wvdPh0mfRqbSJ/GjNnMmYf+mfO30J8+jfXC5Dw/qDIClVqM
RcCUtThy6gr+evJc7NO+OJK88OTJ3zh25iZ8J25E2QbhRn6j19vmNuaNF4iZ
0+rWrS1GXXk7cGB/TJo0AV26dJb5i6qHWO3axnpkIXo05mS8TPmAMKfx448/
RnR0dIZcRmk209Iq2NJspkf2jp+azbS03kZmNmOc6VxaWrplciJupnIGyUbM
J2Q/aDIYB+/T94P7IC8dPHjQzkuROVT03Oc2VP7im/bDebK2jHEys+8+e5+R
2Xjux9d5n/vmfNScmFvJ3Mh3zdnM1f5m8n6gMcS23D4aCo92U7Bhp70HxyvB
UPSzr99jNtwqDZfcU6x6ELr4J+HarT/sll3xy3G06h+LCbFb8fDRX1n6Lb0Q
bLds83HU7jIThQUjFq4RgEY/Czbb7uAFcvUu6ksPfbJZWDovkNPi73e/0JUo
+fUoyVdl6oViyNhVOJl63X6H4kThn1fpDWx2H7qInwKSULK+YLsq3kZe5Fsf
W3K/3kxxSr9+fRETEyNruLZu3SZ/myNGDJevq2XIZrytWtUD5cuXe2Nvs6xy
m1pOcVmZMmXwXfv2sqbzTbp37z7mz59vx2aZeZloNtPSyj/KEzZbuk+w2VRx
PPGXvVmMmmb7nil5zyJ6pD8vMY6b9A8jm/Ubs1ped9XegFpamcuRzdJSU9Mt
kxNsppjq0KFDMl+RfZ/VLQe9OljLwtozcpjyUuR1esa/yE1Z6T2m6tjIV9wO
PT+UWA/D/XMfrEujn/6tW7fkPDh4X3k6chv5o/e0qbe0YrNPh6FCs3GYMj8Z
t+7YmOv1K+DIqetoPmiu4Lchks0+bTYBoTN+kTmtSsSdGYt245Nmo9F6QBzW
/nYc5y7exqm0W9h9+BK2/J6GTbvPYu+xy7h590/xHdn+1qYKrvKesBYfNg6X
7+1/3aPS5zTasVm4Eza7jb6jlqN47WDZv7pZnxj84sCZDx48wcadZxC3Yp+c
y627tjjrn4//xvItx/HlDzMEgw6z5DbmHzZjXIw5i+Qw9tzj75bhqnv3HiAx
MRHdunVF/fr1rOuqdSpWrJCjbEZ/RuYz1q5dG3FxcbIv4JvEf6fx8fFWLxDN
ZlpaBUt5wWZRi/agsjiesY64UIUBcPt4sMz3kP68yqv3k2F6uMrgd/Kp7Tsp
VKa/4LPh6BaSJM4hrms209LKgnIrbsbaLnILvRHJWxysJ1P3yUaMY9ELhHVl
is14y3xGspSqVXPMkXRkM/Ib2Yx+ImZPOZ7v0S+fbKbyJvl3Qs1B9b/mvvhe
8wObuat+Yxa/Rd7SA58eigPHrsLhk1fsvst7f/yFLsFJMu/RzcMX/69zJGYn
7sG9B7bY2L1HTxAUtQXFvw5BhcYR6O6fCP/J69EtMEksPxMVm49DhSYRaDEo
XsbJ/nhk84Z4ILaTsPx3eHaYIubijQbdIrFph33Ooi2nsZf0WXTMaTzL3tPi
73gR8f5KN4xA6KzNuGryEX3y5JlgtTNoOXQeynw9Cv/tMgurttj3tz5z8Rba
Dk6weJOoujPXYzNn9WasM6Pnx/fft8fcufG4e9eWB3LixHFMmTIJ7dq1sVuX
/cQ++qiiZLO3qTfjnM3sRi7jKFeuHAYPHixj0I69LMzivx1e15g2bSoaN24o
43jpvSYzZjTNZlparq9cZ7OXr5CwYj/+X8dpKFJLHC89xd/hGoYnsXuNQBSu
GShjMu41g/RwmSG+F3438jsKwgcePihcK1iej6ReuIEMmzVpaWlZlZtsxluy
mZL5+gljZ4wRpGOzFy/k/pnP9SY2U88pNiN/MUZ21+RtwvM98hrfC+NwTyz5
jpyHmguXIZvRk0TlYbq0F4iXn8FnJo5gHh+PY416RWPFluMw/yX8WxxLfads
QBF6KVb1lX6Mq8Qyj58aOaSvBaOmpN5An9ErUfgrMb+qPihVPwylG4TCXTBg
oQ/7oVDJ3ihUvj88Wo7D+NitOH/J9hn//fS5YLHT+O/PUZKJ6nWNxEZHNqNP
o7W/Wfre06nnb6Gv4McPxL4rtpgg42rMl1Q6L36vAeI9FK8Tgv8U+UnGCUNm
bsGjx39bl7nz4BEGha1EsZrBtj5tLs5miluUH2OPHt2xZEmi+PeQIn/HjOsu
W5aEPn16oUmTRnZxN9afVar0aZZ6TztymHpszmX84IMP5G3nzp2lN8+buIzi
tY39+/cjKChQxvSM2J+uN9PSKkjKTTbjceuV2GHK2RtYuPYQJi9IxsS5yZgw
bycmzOcQjxfstIxderjKmC+G+I4mzbd8T/HbMUk8z3ybBw+zVh+hpfVvV27l
NKpcRJ6/sWc0+9dyu7zPwXgWve25H/aeVvVmZCbGvtjPTPk6ZpTLqAY5kGzG
bZrP8eijz3gZffRZ38ZeuZwHcxs5F3qFkB1ZE2f21XdtNjN5NCqOYJzI0xvl
G4djyrxk/GOyb3gq2Gna3O0o3zAMhcWyHX0WYe+RC3j+wljo6ZO/sfbX42g+
IE6yCLmH177KNIpApTYT8H8/TEHDblH4YehcBE5ZhyUbDuPCFRubkaG2/X4O
9XvNkUz0dZdIbHDIaUy9esfCZspD357NzqTdQp/g5Sgq9luraxT2ptjn0h05
dQ39w5ajUotxKC7YlHVl9NO/cduWl3n/j8eYOGer4MeJRiyRNeT5iM2Y09i/
f1/ExsYgLi5G/PYNP9GePX+WMSnDq9Geffg8/UDehs1UrKxIkSLytnSZMrKf
Gf898fpIZuK1lJUrV6Br1y4yB5KxP81mWloFS7nDZq8NLnsPW9ZyJb22DC0t
LUflRtxMMRO5hR74ZB9yGG/V4PN8nfzFPmRmDw9es2c9mjn+5rh9833GvBh/
I/OZr/ezHobxNy5HPqPvI+fBWzUnrqd6Ub/Ne83dnEYTo1n5zOKN5DEU7tVG
YOiEdfjzqe34+VwcSxNXH0D19pNRpGYweoavwPmrNra6//BPwTRb8HnLcTJX
kvxWq9MM+E3dJGu4fj92UcbV0i7extUb93H3wWMZi1Mim23dSzaLkXVe9X6c
hY0OXiBnL9+199B3yGlMSb2J3iHLUKnpOHTzT8KpC7ftXk8T60cv2Y0RE9ag
X3ASBkWswtKNRwV722rO/hKMmbT+MJr0ipaeJNLv0UXZLD2jGT3MGBtr27Y1
WrZsju7df5JejfTZIIOpPmeKf9iDmjxUoUL5bHk1cr5qKC4rL7bRrVs3eX0j
q4zE6yeTJ0+SXv9Gj+z0fdh0TqOWVv5W7sbN9Ll7gZb+arW0MpRisxu3H0kP
/cuXLqVbJifYTN1X/aLNg9slT7Hv2OLFi2VOIWNc5pxH5nOxHk35MDrzBFE9
0lTszdGHn14GZC+1Pw7V50zNg7dvy2V5w2b+Dp5VNjajP1JnwTZpl/lZGlch
6duxfW8qmvWLQ9HaIzFsygZrPiN1/c4f+CloCQqzP1nNAHQYPg9LBOOknr+T
pb+lL168xK970/B1z2jpsdigy6x0vadTxXwaCHb7T7Eeztns7A30CUlCjbZT
MDxiDVIv2rMZPfQvXbuH0+duIeXMdZxOu4U7d/+EeYL87WzZdUb2cytcMyhf
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
ozDEr9jndLWUc7cwbX4yVm85gbt3/0r3+rPnL5Gw6gBqdpqBJn3mYPPOszIu
lxXRU79P2AoUs+R2urIXSFbiTYxPsb/ZqFEhWLdujeCX1YiKmon58+fi7NlT
gmUeiH+ja9G6dQuUr1DOEjvzkvE13meMi9wWFBSA2bNnid/5SvHvY7+ML5OD
OHitQ91nPjCvXezZs1f8e1kmf8fkO9axcZtVqnzutL+0ZjMtrYKr3Gaz169e
4Mn+A7gzIwo3gsNwzT8YVwNH4lpQKK6LcS1oFK4HcITq4TJDfB/ie7kaZLkd
EYjrIWF4tGYdXt++jQxPNLW0tKzKSzZz1ltMPc9YF7lMieeQZDiet3Edbodx
MTIVb/lYbY9zJfOpejbmYqkaNvN8VG2ZGu/KZXmT02jpPc04meQzH+mJ4a7Y
wtNbeshXbjkZYbN/w8WrjDc+kXmDDx/9JWu3rly7jwWrDqJhr2iZH+nmMQJu
lUegQqMIjIn5FacEQ9198KfsXcbLXuwfxnVPn7+J1b+mYMuus9Kj/8EDbvMp
9h69iuaD5qFQhQGCDUeg56hlOHHqGh49/hv/WC6bvX71GvuOXULEzF/gM24d
lq4/itu3H9nF4e7ceYzpC3ejQrPxsnbshxGJYn8ncO7yXdwX+2LcjNuh6Fny
5Mkz+fylK/ex9fc0dPZbhBJ1g+VnQs/K/M1mX6Bu3ToylzA5ebv4TdPX45H4
jNi/4JX4bp5j506jBuybb5rg22+bSpYjk6k6NW6DDMTtdOr0g+C0QPEbjZH9
1vn7N3q3G9cvFi1aiKlTp8LX1xfftW8vt8G6MuX5YfYoya4no2YzLa38qVxn
sxfP8CB+Hs79v/o4UawMjhYuhqNFS+JY0dJyGPdL6eFC40QRMSz3j4vv5+gH
RXC8eFncGOqHf86k0ljA/A2/19+PllZ+VV7kNCoGUueDZjbjfca9zPVo1PXr
12W8TC3HXEfGvOj1qHIYyUWKzbi+qidjXhbZjr5y5rxFtX9zvMzZPF2bzVRt
mcFm7nb1Z5Z8R8Elhb38UPenmZgYux0LVx/C/NUHsGD1fixZfxjT5+9E+8Fz
8WHDcIu/o5/MA3T38sUn345FF8E40Um7se/oJRw7dQObdp5FwsrfMXj8KlTv
FInGvedgXPQvmL9iPxLXHMHYOdvxZafpstaLPZ8/azURQ8eswdJNJ3D45A2c
Pncbx05eQXTiTrToE4PPmo+T+5+/aj8OplzB2Ut3cDLtBpZtPILOvokoUS8M
bp8PR/E6Iaj94wwMjliJeLGvbXvTcCTlGk6cvSHntnHrScQv3gfvsevRRMyp
bJMxKFyDvbm94ao+jVnnM4OHGjVqKH5D42Tdl6MY69q6dRtiYqIRHByIH3/s
JGvTVP4h+cfoDe0pma1hw/po1uwbtGrVUtaltW6tRiu0aNFcMh77pHF9xu24
rtEH+91ZTLOZllb+U26w2WtzndmL53gQNx/nq9eV5/xH3YvheBHBY2IcLVIC
R4qWkLdH5WM9XGEcE98Hv6MThUvJ7+mIW2HBaKVxfbAvXp5J0zimpZUFvW82
yywWZeYfxUvMTWR9y4sXxt991rswv0r5erBejLmM5DVVL8be1WYP/L1799r5
QNIznH78jrmL78piecpmKlZmymk02MzI4bP1OvOV8atidYLh9d1U1O82G/W6
zUK97rPQsGc0anacIfug2WJwfsao5gO3ysNRrFYQvuoyA50Eo3UNTEKLQXNR
R3BeuSYRkr24nyptJqCu2Gb9n2Pw5Q/TUbJBqJFL6BmAwtUDUV5wUsNesfgx
cCl6jlyOnwKXoH73KJSpHya99kvWG4V6PaLQOSARPcNWoPvIJDTuE42K3wi+
qhks5u8t9jVU5miWaRCGOl1noe3QhegasBTdgpbKuTUfEIfanSNRrtFo2fON
va8NHxCffM9mil/YM7pr167St8ZZzdijR3/i0KGDiI6OQt++vWWtGddVdWEq
zmXkO1aVPck8PD4zDdtjxsm4jNkX0rwNzWZaWv8u5Q6bmTwYxTnAH3MTceG/
TXGyVEUcL/YhUkqWxwnxN/e4GLw9UUrc18O1hviOUkpWkN8P2TmldEXc8A3B
y7PnNZtpaWVBuc1mvOVwZCH1mOdl5CzFZYx5kdPIWirOxbmwRsx8/saaNOZB
chvM0SKnsaeu2S+f3oysO3PMsXQ2H/V8/mAzC0uZvUG8FEeYvUL8LPl9vkaO
n5eFxTzNfdLYy9roZy23belhLV/39JE5ksZ987AsI7fvawzer+Ev8ymNZUz7
VfVfcvuB9vtXy3KeclsqX9PfMncf237l+uY5cvsjjDnKx4EmzsrfXiC2Pma1
ZO9oxosdxd86e0YsXpyIkJAgdOrU0Ro3U7VhGfVO4+tGTKy69bFt5HycTLOZ
llb+U+7lNBrXnV5LNluEC3WbCDb7SLKZ5LJSBpedFCNFMZoeLjHIZcclP3OU
lXG0k2Uq4qZvMP5JPSe+Wg1nWlqZKTdyGjPiHDMPqVvmM9Ljnl5yFHtDs1aM
+1d1Yc7YjP6MZDPuh1zEbZHDOHelO3fuyLzGzFjMGTO6JJvZ1ZuZ+k9buMrd
4gdizW+kB2O1YUY9WRUf6aPIW9W72Y5FvAJsTMQcRw8/Yz2PYTJ25VbV28JQ
lvlX8zNiW+I1btfgM8t8yEnVuO5wmZsoB7dD/0SylWQqYx5un4ttVBavfT7M
mKOnhb+8/G3vlXHAqiMs8+H2xO3nrJMT61YdLvdl8B8/n0DTyL9sRnapU6c2
evcmu6yxXnMw95Og12lQUBBatmwp683IZareLKuxrjf1i3bW91qzmZbWv0e5
Ezez/V/GzeYtxIV6jXCidAUcLV5acFlZHC8tzvtLlRdsVl6zmcuNCnIYMbQP
cbRIcaSI7+6GbyBepjKn8WWO/2a0tAqa8pLNnMXXmLdIzw/mHzLOxboa1paR
dRQncS70YHQWNzN7gvA+l2PuI+vNGFNQdWlvYi6zL0l28xxzl838LPmLztjM
YAp3u1iaJd9RrV/D34FDTHymfB+9/GyxK+s+nQ21TzPP2LbhXt2B/ayPTXE/
rwDTe7GwIZlKzcHp/n1ty6oYYnWjVs7dy8RTb8O8LsRm9Fqkt0d4eCh++WWT
+Dfxq4yP8ffGvoBPnzyVHqasFStfvqzJt8O5Z4eZtzJisczYLCcZTbOZlpbr
K3fiZvY5jQ/nL8R5wWY8vz9WTLBZyQ/FOb9x/k8u02zmSkOwcokKRj5jqfIy
3/SYYDOy9HXvALzQbKallSXlthdIRszmGMNi/Iw1NRzct9nPUbEZPb+VFJtx
fbO3CL30uQ3esk5NeTU6ziGjHEszb7kemynWMtWImfucWWJX7nbxNWe5kf4W
jrHVqqXnNTOvOLKYnz0bOo3rOeFAc74l43ye/pKpjO0p1jK9RyvT+cLGS+a+
0rb5uFtzM81MmH/ZjOzCONiIEcPE72mkzFesXbs2vv/+eyQkJMhY8/r168Tj
Dqhc+VPp92HOR8yMwTJ7LbPlNZtpaRV85R6bWe4JNnswP1GwWVOcKl0RJwSb
MU9OxWbMTKCHa4yTJSzxzFIVZG3g8cIlBZtVwDXfQMFm53SPMy2tLCgvfRod
eUYNc9yLPOUYy+JzrD9jXI0+IfT5OH36tOQvM5vxPs/zlDejoweI435zwg8k
T+Jm5j5n6WJKis0CLPwTYM8ZlmHHZs7iaFZeMTGLlylX0Mvfdt/JHD5Il1/J
fQYadW0W9nO3eJm4q1igdXnzXG0xOeuy1Y26NlsOp0M+Z438HzcjZzE/kT2n
mzf/Vj6uVOlTWSPWtWsXxMXFCkaLk32hGTMz9x5zxllZ4ar3yWKazbS08p9y
3UP/+TP8MW8RLrLezBQ3s7FAXseJ9HAcxx2+F3o1Mh/1hnew4QVi9rDSpWda
Wk6Vl3EzZxzkGMdyFsvi68xzZB0a42X0/KC3I/MhnTFWRsxlZrN36WmWd2xm
9rgws49j7Zi/3X13S1zJkbfsec3MV7b4mj2zBJr262xdM+uZ92WrZ3O35iGm
j32l27/D+3Y3x/Dsasr4uQaZtpX/2UwxEfMUzTExPiazdevWFYMGDZB1Zopz
MmKxrHouZhZX0/VmWlr/LuUFmz0im9VrgpTS5Y16Mxk3y3sG0cP5OFbKGMbj
8lY2uynY7J+z9ALROY1aWpkpt9nMWe2ZM3bKrN6L2+CcyGO85flcZn4jbzM3
l2Yza45ikIVL/Oz9DVW+oqfJO9EaPzPXb5lfC7KxiV39WHpmseZKWhjMLr/Q
Wjtmy7dkzE7GytJxpSPbqZxMc52ZmQ8Vk5nY0MyfVj4LcOC3/M1mKn7mmKuo
YmrsKa28P7ISC8sodzG7vKhzGrW0/h3KbTbD8xd4OC8R5+s3tdSblbHGZmx+
gHnPI3o4Z7OTzDstXEqwWUVc9w6y8wLRIbP0Yl8c5oK9zuhkXOtfI1dls6zE
3Mg/9MvnMOcxvsu2c5rN2Cc4LCzMOZs1DTC45p17Twc64YkAG0ek45YAU92Z
w2teDn6GXo4MZfLad8ijdLf6jJjno/zv1fu05B4qD8hMYmNO6+Os+3XMqcyg
3i0d+2WHzRSHmmOQYp81R2bCZhVlfOt9cIzzeJqnhW+q5/j2s7J/zWZaWgVf
uR43e+HAZsXL2PqaufCQ3FiqvKXPVzmklCprfT6lVHlZh6V8TORypfJ+zjn3
3m3sLOvNipSU3911WW+WpuvNnIhMRs865n/RXzwtLU0ymta/V3mZ01gQR3bZ
7N099N/zSOfj4VjX5hjvcsZP5ho1k+9junxGVxqOcTMHNqvhOmxWEIZmMy0t
11eesZnMaSSbZZTTmPceGOZBLjlmx2aKWypIjwzGk04qdpHLueb7eLth41MZ
R5Me+uUtbHZOB8yciD2j6JfAHji+vr5ISkqSrPbqlebYf6uyymb03+DvxdFf
Xo/0fvu8ZSwvJiYmw5zGTiqnkT72rsxmThjN3S5W5VgX5sBuXkbMyV359ave
09YcyrfpPZabbKYem96jZErmNA60slkJslkJg83IaRUrVoCnp60uTPWOtvV3
/ncPxz7X7BHA53r0+Fle39BspqXletJs9g68Ij3lK9g9zxiajWMKytBsll2x
j+/s2bPRvHkztGvXDqNHj8a+ffvw7NmzvJ6aVh4pK2x28eJFyRuLFi2y5hDq
4XyoPMvFixcjKioKY8aMsWOz8eNGIyQ0Ap37huaPuJkdmynWcmAYq38/HwfZ
eqOl82v0s/r1q/sFhc3McTPeL1++PD77/DN4eJhHZcvgfQ+H1/5to7Ld/Y8+
qiBuK6Fz507ST9XcH0NLS8s1pNks6yPFymM2/jquHsu+zOXkravOX7NZ7unx
48eYPHky6tati2+//QaBgYHYvn27ZrN/sbLCZoytMgeWvhuMu+qR8WCPNQ72
Z5s3b55ks5EjR2bIZjlTb/a+GUXVohk90wzven9T/Mzc3yzI4C3PAFtczcs+
VuZu8emwz5d0tZHeC8TGkwEZ5jQWLVpU8tmnn1ZCgwYN0KZNa7Rv3xZt27ZG
u3Zt0LaNMXhtrF27tvK5f/vgZ8PeALwNCPCXHqw8VmlpabmWNJtln82OW9nM
wiuSzcqK5/k+1HvJ+/lqNss7vXj+HJGRkWjYsCFatmyJkJAQ7NixA0+fPn2n
bTL/5M6dO7h27RouXbqI8+fPy8F4C5+7e/euPNbmRO4kt8Frqjdv3sSVK1fk
Pi5cuCD2e0kyxIMHD97p/ZjF7XDu3O6lS5flfrg/7vf27dvyfef3fNCssBm/
O+Y1qu9Uj4wHf4fqs+I55rRp0ySbhYeHY/Rog82MnMaR+SOn0Uv5fARYBrnM
x+bBb+UrP9h6SVt8Ij39rcxmeOX7Oxn5pd7MxGYOXiAlmdNYooTMayxSpIjk
tEaNGsm8hGXLlsqe0KtWrZBj5coVdr3RV61a+S8eK6xjxYpl8rnk5GT5b4jH
FS0tLdfSa81mWRuW+JisOzM/V9LmLWmrQStn8gJxgblrNst1kSWmTp2Kxo0b
o1WrVrLmjPUxPJd8G8bg9lJSUmQ8ZcGCeZg0aSICAvzg7T1CDG/4+flhwoQJ
4rUFMqbAY+67eEPSt4T9rFiPMGPGDOmxwH2MGDFCxgAZE2Qu2f79+985J4bv
7ffff///7b0HcFVl1/79zjwzzDjDDMMwmUwyYRIYgoo++j6Wl1FRH//Ah/Qi
itKLgBTpvWOjFwEpqRTp0kWkK0UERdJ7L5CenISEFJL13dfae5+WSgkkh3XN
3JyTc3a5907OYf/2WutatGPHDlqzZg3X6GE/c+bM4f16eXnxcWM+paX17CNb
j6oLm+F3hmPE9ZKMWoY6T/g7xXN8ruBrsHbtWp3PvqnMZg09p/FNSy6fxmZG
fzSLRz/747efo/v3q/HWXHL9f4up5QdLqJmxjHmb1v2oF1h5PTaAY62FzSz9
38BmXyk2m0ot2mpsBh5zcmrBbPbyyy/zd0RwcLB+r6iQCgpM/J0io/KwPjfI
u2/M36cikSNL2Kxuw9qnET9rvh+KV1zUcPZQj9oxhLhYeTU2gHkLmz05Ib4E
Vjl16hTt3buXZsyYwfVm/fv3py+++IJrYeBZgBoZePEhdy0gIIDjXVXlOoLh
kpOT6fLly8xB4BZw2PjxX9Bnnw2gbt0+pC5dOqnRmRnw0wEDaNy4cTR//nyO
2WH7WVlZD3QMYAPErsB369evp+nTp9PQoUOpT58+1KlzJ87R7Natm9r/ZzRx
4kTOH4NvRUREpLpGfrDvjiJ1bQDexLHhehq+YTiGbt268n6wP+x3xIgRfNw/
/LCJzp8/R+npaQ+0n4aiurCZ6OGEa0zEWvfv38/X6l9//RWtWFEfHvpPgFHs
fEC0vETdG1/xWFMwGZZ7fR4177CQ3hu4nHqOXEVtP1yq8eeb1pxj3Y+6oY4H
YzPkMTZr1pTrzEaPHk3Xrl172n9+IpFI9FglbFZ3NjPiZWCvUMVjwc7uFOyi
c4uLB/cD0NjMulebIwxhs5qEPLTIyEg6dOgnjikNHz6cGUOrc/iEBqjnn1oN
/Dx48GBmG/Aa2AZ8Zi/c10S8CIw3cOBAZjzUVPTr15drBlDH1qtXD8V/PZkB
EZ8z6iuwLLgK6+N+cl0FLsN8Jk36knMxsU08YvTX6zfwGpgJj6jjGDVqFHMT
OKuu92ER67h58ybH+oYMGcLb++ijfnxc/fr1MR+rsW/sF+duxoxpdOzYUc7r
bGwSNqtfwRsV8Vd48KDebNmyr2lRpd7TVfRYblDDmlMM73uNsZoasTLmr4XU
5PWF5N5pKY2esYGWfLeVen++itw+WKQfo+EHMs+SC/lmI81pRL3Z65acRtSZ
gc169OjOcX18T4pEIpEjSdis7nwSpM8rBDEyNe9QNf+Il1+nyNfaU2ibFylA
8VqAS2tzPVrDPA5hs8cpcA9yqZBD9eWXEzie1atXT+amjz76yMxiYA3wB97D
NQXeN7gH+XuIn1W1bV9fX94Oaio0FtO2bTzHAJdhGByD7WIfWG/atGl0+vRp
vm6tTbjGQcxv0qRJvD1sQ5tvD3OcbOrUqRzHwj4wB22/fRSfjaDNmzdx7U9d
hFo55EqCOXv27Gk+Hmxv5MgRvJ8JEybw+9bHiHr2GTOmc9yxoODuA/++nqaE
zepfqE2EP8j69evom2+WMpsNGYecxgWNjM2MHmVGvGy2Hi/T/RZfn08tOiyi
jkNW0jcrvGi773Za9M0Wat//Wyvv/PmWfti8jYYaQ6uFzdinUWOz5i1cmc3a
t3+TNm7c+MB5ASKRSNQYJGz2IGzWikdIy7YU+eZ7lDzmS0pfvZ4yNmyk1Cmz
KLrDhxTkoRjNxYMcyxNE2KwqZWVlskfcrFkzFXf1NjOEPZthgG3AaGAnvNe9
ezfODezYsSONGTOG/vrrr0rbRzwOOVqIK4HNwHfIWVywYAHHmzZv3swDjIPe
ToiTYVksh30bPIOevOh9XVPNN967desW5ygac0SsCvmMc+bM5d6+qJdD7y34
u2ObY8eOZd7EPnr27K7mNobfr61fTk5OFh0/fpSPBbmYH33Un88N8j5xHMhx
BHuhfh/7RZ2bwWhaXK0vez2EhYXViTkbioTNnoxQa7lv315atWoZLVjyNQ36
Ygm91H1+w683q8RmujeIOY9R92Z8YwE1+c8c+nfvpTRlIb4D/GjP9h3ktcWP
Bk1YS27vL9aO8w19m28acbSGzGbG3OxyGq18Gpt7dqKmTZ3I07MNLV68kCIi
Ip72n5pIJBLVi4TNHoDNkLfo1JIiXmlPadPn070/b1JFYSGP0qBQyv5uDUW8
9g4FNHdRx+TRQI9D2Oxx6dKl32n+/LmKGwYwM3z0UV/O8QPPIK9x0KBBzDfg
DtRFIBaEmBSYZtiwYcwbyG2Er1x4eHiV+0De36pVq5jfwF7+/v505coVrkND
vRYGGA7xKsTvkCOJfffXcw/BWVgP78EHsToh3oBtY55gH/DW4MEDuQ4M3v/w
+wAHgeEQX0MOJ7gQx6DxaA91vJ+pua7kOdfkd3LjxnVasmSxWvcz5i2cI5wT
cBgYErV32A/2h9jhhQsXaObMmXqMrjefa8Qowa23b99+5N/jk5Kw2ZMR/n4C
bt2iHTt8ae7CpfTp6AUcN3uuwbOZXT6jmav0PEYjx/GNueT09jzqOmI5rV7v
Qzt9t9MuNbZ7b6cFX2+lDwYtp+YdwG/zrOJmDTWf0f64q2az516fRM1a/Zdc
XFpTz+7d6fTpU+wDIxKJRI4oYbO6DdSQBTu5Ky5xpZguPahg/2Giwns2x1Z4
5Q+K6tKTbjVtwRz3tOcsbFZ/Qi6Nv78f5zCi3gu8gHy7CRPGs6/gwYMHufYM
7AFOgucg4k3wLb569Sr3/ATbIC8H3AQfkaoENkE8C3mJ8ASBH111/WjAXuA2
+EmD/RA769u3H9eDbdmymeMJ1Qm1Ypgv4mDgH3DQtGlTOQ5WVb0aPEP++OMP
ZjfwJZZHvdjo0Z8zM1UXzwJLHjp0kEaMGGaONSKmCJ+TwMDAKtdBbdnu3bv5
3Br9edDHCPHDqnJBG6qEzZ6c8k0munr5N1q+ch31H7WAWr4/g5q0m0r/ajuN
mrw4vYEOzG2q9rzdTPWo5vzCVH2o916YSf/yVI+vzqDX+35FUxdsIq+tfrTT
bwf5em0n323+tGWzP42fu5Faf7iYmrw03WrdGo77BX1U9/OTOO6XpmqPmGc7
/bkxl3Zz6F+tR9Nzru/SB+q6YYv63kxJSX7af2IikUhUb3IcNmtdiSXsR4g+
Km/fdjmNQTxttmthMxeK6zeAin+/TPZQUhQVSdG9P6ZbzzVn70br/QRVmqOn
eR9Vz8l6narfD3kMLBtit78gq/2GmN+3ZzMXnc0WKDaLfubYDL24kIP4zTdf
c62V0csT/ol+fr4cwwK7gb2Qi4j4FeJZ8CkwfO0N/5CgoCDmrZr6hCEGVVeP
DWwXuYDgKrAZ+GfQoIG0fPky3l9165w5c4bryZBriXXgwwGffMytOuEYwW5f
fvkl16bhPGBd+JgjDlfVcaAvFerSwLFGvRpigvAsqa6mH+tFRUVx/yrkhyJG
hxxK1L2BWRuLD7SwWX2rwuar6E5KEh05coLGzlpH7XrMp2YdFlCztxeqx8UN
cjTvsEg9Yn54XKJ+Vq+/u1B77W312ttLqNkbC8i141IaOvV72rzJl/y9/MnX
Zwd5ee0gv23b6UffnfTdKi/6/4auILcPFnL8jNdV22z+7iJ923b75m0vqv7n
+j5udYzN31+gHavab3M+Xv088Jy/Vsc9nTzf/IQWLf6OEtR3SEVF4+51KBKJ
RDXJMdjMdj30FjNqw/i53mssVB/aa7YcYuGP1rofY1vtZ+4nrbFUkLM7BTV3
o7jOvahg7wGqsM4RQ1/g02cpqmN3CmjqREEuLUmrOdPWDdTnpfGOp759T83z
UWdGno+Lp77fNhTIc2xNRu2atfejtp563U1jwBAX/TjUOiFuahtq2HCWuV+2
rYdkqM5f7ENp7NPqfIWZ59ZaP4Y2HDsMVr+71LnzFZtF0rN2oYk4DuJikydP
1vMG+9Dw4cNozZrVXAMFlkDcCD72Bpt99dVXHC+z5giDuR5nT2XkcyF2hpzB
/v37Mccgtgdf8eryJuE97ufnR59//jkzFrgMuY3wa6yttzRqPuDZrzGdVt+G
PtuIgdkzE9gLc1u6dAmzLGJmYC3E62qLf2Fb6COLejrDSwXxOvRzq4oDG6KE
zepTFVb/aipT38nxcQl05ORF2rjzFG3Ye0WNP2jjvmsNdGBuV2kDjz/45w37
r/DPG/Wf1/hfpK9/OE7fb95N/tv8FI/5KS7zp21q+Hhtpx0+/rTlBx/6aoUv
fbv5OP1w8E/zupZhu1/sa4PV68bP9q/X29ivjveAfpz4/ezFo/bzBry3709a
s/08rd20k3777ZL6JQuXiUQix5YjsZnBXsHMZbqvIveMrhw3A3MFGaxi8Jub
1ftgETft/RA9hoQeZoiHhb/4GiWP+IJMBw9Tqfq/vyw+kQpOnaaU8VMpvN1r
FNTCTW3DQ63joa/rqTOj3gONmcxTn5/l2DVm8tT9+lvzYIZya20Xy/Lk+Qbi
GHR2NPgKxxuqb9+IeQXZn1c3jbE0jrONvzHz6ech1Mx0tjG1ADObIW4WRc9a
4CwpKYm2bt3KLGPUdKGODLxm9GEGIyFfsUuXLvw+cv+Qz1hUz37PRkxv2bJv
uf6tV6/uimEGscdGdXEzLA8PEHAPmOezzwZy/2fkUNbWvxpcBF8Sze9e8wWB
5z88Uux7UiM3Erw3efIk5kYjZoYc0Jric4Z+//139m7E+QTXodYN/b0fxLv/
aUrYrL5UUe39oYrycso35dC9wqrzgBub7haY6K8bf9G+3Qdp2w9+5LPFl7y3
+arPkC8zmvdWP/Le4kO7d+2j4MDgpz3dx6gKyspMV98hmRIzE4lEDi/HYDOd
MwyecGlt5okQcIabXc6iC3pFu5trwoJaavGpQPzs5E4hiq0CnN3oFpZxtWxX
W7cV+4GEtGpHCQOGUMaKNZS5ch0lDRxJ4W1f1fbtYnBgK31dvU+1q4e2b7UP
DGwn0KWl9rpdTmWgvnwwlnfGPtXzFu7aUHwYqN4LcDP8+tuaj9fgNINDNf5s
Zdk+lm+p8Z52bmzZNZRjadYMC47zZGYMcTPYzIXZLG3+EipPSDL/bk3JyZRw
5TKlBwdRuQPXaYMjwF3IqTN861FPhrxAw6MQDPY02AyxKXhnoBZL6xfWk2N6
yDOMiYmpch14jsOnBH3REJOClwh6RCGPsDY2A2/t3LlTMdZoszfk+PHjadeu
Xcyw1kJNHWKJw4YNNXMc+geA4+rSg+2ff/7h3FDEy8Bm8FhBjA5eJbXF9xqC
hM2ehHBiy8lR7xelJCbRiWPHyc97O23b6k9e2/zJZ6svD+9tYLMdtG2zH/n7
7KTfL1yk7MzG2addJBKJnmU5BJu5aXzFcSQ9rhTi1lZ7Xc9tZGZB3h/6jxn8
5KxxnMEvgehbpkaos/Y+fjbPzc2Ie7XintNgq9DWL1LEv99U4w0KbfUic5TW
i9rTamhxPI6hqe2F6NvmGBxvH1zmzuty3zTOU2ylc5m7ub91kIs2/xDnVhqv
6fsyx9HschWN/Qaa+c3Cq4i5GfmKoVYMpsUY9To7Ny1uyOu31OJrvKz6OYDr
zdpS+tylVB6biCARZUdF0o116+lA3350dcVKKnPgfqDWbIa4GQbYDLVPNbEZ
4lD13ScV+ZZgJfjTa7Gs3jRq1Ej22UfuYlVCfRp4zOiLhnjgTz/9VKOvoyHU
qqEn2uzZs9hvEcw0cuRIjmfZe1yD1RCfM3pMg81wXuDrWBcvfHg4ghkRa0N8
z+ivDW//6vxRGpKEzZ6EKqxGde83BoEv75t/QqwoOyuHfv/tKsfHNm/yYhbT
2MyffLf68cDzbVv8aSs8QnbspsuXLqvvpNzqd9OgpHF15ahYY/mdiUQi0eOR
Q7CZvk6gHh8y11C5WWJGzCROWjwo3LMdRbV7g8I92nHtVAB8FZ3cKPz5Vyn2
/a6U2GMAJXTpS5FqGeQnBrZoyXEqbC/M43mKbPsqRbz4Km8nzMOTwtzbUFhL
rXYr2IaP2nIOJFgG3oahiqsin3+DYv/bleJ69KXYD7pS1KtvqfXbUojaR3AL
41yoOWMdNa/wls9T7FudKK5bf0roO4jiO/VU83pNLa+YramLnj+pH6ObZd9B
xvlws/b8aG0+F5hrmDme10aPj7XhmrJAq5+D9PozI/eR42wtXClCsVnK5JmU
duIkhe3+kc7Nnknb2/8frW3ajE6Pn0CldxtXX+AHERgD8R/4HxpshpxG+BNa
5zTCu8JgM9Sb1TeboW4NsaXFixdzDAzzgjcHPD7QMywtrep76Jg3ljf6soF9
wDv2OYlVCQyKXMPFixexvwe2gR4Cy5cvp+Bg25yqhIREri1DbZrmbdmb42Dw
Q6mLHzaYGPE4xOUM/0vkOOLYauup1hAkbPbkVP3pbQwnHnO8T9Zshs9ZwD+B
dHD/YfLa6ktbf/Ahbz1u5r1tB/lu267YzIif+fHY8oMX/aSWj4+Ne6w1rfWn
qtisJs4WiUQix5SjsJmWx2ipO+OYkeEF4qrHyTxepOgPPqRUxQ5pM+dRIvIQ
X21PYa1eoOh3O1PKxGmUvWEb5e8+SCbfXXRnxnyK6didY2KBikdCPF5QTPUJ
3Zk4k27PmEup0+ZQyvRZlIoxZgLFde5NoZ7/5txIc+6imkPo869QRIeOFN9/
KN2eOpdyNm0l087d/Jg+/ytKHjqGot/uRKFqfhzTc/Lg55HvdKbkkeMpe9UG
ytuxm+4ePEwmb3+6M3MBxfUeSBGvvavxlJNW3xZkzk1sY3MejRxH+9fs68gq
+0K2tpxffbtgukB1XH+7t6a/1LX/xS/G0J4P3qeN7m608rnnaHWTJnR+2nSH
jpshNw+xKTAC8vjAQOAR9GMGZ7DHR0kJ8xvYzPACqa+cRnAN4kbYN2q3wIyG
ByLmBx+Qv//+u8p9Y67w0wDnYB0M9BpD7+e6xKLAoH/+eZ2+++5b9rUHMyHn
EPu098SPiYmluXPnUteuH5rZDL3dQkND68Rm6GWGmj5wsMFm6FcNf/26cOTT
lrDZ01TjPuG3b6fRLz+f5v7SXlt8adtWP9rmpTGYt9d29gHxAafhNfUe+G3z
xm20y283Xbt0jTLTs572IdRR8Nost3PcrLyMSCQSObIcg82sPAjdrGqt3LTY
EVgCTBHzVkfKWLmOisPCqCQqmky/nqW0pd9R+vT5lOu9nQoDAqk49Q6VZWVT
eXqGWiaGTEeOUtLAIRSKWNELr1PGZl8qjoimYvVecSQeo+kext//UNbaTRTR
/n32ygAvISYX8e/2dHvSTMrbf5gK/wrkdcpu36H7mVl0X11rlsTGU9H1m5S5
aj1F/7crsxnyBRNHjKO846foXkgYlSWnUFlmJlXk6vOKjqXCG2od9f9vdMfe
FNRCMSDOI3IhW1pYKtSOwQy/xhAbD0dbHrPxSzHzmKcWY3PT/EmuuLjTMZeW
tNuzLfk835Y2uDrTmmZNaYXislXPNaFzM6ZTqQOzGWI0qNGCP6HBZgYnIOcO
HvpYBn4hhk8jcvcQX3rccTPwFnIHkVeIHtXwV0RuocFliIEZ8byqasfAX/Bo
xLLgMsS0wJyI8dWFl7AM/B83btzAfpCal8hnHLtDDM9awcEh3EO6W7euzGaY
I/qapaam1ulYcQxnz55lrxHkXmLOyL/cvn17nerVnraEzZ6WGncNGj6jf934
h3aq/zc3bdhKPlv8FYdtJy89PubFXo3bmdG82Q/Enxlum/q/Cssd2HOIgm4F
Nwq/HE21/Z4a5+9RJBKJ6iqHYjOrPLwQ3XeRc/gUJ4WpfSV06UP5R06Y51J+
r4hKQsKpNCCYKhSPVaniIjIdO0Yx73aiiFffIhM8fKtRwc+/Ml8FNGmu9tmS
wv/9JqVOnU33rvxJVFhzPU3u7r0U835nCvN8hRJGfEH553+v9VzeV5yW5bWT
ojv1VOfRnQIUP1r7TYa6GLmdbfS+AK3NeYmBxnmyiam10t9vbf6dhCsui3Bt
y+tfcXOnX1xb0l4XV9rm7Ezrmjentc2a0foWzel7Jyda3bQprWr6HJ2dOc2h
2QzXOMhrRA1Xf52DwF8f63zm7e1NR48eYR97w5MecbMrV64+smcF4nHw6EAM
Dpxy8OBPPA/EowYNGsz7w3yQowiPf39/f16+OqWkpHAftv56rVjXrl05B9Ke
q6oTeA/nwsfHmwYO/IzZDMw0ZcoU7k1tfc6uXv2DPUe0Ofbk/WHuda0Vw7lD
j7h58+bxfpArCj8Q1Lahzq6hS9isPlVbjVnjPOH4O4mKjKHDh47Ttm2+6rPq
Rd5b/Ji/EB9D/GzrVi2O5sX1Z9pr8AnB2PKDN23Z7E2/njpDd+6k1ert8/T0
IPNqqMcgEolEj0eOwWZ2PoxuRk8wvS8YvBfVvuI79aK8vYfsZ0R8TxW+vNXk
5Feoa8c736yiiA6dKNN/B1Wglso+plB4j/J/Oq4YrgsF/KsphbZ5kVK+nE6F
l6+wV4btOSij8ruFVA5+UdfapUmJlDJ3PkW2e5Xie/WngnMXKs2lougelat5
VNht635mBmVs3EzhL7+h9R1z9aBQt1bmOrJg3eMjSK9Bs/Y2CW5p66Fv9k0x
fEFctZ5mN9XjBbXdfS5utMXZhdY7O2lD8RiYbAMPZ53NmtK5mY6d02gI3h/o
uwwWASeAb8BEw4YN4/jV0KGD2fMCdViox4KfYHFx7Z4XNQmxI8SJEA+D5/2g
QYPYSx59wrB/+GzgZ8SW9u7dW8kr0VrIZ4R34/r1682MCTbDMdXWb8xaiHv5
+/upuXzGvIXYG3xS4BdpCPFCxBqRjwiuMmrbkPdZ1zxP+IXA7x8elFi/T58+
vC/UrCHfsaFL2OwpqBGfZ/yN5Oaa6NKlPzgm9sMP22jLFm8e4LGtitW2bfNR
z30Uh+l5jni+xYdzGr3Uz+CyTRu30o/q/9w/r/1FJlP+0z4skUgkEtUiR2Iz
s+cHv9aKOQWvB6h9BLq3odhOPShv90HFVfYMVkH3ExPp3pWrVHLzH6rIyKq0
jOnUWUoYMIwSPx1Gmes2UeGVa1SRl2e1wF3K33eEojt0pltNmlHkux0p99Ax
qii09cQov5NORWcuUs5Wf8pS/7eaDh2hbPUY3bknRb/5LmWvWs95i2ap69GS
sAjK33OActT/zQW/nKb76bb+eUV//Empgz+nSI92uq+jB7NVoM25sWXYUFe7
WJnBZvBwdEMOo6disjZ03s2dDru60HYXZ9qMWJkaa/XH9TzAZS1og3MLWqO4
bE3T5+jCjGeDzcAD4B/UZ4EzDF8Qw1cf8TL0GAObTZkymWul6uJ9WJMQH1q2
bBl17tyZa9l69OjGTAVP+n79+jAfzZ49m/eVnJxc47bAZvA+XLdundn//mHY
DOfBYDOcB2wD3Hj+/HnzMoiNnTlzVmczS9wMMbu6xhLBZqibM9gM80XOKGKS
qAFs6BI2e9Jq3Cf5XnExhYVH0tGjP2u1ZNu2k5/vTvLx3U6+fjt5+Pnt4Nf8
fHbpjzu04YuxS3vdWy3rtYOOHz1JiQlJDTh2BtnPrSHPVSQSiepHjslmFu/6
2tisoqyM7t0KpMz1myh13ES6PXkGmQ4epfI8W9+34qAQSps2j6LavU6x73Wi
nM3b6H5yimUBUz6Z9v5EUe90pGAnN0oaNZbuhdp6iJcmJlP2Vj9KGThSbaML
xbzfhRL6D6LYzr24xizh48FUfOOmJc6mfjmlMXGKybwpqfcAin29A6WO+ZIK
z13UYne6ylPuUN4mL4p7twsFwVPS2cPsr2iOHeoxtBA3S26jJcZo6TMdxHGy
NnTFpRWddG1JO11caJPirrVqrHdypu+dXWijYrINzngORnNSj83VMNisKZ2f
MeOZYDMI3oHw0kCuHuJV4AVwA9jsY46jfcRsNnz4UM5xhDd9QEBgtZ6JtQnr
oafX+++/zwzUq1cP7mEGr/y+fXvR4MEDmc0QW0NOYUJCQrXsY7AZ4maPwmbW
cTOwWbdu3Th2WFXcDHmWldjsIeNmmC/2hbjZw57PJylhs/pWRTWjcQr3M/65
FUCnT52hX46fopMnTtMvJ8/QKYyftQF/kF9OnNEGnuvj5EmMs3Ty53PqvbN0
7MjPdO7MeYqPj69THenTk/3vrPH+/kQikehh5Shsxn6MbkZ8yNPifYHeYOgV
3bINxXfU2KzCKl+wXF23Zm7xZqYK8WjL/aITRyiuirSt0SmLj6WslWso8pX2
arxBWStWUVmsVb+oAhPl7dlPUe0/oMiX1fur1rGHh2VH5ZR35ARFv9eZPejR
w4xZyf1Fzc+xuSslTZ9N5SZLLK5CXYuaDh2nxL6DKQwejs2cKfI/71DmN8up
JDTMsu1796jo4u/MdvCThPeJwabsD+JW+ZwavinIazR89vHadcVkv6rfyS7F
ZJuZv5yYv9brLPY9+Aw5jM5arAxMtl6x2Xr1uLppMx7nZs58ZtgM96DT09PZ
iwN+H+jthfxCeBZaj08HfMKvo48YPEQOHDjA/cYe1NsacTfUV6HOCp4bAwcO
YA8ObL9/f63mDYyIuBViVMgZRO1YVT4A2Ddq0RA3e9w5jThOazbDdebZs1pO
I+rNwJQPmtOIWruq2EziZiJHFO5FpKWpv5fEJEpJSqGU5FRKSblNqWqkJKVq
IznV9rk+knnc5pGiBuJlKer/I3gUNey4mUgkEokchc3MNVSV1m/NHoah7m0o
rlNPyt1z0KaWq/zuXUqZs4CC4a34XAu69a+mFPluJ8o/c1ZdTFniDRWZ6ZS3
YxdFdgB7vU7Z3y2n+zGxlgPLz6fcH/dRpGKz2I7dqQD5jHkWX+8y9X9jxrcr
uD9aQJOm7E8SrJgxqLkbBTZzpbDWL1D66rUI5Fnmdq+Q7ixbRaEeL3CPtICm
TpxvmKgYLP/kL2R9gVcaE0OJY8ZpvdTQK83wQ7HJ87TNcdTYzBIvu6q47KiL
G3nrPLZajbVOTnpszIljZRvw3EljMgubtWBeM+Jm52bOembYzBB8AsFAhw8f
Vuy0nmbNmknDhg3VY2cfcx0aPOPBJXgN/LN27Rq6cuXKA/nqIwZ248YN7umF
2NiWLVto1aqV3Pt6+PBhXIMFbgGzgH1Q9wX2un79eiXPDS1uZs9mH6q5Tawz
m+E6z57NqoqbYd9GvZnGZg9ebwY2s89pFDYTiUQikUjkSHIoNqumNxf2EeLu
SbFVsFlZaholjpvEMamgZuj37ESR73xAeXv2qRNjldd4t4DyT/xMUZ27U8Qr
byg2W0X3reNmpgI+LrBZXJ9PqejSVZvcxKJrNzhfMtzzJd2zw4jpubNXYuxb
/6VsL18qV9dvhsqL7lLSrHkUoOYF5gpWy4Ypjorr2JVyd+2xOY77Geqab+JU
xXnOis3cbPw8ajpP4LIwnc2uqN/DYcVmXjqLcV2Zk6WuTOOzFhqf6TG17/WY
Gl5bq7gMfiBnn6G4mb3AIGFhYXT06DH24zD89cFjRj0a8gfBUPDtWLRoIXsu
PkjvZMTAsDx4BH79YMJff/2VvLy82a8RMTPr2jf0G1u9ejXPyzpOZ11vprEZ
fBq7KDab0KjYDDmNwmYikUgkEokcQc8emx2wiTeVBIVR/LDRWrypuTPHpiLf
7kSmHw9QRa52vcwZ8PeK6e7psxTdtTeF//sNyvpuJZVas1m+iXJ37KGI9v+l
uP6Dqej63+piUouBlZeVU6FitdTxkylMsRn6nxlxrEAnD+43Fv9+V8rx/5Hu
W7OZumZNmrWA42rguSBnDwpr2Vax2Ycam1nVzZXn5VLypJkUrDguSLGZ4csY
bOeTb+Qvmnug6T6NWD5AjWvq+Slnd9rl4mrOaVyve3+sc9JiZhut+Gy9vozh
BQKfxjMzZzi0h35tAjuBFdC7CwwBRhrAeY4DOH5mcBr8OwYM+IQWLlzI/cQe
pi81+Aq5T2Af5Faihxr6PoPHwFtgM7AQvP1PnDhh06NZy2m0eIEgz1Bjs4kU
GPhoOY1VsZmR06j1xX74ejOcL3AZ+FbYTCQSiUQikSPpmWez0ChKGDFO6xfN
eYPOFPlOZzKhLi3Xym+4pIQKz16gmK59uZ4sU7FZiU3czMJmCQOGUslf/5jZ
qaL0Pt397RKljp1I4W1e4jxGZiE3zaeE/f079lDnZQ/dL7F4rDObzVjIbBak
s1loy+fVst0pb9deWza7W0DJk2dTkJp/EMfNbM+j0ddMi6d52tbp6QwXqvel
vunqSb+r38lxFzfa6exCP+jejGsRQwOfmXMZnbj+bL3OZmt1Njs7a+YzzWYQ
+Az5huAU8BFyGBctWsS9l5FnqHk49mNfDNSNrV27VvFQ4CPX6cNzA/mL3377
LbMg9o05YB+IUUVGRppjZ3iMiIjkfdvGzSZSUFBgnfcJn8bt2/3Zh8TokQY2
RJzMENjs9OkzfB6s2QznqK4+jUbcDGxm7dOIOj/x0BeJRCKRSOQIeibZrNyq
Tut2GiWMncRMBgbCI3xBTHsPEuVb1ecUFdLdX05TbOfeFPXym5S5bJUdm+Uz
m0UqNovvM4BKLl3BxZj2XjlyGq/T7YnTKLzVi5w7yWzWUrGZS0ueY8zbH1CW
jx+Vl1qzWRGlzF+i1aYpbsRjiPvzlKD4MH/fIZucxtLMbEqaMF3PaXTlWrNQ
/RyYfVF09tLYzFPnw1YU6GZwW2u9b7cn17X9o9Y5r+Z30MWF/BSbbVWchljZ
Gs53dDKzGV5Dj7N1Rr3ZrGev3sxeYCT0VQY7IEaGmijUoh05coS++26ZYpdB
zGbw2AcXoR/a7t27Hyi3sTqBuU6ePMmxMsN/EWwGNkRcrUTnf6NvtKWHNvIR
u9DEieMfqPc0vPp9fX1o0CCNzTDQfw25mobAX4gNoic1WNFgM/BiXXtPozcc
uBNeKuA7xM0wVq5cKT6NIpFIJBKJHELPHpvZ1pvdz8mhRMVMYDKu62ragmLg
BXLkqLqgvGderjwnm/LVutHvdaHIf79JWctX2eU0FpBp116KfOu/FMNeIEdt
+p+VRkZT+tJlFPb8K3SrqRMFurTieFWgiwfXnIW3bkdpK1ZTRbGV/4hiu4y1
31NEu1fYl/+W4rPQNu0oZdhoKjqLmITlAu8e4n8jNS+QAMTNOGdRi5OxT6Nb
a72PWRtbbxA3i4++kfeo5TpqbBeofjfX3dzpvKsb/eTsSl7ce9pZ8whx0vtP
K0bbqNebMZvNeHbrzQyBNzZu3Mg9yMBmyDO8evUq596hB/XcuXNo4MDPmM/A
F4hvoSYsJSWl9o3XQWArI7cRDIRcSvjXHzt2zCZOBd7ZsWOHOaexe/euNH78
F+xRUhchzhcREaH4biP7RYKZPvtsIMe2rPkODBceHk6zFLfDbwRsBmZEzK6u
XAVuRZ4ktmH0k4Mvpr+/P3uxNHQJm4lEIpFIJKpNzzqboU9Yxsp1FO75CnNZ
YJNmFN+9NxVd/cPWzzE5hXI3baPIN9+jyFfbU/ay1VQWE285sPy7ZNq9nyLe
/oCi3nyXcrf6ULnVNWdFnolMR05QXLc+XBN2q0lzta/mnIMIf0jEu5JnzKVy
67hJWTkVHDlGiT36cb3ZX//zLwpt/SJlfLOcyqKjLcuVllDR71c5lzKghWIz
ZzeNr4y8RWvvD3701IeR42j/fmszz4HPwt00Rrvi4k4nXVrSbjW2gc+aN6OV
zZqqx+bMaBafxmej93RNAptt2LDBzGbIu4O/IgSO2LNnD40bN5b5BAOxJPQt
A+c8DsHjw8vLiz7//HPmGLDZhAkT6NChQ5Xqu/bs2ctsiPxK9LL+4osxdPr0
aXN8rSZhmZs3b9LKlSu4dg77GjJkKPfHDgoKslkWvdbQe61Ll87MZvCtXL58
Oc+1LkLfbbAlYm/gTcT6xo0bx/2/revoGqqEzUQikUgkEtWmZ4/NDtgwF/w6
Ci9epttfzqCINztQ5GtvUdqSr6g0Kclm3qVh4ZQ+az6Fv/AqRf3nHcpZtrYS
m+Up7oPHI/vhz15ApdYe+0pliUmU8/1mSug5gCL+t4Ma71D0u50pqv37FNK6
HSWNnUQl4VE29XD3QyIUB66lyA6dOdYV13sAmX751c7fP4vyd+ym2M49KMDJ
TR2vO3NZqNW5MWJonNfoaslpDLLiMvvngW6Gd4in2pbWz/uWGr+7eNBRVzfa
4eFOW1p50PcuLrSmeQta8dxztKrpc3RulrCZETezzmlE3MzgnYCAWzRnziz2
6TB875Grh5y94uLamag2occsPPaRW4h9gM1Q64WcSns227dvP/v8Yw5gszFj
PqejR4/WKRal5SpeUce3lPu4YRvwiQRzhYSEVJoTjhGxOc3Lozf7eMATsqr+
a/ZC7iSYduLEiWY2Gz9+PO3fv/+x5ILWt4TNRCKRSCQS1aZnns0IHocmunv9
b8r22065u3bTvaBgqrC7Pi68dIUSevenELWtiDc6UNbKdbY5jaYCMu07RNEd
OlJAk2YU07kn3b1yTTtmY5myUrqvmK/w+l9kOv87j4JLVyn32HFK/mIKpQwb
S6bdB+h+WobVjouoRHFh7oFDlLXNjwp+PafeT7eZG7wm0yYqtmz3Hwp0cacg
l1Y6f2nHD0YLczX8GFvpeY5GrqPm42j2DNH5zch71N7zVI/Pq214qqHOp+K/
Gy1b043ufejCyBG0u0MHxWfOtLzJv2hlkyZ0bsYMxWZ183dwVNmzGeJm7MWo
5xOmpqbQkiWLqVu3ruzXCD6bPn06/fLLL48lPy8mJoZ8fHy4js2Im1XHZvBv
xHKofevRoyuNGjWCGQj+i3U5TsTY5s2bq/bRn5kJsTp4fGAO1kpKSubaMDBc
3769mc0WLlzEzFpYB5ZHvwBvb28aO3as+ZiQ34hzVteatacpYTORSCQSiUS1
SdjMam6mPKq4W8U1Xv5dyvbeQREvv8H5h4hzZa3byHEwsxSL5B86RjHvdaZ/
/qcJhbR+idLXqGXqWEuTv+cnSvlkOKWMnkCFV69VXuDePd5HJanX4CkZ+05n
CnFy18+l5sVo+OWHMFvhOd7zMMfFDDaz73cW7GbhsjD9Mci1rXqvreI8xX3N
nSm85fOUOnkW3Tl8mAK9ttKvX44n/9de5ZzGX8dPoNKCu3U6bkdVVWwGbwyD
zRIS4rm3mcFmyClEP7RTp049FjYLDg6mVatWsZc9YlQ1sRn8QebMmc31YmCz
4cOHsrc98israoEIxKvQB3v8+HHUv38/3hf2g9fsvRPT0tLJ19dXceDnzIFY
dsaMmexbUpdjRhwO8bihQ4cyA346YADX1P3xxx+PJdZY3xI2Ez2K8FnE3znu
Y9QlzvwkhHpTzAnfaw1lTiKRSNTY9cyzWYU2p4qykqonbFLn5MwFSh45UW2r
rWIzJ4pu/1/KWrXezgskn0wHDrNXSECT5hyjiu3el3J37Kb7WTn4T6z6kwJ/
/uO/UGL3/hTxantKX7mW7qfe5terPIcY6hgq1HVx0cXfKXXcFApr1Y599vm4
4cPY0sJYgfoIMnw+7OrKgqz8QAxvEIPNzDVrOrNh3SDFZiEt29LtuYupLCqG
ygoVu8ZE0o01q2jv//uAfl+4gErvCpvZsxkYAj7wuMa6fPmS4pJpZr9BsAZ6
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
8OcXiUQikUgkEomedf3/VNbUMw==
    "], {{0, 215}, {871, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{522.9, Automatic},
  ImageSizeRaw->{871, 215},
  PlotRange->{{0, 871}, {0, 215}}]], "Input",
 TextAlignment->Center,ExpressionUUID->"9a796c0b-a62e-4f90-8f43-911d01941f6a"],

Cell[TextData[{
 "El ",
 StyleBox["viaje a cr\[EAcute]dito",
  FontSlant->"Italic"],
 " consiste en que si no tiene carga en la tarjeta al momento de validar el \
pasaje dentro del bus, el sistema fiar\[AAcute] el valor necesario hasta por \
un viaje. En la pr\[OAcute]xima recarga el sistema descontar\[AAcute] el \
valor del viaje utilizado. En el siguiente simulador se describen los \
beneficios de la tarjeta; pruebe pagando algunos pasajes en diferentes \
horarios:"
}], "Text",ExpressionUUID->"2be851b7-0015-4449-940e-87a958324a83"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`img$$ = Image[CompressedData["
1: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
1rbUSecdO7H1pnR0sZEfTnx+JLX5n66eSDDJPBeQLBR3GTkiGw/ca/TNrQp/
ONYIzUcww7nG8RYVBJwV6/EwS7aVMQK2FWX1IhvmDKnjZTMX9Mzxil20dNVQ
2rETT99NRlqA0eGAaD4C6r0nL6+0uvgenn1sLhbCDT0i904HshAHv8Sf9W4x
yy4yFkBxhxLHJnANAoaJdvjFAUdIhRzBM3joRFo7ILNFeHbw89QRrjNTGMgn
/+g6wqCikv8AkUi6LJ54NQZweqO+lj0/SzbSi61oBBe1kCxYwYKFvUpY4MLZ
2poSwA26o5XfnPrB1sKB9X1pCHDXSjG/4Co7gUnKEa4+L86Kmhe5b6kp58Pw
Lfd4LoffEa/FZH2xizkyO+VzM9ZNX7jtxU9W/87DfwjMoulPhJewE2GtDcwW
mqBVHhe0WjWOPrho8uOIz4+gNv/b1RNLR0FmHzCmwLJQHBHUsglKxedB2/F8
hJxEfrIVzYSFbhC+e4Q6f6m9uKgqLPJGnTMuGeOcX3DUvAPHTttMytx4gpiR
W0QCOfBiY8lO/o05obhlNFRVeOWlJOjUWbAAjHEIqwMaEBDRBD0iUQDC34tj
ATwWtgrtCJLoYXcTqiOAQ7QXpgIWFkLqCJAj3AI5wgJyNd25OsKg2AFXR+if
KVx/djAIn/zj6wgaYU2M/vCAkYiFA7WwQhrKq4fJtfe/HvTM+8sfmRxyl9uC
YcBPEnaA8n8nyilA1q3Q3uLid4tCO8LFT8QgROtO815a2y9WCvaioKBES95J
lrmjMUK0dCqf7atlznNl9nNBRHj4rcXaNXtqao6fvXB1W2Gj/fzYIeBbj5sr
s5tHOhMcKF9wUA6Z6P3gW8Ee3glRe4rzqjuWbsod+VnETfZ+snHeNChYZQe+
4sWxbSxYjf91UokyfwGLJeMCcq10qxylHCTx4KVtCnDj10d+GFOwwQ4ETMex
MKaAR7ADjuAIX9dyi5P/+Bkhe3fF95r1lcBFZydauDW9OEBIMGME/F7YSaZy
Ttggcb+8Q6ZO28BZCovFcY6ddb+kgthRkh6D349w7jjjCEa2pAYfaOjaRDjo
GGmAYOyAW74bW2IeQdkEyvAtGQH+HfAcBMuRRamMR8DvK9QUUhsKE8sy9biO
cLsLyiRJ6KezEn5kHYHvRLXAA/jJXxIPuo7gxPXtD4jd2Yp5mn5xv5EID4Ll
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
nvko/G6PBUPH+w631w5z9xv6ivbPU4Jf+Gyt09zYKf6bZoXuUa/Z+9XS7R6q
uIc/Wna7my/s5OHHGiE2cfergS98tuZV35QvQ3f7Raarow58tHS7g9eGf3qG
3uLqf7trwCPvhU70in95XqKbV4LL7Fj5V/HPfRzzx3cWD3XlShXsrT3gCyqU
D01Zrvgqfqr/1hlLds5ctt3DO+FRz5WgNVRlwPFLecerC596P9x9Tvxbfpvf
X7bzy9V756zcN02TOu6TiL+8vniIAp7eTS66YaI6AuYIahgXHGjKCmdLobAl
1BdUXE1Bhd5VR0ccMRtR7eAH1hEGoK43woODpCvN8Rg7kGJuPIl1zL8nWlxT
IHOWAUcI3mGMgPMRAEcAgSAbMYJsGBQqkMTOrQIVnTFfgPp81LsuOECL1T6z
EumENaMNdiAM9cQLyqG3tiVgRkBYQ5F1J28uNh3cReYj4LFG4kBjtUgtDGcV
d0PF0cUxhBbIGw3QPGUQFvl6AQ4BmC/g7067ifg5CIRB1OaTcVksXLZXpJZl
6glHEOoIapLzu7GFo+n1GnCuAcT9sgPXG4QdDMIny693HYHvOHJFTmbc3D+4
+c9dn9586pK55fTG7wtNB0rzqloqGk/MWfvdbcB4zOzhzj6Pfbhqzpr0bw81
VjWdaj/effVK37mensPm43sONW7Jqf2uoPn7fPOqLYc85sXeMsZLNnLmrS8H
PDNz3Rdrvt20v6qq9mTnse7q5tN78qpDEtLcv4n9k2vAUHtvcEq/f2uJuzZ5
ZUru9v3V2UUtTU3dna0Xq6uO7ciqVselj/wqaoQrigLk1ZzKmxS+j3+41nPp
tlBj7vcFdfVNp052XDh27EJl1ankXeXTAjbd/XLwna8GTdbp15oKvstv/C63
dldG1ffZNSsM2RPmJf7u1ZBhk3xkE5Sk9wb4+fFeNyt8n/kodPbK7ab9R0pr
jnWcvNTU1v1tdqMyOn3krLhb3BfCExg35/dOuhc+XT9n7b7EfZUHSpqKKzvM
zV1NrWfzylrXGnKn6Dbf904QfIeRPfXtrszPo+ljznSsEasX4MIxYQGYtflT
RqBBfVAaZMPxC0dxBWGwdYR+SYSL7lfCDjAecCSSkgYIOsrIAQ1W9FATjiCH
8xH27k4gY43QfISKQuj26zEXIKOPuIyXbNUzBmGjvgBlbb50ZBHntOMgL8DO
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
7JahTjiRH/ZZjzQ1eaQQjLtr2OgjVF9gDh/XEVZ14ohwAnOE5AYaaMBxyzJh
ODPjLB27+mIjYjq0NJyTWJeVAmV+ailkOvFIbyzlbEpx9xf6dliWZZOFPuAn
J5niRPRJsPKBv1JCWWYS/hfzi5IDCf7LI8h8hNGqoaRTSE0rX8jv2SPsSscg
QT0NHFaYgm12wMLBDcEOBvLJbjzr9yNdRs5osWU5XllCQzoWJDPUBhuV+o1E
eJQRMHZWyiZ6PzJtafj2/M6z3XVtJxZtznr8k7VDnf2Hy32GTVT+5bUg57mx
63eVVLecOlTZpo5Me2DyEtmoObLxqt+5+U2YFRWacrCo+ljzya5TFy6fOtfT
3nWhqvVUalr5O5qYO8Z5yZ6f/XuPYLuvEhfFHzpYduzoya5j58+fOt9zqqun
6eyFPRVtXuv3Pzo5SPb8N09MDg2Mzcqtas2raPNbu/eh1xbJRs/7Gxr5WWk+
1dByLmrb4TFfbhjiTGofN70S+Pzc+IDNOfkVbSCxb+8633n+4unzl0+eudzc
2mXcV2n39TpYoLdXwmoCcKoT1Pe+tvQ/i3empNXWHT176nTPyfM9nRcu7itp
nLYg5Q8euiF28//0auCbPpsSdpdWNpw4fab7/PnLp89crmw5Hbe35E3flL+8
HTJk0rwh47++9zX/KQH6lOzq4ubja3bk238de/Oo+X+c5D1Vtzk5vaaornPr
gZoPdPp73uDrCHS1imszQ20QUQMPXeYpABn13T9TuAHYgQt9qK2zA4YHZAeM
I1B24KYSNKNhHcFhRtAOU3xfvR7wghIyHwG4viTs9mkXUEoZwCgcYBYAwwHg
EdRVYonDRBmuL+SwEUooHABHnQXdYynuaGLjl1A3Tn1RSj2UrDaRxBagxqOP
mD1hFnCs0ZrT6K2aZ89Wl6SFYY7ARvXAdkBAyYgj4SAfLsohhIMMrjKSlVhW
hNkKyP/1FUUplLkkVuLVTdEvUI++bxn8jvCVN5W5yRBnJ1TCTiGk4SX+5CZX
on3Ls+heOZBJ5X+f5I84ApyPMFZ1syNz9So6czkAXV+soRIGdFv1AtvswHEw
fvKXxP36ZIzZ88ukHKWUZOljjXR6mrN60FGp30iEvRMctz9fpvC+643g8d/E
frB8y7uLU0Z+ufZ3bgtk9locuIc7a+97c6ndVxumLto6dZFp3Mz1t3ugHQGn
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
/JO8TVGfa+SstaWp+p33duzYkdt9qMZ33joX8IxfdYSv9kd9BGS5Zv3q1IjV
R2b+fg85fBd7x69ZZ3zWOLlTdJkDfM25n/haoSuOkXO2q2d6h8/0hi5YZ0as
C37bxBXruQ+OHvceGTzdAwbap1w+0dNQuzsvr8hoMh1pq/Wf7Z/3eebHXPOj
jvkx+2xAnRixBy5bR87BiFfO9pOLPDkCJUZkwgQgoIYkN9Q5M+YMDlmvnO4a
Ot199Ux/5BIxKHbxFbO/QKiTK/zEsE9CKElaiezkEapPQgocHTB6Afqx4itG
DYSgxfMPi+lm+atNX3aMfTk+mvF+cLJr428Kvvzt1w3f/qcVz76zak3pCmkf
Zq5Sylcx5SNaxue0GdWdkDelkvlkugLVlGlFOlWbEFBa8SLEwFGF4hyIQsug
Vallf/fDvW+ZmrwDR4kfcnecOEvsbZXU+HJ0P92qIgEj/K8/MIwg5ClSEGsT
mGkAg0LQgReRAsjcDDqHL/ce6D66cefBvyY/5Mkiw1Mmw/fzDN83G54uNnzf
ZHg6z/A0oUuQzjc8bULaqKfpwenvL0MvJyP430+m89m43yWzKkM+ckj73SzD
I+8YHn1rwzuFihW+mPP76RPTo3ZtPQI+JzyP4JDcZvscUcIpXOg/S9Beerk0
WsK/zLiIyaAAmbad4vrlsYOuWyGDYFPBWlCHHl9oMlfPdHe1NJjMpVs25763
OWtHVnaFpULtP0z04e+njt0YsrW17N+yc/uOnbm97c3By+Aqh67aTnq6j3Yf
svYeuni6h7jES0Fn6HLvMUdrb2ejq//wlbM9k9ccMTRqN0bUK+/3evtbWxtr
a/fva2yo6u85eOlk98yoZy7oGR+2nznWdfRI85G2hg9creNXreSsW8SrD9kv
H+842nGgu+3gCW8H0eq+IccZb4e1o76lsepA/Z6Guv2tTbXqkeZLJ45ErpGb
6I5H3DNBh+/C0QF7R3tL84G6mrr9VQfr93S31b7vaZ+4CrEUcsxAnS15X1zz
Y+5r52ytrQ07snN37Myp3ltxtKPB0XvY2nfo7LHO61dsU1dcgyd7bT0Nh5v2
Haira6irPdxc23/04JnjLeODPfEgfDl68qr12vsdxx2HersOENN5qLG6+WBt
T2fTpeOdk9esoxd6Hf2tnW1NJ+2t40O95GEYOtVdX7N7Z1ZBUVFJbU1lT3t9
f1eT0td68f3u8GD/2MWjx9wtBEQ0Nuxvqt13+EBNZ/sB1XFo+OyR+TEHy3H4
1NAl6ylP59HOhsa6qgN1+w417e/rqL9wvJ1YkwWszvoLhDqpwheeOY8+MXSA
5QFO/mTKqWTRqkm0FV9Mei5YsVlirbCfJHkiaacWDdCBD/ZRpIYA5hBAVyek
/u76wLn3j2T8usjwD2+BcniK6LFypkB0rVA+ZVyJUeVm1Cu6Aq6FUOZpSVkt
R2vKrYwrMT4iOZ5CxaUpvTJUZUbDkybDE0X/OcPy4s6alu6e4UuwVbVQ/nIe
gdNqEp/nEc4l5BHcNNxEWnJDCabA79gSI+JCjmt2tB9amkdA8zrvV9ynjr5l
Ofz3m6ofTCt98CXTQ5mWb2ysfDDD8o0NJmwrH3qt/KHXKh7OKP860l9/reIh
mc4k9J6HNgj+HuSkojdI8sn81HTlg5k4lnZWJW/ND64t+a+ZOZvzdh9TWqQ8
AtuPCJ6TsFZNBM8MlGpjcs0HVZRxyc1Gx2bZgp//SNAeX65EWhgOuUSW+/BO
Dk9gkstjB/rOKsLz50VT5PFwURdO9CadCz1f+6C363B9QbFpa1ZuVlbezp15
O7Ny9u+tuHSi58Ow9/oVa3f7/s3btm/fltPd3ui/7CLWduhcT2tTTWl5qWWP
xW1vjfndH0Zc1053tzbtNZaY9+/Ze0xpG7+mLo17Z3yuM97OtuZ9pWZzdkHx
ttzi7Xkl+cXF9TWVZ5wdk9dcgWtWl+OwZZclOy+/ub7q2tmepYjr9pR7Yqjv
aFtdQWFJgdHU23kgdMk+erGv/VBNYVFhVn5ednZhbl5RTk5uqdHY1lx38UTX
9Cgxf57g5T57b8OevRW5hcbc/MLteXnbsvNKjcVdzbX+yzYyH3KVpkds5IBU
iI/go/721gO5efnbdmzPzc3LzSnYmV1YUmbuP9IQuNAfvGhz9Bwyl5XtzM3P
yTXl5Jiys4sLSkpqa/eccrTODJNX1U1mpfY0V1kshfkF+UV5O/LzsnLzS8st
9qNNY5d7Tg0cqtxTlldgPFy/f+SDo7Mj6uDJrsb6vVlZhVt35GblZu/Iydm8
PbegyHi0++C10z3n3B0NtVXbcwt35hQYi4tzsguyswsslvLe7obh831zAWLR
nOOXrOrRpqoqS1FhSV6uMb+gOCe3oLiopLfr4Ohg/1wY3uK/QKhTr6g1D588
Y2gsKM2MhSilWz7pzBCEdK7zhs8W5ahBtITPJXkylGAQFvoAcxD3AWogT/jv
ZgYunz76i/yqr63JeXBdGVEgDwmlkSGpjgzL1zeYgPPaHlBiVBG9VvkwUXQ6
mkiWMZnXKh58DegHJVrm03MfJPIb9hBVCePS/jfwcdlYMJNvvFb14Iayb2yo
+tsMaB8kMq+Y/iaz7G827X3XcvjkKdvMmONOOHUegSICrt4FbUcaMAL9Ys7/
ixaBrUTm4ab5QD/SLhpuoj3MkpYgBWjJVXUQqHvypG1Pe8vWikN5e5py9zfl
7WsqrGvJ3ddUVNuU29BUVNOS19SYW9uSVw/8vMamQkqTtqmpkPyXyNcezqsV
/MO0hxR0HcrsJxw9n55LxkroB+WN+5oKhOT+pqI6OiK0ufuaS6sP9nW3kFdv
IaAsTXpmfAJFYh4hLNHUzfZLLjcsyHLEgsme/OcZtE9JC8MhNLkeqjil1YjL
YYdEm5JqOCc9i05bRBRHz/d2ttcWmYqyior27NpdbizdSXzm7IKO5tqJIUfg
al9Pd+327bk7tuX2tDeGLts+DLkvneqprakmMjnFhX09BxdCzlvX3Zff76rd
V/HetuyS4jKXvf36qHp7wj181nr4cF1BAVG52YWmQsueiiKTecuO/G3Z+Qfr
9g2e6gsPO447DheXlvzwV++YTKUfeNrmw2BKhk/31uzb9fPNO97dkUOc4evD
ztBQX9vhfYUlRSVmY2VFZXmpMSt7x+bN283Gsr7OpsDFvliIuPRHaqos27Oy
39ueZaooKd9dXlJStru0rOdwfeAiWAS0qvYZH+41TazhOVt7e31ubu7mzTt3
7szftj1nyxZyGYp7ew74L1oDl2y2voPllWUlJUW7SksryssKCgo3byW2q7i1
ufbahd7ZgOvymd6WQ/W52UW/fm/79pzc3JLiImPJbotF7TkcvGj1OJpzCvJ/
+evt+3bvunzqCLGPl04dra+vzsoq2bo9e9uOnVu373hn87aCvOIj7Y1XTx+9
4O5srt1TmF9oMpr27t9dUmJ8Z8uOzTuzLbsr3ErrjVGoj7pysrNuf8W27TvI
bI0m867dlUZTibHU3NfZ6B+yzeMC7b9AqDNZpYs8l54WqMHBswYMQUSxsoiq
LznLgP6/Uzo38TXkkrp+hLccD3gQa4CD5B/qP9Ldam44ACqrtjmXqJr97VSl
aKoDlEkTUymyQmtsyiWc+vZkuqD2sLERaCPIM1rmU3ljPRsLz2UKDcbdj2M1
sbGKaltyUbmVNDQWIl1U15S9r+mnFQ37O1o/OGmdvub6MOKIp84j0AyCnRoC
PQ1f1fwjtQh/gm+oEYwgzMq8n2CB/nnc6Yg8BjOADphBQaRAMIJ3IeC8fq1/
atjtv9YTvqj6ryhTfmVsSJm8oo4N9U6Mqf5hZcKn+K8pk6Ql9BWHf7hvgtI+
B/vvFWyHsKX/vYLtiKKnHUzmCvZDz2J81idhBq5I/SM/zCRZz5oM4Y8p4aG+
OeK5QZqMGU3iMFAUSVcuz2O1FafVGKGpEkYEsRDWvHesZvz8g/YpaUljM+0t
BKj/L4SXww58GoRm0VQ8S4s0imSK/qeRn+8cOdvV1V5XVFxcbCxrbWloa6kr
r6x8d0uesaj4lNp26YPOnq7arKwsxAgHg4PKUtB96fiR+tp92TmFeQXF1t6D
8wHbrUn34Kmeuuq972blmC3lLrV1ctQ5G3Qet7eUGc1btmSbTcVK74GLx7ud
/c279li27MgrLCjy9reMDzovDnTsqyr/1btbCouLVduhiRHYfe59T+fuPRW/
2ZlTYjYdVw7NBSDpc+lEm9d28KT78MVj3afUQy3Nu3PzAQXU1VWdPQ5xnhOO
w2azacuWXJPR7Dh68Nyx7mNq5zFby6Vj7VNXrFiJSjCCOjeiLhJf16deO2tt
aavflpu/fXvB3oqyIy3Vzq56tefA+ZOdU9dsU6O2oQudx12Nx50Hz3layNVo
b60zmYxZWQWVuyoGPG2T11Si5xsP7iMcAi5qqvf0Hjkw4Gg9ZT888kHvzDXH
MWtjfm7Br3+TVV216+Kpnut+16UPjtRW787KKiosNBGis2XfkY79ak/j5eNd
kGK+3HfR2zrQ33za1XH5RI/S37y7qnJrTsG27ILDh6rCV/tnxpwnlVZTcfGv
f73dYi7rP3LgjLflhKvRa2scOtk1NQzrBOf+IqFOoZCxKysu2XPybqnHLhsL
kUEQrULxWgJGkPx/FZ9/l6ggopZIYBAqydAE/1SinDYFQzNqnbvmCDPV1DcJ
qsZNlElgWAkIdTSsaApqWNdOglpzJ9OkhzDSYYn2p6ZVoqyIwiQj+n2grIim
QqXH1GNgBP70o4IlvVFlOzVGJJWrl6yBC0cnh4kJpsrfS5OhmnLDNQh0FQYP
BNnFm04twu+oRcA8wmwEtmLTMIIOHVDaQelZ0k/ECy2ElRwfRVy/izjuzQz8
btJ+l7Rhx91p18eTjnvTAx9P2u/d8H485YA24rl3w/nxlHJvmnAI7WF83n5E
ziL/vUHOVT6KUL6T0PeA9nxEziJ9Enrcc2/aQ2iU8QiZe+NkROz/BudTGs6i
47ruRaAlNPQ2Rebp/DDM8gWSw0BDOoSPLYZ3wAnxYXKQKmHiciQF2P8cQfuU
NGppEW5y0NpOIUD9JU6nxg6pUICWYhNpqWT52TG77+yRtqa6vIKiYnOptf/w
2eNdypGWksKSHdtzWw9Vqf2N7U3V2dm52xEj+Adt8aB76HhPc0N1fkFxcUmZ
Ym2+GXLcnnJdO320vqFme2FRxb7KY+628REnedo72+ry8gqycwtaGvaPnrcu
jHn9F6xHuw8WFhuz8nJ7Wqv9Z6yBc73Wjuq8/PziYlNn+4Gxi/0TV6323kOl
FZbcElNTY/W1s91xMsR1F3FpJq4Su+8Inndc+aDXZTtkLjNv2Z69q7LshKPt
+hXltLOtzFy6fXtRqanM3d8UumKfDkIh0xJsB8R2Qpj1wSrjRYikuX3nbW0t
9cQ85ecW9h6ujVyy3pkCvHZ92I5fkHfNRZzjo47gVVijN3S2z2Vv27d/d15e
oclsUvsaJ4cU4ti3NVaTuZvKymy9TaFLfUt+17wP1oAvjasnHU0lhcWbt+Qf
qNk7eObIDb/ryumjtTW7d+YWWyp2qX3N40O9M5Cfhc/koQWH3zh+1RkYtPnO
9507frTtMFyrzVu3V++1+C/1zwcHTrjaCUr6xXvbKyvLXdZmIjkXckEVIvaA
tbuuv0CoU1bIXEUzFEA9fym/IOL/tqiUFxBbKOiNC/P/ESm4UyIF0Q+uWbbO
JoQCeK0+vC8BJ/GuQclMoqIgKmWcqBpQPjeJAolQtYaqKYKKRVJfn0MLPWuj
3AOV5bwXQX5E+YgoRqIkx72g67iCJcr2o2nn7Skv4cMxCSaAYoH5AK0pYuaA
IoL4qD0e0fHp1RB5BBY1+jg2eaZpHiri7LhDC7SLGjpgeQRCL5A24oAWzQGR
hGcybL9F3oUAtEt++xJpJ7AF2nlrwrMUUpcCjqWwdwnpW4ImeH+C0E7kO4lp
uwW0A+hRSuO5YSJDrLkdOGGtH5Tx0v5vhUH+ltanl9LzE45bIeetMKFZ/7do
/5QOeGLECIZ4vkBDB1ZaqCDR6CpLLndcSqJJivpzDtqzscIK/1qxtrW7Pmab
gAXYhJfDDrxbIcmGFqAG33p+LoIjOg1Cj3xwtPNwbU5hUb6pxGZtCQ3Z/OeO
tjZWZeUWmirMVdV79lft2ZmVk5Od0912MHAZ9sMZPN3TWLsvL7+ouMjk7j8E
792ka/D9o/trq7fuyN9Vueukq5OguStnjtY17CHmAPzhfVW2npZTSpvS01xX
V51dULx1e3Z9deUFb/vkoP2sq7WivGzHzqJ9+6ounjriv2htbNyfnV9SZDL2
t9VHBvvJCz43pvrO2o+rXb1HDrY11zQdrKnZv6egoOi9zTvKS41e26Fo0D16
tremCiJX7+7YWVpu7Dxcc2ag6/pVdSk0gNWnNtyt2h7z2+IBF6s1aq4hPeRn
51g7a6eHlT9Ejy2No5cLW0CrY5dsp70d1u7mttbapsa9BAUYjebs7LySkhJi
s4inN3Sqr725tqC4sKTcbO9vnBru/+frrpth161x182I44TtYFE+mWFW/f49
V04T5e8il652/66deYW7dlmO9bdEfc67kwO3x8mr4YyGXBMjTmIyBqxt3e11
h5urGxtqKi27cnOKN+/I2rPLEjjbT0zb5dM9+/fv/s32He9t21FRbu5oazx9
7Mj45T7YeQP2ZYLlfn+BUCcPDcnKXEU7ItYUMA9fwqc2XkdEfV2BAnTGha5E
wBZfGfJUc8zLFb4mPzNqFYggjlX0ixGOUJADWzyNgooANRJxLo0SJea5FYBV
J/OgfJyovlAREbUDSgZVSpjRqHzUpX8jzc7Fnm/xUW6FQOYWpXHjKVBio3ZU
eqhy/aAS5yfJ3LxLIzbgT3qwmNZO/ISZiJ0ragzv+J0zYfsi++CLE5W8qDLi
tUaXpMzyRZpHcAnzgeiAXENivhVGB4Be0FCDHeRH7FMRQA1T11wzPvtiwDWN
fNLGCcobtc+iSSLeNQZjoeZ/xu/kNAQAccdIDzoJlA8cRodBHpS2+G9Yloc+
Z1FmBvmzrE8ox6X865QPtP069jCLnOsBpDGEyAsPPAJDUYdBR0shGnRatCC8
bBQ+96C9GIun8ICm1XqxkCiRVRM6Sc4jJGCHJNQAtokaDgpqmLyg/Twy4FN8
F+xtbbU5eUX5hSXK0UMTQxBwPnOyfW9t1bb8ouycwpKS4qysrPz83CNHmgOX
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
2ZRwy8q4VdtzNQqF5aQiqajwgQ3xXs/E/XxLZmlNxYmDilp1/XM+2V6rkv5j
c1ZuSfVIp/7wAeUG35w7n495eH1MekFFtZZ7NaHogdfIqOi7X0r82SfpP/80
ncCHu9cme/087MHVMT4phfWa2qzy2t9tzfR6LvbG5+Lvey3tGe/cyJyaQ0al
s00NYUiYDT3Zw02ZtY4O3YF9ytii8hW7sn60Of2xd9MeeDPxphejiXH1+Dsp
EbtLTuxXTFpUU7AxBT3uB3bGG+7mP9unzCiseC2k4InNu+8k7/hTYeSt/Nmn
mbsrqhytmolOnuPqP40v+tWWrCVvpS1+M+GeNxK/uzL+uyviX4/I0Wjq1Lzi
3di821+IfWR9SlB8accx2ECvurbhuY9zb38m9sF1cTHZRV2HuJYjyrCist/7
7H78nbQn3oOdc767Gq7tyXcyY7IrdbxyR1r5HS8nev0h8iXfzGNHVF8N7Tm6
T/FuZNH318TftTo1dnfZicOq0KLSe95J83ou+jfvE6XacN5smHFojXvqV+/M
uf2ZmIfXJuxKLjm8jzttVp3uUU56wkaRLxCQgl5IZhfr86GuQfYYL2zVy/vM
f2gXQgHyF00ezseJR9sstK5wDvhCCEIg3YyyfATEC1YWcTTdpx5pVRVU164H
HiEGHDsiCpAQAUUHsTJEEOMREUSF/4oUIQpIQA0vR3ktj7jpT5FEdEM+AmQf
xHj9R+Dd6+PXhjfsb3e58d/pz/8zuLRl0Wvp4Bd6OpRFHK1IFdbFOVcI666V
Xdu66BtWxEoYoZ/8OhDUlAuY7mMi3bPOhLmLCnMPjAA5y1TsoxJhfQT704jJ
faJCUbrsJhedk+hZe9PkHIwg8AgzUn0pZigvEZECMAugOJbOhj7prtnudh5z
z37pvjR8TR9+xfv+a3nL3Yey3V9NuN3/x/3/feX+ctR9bsD993Nwy76+9E0X
f63k3WtRj7tz130zfNg987n7yzG3MeZa4r/P7LyPrRsCGAFW8UHhL6xLmQvW
BxKil1Ie4c/aGGeLYnLENGzF9MlO5eQ8vsCTR5DH/0vBFfNQw4KW/xz2gT3t
83gEwdq3Qhaz02Pm66EM+bVJfYR3WYvbWVBEIF2JgBQkHoHuq+BiB+AaXbi1
NTEgTyOP4ESM8G5Y8Z0vAo/wrHc2kbFfO0yfD5KHwXh52PC3UaOjUx2WX/YI
YITYNX7ZejU30G5ILa1auinZ6+m4X3yUWVhT3XZYVV+vWOVdeNPqpP/4MDOt
onqwR3t8P/9eYOHdy+OWrItPLK6sNTW+lVyw5K2Um56NuvWl+Ls3ptyxIfn7
m5Jv2RBHQP2y19J2ZRQePthgOaXOLKp+ZmvOXRsSvV6IvXVN6s8+yNqZWKjl
FaM9uilwlipdVv5sv6n5M413WtmPP8q8Y0PCoo2Jj3+Q9cjmrO8R/bIi9vG3
02MzKlsOq8728a4BOPpzzGoctxvP27V/GdJeBOCjP3ZIU91Q+0F04SOvJHj9
IXTR+oSdqWV79yrVfN37sUX3vZbyvZfjH96Y/tN3M5e9nX7r6pSbVie/HVFg
0CiIRngtIu/21bGPbkwNTS7pOaKZtjbVKxte3JZ9yx/ifrIpOba4tJavj8wp
/c2Hu7//UsoDb2Q8/mHmjzdn3fZywncI9tm8O66gWqfT+KSU/eDFhO/+Me61
wJyuFu6/xppO7lW+H1F4zyupt7+YFJ9beeqYJq6i8qHNu72eS/7lh7vJ1f7Z
rr92xnTwqPLVgNxbnotZ/HLqtoSyw3uV42bugk3nZByBHB1g9BGQzmK7RkAN
kOOAwpZG78j9/+KBlXOs+jmswXxCbeH+Io+AiECcX3V93kFMvVkAQcjmV8mw
Awf0KB4B6bCqLowYR9pUFTW1633ybluZSpDgLS/LLf9UJvBXRDM3zlrPdhEp
rE2V1AGO/e7LyXdtyPjR5tKfbs57+O0sUAr0299F3fpi4kq/hrrDg27hn2Xw
4keZ+72ei4QUgxV0tljZukT4p4JHax0NOk2DbusoUogGquhDihFMTqtSoIYl
Yc4EuCDYBYEPbMKCGIGOFWYwSYjAjgqFqgzKKdghqXNq9PBQh/qSHCMsyCP4
UKSAwhnqy2YxTBQyC3wXXQ3/pVsb7u5QuZ1tM0SwJz3t3pvm/k+X+/+63X89
57br3CcL3YeS3G0N7os2t3vGfeXctb59M2Vvuovfdbc2uh3HZ4zxs2nPzPrc
OxO8iEYxzfosA3XjI+cRFgkRULIroWxCxvJzOshHcPQhRiDIiKBINCFkjMx8
HkEvxPzL6wuGWy+MIGTtc7gGaS1Wt+hkq8/lCOYbVJ6Gk17gHWh+Acs1EDgF
PQaTcGJ2MBiHHdxEB02ShZ6AF0gfM+fs1l606x1CrNGda+Nvei5+xa58U1Pd
lw7jBRs/1q2ftvN/GdX3tSn8cosXb0q4bXnsik9zVCpFXzOfUlb74GspXr+L
/I93U4oraloOqhWq+md35nq9mPyzjzLTC6utJ3RH9nNvhuXcuTr+/nWJCQUl
HF+7Lbn0R2+l3vBs5A/XJ/58a9az/rlrAnNeCMoh4OKt8PzCuipbS/1Fm6r1
mCqzrP7t6BIy1S3L4wk8/8k7yVF5Ja1Hye/iz9jAJnea1Qq+6okPMLlgZeyL
fpmh2eWbYosXv5Xu9XzcT99Oj8upaD2imrTARkaTRDzC/hW6wVMqYjq6uvSf
W01/dZgmurVFNQ3PfZpH7O37Vse9G1WYW1cXnlPyo9dTvJ6KfGhT0jsRJb4p
5Wt25d+zPunG1fGvB+bwfJ3a0Ph2TP5tq8IfWZ8QHF/afYAfbVdlV1b+nBjz
v438zeaU9IqysKKSp3x33/Zc5OIViRtD8gMyyt8O/n+UfQlcE9f2P6/v9bVa
21dbsZsLoCK4LxVfa6tgF/cudrWbtlVZXNhlE0RRxH3BBRRQSSAJS8Bda6sV
kkCAJGxJWLKALKJo2/dqJkKF+d9lZnInCb7f38987ud65sy5w2TmnvO933vu
PfjacvDJb570dcrOw+lXLwo27jv2PHBGc6J9V++Wik53aKSXz2d9FbX/xYU7
hi5Kjthz7Ppl4Z60E1NW7XJ5c7PnFzu27j/WJJPcr8s7Jc7wWZX05BvRoxZs
CU5KvXbuTKsS5jjgd4OZaMrmJkBEUIFS13mcAtQBCForJ7Z3ZGfyYAn50vKh
8UDw1h7S2oFf0KWbNflsK0LyA3TkL8gWHaF6M9rjDBOjaDwczjLSIncAN3+B
+QhCfan0YOqppQEH/oHzEezicNzt+7ElPstwCmzugB+aPgrD+HCXRTEoxSDu
ibkxk1cd9d99KeLYVb+w9H8u3AZT0pbEucwOHfxe4uQfjp28XPvwIecT6P1n
y/+1LMXFJxrZwbOMYpmSRQQMUvCNZdwBviuMEXIy2mpy7qgLmY4ajf/bIwI4
rVSAnILQGY8APMIhEiOg1TuFJFIAnWQ9wg4mmcAIMQIceqoHFQYjfPlYHmG0
1RaZgyj9JToczjiyAqcQ8CIVMMy6Yag1euLDHb70gQ9pcQTd1Qifyy01fWYV
nTDFGjKajh5vDXGnDy2lNVL6r9/pvkd95aepPR/QO+daQz3o9a9ZVg2hAlyt
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
/LeVQ+C6E/uX0SUZ9G+tkDLQ/dK/bwGV9TXd8zv9R1d/hZQKcaO+cLFu8qTC
J6Dlj9x///45a9Bwa34ETT+gqc7+S3uog5/RklC6Sw+fo6GiP9PfuuEVyFnj
1VaR36E4dICyEtCwEsssMDzC3Ha0P4JWk6tFa7qaVNzEXRxICPmzifK5YAMv
Nu54lghy/ic6YNAE/6vJ5TkFJwFYAfkVkK0TCIL3tTaUi2zE8WOQQiWJFPLZ
OrwW9BUg2NBXFJ4rEoXuOuLjv2PS10nTv9sx8attM79PmfFtytTl26d9vu3T
TXtOCTKbyvIvSM+AKP3171NeW77jxaWJw5cnun2RNP2HlO/i9+fmnaq4mist
yFoTu+/1b3Z+HHog49Sp+huSny+JgpOPv7V617wfk7cdSVcrJJ11+dcvnt6y
//jCsL0e324fuiTxhYWJr32wZdYPSSE7D/5cfPr6ldzog8dnrd7p+tGOZxfC
s2M+2b48ZO/e9BOlPwsNlbZVT0FdUyrJEJ5eteXQ9JUpr3y0/YWl21/6eMeo
T7dPXJXyXdyhjMwTiqs5RnCJWgiO1hqJ8hfJsZNZyyMPjv8s6dUliS8uhMeo
j7e/sSplbeKhTOHp+hLxrSppyc+S5LT0ZRF7x3+13fWjxBeWJo5YvsN9Rcqs
1Xvj9h69ev7M1Qundx89tjRo55hPEocv2frih1uHf7Rl2je7v446eCgto+on
YZc6T3NdnHYm65vYA1NWprz8QRLAOC9/nDjus+QZP6R8uSX1cNaJqhJRV7W4
SiY8mJb2efghrxXJrh8nvrh068hlyZM/27V04/7k1ONVP2W3qXI0pblpmWlf
RO7x/CIJ3A94aGO/2LEian/6yaySa8JGvPlFJbMOKocLDJVc3gHJL/CQAuIR
mM8B6zi+0gMhArLk7OA0qAGifdJyjiOyQNfmEPadtMVuHJnLLnxdyA0ZAf/C
4QWDqqBLU6gvkR7MPL00EPEI7FoT/DLWVsfogGETQC8d47p8x/pdF0+f11xT
3Mq7pt107JLbit1PcRG+bwzDTcAL44CPcJmw0ePzPZvP/HKrmyI9Qtdv/92d
VzHz62PQI/jEoA4/jmmLQQQsj+BH8ghxJEZgp4ZK7ZAC7szZTh47BcgpQI9w
icQIjjyCwIhZAx6PwOUmYB6BxQipX6KcZbT2qSOPAGf7vESzCcXgoEJdgXeg
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
CNLLsqI9srKvhfLxEu2HQuUkvnYyXzlJij9IBZ4Uk4TKifABw0c+q0A1VSB/
/4n8PTxx8PSRaGez7UIlng6zChST+ZpZfOVkqZZMHG87LvlaaJew7VrvmFwL
vspkfN3Odr8xvfUpbB1PZ4FishTKKVLdJIFyolQ5RyJZIpccNRRfUedf33nw
1LTl+/724SbYsXmfaO8vlxshG9o0dkvHr/T1+WB9wLRkrp3d4X+5z/qAD7x1
rOT72qf9H1eE9r8aB9fHEWQxbgMMiI+x61+du333yYzq0vPE1igHl3Ivd8C2
sOiAtGf7cQ05LI9Qbyry7hpxPML/zyHBZTbxUMgmLVd1shva3JTW89HNaTPs
O+Y07Qy3H5jdtAOX4b6S2j+neWe4bd/s5p1zbAdInW3ZH45LipTNB+a0kHqL
r30fad8P7bZ9XE/SB8bh2nF9/xxqH9tndjPbgq+ybw6UcJXJtv1zfVfEY1Lk
15adc8hok6n981qOf1v9KE1XcEknu6aUnjNIMpWS3SrFXnVRokqRqixKwaVK
kqIqS/EvlVCmqqX71WVH1NJUXH+xT5qqLJ3U96okiS//Kk5RFe1VSRP/9CsZ
5y9GS+lsEaeq8C1J8V2RGysjdbaPPKW8KE0nyVBJr+qLfq98erz1/LLWQ/Ot
qR+17ZlmSQlv2zPHkjqnbU+4JZWts+1zOtu5PqRMIb++0O5fn+X91dvTf5zU
8OY9c5pT57Sz/XeHW/aHt+2HevOe8ObU8PY98ywpC0h9RvueGdw43Lkz23ZM
tuye2XLs27qbW3T8rIqiG+qCixrpMWVRmqpop6oEH/gh4GOXqmQHqafAISFl
CT5StSXp+FCVpKmKdymLdyhJn9KinaXQfxcMAufuxL+qitlyB5wIfXaUQnvK
Xx2p0A06p5LjL/uQG4B726HixkktLcHDHlIWZGhFF9XS6+WyS5V5h5qyY5p3
zLT8Nob6bRyVOJHaNh6XbdvGW3zlzgmWXeOobe9TieOone9Tu8a1bRtHfp1g
SYR6R/JEaut4Knli29bxliRSkjrbbu+sT7Anj2vbOo791UJ+tSVNpHaOp3Zx
57LjQOnX7nfu+x3J46it4+zJk1q3fmBN/LB9z6z6ywlga1R0XSW9gD+5cvz/
lW9USTao5duLJUmKskT4sOW43KQq26aUbMSlipRqaaK6LE0t3aHq7MP9qpZv
K5YkKsq2k0nhbVdsVCu87YpEcmxSKXB7olqZJJNsVJRtVUmSSP9NZBy/cyWJ
+H5kvjHxtYo2qBXbpTC1E6VFG5UK3L5VKTmMl8Q65TVl/rns7AtfbToa8lVa
lwU7gr5ICvoiedAXqX2+2NHni2Tu+Nxb/si2J/2pnkZ6JpFuqX0+952b9mIf
rh70o+9XXOJxkoO/SOv6RXIQqffpLHdwY36xr/NmoJ4E5ZfJ+HhrbtKMFYcz
z59sll3XSXPwQu3V87MJp5BDlm62PYe0wFYPlghsFDs/HsGHETj6WJ4PC75c
Csk6y/LZxR8EAcYggBR4PvPUa2X8c/qCTM3d/TUP95bfSq19nFp+czsuK26m
1jxJgfJxivl2qvlhiuZ2Ys2jVM2j1Bqop9Y8IiWpm3Gda080P0xlf63w/krK
7TWknRuH67PXVzdzde9VOs/1q8OY282PfONsNz9M09xKNT9I1z47rhWcVwjO
4f+vnH9BIbml4l0ySC4peJeUkou4riu6qBKw5RVd0S2F4KKy6KIa6jdVgss6
MSmhflEnZvvc8Lbjsy6zZ8GvRZdIy0uld5yXS19/Mqb4hV8VgssK8U01V7+o
KLqkZnsKz+sk55X8q7q8U4Z7+yvvHdTnplbe36O/k1x5P1V/B9d36+/sIC07
vO0vlaT9VnLlbahXcXV8bgo51zfOi/1fHg36mO7vMtzaabqdasD1e7sMd3bi
FiMpDXd2cPV7uw2/7zDeJ33u79Lc2am5v5v0SdE+OVIhOKsuvKgpulLBO1/B
u1QhulRR6HcUkIPUNYWXFOTQwD8vkuOFzhruJ7/+PDg0L577Uh8lOTQv1K9V
wMFewlf/i/5+Y16oEF0BuSa+hMtyYZb26cHK33cYcjcbc7cZcpOMucm4boI6
KW9vNt7eZs7dYs7drs/dYry93XB7izF3e03u5hrok1yZm6wnPc2kRXdtc+XN
bfrcJL/25JrcZN2L9UqoJ+FDh3veTtLdhv7ma5urb26rzk2G4+pm841tbM+/
GicJ6rc3Vd7fYXySrhdfUAov6IpyVILz5EPN1okvqCRX9JLLakG2QoznUbZO
iqdJtlJ8SSHIIn2yyMd8mUyKszBZJFk6CWkXX8J1veSimp+lFF9UeFvgV36W
Hs7K0om8/SVkHMllveSKd0z/8b11Mr4e7oGMKcnCk1rFO4snr1JyVgUTHLdc
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
dsGA9P5ym70ppxNxH510X+dCvZO4QAXNVh0oms4lfyKHQ34bzwSalfSnsfBp
ShjBD3agqI6mBGWRIznzzF0Psb1eazp8f2DXAcjZ39vfP9B8ZBLWRQtUava3
ifwyQra1uOFvL4TT45jbY7To90XKz8b9VrMlHXU2T9IPgLqzCSBiQZe1eZn6
Oj9a94WLo1jQaXdbjbeN5P/+WiplPFarRmcwnAjJT1Ppb1NldJNKJryANq/z
FIDD00LMoQNq7+g36YvjRCBgiydd1zlq1UXfHoISiZdUUzUsEo9xVAriooWc
bo7OkyIA3acuC3TAYTBRtKd3SquM73nMPU8gVRAhX7PDG+GmEmajzo8f92Nx
B8glt9sDVLpaTo1bbP+Mc+j07z/u1fIhdLqbKN0Tzu2xOB3mnOD635+v7xsZ
y4EGZiabCAGe/58PyqTKFtlYwGkqSJEOIJlSLBa3HBpM7WJ0XmPDHkvQ5TmS
IkDN4B3Wu7MAtzeve+MyIn/kApgu+tTWx2YokxPKykJlECR/Sxwv8czy9e7M
8t9X02qM+D7JBO0Tz/wxqhhE+Ojgiincoh7rI9tWP1JSn95smYJaLr3+unPm
3O7kb4bMoMEE/K5w2J3lfHTYC6BF4Xydk/ioySSDrg8ff475bSUllg5Bp5oT
cZsHOaDlshSDnvxvc6l7Q/PJkNtlZiIWLm6nohbTobaciz+P5Ktyymd3vfvl
HRN1fpkqZNzJgbL+v6Zb1tCXXxmBavF5VQooRftijg+5XCa7XVeSgstx9khK
/PWnny1mQ/MiucRTJ+LoOu21mXUfNCU5OKtnjuHLnGZfwOb3Wrw2nc9nruQD
0xuRp4KHelPC5xzXEp86/Oe+VC0mrDbN+19/oaOuSMz7bu/AfPjxWPRNa4mv
M4ytxCTsGmCUTHBwyQq032A8cMBr5COzFu/2GBx2w6kcWrTo2zqD7itNcuIA
PYuQEaBg37IDdCrYjLj7Nn8iBF0WR9Rnvy6FetVkQQyZ9Saf29Yvp7/2Mo9N
lE5PLf5lKP8+zY6bjMer+fjhA5/w8FTgUKsJ+k2XpVDzMsGlnBarMR6y3VZT
LxN2Vk9XpFAkaAVJEgnaoj6Hzqg32Q5P5ejtDQLjwXVKSLoNWg2bcIHYFNnQ
4f5+1Kur5PzNMiWmfD6/tXIUhled3nC3N8J9h17iWY8tO8CNI2AKfWbeYebo
8JNRnX9WPWHRYdtXNJvyATyz2y1KJjSqAcsD4YlGxkdyNuFbP/PY5tmU6+Dw
fSRglumA3Wxw2swVMdqrJHO83+m0h/z2q5Po8yCzaghXR/FEFLCxzu/G/TqX
TWswHnKUF7Thw1CY1JkTCaCiNuYy9c4SV4WY0QSAQV/O+Dpl6piLBexGiXHO
blKrNr9ocbsDDluCQFynROJPK67bPPoAoI8uYGz+cZR5nilPg2znnPV7bL9+
+JWP21Y9Hr2O2+wKTdvS+lb621MOSJDHeWjWaRIBdyTocFktTMxxWQwMmxSV
9BqMZjblnDbYT5PsuCHkeK/Dpo0ELJ9vpcchl4qbdPrDoMdWLSTWg8wTCPBi
Khx0UHFnORNsFmk6Di1o5JRncE4VOBhWN8MGa5ep+y5aUkBn7diBgMfhB8o9
ehczZLJJ90Nu0qavTpKppMdjN7qM+sO9/V9++WVv/9dUxD64SsFXz3pA90Dv
y99G8t8m2c8LMRa27O0f+B2uOCx7gz7qthflYO+GLipBo1EX8ZkGl8nf5tKX
29wJcgSr1X44rDH/8ZLPsS6tRut0mmQ+NG8BhWF7VTYUcvgCzhPR0ypGjkS/
Vaf1uY3dGp71iEUtwbD7Ipue3uB20IzgWNWIrC55crSNVu0I8I3otDOgv98r
i1rKYtHojAdnx2jWJJsJ9LIrTmA24kFO9reRBGru+zwPQuCnn985jIdsHLS2
zeEwgcDvVahqJeZ32Pf3390UgiCm/pgotVwCEKPDdFDiAv98PrmtsQc//2Qy
W6iwu1unQC6N2iwNvMZpztCe1kn0hPFHI9b3+sNWKdqtxCMht8NlBmUxOMWe
n93QsyYDX3HXUH14tsgf1NxctZjgmQVmTbZrCJtASwq6Yr7WASUyznV/+Bot
J9duPEdADtDt8D+zZQEgNjFV0bU0JyWvHGGbIqd4e29aTV8ZxKL5esZBHFww
cdAIHstJNkqFPQbDPgca4YodXTBc0v2Xv/4cj9tPlFgy4Pb6bEdcPOKxmEym
VMgzqaXRy/QkLVDuoMMY8VrPjuO5rN9gstBhT6uckGiATLhneHUU+NTh0JV3
wLwylLep+i0EHiDIwVOchC+8MhrgMkAPO6cp0DhAUrioFaBLhvaZTAdJv6V1
yZSU0HUp1alQoNaNBo3MeI5lfypsg6mQEfxiJkBRbpNZEw5bStlQKuxx6HV5
NrioC5sxcC6pdho3a/dMhg/HYrAg+j983DcatZmko3wUqVeY/gULi8hkPhBY
37AuykzAbjU4jbpKITpsiX6H1WLQn8v+63KkqIRb5/SqmVGPtiHg/GFNIO4f
CEHFhx5zko85XCa/13osBOqlJJv22RyGkM98k483iumzXLJxzoyqfLuS7F0n
r8uxoMukO9QUhFC5EAH1HQnYM2kHiLt40OFw2iQhvOhkvkzF4TWdExNuj8Nm
MzFpp0L7nBY9MAKZjpzmEldHUeilTMIDcJGLOftXvJgK7h3sR7zGSzlQL6eA
IwSdlpLiq50mynK0WoguuvQD7qKg1+X2PNeQ+B0R6frQlfHq8Lc1qnORrhTi
YR+oTn065mmU00A/b47SZSlSK0dub6juOQxQsnGaSMWcINipuKuSTSYjTp/L
TEVcGdpJx+1eyCft/evU90l21RTOc9FY2OF06emkOSt6/X6nwWCmEsHrEnVV
Sl2U4jkZvl8bDphAGZ0exQzaQ5tdd5QN1s9SR2Ik4rWLtBe+66IQPc9H5w1C
DbZMAT9qS1fVk+MDDOOwbgOck4DL9Bts85KGReEFjWQ0yYyvd8VcHsfP87Hh
JTWupZqXyfsed30cdZv1MB+yfFDiI9GAw+8wMnFPng9Hw06Xx1LMxR96QC4k
AA85Jew0G0NuE/RV4zgZcJlATHEp11kxflVON8tpmAzxqIdJek9yIVCLANS1
Gr3AeJuX8aIUCPhsFOUvZsNnxcRlPjW44GBdb0bKjilIT3hSYOtxBIL0sc3d
tlkgwgCZgPcx0YDTZgyHXblMtHmVrhbT51KyWUoPr/jBVXre4kaXTMxj1Bwe
CKlASUxEws6A25SOWNERl/HZHXqZDUxq9N9mhadu7uI4FXIZLWZ9UfGCVo16
HSajmYp6TvPJy2K6eZ0uZaOxqDcUtp7kQ5elaCEf0Bo0Ya+9f0af5eM+ry2V
DOUykfNi8vIk3LxO4t8OGO7wamOrFFYDadXYHbjri5uh0qtwv2p+AZBwU8G9
+ucRHger5oPHcvKylBpXM6Nqun+VnNbSWcb77ud30Yj7+DiRTvndZg0bczIJ
R5YPeX3WkNc6OI98W4jPE6Vd4WI+q915kI7q7zvCkeTdO/wp7geRGCvlQs0S
9F6Ypr0ul0UUI/AtJSXq8dr0euNFMdqtslGXORR0Z2C95OlLxd8up7r1NAiW
DQm5QJA/UQq4QYTm41vcHJNviS1AxcO3N9tydRMJbSij7HTHEf75x2xa9S5w
Syr7L/h/ywJGP5D/83/6dSv2x68MgiHWBJakzNaOMFAVE6pj4AjBkCca82Y5
LwPiXqPJcd7uSXx8xYCCODj8Oel3lHOxsNsbj3ubx8ks7/FadXqj0W02pKMO
Ie1RpCjclvBZJ83U9Jrzeiw2g8Fo3bPqAM9ry3JoeJ5aA90bMMs3jgRPb7yM
VjvLwpYdwK9EEag2BXJ8kvkyE4dNWJLRCNBTo8Zs0XusBpfbcKKETkFIuuwh
j/m8GIPBgo+wGw+MBx9MB79SEWe1lBrVOBg7m80ImMFq2/O4tQDkbspRtNCN
UFy3KgCODboPH/wOs92k++tPP9nMB0zM6w9Y0kHXqRRORa1Gw16BQ1hyxPgd
pkMQUyeF+KilAOyBrihlglnaDwtc4dz9agI+lojQ7WmdVwvCijjAr/pCsxxO
xp1Wo85i0Fot+16HMRxy8rDeGR8VsgOHzbK+ohIIeU1m817AobWb9MGgq1qO
DetsUYxGXGbN/ju99sDn1LOUs1aMPvUzz0OgJ+nLQjgcth8eHljM+17rgUW3
B9CajXmjfrs/ZJI5v5z22i26bMoFkg0QnU57EPPrTwvBeoXmKF/Qa5HSHg6Q
r0XPJhxTjFEg7U4x89vzCN3tyeJ5l190hWmNqSiRcMhqtx1aTfpwwI5+gFXc
R0pF3AGngU/aC2IwEYYR2Lea9War2euynsrh2yp9kY2EcD7ta7T7Fqs+EbKd
Zv2LDvNtrCxbmZtyigXaZwOsfeC2a60m6C4DFXKyUTfwPjrlyjLAaQzJoGV4
xZwdxXXWfZdDU8wEqieJghwKR5xMyp/lghGvJeIzt88BGomvvEZVCuhltD15
J8CaeugqV6U0YCG/z+Sw6g36A4/DoNDe86NYOeePB0xBly3HB3nW4fHpPU6d
y27UGfaTEQsQrlE1ozBBh02n2duz6zVel4nngq1T+mUkfpryCxg4Puy2GD+8
f2d36Z12vcME3+K5PI6Jgj8ad8ZDLgCliaiHS4eOxBjQcCrpslgsAhUEeJDn
wrGIFxQcCwAsZElErKeSD+gMHg0jR8bQ7wiDjJHjY1vvI+mhzd+3mM/QmaP8
USYS93nEtO/ymAL8TFGoizOUP0N5I15DwKkLu/U63Xu/y3RzHLlvcECBgwHD
weG7/QMNAAw64q0fR/EE9Fh+7EhAZyIh17tffgF+BEDSatV4vGZ459OCPxGw
J2KudNqTCNjotOdI9J4fh48zQaND5wuZumfUZSGYDHjosE8CBBIwh6NOmnGO
aqnfR8oLxmgiroY7dqCe/yWKj1k05LNCUKf9FRY4rNnfxtlP4+z1STyT9vj9
RjruyAsuSB0efdCldxgPLIfasuK9G/C1cjAVhJsONdo9rW4vHDbnc4E7jNuA
aLN6mojFbQcHv+4ffgx79DaHyWp9f5rz35zFkwm322fMJF3RqC8a8Sq057oU
yXH+WNxnNB5eFiO90zjoUZA52Ww0GXRHPXombqpWwp8mLP5lTNUu8MO1Ep08
58SmMCee/69M4W7HDp7JhtILcITyliP884/1tOpWMfwOJ7/i/P+//GrHAvDI
FYmvMt+apJmdl9GrHYHdWRak8SVTyUWPM/j5ZwCnU4HzIz8I9scue6nEQmFD
SQrVzuJ5IVYU/U89pVtNFIS4y6nXf9CbzHo55a8fxQuCv0g7P09zMHDX2ajd
qd8z6K0WU4EJ3TczLxP0GsINIgyTggJ/hcHxSF61HeziMqmRtfCrm6rHEfvK
I0DGPpOSIzlqt9s+fnhvs5qO8+FRPVU/pSI+Wzzsui4lp22mlIu7PeaDvb2g
03xZiDz3eWDEsPYl2mPU6zSag1Tc1aiACOU3QxlF3Ih76GQAGAcDNrPZaEQp
fSAm3SDEolFPKGA5zcVyvI+mXZcVwJmZs0KEi/sycTcwUBAm+UxYiLtrR9G8
4A25bCLrHZ6zDx32T0HwiMfRE8YZI9u8JKpP/SiaCjm1uvf7e+/9Ht15PtI8
T58W0iBFY2Fnjg/n+YBVr/nppw9GnQYKz0rR5SDzjBuMrJRymiwag07DRN2d
8+h6kHkZKp+7wqrF3Nbp0yzIQDToWM2GkNMspt1HQiAZdoW8xuOMB9CylHAD
rHpocVV4h6RNyXg7Z4Cv2MvjpEKHjjJR4H1et5lJe25xB0Am8pN7HAjqeYTX
QHNqbLpJg8lLQR8QE6s+HrNVzxKrPress7ViHGRaOGBTaH8xE/F7HT9//Pjx
wwef13KsBEACbAYZgKYw99xWPaiwkNdSK0Tum/xmJHyaSI9DGUazehJJhB1m
k8FkOnS7DEzCUxIiMEuDfhubcpVzEZn1l4Tw7EbsXXIC4xIZz02RHp2LjTJ7
IsePhHiWCYd9tkTE3ruinsf5p2HuaUcKtq6n24hGQN+ERVdunNHpuEOr0f38
Yf9Ae8hHndNr/rYlXYOIjliosLPABZmkxwQI4v2vmsPDRNxdPU1txrnf5vnB
FU0lnDrdgVb7no7bupX0kkxsco5VAPTisB/+5a+/vD/8YHdaohFH/SR+14Xy
aCzkpKOePBc4zUXP8rHGGdWvpc4KCTYavCgmp1WuepwsivHrUuJY8NBJRyxk
PxVhBIWv86PHkQDTWDXJEaaDh9RIeFXyN1OGMqD6b9Ns9yoFRKNRSgPMvswn
OdqVDPmybCBLB112zceP7+EfkFbAVPc98fd7ZdURs2mf02o6OPgY8hjrx5Rq
+AO2vuxxtQoTcTk+vv/w1/e/Wu36kN9+fhxZtbnWVSruN3Exr5T0V3IxoANX
J7FqOXFzluBpV1GOjq6Y/hlfkvyneaYoBemIIxSwC5R3WqP+Mc8/j5StQRnY
gbp9RNiB6kJ5W0WP34TXzDG+QYP+Ojt6GSvdM05OB1J+WzJpP5ICHpfho/H9
hw8f7A5dJhkAGfv7nfJtzp9mQz6v8fDgo8OuA9D72FJgMX4fgtJkO9dsPGrV
aHR/+b//3ajXu50GWHqzqjDv81TQEfJbMynfER8/Fvy1Sqxbjt+ccpLozyR9
nVJ01uXyeV/hKHFRSEqpQAAQWsR7WYx9n5PgouglxezsBa+imJoP5TtiFL5F
d1BZrTNrbE9ArHCf/Icd4f/5B/6d5a1tZYv8VZz/GvZBPe+cfZNHrjEbvKqY
beSi9Y+wISS9eWtHoF69eh7R0YKF9L7Lzmo8dNF9ByP2TK65PnTLDX8/YW67
UIfbtFlgGWjcvxGuSsnmeWp4ngTpd1vjJz1WBSogOuDX62KyfZlZ1HmYnxiB
ingZgQqY1YnLMaiDHvbVzumUWBO2YevU7UT13d5aFvDcynIk3ba57hVzkg3X
Sun7eka1r/Wu+dEFv2wzmy5/N5JuKonrUqpbTa96/HOb+wyro4lO9f2zFFDL
9hW17CubETpVLojz9kMH6Ke0uEkN63z7Ijm9St01Ug/4mfzwRljccNAnoxuQ
gcyihS82qPG3VXZW55cD8bbFzWr0tJ4aN+jRRfquwa+67LL/6llEUuAFA9X7
iMbNXoSpPHz1mHhTnxWivWsoB9mLJ53bV3T3OjXrc9MG3z7hTvOpajk1qKaf
OuwGQ9wIT0MGsMfNefL6PInlfVY1mC5a1FOPwTMRTRpP8tb4znVyWEvcVtMw
uNMbYVBlJtfwhunbZnoGIw7vU0/PatT0mpreJOH1HjvMQ4O9bYKQp4dn9KjK
36HMF+471LLHLNpoO9hGQCXeFI9duPAbZ1VqeE2PAf+gXYxFn/+uMGuz/RrV
wj0Wflbjeuf0eSl5Wkp1ziiAoCt47Q6zabJ3Nap3nrqppNpn1GOb3eAZXvJn
Cwhufxhmpi2hV6WbF2z3nJ7c0A89/rHFT66gWQqm5awHPAWj+a16wn2Pv23w
IHvJGbrMooGON7ctdnglDC75eTtDgvKpcY1gnsM7iHi8Qj0v3MVTwBgddJBZ
tDPAMs4L8fpp6rYhbIbK4wiWrTCq8dMb/rEtgwJqVJhKPnp9Qo2u+acOLH/u
80BY94RpU6if0fA5oyt21RUfh9zDEJ1LxzeCwIGe1hmNmstifNaWbmvCHZJ3
cdLKTGtAIgCZkIOBbeahxdwPxHlTgH7Dc44tcQGVWxLGx+5xoKYHdWGEsE0i
x9DUmEKZ7ZllEsVILSHuqdJygPjkEf8qhIKqvC3BMoc1O4SJDSWNDOjK80Lk
/CgBS/4FD9MBbxJgpcOc7JbTzdNUr5p8GqlBP2D6oWG9KIVA+gHAkmjvaNvn
3Ne+CLRx2BCgcQxji2FmmdsOSAbptsPP6uz0Gr93SiLQgjxZ9ZhJg1/c8L2q
GtB7a1iER9w1QaDJ6o7xzuDIPo9oGHF41qyKIQJWdQoEzhSk1g0/OEsiY+0L
rct0uRS+PE40zpKrXnaxNbhzTz22fZEC0NU4TwHc3ZAgY/BEgFhX5VjUY9Vo
tQmftVVMgZ6dVDkkjG2Qh9zwLAmL8baGQgCFZEuewGrqwU8JmPmwtCcAw7ow
1rk7qNzI9E/jOOtUdQYEgXzLzvto61l019jlMWoEQxTE1uNo60E0VLplq8oR
/heeWXarzquv3kQ75ZJ+PVPwxptoW0dtba1uXjXeKibctpo16U0Dz2KrQpgE
IeR2u/pqDH/pboThDdHov9vtv28peCZ9a7lQlugSjGL8eaxsUL0qZDZiHNF7
4CO7u57RuRrrYDAHGNmmekSLnDppSXc7RTDH0Ijq04mVRLUrkWftWMwb1oB4
XmUZ4n2HeQQi3IX2ZRKVF0S6TOL9oq1tQ45twq/wVnckDhI6XrYy6xHG6IAl
cE/iDGOYtTY7x7twloIm/TZA8/czQXQbYgWAd34AxNXHeGXo5g10DyN/Yn2M
QkbWIAiQzQgPpoGEgXtfBvILmpIx4MMuMjBHzjIzZBOJw/j2GBBPgPaXPXnV
UzYT+XGk4LngAQcs4HGEkQoe8EQDNCXD2EEd+Lr7110OqDNES+gKly1AQSxH
4IFh6PCMFSr0oQyjAO0AgFwPt5IBJrkaLYGU0CDP7zsYq/+uSy8wYAUNCmUN
spEE5cZDhSNACwKeROhuFRmeYu4Jdx32RzxqEmUUBCx0++eB9JmcCMZwcB0Q
1CgWQCkviUvSsod/cuihT/4QAwmL9NDgH5oCNLjpKS99ZdUjhR1p0YDJTP7O
zgCvZxKBagmfA7Oup3zuSJ/gW8Yyhj8iRl58TxIiW0XjauNPIxJclMQ+wkg1
UAdGc2s1wLhGT0S4vUYffWpL6y6uqU/T/OdJ7mWM3U68PlQ2AY+QiXcENouB
1gEaTeWHHhJ5vBdjE5EDblCH3ItTmsRKUkNVTK+EYzns91vSUcdDjf3b4uhl
kHsiUUxX5Ej+l1uMywRPVENeEIWFqgQ+BDQOxr8dSdDDwJS/3OY/TXKvR+B3
mwkkujvJEw8ciSxqUHDyfV+ZN0keHc7FdVva9GV4z9UIA+p+G8ifRsqniUwW
lETiCaBt4rErrmEhQ392lDU5ibwebF3mYCivj+OxiCvisVRPkv94Ovp8m1Vj
PJJQfvKrKyNMcsA5JMwdHofZkNMTsAQwpBiaC9mvA/EFemxwpL45wY3igizh
u6b6XdRmoHqhQEch5sRwl8PthpKqLNTQ91COiHSsPE7kB4Jp4WPnROwQ2woL
QglEFlng3GobIQeWrQIAMhmwx73WIu0BPfi3B2Wx281WI8+8PhFN9hjxVSKO
vqAxMSDeHdkJh878PhCfUDCCmEUWMFOdS4kQXrxhCupfQFPzxMtoW0ctn2/r
s9Pd30f4jz9UjgBftI32Q/b/pVdGsMur3kTZ19Bw2/LxtnxnyGY24+xzm35R
01EWID36co9x+YAGJ37dKEAemszLUHke89AngFJeMBobiQXaZsiJpG39Z7V8
SOqMZGwNQAWAvSH73MF777G+jO0M1DrKwwR9Zh7IZuDjBMZF2ZaP+ZdtfWWB
o0/6dvjDxqECA7U/1eDSG3w6vDM0woGohEX6PBSBs0APPOJRU5kEikSb2hPG
iOafUaZx8PTnrrAmdV6G0ksHQzVCOUzd5Vh4xu1WDD39DK2NxGcoh3VHZhRg
5s0AlgagRMyvMc9hum0fTzTD+zxhOXyjBHxk1cT4RciJAFGTI13o0NJSowPh
xhFxvBHIyV9cWS8T8XmE0JScOBZXwB164hIjkeLhqc0g89wFgSa+jFEFoFAd
iFBz0xef8V5QvgAaSX3EgSAe4VdQrBjdek3aXOPOOfwEJZAy+PdZEBgzan49
EB97+FfeliSFJ4JSXm3vUu04GObxoUk/YsovG5kFEKUeulKoF2j8JYmhuoJv
RBKExAFagyc+kQsetMQI5CAHoFvwufjXZDD2MjApFFOgknAPvy+89PEPwWAU
077yMlCe4dt7IkY97QtqNZgzCEWwAqrCl7EI7QB52YxgSkCb0D/oqA9TfTUW
ViMSMRWDWgtq6Dw1LOrOb1blBRn0MiJ/+gGVyFawYxw/EOb4dFwO8IgsiEQQ
mOuBsiQdCIPy3If3EYjHL49GnDHugS9B/45xsHAiYR3ICy9YkoU6/evUdSlx
VUg8NYUvE6iPoctBjH8i9yJVh3a62Rd8Ck4GePoLDOgIiHYGWx6p8ZGE1zhI
ryyAlNDkj4Co7ICUDNDDAdvpZEnX8ajL1HeDkr7yCCVjeE/4OvgVxAIuGcB1
iOgApXSzK1gUHXy35y5LFgUuqE/jLHzO5Cp9VYyfyyGQY99n8qcpsg+yJHEx
okCG5TBGbY6uoSNpm+JilJ5xEUEdlogL7nWBq1sEJBZ9BtXBNmgejYZFoqRm
2y0FIrhGGP8WhvsBESlGi0Uhg3/ZAeAohtyE9gFAomgaocABDvIJvhEgH/qE
YyxW4q2K73DXwEhul3KoU449j5nf7+VHEkjtYZwlwg3F0U7QAf+CkVIFEQgc
PLADwva+wdyNKLJRI6lRWPHv1qkbMio7eLUXtNjXFFkP+lOxWEctadFPxO7w
MskTOwJqhP/1xxOeWd45pr4ND7hjB3/20tnFC12Tnfn5qyfS1qcII71/nWNQ
8c8z+Vtf+jLLfJnLX6bHIFu+3kpwfbnFPAb8HEK+8G0uYrjFIdZcz6WvU2zt
6+3xitQndTCEI7T5DQMbZr5gCWKbr7PCF3jQHCO3f70tfBmI+N8hCX44ED8T
JPYN6pM2v6lBEaHCjPjw47aSvGMr278p8IMpDLc+abAwv+MLS18m+Fxo5ysA
pyk6WuD7zOXP0/yaPAvgzddZHmp+ncA7w/fmv4wk+C6SZjB+KX6j/BXK4T3J
X3D4Osvg+0zIN5KapI6i3ovnXuHeWxHQy5ce7tZ+nWHvfZpKz/gm2MjLrQS9
tD19sIuidtckR9XayA7Wza1XPwEepIW5+GkMckz6DOJ9LEI7XwGmwgiOpU8T
AGkEN47ErxPxq1qyK4d++zJXXiYYvf8TtDaGl8EB+jQh+YmI4zKRvo5FcpeM
5SPp2yTz0sPI/y9jFnrm61B8mQJIk4hiwpZf1GdB+QS0D57bemjRj8ggiNNm
m/CUFrf7K5Z4rf4/tt67yXFkyRP8zme77/XrrqpUlAAIQQmSUFQAtUgmdVIn
tUqtRel+Ym7MZmbPbO+fs3MPMLOqe9aMRkMig0AID3f/hStgFNPkp1Xq5TyJ
v1oCp8p9hIfAowgreDlLQudh0j4tjY94Da/IgjIAL8XIi0XmE6w4dPg0Q9oA
Jyx+uyp+vcx/Oy1A469AkJfFb3AT/yxit4GELgpfLwvfrjHHDmxzmI1vl0X4
Ieg8cIETC5NwWvx6UYQ5AWXpkZyxI7MCCIORy1lT936co4aPujoJsnizLzzP
U6C+wgTiPF8WvwM5nZWgS18vS9/gFUAkOFGlb6QP33HC4T50uPT1CjqWhgkE
EoLO//Os9PtFHroBfAMd2xZJ0LS/XGb/cVn6fYOk9e0q/8/L0t83+e/nSACf
zwpfT/PfyGLBcnzdYB/Md33fFFB7wQRTKeIiBRIKgaqJCExnMHJigJo/JqPG
oh64Nb6cH36/xO0JXO4zXON2OPwGxH9WBFYA95/XBSAP2PiY2hcI/iL1Fa+x
/ZezQ2QXl7ARoCdluP7XxSFRs1GcAV0BKf7jDDYytIEn539HdoHEjKt2QZ5m
MhOyrb5tNyBu6i9nmDf42/WRidFMFHBjVlUwyw6SPK5mbvlLgilu8KwbqBfz
wZqMBd4FNPOEuCmNG3aBNVaAuSGTuUTwBQzqkTArUOH+dQHr8lN75H5pZIOX
RyBBPp0VPm50YA5fLkj9BXjORQkaf7uA6Y1De7j5zWR98Ex8e+ZxlYAhYKWG
BcCcmJkm7jVxX9x06SSJ+7b2AlOcmdmHtgxtm8kz9pqAYhuah4WSe9vcp/9F
7Ag3Y+PKtAv8QAE/EMFrwsA/IgXT+2hVIJEdJmrQr0700160V1K6LXV4pC7b
Su/Q363LJ0fKph8dVCLtonRSUVbdyLofmRwrvaJ32tLGR5FpS+kf+mfH6smR
Omup/SNl0FZPyuq4JfWKvnUvOh5Epw2lC09rwdMis7bSL/n7LeXkODJo4m/7
0P440q1L8MZFW530I8u21in5Ow0F2k9J+1lLnvWjj0RhILhg+02OgxKv10gh
Zn7a035qcaR2i+F+NdA/VvsVtVeXhmVx2YtOutFRNQzvhetpLzprKt2SDwY+
qUfgLf1yYNDUhpVIvyEPy4FpUzupaJNmuFv2nbS100FsCmMv+8YNZVhRJy21
B09uquPKT7+t4W97Jf+wpU3q0UVb65e0TkE+qUXmTbgvwrvG9cj5MGbiFBNf
3xIl4cZECiAORplbctwEq7NqRwZVrVMNj6uhZSc6rmljmKujIL6rrg3q0qAi
juBdjeiwKfWqwV5DHlSDg7rcPwoOof817bgW6pYDi24ExjvFvon9koq5JUl/
+mVlWNX65JnDhjasRvr1ULfkHZRD8+PYrCF1S8FuKTSph2aN8KAW7NVDo3po
0gj3DoP9cnjWks6HiTui/N/OUqiUAkYYp01ccP/TB/5cdeLwilYl2K+GNm14
eKRXC3fJc4YwkLrUPwwNK/LsWJk0JWjTr0M/4RPG+2XppBHu1ELHpQAsyqIV
nTbVblXpHomTenhaD2H7ijpuqKOaMqrK47Y6bmsjmBB4XVOZd/V5Q+9Xld6R
PKnDcitjbKaOoH1dhUWBOZk1YV1eoyfMqs1zrLkDijdazEnFAdOmgBr43Hhc
wZ3kZhAb1bReRYHJnzZC47oGb+lX4WnaqgmLrg6ryriqjI7VybE6rMDQtAlA
gBr2HMhmAjTZ0QZHSqekDI+0aUM9aWFL2AVDJDAFOg97akw217iubnrRVTcK
xNmrh2Hh4GknuOhhIJIJ/PZIGdWVVS96i/WsDZQsM1CQ8m9YwBRk5JjFMC0L
TwQp3C0ym2ZsWgfiUaAP0OcJvLeiwKYeVYK4PY/kRVuf1uIw7YOyAu8aHQf7
sD3LCjCBUUXrNdQeMgHYPioQYQfuN5X1ILLq6INWZAxb/kjrN3AU8ORlVVu1
Ndg43YYKb4GWwzJsKAVWljxfhfsn1ci6m4Lvdk3ut1RgJmYiaKJHxc2iP2bl
KWQCyAr0K6IfvqxRJ784yU7r0V4LmI8Xtu0YN2O0d+jtNiQg8llbHRzC3CLj
GsDcHvqBHQ07kXlLA8bVM9t3I4NyoFuUe2VgTdB/6Lm8bKtzWK+yv19CBgW/
hesusscIsMqTir9dhK3nh2aDIz/+F77b2uAQniMN0PE1SvKXFrY+RRgtgtr+
R8KoX5l59u3o5qejHrgmkQij119hAFrhor7NYvH//ifaEQDjbAshmV4648TP
10QoRF8F6+v9rZdOxjyxf9nggdvlOFtLhRi7lWJscsAZ9jsFp92xv6MGnEdZ
KShx7z/sqH4qGfPkDU7wOmy7770sZfh5N+1wu+xevzPksQuM0+21B/xOyW9z
0jvU3k465i0WRJ62Oyg749qXA4LH53Azdo9rV/YIHsbhpkl7L+fc33EyDi3g
LBhuXROsDpvlYFcJCD6fQ4D27M5h2nM+1/+O0QrmeE0rxg+8QOpumJURUp26
KAVcTsuuz0/5fTQvWKmDPR/vzCZ8qYjfvvveZd/NxHy5uBj0cnbHO5d9X1e5
oAff5WepsIcTGBuMy8fTYa+Lo3cpakfyuCqFYDDE2p07DLsHA/H5nLzb6XJR
ks8Fv+Upux/jtTmBtlGWnaDgMiKioQleltnb2QsE+LCP5ygL6ziIhT2jYw1U
QdAHoLdXgFUx+ongAkQK6WtEr+kXLD6ebGX9AQ+1t7cj+dhiKqgEGRdlY2iH
6KWDQZanHF4WHerSUZ/otXOCw8U5PG6Hl8F1CXsZJUg5rB9Y+15C4jIxMeRm
GbuFdVrkAB/ycixj4Xl70M2ytINh7AGBCXtYnrHa7TsB3llIilqQpRwW2nmg
+CjF5/QJNoY98HjhFU4XZfF6bHnDO2lFyWEymq3xYJlYEExbBqjTt6/Wgftp
ql/RZMlls7z3uuCHgYTsdlEOJ33gddtDftbNOwTKLoeEWMIvhhiBc8CdgNsh
uoBmHAHBpQZYD31AWT9oITanB2SJcVD7DvuB6HYofsrNWICiAn6XW3AI9L7o
c4ghl4d3sLYDt9MO656M+AXaTlv3RcEJw4EBulmHx2v3+F0sbQOyNFTfqBF/
mGORQbQCk/pl5LwdDTq3K1PrRk0bry9Sz2fG9TR9XInJIizsHkxm0OdUAhzn
hJ4447I7oQnBIO3m7NgxAUjL7hZsoQAn+2nKsUcxlqjMpXUxJHEMbDeHXQmz
IR/tpqCZPehjYXl4AciMCns5IB0HZfEJrlIqYGhexrrP2S0hDyv6GSBFIEif
QPs5BiaQ523ZZHjcw2I6n9YAxEiOplcsgOgAts/KRENbpACf5cDIGj6O3+d5
q9fldHvsbpdDcNsln0MJ8FbbAcNZ4ipXiIghnuFhumgHbBO/n+YZu9vjCPk4
1uXk3DYpwMOOc7F7DupAFOy5XDAmMZTT4qCBGjk/R8GTecYWkVypmFeBHrsc
sHf8vBO2Dzwn7Of8PE3TVjtl1SR/OSOJIhD/uwDHVHMiKeuzjVbeVltbbQsR
Pk/IGLceR3hEBjpAOe1h2F079d7jsRfSYizopag9594HRea8AafbBYvuDHnt
PhgvMiWHpPA+ngLmBgPPp8RoBKP2nAe7vMcui7TkgyXYCXpsXq+To+2w7yQ/
D7/laQewr7jMldI+oKvd/V3Ba1dFZIbwfBgvsEd4uPPgQ1DmMFP0CGNpYRQX
w9h2LIgCoo9mbMWra+WrA8DWnGo6A5j3t79Cy0jhtOv+2Y5gGknfjtdM4fLT
tW7WDjDtBdv7G3K9il2/vh2o4mxmVAvhA5uN5+xSmAuKHEoEhy0uuVtFVQww
73+zhdx8Ou3LKHwgwO18eCd5+EiI9bEs73Zge97Oc4xHcEREThTtnMsKC5mN
BYCAYcc5nbC7eSnMigFWEKClLShwfpbx0I5IkAsF4bVWygnXfDYi5nSvzWqj
KZsc5rQAywt2YA7ZOH8+019OQdUhrtTrbbmZt++3O1gFqRYWgIk47arHEwkA
47NRTpvoc+JuCvsY2wHLHGSigZQaCIfddtsOTTujIcHvd3kEpyhwAZ7hOKvH
4wwFYSoEl4thnPuqXzhKBaJht5PC/vjcuPcFnhU42gMk7WNdlDMU4sJBkGIU
sNCwV9BjgWzCK/DMwZ414KNkyS3wNoG1R4KecSfycIoHy8D8b8zKAqucWYPs
eqoTy0LyZZm9G8aO80EP59j7sAPbp5IPh0MUQ9tYhsLIID/P0DTH0fFIICZ7
fV5a4CiBd3l5J8gyr5eSQ7zkYSmLFbg6LGVKC4AgsDlsFG0TAy4pLAg8tOcE
gYMxchwVhrXwcW7YpXaQhmwxAcyHZxgbrB9IbegAyDSBYXwsJQguirb7BUcm
5p131UdQmOeIC0DDIRYERLX45xw/aFtBwtZPGoocZm22fbfLWTQChurmaAok
kd8Lw+EEN83SlBxwRTQ30AnPY+0An4/xwoejgl5WDXEcg8kvZNGbTQQUmYWp
sDN2r49WfdA3mudpv49DHYCz+bxMOMiDDBAcwL6csNwZI8DxTqDqgIdXfJ6Q
wPlctN+NP4F58LBOQwuc1GJ3k9QDKf38mgGV+DJhnbIMsSlg5VDECCvMTHg3
Tg2rUU3iMYuFyyb5eBXkK4owKq55NJAIAdbroUDUegXax9k8HFC1IPqxPARM
bDISyMfCcpB3MaBaMJLEyxIHulbAw3hRCrj8nEvzexWP28s7KHo3EGBzSRHm
DTQmgaZAuKhBzu+hBM4mwNgFjmEot5vOGeK0i4dy5Bwbw0N+oINV+pkU+zCL
75g+SNBm3dfThh9oHmSKyLFewclzrMA7Zb9LCQtW2kG7bKmYO5cIyMA0nQ6P
yxUSBSAYkG1en8vjht7ivlZlj+L1eHjY8ZiL6dCQErLHhrlzKVXkpSDvdTs5
1qrIrkJK9XuBeq0B3hUU4QdOv88VDglA2Ay1Y2f2w5K3UVJA5Nnef5A8dL8U
eloAL90eEdxs0QFWqjLr216/MoFHLGyqX/b1XAxowg7qjexzHaYD2aif3ney
NtiAfEjkPG7oMBC/A2Q46B5AcuEgC2/f292FnqSNQCbi93pgIMgVo6rf48Z8
lcDogEXADARFaCyIbs5BO4B9aSJzlFZCbg54l8DZIxoHmgk+n3cE/XAN77L6
vK52Rb5DT7n8FgVM9I9boRB/86L/OT7XvH5l7H+O2/2I8QjMn+0IwzcUkCVx
Bz9f54j7aPb/hCDMt0e3QmEJIlWqVdR6LjppK50jtQ3X+cBJM7lsGMOWnE+I
vZo6aqqrptEua7VssFdVx8dqNadWy3h40j2C9qFeWetU1OMSXIdrOQ0aLPp6
taxUD9VGQT05VvHJcJ0XSWlFsVPWuhV12DJqObGWxetVSx82lGpGrRdFs/3x
IbTE317Ok48XoOpgIk3i1/RmTSDhXW/Xi+zqON4qK0eF4KRqnFS1dlmuFYLd
I23c0uaNRDUXrOcik+PIopnoHGmVvHJUDA9bOuBceFejosJFoxDuAhCuRgcN
vZZV6jk8ojnv672GVi2pzYLaqWido8hxCZ+Moyir7Zzaq2mjlg4DhPZ9vE7A
WBo5+TAZ7FS1ThnaK3XoSS2yGRrPpGDWIyngiwV215m3jECmBYGYxlKrdqxT
kY5S4ZNmbNnX+zWplg3DZA7qkWEd+qY18mq/Fhk2cCytQ+xbsyTXC6FOWR3U
Iv2aXstFoD1pQ6alJMN4ocMwtyDuG0VcrxpcAHyuoEGzAmuaVbvF2LoZG9dl
eF05FYbG8GmW1EZOPc7C6ijVUrieC/dryvlYe57HnyfIJ0kuOKy/9oAOqMSO
ME3ekg/w0otedHgUrmal9qE268ZO6lq1GKoWw8dlaVBTm0cK/Nk9Cg/raq+s
to6k1lGoAWsB7y2EupXwsKnVSpFyFnB6dN6M9etqtSQdlqRWBdC91iZjgVWG
dWkWcfmGWIVTa5bC8Bm3EtN2rF4O14oSTFS/rPXJiDrYXmsVsU2nGl/30g8L
wwQFoF0/bkMSgPmnSMqjLDqAAfxZYaJpUlY4e9E3hpUo9Lx2KA8r6gjovyjB
EgxqyqilANn0KkDYsC+0RjHUhDZknitFqXEoz5uJ6XHy+FCqZqTaodpvJPq1
GOwv7FhFbWJ7CRqPK2q7KFVLSrOsTPHkLQKLDqs2aALJqTjGQhge0qzgZoQl
nhxjldsvc3SHwJPJH+ggu7UprE2bgk6EAjpKXY+M6bFxXIoC2QB99qrwTPUY
iUQ7aRlHJeztSVNb9hODZrRZVGF3D2p6vxqt59RaOdLB9sF2GY+GRmWjVQhX
MwpQ42k3ATNQz2uwwYH8+rAZkbGE+434SUvvVoEyg8ewPSvISYAqYPsAodZz
oXpW7Nfji16yV4kcGsFuXVljKdUfW/4VHaQxiQEphk7qR5PqzJiQAZOBT9rA
dsRqBjiACntnXInUoLc5ddQyurjNkbG0yTewr041MibnwLCn2kfKsqmPWhGY
W2BWwBbGRwq0r+UJY6zgrzpHCsxMvQrDBx4iDo6VVQt+qOajIqwdriB5Mvy2
m8NprOQCx0fqrGMacDPIqCcxgg62yb2RIQ/NwjTRn9h+9DWg7M/iwMQIF90/
2BFg1KZJmqAA/S169/XaMOOOX1FDwTwmen2miSD0F1JQFV2JVsCOik/EB5h4
mCeB2m/m+YuZcbVIPs8NUu4c7hduRvBtkAgF42YAv4Lf4v3nEyxGcDkAtaoA
9++xfpbxMCNtZokL+O0M/4vHmwMss3g5wCdc4HOS2Ia0h7dAm0v4L/ntNXn+
JXFcxCL1pkF2HX+L9jVjDR631xjMeDeLPy+TL4skbOQH9G5NXcySV+T5j9jt
5M0odT9H+92ns/ztEt9+je81bkbAoo2nZQo9OZfJu3nueqmb98lYknfT/O0w
db+AaUndT0EcQ8f022ES2wxxLE8zA2byilw/wr+miYsBrFHyBrjlJHd1An1O
Xi+M22n8B/NH4/LWy+hhZd4hvkbLFEnknngizplYjGCdfZxhvqPrExwLesJM
s7cnwH4TWKFmnoUnAweGt1xO9dsTXCMMaphl0TYxx3DC2wnGR1ySJ9xNk5ek
JYwO9Ba4czvXL2CqJ+hffT3Q70fGzSR6OYjCcOAJd3B/nLycYHq3uyneh2bw
LizlMNZJ5TWslWaW2sQ7xPXofutuhNcP6HaI7W/G2fsZejfdjmOX4+jFBGf4
bhK7G0Whwcvc+AjgdwwtY1ej6OUkdgv3YSygky/TdxPjcYyhbTdz/XJuXC+w
kMTNiER8jKHDeA09hHVEq/0YDfeEpNPXJ2kYGhD8ndkGuj2CCdm2v1satwvM
3U0WOvFWZ5kEVqA14Z7UGiB2BPRKep4Zz4Aa5ilQv7HPi+TdMnW3SN7MjbsF
+qVgseOFAdrdyyr9OM/eQM9h7PAWdLCH3+aesRwbsOgUzslJEse1QH3m6iR9
O0lAS3jaLR67AW3DByAk+po+kE2HywFkNsen3ZKlvEXnKHIN+2JGcqHMU88E
0byigyy6uW4JLHs7eb1PPJFeTrNAY19h5mE7nOWf1rAFjJsl0EzuaoYhA1fL
1Av6cifvT7GcEPSHBCVBr4D4YSzQHjAvekpfjwBhGeS+gdsZfjsiusGcsAJ4
5iJ/jYkE4+Q6ebWEzW5cYjhPjpRYMpC9zGBx9dsZzGTqERgR7NBp/MexwI8w
f/0BqzWRKrQTWAXSBreSfjUimA5WBFjNDNYUxB8wpR+M64IwlmvCgvBzln2a
k7cPjXtMbwXtsxcn+ITrQZKwNQPmwQy5wl/NTMaVuML7Sbi+mxdgTq6GOrZZ
GCZzu8YnIBO4JKO4n5KkBMsYMOePJnPeMnmMiSDeRFum/ROLNkzGbiKFV3SQ
NR1EzxtvdoT7s57naZV7C9b7SfN/Y/hbP6JXdJAx0x7+JG5ej7DwUDH/9QKo
IvN5BtoRmtofN5lHM+Z9iQVVv5Iog/tZ+mGV/XKRIroT2iC+rTIP6+zncyAJ
9CACoEpSi+R+X6FvPxFk8Nv0k9lPeOYGE498BRG/yT+a36T/Xwll4vUSoyHM
6sYgv37fYMLz7RhJ3D0Wc/ypBtnPWUNxoy3THzfGt8vsl3X24xmqdt8uDomr
ORaW+rKEm/nvVziou0XqYYkuDR838HZMmfgdKyPnv5yhD8aXc3R0+X4Ofch9
R+cBw0yZ8mVVho38ZZkGBvW0Sn9cG19JbMV3HFfuC84SJrsm1ykz/9Knde4z
6SfMGDyTeD0Zr/XT049TkvhuQsQBBuUharhfpm+XsILpTxtMsgdS4yM6jaNr
EJaKwwA00GAzn9aZL6DNokcoKLekP+iOnvq0Tn5DMAUoAxTCrDkiEt2gb2Mx
cJ4zj6skcd5OvSz1lxUp9Qt9XpLyW7h2QAmoLX9e65/w2szClCFtSIWyDSrM
sBPv0HaAEQcoptHvSCd4IX47j9/Ot/EI+CeazoEJoP/k02sUAH5WWCv58zoJ
PX9YwdPQH/Xjyvi8Sn3dVklGBgWb9GWTgLHgfILSjjEUqS/nqU/n2bf44q13
EHrgwELjwOECoz9gIOZYYHKwcFiGjCv5aYmeaZjNGJb7HF9Esp6mCEwwtl5G
OEVJUlIz9erJj5ODs4Fn8rnPF9nvQABnpU9nhU/LzCfYIJvM5w3ef1lnXmbp
53kGu3GW+3qGBQ6+oF9N5tsCFiXz+Tzz8Sz3bUMGhY5k6D4EQ/5yhtm0vi6h
8/rnM3TY/nqZwScAAcMbSYUy0hMgAAyT+QxbZpX7ahIbiUd4JIjmcdtn03aA
Qf2PQDwT2Olmse8sgdjp+0Xm0wJ3/WcgziX2Fv1zztG1jNRoxk30hAUKUw8w
Fgwjgg1l3seTHPgtbH/iqIbRyi9YjDuDpXXJ/DxeYMyCabmAUcB/v6+xTM/X
cxKVQLYYTMXjGhNRQpsv+Mytf9TXC2Q+MI235CiApFPY2g62euB6m9mVVG02
Hl+/t1leif8/hgIt365NZpJ/2bKdDMkhBvI6/gXNYXlsMwFWAyOKPV6k0R1x
uf3VCymYCFvgq3m9PaZIv2wZFGr+LxtMnP6y3L4FGBG5g6OA35KevDHeN3EA
rDtDMrj+gWn/xMb1/3YEhEwDMMJ5dysR/tc/r362I5iavyk4fvreogDzmggm
/eeDKfNdL6dx0J3O+6keIOiSXEn5OyXlpBI9X2DAEdpqSUTJxTC+aGvVlP8w
BwDWv2nHLk8wDy3c7zXUegE9dkb9GHGExjp9T2RFiFhP381JdAOou6DbE2Zo
RqkQgY7fnzBaBEkXYw0mcfTnP82RILUYpn3btiSrjFUD9KsFVtB+qwPyozzl
BI9J75aZVTdyXFdqJT+gufOTOFlHdLG436oWqUlTrh2K9aIyrmG2aphJmEPQ
iGbHRqekwgxMG9G7CeydJLq9TYx7olA9oS0YI5eB0d0sdTPdzdU0QZA40epR
DQNlI0XSxWDa80+g3m+ydxOSGIfkUr55vYZxmfEIqIii8vaKFFDHTjyi1g0d
S01beDzVPAqN2pHLUeJxln6Zm8V2EQ2d9uOjplorBZsFadIMn0/QiwmoHbDD
uI61JpuAeRuR02EMgMkjhpslSRrn2MM4cQ/8GYAhrBeQIvLt1O1J7H5kKlQJ
mE/SJWTj12MzqSny6vtx8u4EQ9LugeET5f96hsFrgOAAC6Ab6jhBDo4S13P9
eo42hStYsnFieSy3y6FKNnRcCs06UdD6gDDuQCcntoabaWLdiw0acrUYqBQD
g4Z0PYw9zxKILofxYVWpZgOtYmDVjlxPUSu+W2EgG3zuUWUlYdro05u5X6fQ
dxTUZuLyCh+MyJskHom9Hj4YB4EDwXiHh2kKjx3m2VuCAtC/aJEi4sws9JAi
UQk4doznnW+j/0AcEP0z/jIHBJc+P9HnbWPdI6F/KOVThNhSl8PEqB6pZ4Ot
QmjajFxPki/T3AsJw1/UtUFJ69S0WTdyM0mSxHoZIjpRGD1j+AxISQyyAGF9
i7F+KXJ4lYHhPEMnsQ0GX6BqsUR9D5RtYN0fARqTeqZ381dEQ8AOgZ9ZYq5C
P5wnPFSBUeN5O7C+07ExrGk96E9JbZbEdincPdRmx0hsTyQ/6uMqfTnUR8eR
5mHwuCj1yyqgy2esN52+GuuLrtaqwG+VwaF2OU6ZhbqQyOdp06/pHn3yMxij
sUrfrAySSRVjOUnQDQAibIPKOWwZjFNIkfZZElazbfNM3AhR31j/QAqP5HDg
1ZiYfrt++GFehK0Ue8II0NzrNSbuQMYLczvDQCfQT65OEsdV8aggDyuR2wUy
LmR6cwwDB5JG1EPC5TDWAJM1oVp1TSIa7uHO2ryDtaKeVjESxgU4XX84SZus
6Ro9yc2jmMwPu8BPleCetow69saof2LaPyOCn4+Ats/5A0bA+gh+07n0VWSg
ECHf5vW2jsBPwuXH096QAonjA5iT7RZDgZDL4bQ5aDvFOpJacNbWSYhf7vc1
zsm4qqoSa7Xb/vq3XcZlP4rJ62P9YpToVzQfR3NOm5uhIvFAvx5EpWuzXRd0
DN7Ev18Sp/rLzPM2JndbdP6JiHugT9KgTLQIUCFQwwe9gqAAxP6v7gRxZOZL
ZO+3kxxBu/EfT8NEHyiyb2aZYVfLJfzoq+FyiCJ1lA0uWlHi/5z7tsqej/RB
SdHCPO9hOc4Z9nL1VOhmDHSYmDT1uOKhWZrlnHEZ7kuXY1Rg7kFFIe4ZAJy/
XZa+XQKeQjdsIPLraeyKiE7MfQTCC1T008K/Lg5Bi/iCY0niwEH/JCIAI6O3
h0WJrQXBrOe+Sl/jzKRJoZnMlRmVAEh5nOyUpIjqFQSWY9hwyN0qhjY9opZg
wFrqfBBvl1Q55HOxLs5BaQGhlQ/fkAP8QVWOqB4XLA1PaVG+chQ6G8Y+zlMP
s9TlBAtfwl74DsoqdPgi97jOYzzvOIbMnBSOucHoIdDADVCeEV+sU0DqqEiD
/gmjnsTJcSU8JG7GI9+aYg5FSdzkBjfEiAAwGe/MU6t+/CjtD/pZhqF4lo6G
hXY1dIlZUpMPG2Tpq16snA1KokBRLqeTlkLscTlwexK/HcXbZUnGmpxAZnRM
cffrEmgjD3PTzptCbf8sRbzWC59Piy/AXlDqkTOf1w/0H2CsSYSgfnwGSsBI
hBzgC4wxxKjn1PMsCWLxFt2K3pACChoTHfzp2iziDHJ83U0UkwEt7ClnZRgC
YISvm9TLOn3eN9pZWQ17WZbheHSTaBaUeyCzqd4phyKSW2BcLMvGo55uWbk8
SW69mHDtUDUCHPH7NejbRBtH4y/ev8HybVmz1vO3JcY+/H5dJG0yX84zv8MM
3GQ+4nkUaY/9BOCQNfWQ6zWWIEcvKRKVDJuFBMUDyeVn3YSu+qGjTsbhou3A
AZwuZ1z1XoyMT1hQAC0O46NoIuT2uFiGdoZ8TE33mcWVThrRaNQjoIuaUxY9
taJycaKbQdykZAaO5etF9vfL3PfLw4+nKbPGBAqCVYJkRDTLD2GMzKfTDLQE
gP/lIv37ZRZ4wstp4mWZfqvvYNoIXpFC+sbEBSZqeLMvEJPiw9s12Zg3o9wW
NSy3h07w36+Xh0APv19nL3pGPAI7hcrq4maMbQCSfAdmdUpSMUyId9ZEB7Ty
7Trz/erwaVUgiCaH5IRxCuXnTZwUI9MxdOsSo6iup68oZpuO4M1egD5Fz8NX
cYDp2qJPPxj1z0z7Zy+jxM8M/Gc7whtG+I9/PZ73Jay0dUpccDeZNyHysnnz
LNLN/74eQ7367U9ekQsg3LPE87pw2o4fJoMO6sBqtXIuZ0DicjHxcpC4nCTu
JlnMuX2WL6bcrMv5/oPVsm8Ph5h2RpvV9WZVDUkc7dxnXZTXAxeMLgurtvFk
loxcZ4D5nM7QE3jSkAFi3M1i16ZFgDgPg4pyj5mR4vDfaUOFBsC1rqepWQv9
sa8xnUv+zalgW4mY+O0/rk06QeZj/hezbk5BtciPGlE96fFwdo5j5JAn4MXC
GUcZDzAQQLV38Lpxup4JxyVvRBFCosuyty95qFFV6ZWjyYjPw8KmcHg9sFnt
Ia+nV1MeN5m7Nbptw3tvJ6llJzJpJACD3IyTQPOwWLfT1IO575bps1li009M
GtKio5ydgG6cWhxHZi3lAp2KM8Bmb3AP6gQLJJ+QhRpEEdJv5nj4+QDME7Tx
BeiuwEszoIxpMiO46YCPdjFOjqVAkLXK8lkPWCiKsE0vVs+HoiG3z8t5OIay
H/h9zLilTKqyFmQ8XrvPw7gFF8falCDdLUvILc2s7Bj/Hl8ca9OmvOhFYSNg
jYNVglQHAGaeuJwnzoexdQ+93Bdt9fQkthlinZ1ZW7kcYZakGzyTJ1gAY5Px
+gbLjaVvfromkQj6/UIHKDFtaqV8MKEFo2E/wzj2Dj7EJNe8pZGcTvrt3Bg3
5KLhUUMCesU6KGijyWy3Eu7XwiHR6WKtARDyLpqiLfEIP8Li1/FPp3ikD0Lh
emSseuq0rSxbseuu/kj4Nqr65gdNAMnzQWLaVKAbZ3394iSx7MRnx7HTAebW
eF6kyCeNSh30nMQpP8zSeJJPwsaxuAPBBY9msqMZcDYQQ7l1P5lPBBy2DweW
nUTEMz+O3MM+Be1xYiyOE+WkrEr+SNDrd1NW+54cZIfNaAeXhhVYBrYMj7oH
pSkCwPO7mfkWJInLsb7uRVcdDD24HOOR2ssGddSbZfJmRhJGTYxlV58fRzf9
OAzhchw97UU2PfV0HLleJjFqmKAD+ADbf8HcJmj5uiE2hW38ICkDBIR9M01P
2rGUIYZFxu2171PWXw8O/vbrezVIr7vRT+dYWAdIup0PGzIfEmnVx9NWS5Cl
ByVx0YjpIXRy41w2nqO9bkYNso1MANAQpgvYgJodv54mN934uhmft9QLTFSF
SQNe0QoxcY70y5G27GinAw221dUkedaPrxvyEsFg4hmPCvOvRwHGM7EUmEiB
MIHtndfjgh+GxYc3fyR4y8g8RiCYYpP7CLMxSwO3gX267ERBxcrFgrGIr1lS
seoc2su0xbE6H+oXg/jjJv1CkNSqG5v25Pmxsuwkz4eJ01lq0Y4QtqbcTRMg
yO4WuVVXG9fldT/yjCjsFcssf/42mdiWCf+48+o6+0fX0B9M++369c6fMcJ/
/uv+vO8mZmgzR9P2Vz/bFH4IzcmfruHtBDVM9N+v8bDr8iRSjHpop9XrZVoV
ddaGnYIpF4YdpZqSlx0MDM8lRJeDcnupXNR/McneTZJAkLIkuFz2SIDr19VB
LRZ2u10OulWOXo8SL+v8x7V+No10a6F0zBty2yIS2y2Ez+fpp03OLC4P/Rm3
I0dJyS9Ygx42rgqlbKCU8stBJirzw6p6NsRowa3tYEIcCZCoMlfrOEEQ8Tfs
gMwZsMZVrl1WAj6Kc+3FY/y8p2eiHuvOfiTIXo7inSO111BmzcT4ON6vqjdj
47gSpq27vNNayYQNLRDyscGAq5nH0syJuMdFMVkjdDbBgyAAjKBdj+rRbMoX
8rKxEFtPBc9P4KXQN8yA9LRMbbqxci4U9lMB4SCuUqWsv5jyxyVB8jtqeREY
LFkFVJBIDAJmLiJIJ/FI8iSgjg0jGsU/zYxv6+zNMHOoh2nGEQq4WoVwsyRH
NLffL0Ql/8lRFBAuYPx5K77pxMZ1ZdjSjvJhF2exWffah/5S0mu178NY+jWt
UZLDIutx2XIx3+WAHBpjQfnUyVEkFXGHvVQszFbyvsU4hgoksDvigrJsR4up
QNjn8vN0VKIPk/5iPBDReClsr+b8lyPiU0RsBOZuNU88bjCjEXBRotDCc2am
op4EejgbRubdyKJnTLuxhMrsvP9N9DGdqgZKZr+e6DQSJxjVFZx2pF5Fyia8
ood1c+gEmEt6MD7CTwNo7RUVH2vz8fbDtBfmEBW5Veqsn+ofylmZDfH2oI/J
RAOjioaYZZ16IJ+rZXLcVDMxIexzYs0I1X+UDKTjHjnoMjSh31SvF8A6DDMq
1kzE9DTPvswQO9yhvWAblYAn8DMdsBsmpzotfDordouql3b++rd3+wcf0gn3
uBldD/VOHY9QJsfRcRtPWi5O4vVC0Gk/8LCWViaclEEZt2shASADKVHKC7zj
MBO8nmJM+vPKOB1FD3M+JciIbrsWZssZad3XiWtB4nmVwAx7E2PYiBpRjyxS
sFMyuucwH0yrAggaI+ru1OXHGSaEwYhOkmrjCZ0JMeHGm03BhKvkDpYKvZhm
psAYj9VpQ4L+2A4sXoY+SvlWXX3ciXbK8rAZg6007qgwOiA5r9u2b90p6v6q
IbspWhSZ+qGvUw7mY37W4YxrGJoKmOXTWR7WvVkKGZJfFJxSgM4mPNN67B5N
6pnbNUnqNdWnjXhB96hBlxJ0xVV3MSseYmZyR1QRagVQP4wtOiBM4Bl9P0Db
NL/jpu2AMMD4q+2AoInFK1IwWfHUTDKcw9PsVf5umjkqAKxjA4LDiHpPWtF6
OVovha9O4DmFs0E0l+TVsEsV2W5ZvZzH75bZeTOeifn8vF0Ns3kj0KlpR4WQ
LMITbEaMWbZwC7ePoqkEhiZldT+I8vsZYA1SPH0SN5ntGyu+/okJ3/z5OvM2
3v/OwF9Zvdn+DxjhP/91TewISRMdvNoRfhYuW/Tx34TUHwTTpxWm71h15XTM
8+5//CK4mUZNuZ8UviySH1fZouHmeWtSc4/asShWf6Uoai+vex5mhX/eFSYd
KRp0O+kDXfJuBtH7aT4SFuyUI5/wnnVjX87zf1/llsdS/TAUDboY+4HNvq8E
+FZFvl6gRg0qFuiThajXRtkczj2asXCck+UcAu1wUhbArv4A1SwGSJIQnMMr
khEUxavpsY/Hj8SUadYUWGJJR8Dag7KiiQJts0gyfVyWUvGAzWZNKvyoJQdC
jBgALhS/GSU/bpKfz5ODZsTmOPByjuN8MBn1+EDJEblJNXo7ydaKIAGdUpCd
d2FBk3+/yt6N9HYtCmyZc2F994CbruUkEAq38xRJ25VsFyU3Jkjes1h3nc59
jjlw0w7OYXFSBx7m4DDlv+gliNICKABtB4gRpjF0btleE+wwwwQ1IDgAgxQT
Iu20B/00sLjzXvIoJ/MY68Tk08CcPW7B2S8rX2AgZ8nTidEsS7zgpFhbq+TP
6e79vR055F71I2f9WDoBqN4RkenVsUZMoumrEx30UlkVGNpOWQ6AOZeLwdNx
4mGiP40T8N9mNsgzgJ92ATc6HQcwCi8HirrDajvwuul6Xjof4i4z0xaZTvvX
4+T1GMPTrubxbdbTSepulMRUYxNMKnt1kpi1E62ypARox94HXaaHLfWoJEmy
Rw27+0cAYeJfz1IXw3g15ZP8tNfDZJOBbFywW/ZVH3c/Nq5OYrEg7XLsRyV2
2Yt9uyoAEOjXognVx1C2A+sHi81CU1RU5IYV9ZZo8p/OMue9RELhHPQ+LISD
smBsHetw87TdbndaraAM92shzFGDeY1QAzcF3BOA2YWZWorEIxCkcDdH28FH
NExngTBSEa+Ltu/v7bp5ez4p9mvx40MJ5I7kdw0aGgjHxw0IpvRxWeHt1gBn
Pc6F9IiHdlnjmhuYzO08DXyGsdkzqufyBAgSBKgOrFX0U7+9f2+x7FFAOZwT
5OOmrT+PU5hIapGadOLpSNBF2fb3frPuf6Bpuwfguws2EVDlgSSy41ZkW9lh
a0eIP2EMAiKFLToggm9rzFphvlO4+LLK3I2MWNBN7e0D6wb0MWzIyYjgczsa
h8rdLP2MlvfkamC4sebe3mEmdJRVHA5HMMQOGuGHmdE6lGCviSHYMhHMA7ku
zOuqHhb2di0fdvectNVF2RMBZtZQnlb6C8k4dDqJFQxJdLsODqwHln1gEYLb
xfEMTVlt9gMvSwPiAKWC5DXCjf88+mEjeDZtCsRGsL1e57Y5YYjbITnL3bK+
S7Qd5L5sMCdqNSX6/A6KPrA7qWDY1SqHI1Fek3yTRvz6JF00fH4/TTEWYEJi
mAXta9CIHabDvHP//Yf3Pi+TibkzWGqB293bszsOgpJr3Y0NDkNBN8ezB4KH
hgfrqmfSiGASrTPjeUOOaF6Fws9HN3/GDv8HRp35I4L443HQTxjhPzBCzU2q
I20LpxLTc/4VHWRfNtE/iZ5XAWHaFPBo62IY/X2D5vXVMAFUt3dw4HDSqZiv
fyRjzbtx/LgQ8rOWtBo4aSi5hOBjXLTDEgo4gPXBbMP2LKVEgXe6XZZ6Umkf
ymLI6bTvF3Tf+VAF9PF1hZn9evhbieNdu7v7DudBMulfNmLP6+y/7ovAQIKC
bef9TkBk5DDvYi1O247FalFlt9vD2WyOWJi5wVzf5MjFxAgEaZpeOvAv8xpr
/xEz98tpfjlMZXUvJ1BW60HIy/Bul+h1tUqhRTMmS4wcYrtV7etlFhNVzYzD
pMxQgHHc6xOjXpQiIs8JzlTC2y7JRkRw2B2xIDtpR0C8/n4F7dOTYx10NinA
OSmnxWLRgkK7Kt0u01/PCx/X+bQu7B18YBhKU/wCa7Pv7ttslqCXDYd5u30/
wLlmNZkkukQ/QLQ/gjggnnKIEcamuRn5zxNBDXdjvXmoejyUR6DSmtDKBVMR
D0fZ/AGmlJdiGh/yOqZV6V/nuX9e5Vf9RCbuEXlKC9PztgqN3U4m5GEPM4Fa
NqhJLMs5Ndm96MSfMesy1i+YNaI5XQQKd9hhN9q0oBs4ydM884wpUhO5mHd/
Z89m3Q/5BBdL7+7t8pQN463cvOBiNGACNemBnKLckRynqJ6hl5GZYTV+PYrf
Tw2QbiTzJKZF/TiL357EO1UlFvbYrfs2y85hyg34+vhIBnaty9y4of1+kf/n
TX49jBuqR/K4UpoXxFalIAouW5CjWoVgreALeG2gXsRUftFRP1/lbjbJVjkI
2j7N2LweWpEEngN+YktFvYtuDJS0r5e5VTsuMLbdnfch0RUS3TBei3XPxTEh
H8+DIHEcpA3hHHMCpx5X25xFr0ZeshzbbzOXEegSqS8XuVMsDe/TFXdM8WhB
HuDxYVYZ1RL9ckQLc5Gwe94A/QT91tbDpBEFnsfAoBbtaDUf9Hgp0UeXE77+
oSSLLrvzIB3nL8fG90vQ6FLVrOii9w7292IhISa7GZfV73E0CuGrcRIzL22y
3ZqmBr0eCkP+QbS5GIdt3+JzUyFRcDhsdoe1mAmvB3GMs1tn75fbYDRi7N6m
qv6BFObph3WCGIlyn87Kk5qmBFg3bR211Mfz1KQbSSpu2UfD1v54eviPm+L9
InOUCftdLlidUSsK+C4AbFBwZKNcJx/OpESrzQoCYtyNfL8oPa6K3ZIS5G0f
ft3zCI6MHqQcNs5hzWn+swFaVz9tssuBklDcDMN43SzncnI8vb8PXMipBARQ
vEDmxVTfshslLC72sDRNb2/aMqKMZ6wHlzGd936gCbxOvzFYzD5KKkF8X2dH
5ZAgWBnKEvYzUVmoYPyUEvQ7acZ6mFeHZRkrotN0KMzBTFK0LS6JWSOoSz6Q
IA7bh1ohWC+FYiHe6dxDrKe4qyVt0pXiCv/r+w8+mpYVN6hY9v0dgLGbQez7
Ve7zmvTZZMXm+f/2SMd4O8z543fiJ0at//H6D8dBP2OE/+fft/EI5tHZ61Gb
eb01st+8atHmzJj3H5cx068GvjGZ0gaF6Wk/2SopEdUN+51lLG7elkqI1yex
9UlkVJeWreg51kkJ5OI+2ec5cMKi7R4lhGVbBoUhLvGgqzh2LTRte/fuV2bf
UsmJl3P985lhZnOadEHCSvGoZ//AurO76/Xutwuhl03qf32szpsJL2O37b5r
1uKDalSRGNr6HjQQZLwlGfTTgIdaNjDT4Cd4GqjN26KNW9vBwyhuOlTcoOM6
eih9u8xdnkSrOZFnqV/+tveXv763W/E8ql9Xrk6SWDqwJZ2dJL+eoimzkvL5
/LTH6Wxk5I+r1OkkUUh6HfTBO8t7GMv+e5CQlmQElCUMIvh2nn0cG8tuslqO
JkEOCvSHDzuU3VZJ+m/HkX+/LXycphIybbG+0yPuWTua0TyMzcLx1mI22K/H
KUAKDlu9KD7MUp8WxUfkLTqmhkMjcgKL9o4Qv5tIAZQ6VE1X6UUrlokKvMvu
2NuxoUJotTrsUVWY1CPrljqsyWfjGCb8n6XyqSDPWySvvZ33P00T627ckL08
DUu1d2D5YLO9gxEZEf9ZB8aiE3c49ByrpKRoyO9yOnZ291mXvZEP301SH9dZ
oGQ96rFaLDHZNa6pRsy7Y9kJeuyVTKBR0hTRC9Nbz3ofpolPJG2paUcARPA4
Tpm1IdCnC+DDREe9aK6/zPWniX7RizZyIR9H//LXd+93djIJ7rQrn/fUeVOe
NWXQT+7myc0oXkwFOadD9jGDinQ7Ti07ejzEgWJPu/YPLO923/3qdtrzeuBs
FP/9ElPINoqiEnaJorNxGDob6QXD53DsgWbbK8uPS/3zeWbSirkYi9N50Cpp
3aOoH5Cb/UCRuOOqCvO2v78T9lObXoxkDk+/VvkxC6iRrH1L0+MoZcprdJfd
pFtl2S9QaogtpgJpzaeEOT3mG1TU81501oqOq5HbfvJlWQA2no27AfaGvWzn
SL1fJpedWEzFomq23d8cjncfdn4DzlPQvUDAX85zZ6MU6KiMw+rlqMtRZtXX
QyJls+6qQWHejqED6ibVr2pSWIiEXYVMoF4NybLrwLoPhDqoahGFo2iHHvGP
21HQwz9uMqBgP2zRwY/4x3uSsu9pgTaFy3n8Yan//Ta7aCWiIQAboDV5170Y
wN6LcXrejIHoBx0YvQsW6WpBZimn18XU8tLdxLgdAYz1eXnbwf5v9oN3dhtg
yj1VFlY9rHT2dJqrFkRARoxtv1dVvpzlDYlxWvYCvOs4G/qKKTFT66ECvNfn
YcpZsZkX04bH7rD4PPS4rWaiXpa1+X1cp4be+8DzCYhOv6GAh0XeZAiIHfDE
1XhzXyRtYsQ91UQN8VvTvjBLZQ3///zbr0Ef08mFH8eYDn1zrIQFkKR70Zg7
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
39Xe2jeSXxFfKqrxGaWly/EPd5/52oPtY6rjpbT2Uka6OOW7+2T/F25v+/kz
PYsXhF+VAsB5jjgdP36s5+/vaX/ujKMWDfy66F8Pi8cGhr9435mvHOkdsTuu
rPvfKI6dnRDvf2bgXw/13vFsD6zS1yvjQNB7HfZ/urfzh4/2ypp3I4akbWlS
uu+54b+/v/Pp04OLF7yXctrldf/YmPf2Y/1/c8+Zll57ekHby8npFaV90PWP
D/T88PFeTXFdjqsvp/0r057nuoe/dqjjrqd6ZielS1lgJv0+yXP74/1fOdLz
Yp91Y1l5q+Rfj0g9NttPnur5t1/2DNptmJopr89cEB89ZfnGg133vzg0cc73
WkF7NadJivvnzwz84OG+p1oHQ/PitaKeWpHODNj+/UjPT5/osQpWWBtvlWA1
yg+3WL52X+ehF/oVxbGVEHeToua33/FU/zce6m0btEYWPFfXxb244vY4vnm4
6zsP9ljsANcwQ3lp2vt02/BX7j1z8FnL/AXfTgZ2vTZ33nXweO8/Hmh//PTg
0qzv1aySXVK6bfbvPtr1L4fOjLislzLy1YwUnve29Fm/caTntsd6ZdG9m0T1
jqS5f3F84J8f7HmwdTC1JL1dCgBe2by2nz7Z/e2Hu08PWDNL8us5ZW3O90SL
5TtHOn92rE/RXS8VUHLvHbF87XD7Nx/sGbE58yvo7ZZelo+dGfnbuzt+8ni3
KDl2k8rlVOCsLv38Gcv//4v2RzsGQ3PipYyyEZWsXuc3Huj+x3s72/uthVX5
Ws4fmvYd7xz++gOd3z3a41PcVzNAPaXxs67bn+7/0p2dB14YnJuCJeSvhf0D
Q87bHoW10fVi1xBQ/LeqgeiK7/GuoS/f3/Vvv7QAyYNHe60QGA0Idx7r++bD
PQ+dGj434Xt1ww9Ly+pz/sNDnX9zb/fJPlty2ffrDX86qDzVMfyV+7vvfLIH
kBO288uFwMIF8b6n+r90W/uh4z3T54UrSf+llN/ncXzrcOc37us80+vMrWiv
FzXgPU4PDv/DL858/VCXV3RtJeXLOWVpUniope+vftF+4NneC+O+Nwp+APYh
j+17j/Z+6Wedx84Mb6wJr20A3yJ2Drm+eaT324d7h+y27Zh0vaZPT/nuOtb3
V/d3/ccT/efP+t4qjl1OAy9i+8mjPd98oPNYx/DKBS+8hJ209GyP5X/f2/Wv
R3o7LQ6gL2/klIUL3vtODPzDgfaDL/RN+DEu7FLaL4jWr9575lsP9VgdQIn8
r2W1xUnpyRbLX/+84+fPdcdnPdfW5Z1UYOascPCFnr+7r+vJM0NrF+VflfXM
mr/bMvzdRwe+eqjT5rFfW/e/VQiE5qTjvZavHem8+4nesxJQbfXlDVlWvXc8
0v3tB7sePjUAqP7b6thuwt/jGP72o93fe+DM4LC1FPT+phxILEkPnBj4+sH+
Xxwf1lTXtbxyoxKYnvb+6FjX39zbdax1ODijvArUJK2NOGx/e6Dne4+csbpt
2Yj3zSJW720dcQLQ/fiJntGzwmZO2ckEFqakO58a/vIvup7rG0gsadey0pWE
qgU8P3q8/2/v7uzss20lA6+W1dCir3XY8Vd3dn7/yb6p8943chO/quhz0+4j
xy3/crDrZ8cGw9PAfemX0BHOBGd+zqQDrAfN1U2GayWplfh/U4HSnPVKk9YI
GD+uFos2pAOu2tpvU2ionpqkBnITlfIxBdBjMxkAxJieFX58fOADP2791B0t
o+Ou1/OjL+d1QbT/60M9f/a9lu8/1hcIOP+rErialX7ZOfLpn7Z/5D9OP9Ru
eaWg/bqoA8rd8VTfn/yk9ev3nekZshVTym/ruv+c7dZ7Wj7ww9ZvHu1bmHS9
txXIhST4VJ/56an/eUfbC12WtVnx1RxQBP3+k30f+M7xv73n9IDNdjWvvFLQ
fX7bdx7t/sC3T9z5TP/0mAuV5BnZ5vN84Udt/+OHJx9vG86siq8V5dVp79HT
tj/7Yftnf3La7nDsxpXXs/7RUds3nuj+4L+3fv+RrovnPW+WA6WE1mW1fOVA
2x//4MTBEwO54Nivi2PpNfVg+8DHftD253e2nQGKkIW9Ni5pwg+P9n7+jo6v
P9gtBYTXNyY21vQXevtv+cGL/3TfGacAst7olbQ2Ner+9iO9f/Tj03c93TV1
zv7Kunoprjnd1r8/1Pmx7598on0oOae+lFcSi/Kz7c5P/qDtr+9vH/bYdhKj
sMcvjLl+8Xzvp25r/ZdDnVPjwisbqOsYtlu/cn/np24//VDbQGrRe2PDn1gS
nu4Y/Jt72r70s462QRswJ1fz2sSE87Ynez9zZwcse23U+caGdi2tDFiHv3qk
60t3dd73wuDirPBG0R9f9T3RNfQ/b2/76wNnOu3WckR5ayMQuij+6InuT/+4
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
KQv7E6f3R04e2P5S38bhA2tGXt8wsm8NzjVaA+6jgU0QRzgnXOFEGKGx2mNS
8oQnI0h5Dhm5P1Kg2sF6hJWsoPbDCPh4G2TB4AXACKxGuOBsOpjtNimIg8iu
rsJHYoWKsCIQYA6FjwLsRCJrBH5r0NEkQsfmOrKGYvdhsoCIJc+pLU55sejA
hyYY4Y/5nKrixS98620MjTOUwJeuIMjCxqXp6v0Upe/quCUIh1ZsvnoKji/m
F/3x5zX4cp+MYibzh9CsTU746E6YnB9Mk8yoNv65xAVqApr8wl1mnJ5N1huw
8cPsj1EAxBHE7Tim4IJuqEPQAT7XzcYd2DUyt18fUfGQqMEgjmyIlc639qXY
6SdlpxwSWugfU+D4FJsiwqdlPIRyG3RA9uFHFggG8bfGbxtTGKwOhqyBuWNO
HUwH6DZJGw6LU/NL1kXnbk8oQsLQqZb0mKH3kQuvHGT5c9flxawHz2gAmsQg
YG4Fekm6mqGjtbNBbqkTaWuQ5JS3augeg/x0s7y7UUEyu9oAvCD4iU6nupok
pxrlbr1Mc0R4cj9lqZW3G+muRgkZmAiKxogedil0sW6iOxtxeMUo7zTT3UZx
b6OU5VDtFpid0dNId2BOt1He0yjvMcl7DfIOk6TLJHXjmaTIIOmCbieUWy9x
mRSdFrrHKD/XKO9tkti18uzSkjm/Zcz4IfmHjekrAtOmL0/41wKkDsKGfxob
nlncpKZ7zXSnSdxrlJ02Kd06uXp/Vc0+iUUt6mqUn7GIOozY5jfKTpmoLoPU
fLzqwC7Jkd1V5joZNPRulndY8I+TyScXtRlJHIFu4WUcsahBxMURSD0C/+jW
iNBXhsesV7uPpF0oXHoN1yP0r3rieuDovq2Qa4Q0wo0dL11f8xQ4jsLf9u6O
8P7R7SX/Lp3y7gy/uW3MtS0jvHSQ97QJmN2NN/ZG3xKv8h7P9v7V573xl9dY
dTN9dt+6p7w7Q7znsNboab6xJ9qbt8S7KxQwBYxQsd5QbOtPmOEVLve6cTP8
8+036gVeasMNeov3YOwN8ZYbsdNvbhoNd7KBZBmR4yjEub7x2ctbx/0hWeNm
6hFELl8cwRdTuB06gE6wSPxipUD4Ak7wckd2PSe0GRrHGnwY4Vy3vflYDhG2
WOwLWeEvQuCXnMXxbxdrgDVusj9WQ24/pEATVxin7PgYgcsdAgvfJB+0hjiL
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
CxSACo/XILG1xJ76lT/+YsxXjvMRoDcNKUUo1ogBlBRvgIk2TpOJ7fjL7upf
Pr//QsDG79wAXrSLHt35yt6agxZqzMdO+Zm3w6ZTvOlgV+tNL+3L+3XhxU9C
jGDr0Z/2G8Z92lOwOCqT8pvmQkzaYTToqGe31f7b/YUX3Ff4g8cLLvztjq/f
sfG79297enMlrTI0NakfXVl1we0F//XQnnXFtSGn/kzEuLu+5T8f3/fVewuv
f/HA2t3NN0CMsOO7j+36S379wFEqADBCU/uvXijOu237fzy9p6C2IeUxLwCM
AKs3i/4CuI8DjjiCFZZSwq7rurhswyCMGvDvi5OXSY2dxAgZP4LQB0cEif2x
bR9mFsO6Rjp+0MAaVM3trVotUGI1Kad+EgwXi2Oguhm518qJCLIzqQE8AbIM
gLWwSxtw6Cit+tG1Zf/nvsJv37vvmU1VAz3tb0WMkwFdyGcI4R0ToNPBAPDa
cYu6tLpl9d76zQfq9Ya2iNMw42cSKDoXbSijT/MQWVhPajsoalNx7dPbypa9
XvHQmoq/bisrqmw5xKpH3caeIx0FVQ3Pbqz+zd/K73m54smN5atKajvVHe4+
/SkPMwVYlpM5ZOnYWdnw7Ibqh1aWP7m6rKS2ZbBP3dunbtS0bDhQv6WknmW0
/iFYk+QUAC8DTHNL67byhrWl9XpTe8ylnuGNk+jhTPOaqNNoZjV761ue3Vhy
76qyR1+v2LC/rp1u99sNc/DkGTNL76lsemZD1X1/Lb/35YrHNle8fqCeYTsj
Q8ZZLzOBcw3gK28QmQmNklbgfRaCTlEusJSnAFiBlNeM85cnA+yR7vaamhpN
RwM3YHh39MjgEdXWbVubmkvBb/125Ah/okPVUXugdE9Vdcn+osLW9grnkCrl
Z6zH2+rry/YXF1KNla0tpXuLCk6a6j+c6U56dUZ9XUFhsaatMTCsno8x3LAW
9CzYXFhRUdzZWG2gmmvqilrayruMzXpd3Y78jd3mhmmf6Z3okVEnPXCstbbm
QGl50ZClcSF2dOBYW2trTdHOXU1NJSxdo2qs0ndWc9a23u76ltaa5qbqlpoD
GzZsAgDH1wvkvuAdCNtELwBgepD1QaaaEBivcBSZbYYl5vIXqEhmfh4/wruo
9mkYaJUCwyd9AUqTFBYKon9BiRRETJHxIwCKlNcgOcrJtpSIJznNxaMgIhV9
ICJAFZYEH4QwD4z1SsFQW+hH8HLroESQ+RGWYIey4FNI/sIW/gn0Gs/tFzDC
J7xz9M7B4L860jfMfwwxwiefvTV6ptSbeGRsruRTESN4kstH5/76wXshgAM+
+Cyemts1GP/5cOLbJyPfBkzeM/HI2XcZAC8++fTD2YVO28T/ngh9hR9/4NS7
NLIyvTf3rsadeADGtUZ/hqohwawEASPA/IjL7MmfcomlfOgvKGdZByPQHHRY
yOI3SDnLad44xWtnfCZfH9VItb5cWHHrX0oufGB73u2bLnu2YFNp/cnDndMB
0xxHT3pMJnPH7a8UI4ywf/XuRuRHgCVNxnnIf2aC2vmw8eRxatXuup/9bvc3
f1O49MWiN3bXP7Ox4vLn9391+ZZLnt7/7JaaDfubn11T+n/uyv/hffnbSipj
PvpsnM2vrP3hE3u+ct/WG/9cvHJP3a/+UpK3bOv3H9nzwo66/pN0aJhu7mi5
7oVdeTdv+iHECM0Ju+HsCMynTsFC2eoxESmgrYHR0Y0QAayDJBTZEwv05cgg
zs5WlqreyWsZiYLAJ0QcAR0bWpO8+hNdna/sqr79byW/W1Ne19AatKH9EVx6
8ERhdJDF7XNmRgv9ZXWNbPqYSz/N60KDeoOh40Bd45bihmc2lF3y5O6v37Xt
xhf21rS0jtiME34Yc4s2wsA7oGHUY0jYtaMOvd8K9ywI2cWqgOhWJDxCRZGU
SwuQ3bRXG7Xrj1poVRtlBHLthA4Fp0EJO+UzRO3a3m6K1lIaPXWkS+W36uNe
KH9RjUEogKaCUNqe6KIMJtXJHl1oiD7l1s8AbcGrD1npoEMft6NN7fEGmg64
cUZ0WJ1yGlJeWKU/5qAjPmPYISSOTXlgbMxQl4qhm48Y2t0nqXGPCbB6vDlL
HDCEXs0Ji0pNU1oDdaRbFbOrZ7zUHGcaA/N40TxSJrIYUySlp4l5CmLoHaZ7
pRpHkLnF3dquQ22lZaUdndXWwy1vjh4bOtq8e9eW6tp9Hpt6NnTQ3a+qrNxb
vq+oob6ooriooaLY16uJWvX9hzsrK/ftLyroqK9k6NqCgs1HzQ1vJs0Jp6G5
qXzPvmKqtQL8LhN+NjiorSst3blzV2XxLpO6+qSppedQ0/FDjY4+WtdRlr+z
wKyvPM0x8zwbc7J9bGtz9YG9+wt6u5vHfYa+7va6+vKS4t2V1YVmugbgEUZT
o2sv7ag/UFSym9bWdXSUbd68ec/+ndxJM2FaYYR0MMj6TFgnTwE2ywsoQGS2
EkNW+hTkqCHDzBXmnZGh6nczEqEqxbMK4SJq+JLpic0ldDKiShQWLOlHEMeS
AbFSXgOeU4YC5MfF/AiZOcMcQg24J/IjAPAYjGz1he/2pW60IYwg+RGI4xJb
8jJ7+sbJDEYYjZ5+NTB2X2J240fINXzu88mJMxu9ydsn3931DyARPvt87v2u
wNQDgfTvzr53+Ny5Dz/97O9z75kjp593x38VmFrmji/jkg/OnKk5d+4fMG7p
Yz44+YJ7aun47PqPPnIhEZMaezPfPXmbI/I/vtSVjuR1AB3g8nqO5JXQfJRe
4ptZ4ogv5YMvxbwVCa8Fb/0pbiQEo6qSHK4Gpok7NAmbbsFnBgrYqN1AaTsf
2VDztTsKvnvv7sfWVrMm3SwHy9Sf4tiD3dpfvVScd+uWi5/cv66kEWCEOb8+
4dXG7MbwoD5uY0952UNH6OVvlH31zvz/eGjn7sombkDfY9a+vr32h/ftvuCO
/KUvl68qal6zr+m/79n+w2X5a/fVAkT597FDexobv/u7wrz7Cq//64EdVU2P
ri795gMF375/7/Pbqty96kmXqaWlfemfocPxZ0/t31XTnMR+BLR7WhptxYWj
jFJI9U2iaxyDG+bSoqkT7wEts+Gjjw59SI2dleh4BzSZVo+zlSU0AQuT6icD
hhOHNX8tqF364oEHX6+saeiMuPSnQsp8B3GtzDlISCTrHHCfjINjIcbwDkNZ
beu9L5b8x/L8f71tyzfuzr/o8b2r9lT5TgJ+rkuhep5AKJCJ2+A+nAoxcyPM
W2HmzRFmjmMTHNq/WOyJdzHDuxu/GdGfDbLj4CW1adMuaN6ZDzOTIzAlfIbT
AVk/HoDSFoDBU0FmLsDMh5hEQNieewxurAn7jwdMkz4GjAVocSLAzISYebB6
iDkzwpyGFJRN7NNOhcCTw74TYc4E2HkAMZC5RtrTChxnOPqdCNBVYOgg+EyH
mfkAPcnDbQ2nvMY5tBbgbOBk4uBbsEpMMx8DYhGijEhG25c2cJe3fZkMBbyF
YlKIz2ek/YIn/cyJrvaystLikj3q5uKhY20nu9oPlOwuq9ivbS0Fqrimpbyi
sri5pmLgmKqttbayskTbVnrY0KBuLt+7d/eevTuPmBsHzK0lxbsaq4tt3e0W
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
R4/SgKmmeKA3Wk6CsZ2GNk1zwH1wHp4zOD3NkS5DfVtL9yED71KngGYOGHLA
HBw2pwOIUeM2b5YYdTpgQf5oxN79Ah3VNfI+t+K5lzdVA4nw3kLKemhDaFg9
MlSVGlKNDFUHh2tGumuC1prgUA1oB6X2kEAZGapJD9WO4G8hsTYwVJ22qkYO
V4eO1gaGq8+Ndpqo4mWv78pbsjLvrtUdjWVvBToTQ1XNlQcufWhT3g2rrnti
lVbT9OFo+4y349mthV+/Z1Xez994fMOecXf9u9GOg6bqB54vyLth5ZVPby/c
uzvdV/9JpIPuqPnqHZvylr5xyUNbj+rKP4h1cv1t6zfn592y5V+WrlpbsPeY
qf7v/o5Qb/X9KwvyrnjxonvXbC/Ze9qlmnK1N7ZVXf74xryr37htxY4j2oYJ
e82kq72wuug7d27Mu+7lP6zZ7ugpfyfUcYSueW5lcd61K//9zrWlZZXJ/vYp
V42OrrnqmQ15V73xiwfWdlGVZ7i6QE/V6oL8K57YnHfz6kde3eHurng31jF0
vOrBNfl51676xp1rNufnnxqqn3PWNjZUXfvYpu/ctvmSB9c2tVROO+r8PZWv
bd6Rt3TVRcvW76ko9x8rnfHU6durfvG7HXnXvbH89e2dqn3TzvqUra6urvKS
Bzfk3bD6+Td2DnU1pG011iNVf1q58+s3b/zhfWtLa4rGBpvmHc0mquiRVTvy
bll5xWMb9G3VpxxtgZ6a/SUV//3Q+rzb1jyxusB9vPmdUKu1q/zlrTv+6+EN
37lz3Rvbi2MDTfMjTVp6//IXtn39xjVXP7ujpX7/WV/daVfV3tJ9lz68/vt3
rln+x4LDhoozvlrbweoXVu/95p3r/+Ph9et37XP1VH0Qahtky+94Cfwcr97w
ZP6B4uKEtT5hr6usK/3ZIxu+cdeq59Zv6bFUzrqag4ONa/ft+dYd6y68feOq
bXtdR2vm+BZGXXX/ywV5t6y95g/bDXTJhL1uor+W7iy99vdb8m54/b4VW7s0
lXPuOteR6te27b5w+bqv/3rNup17U7bm+UDLUUvl79fk/9utr//4t5v3lZak
bU2TrpaqsrJrn8q/4M71t/55W8/B+vf8nb7j9Rt2FV7023XfuWPtn97YZT9Y
93ag5Yil8q4X8//tzlWXP7GuvGY/+ClHjte9sanowlvXXXjXutU7ihzd9XOe
WmtP1cMrd+Rd+7efPriuqGpfwlmftjfX1pT+7+825d20cvkLO47qKuc8NeHB
uq3Fpf+2bPNXb3r9pU353p7KuUALa6h47LUd/3rL2v+3bF3x3qI5e+ubruam
1pKLn9yY98uV1z67Va8pA7d0pKdu5dY9Fz+w5du3rv3d3/Jt3VUfxlr6j9U+
sGZX3s2v/997Vu8s2p10NM46m2uqi5c8vuHCZeuWPpffUF9+xl0746rfvm/P
N+9Ym3f9yhXrC4YPV73DtQ2Zah76c8G/LF196RPbNhfsj51omnc3svrK65/c
nHfVyhue3E6pKtPOuqS1bm9xyf+9d0Pe7St/v37XSUPVW662YXP1S1t35l3/
GrhX+8r3JqxN4+5GWlt56/MbwYP6yyfWN9eUvTncNulr2rS/4Pu/XZt39csP
v7zF11PxVqCtl6l8eeO+f7/jte/9Zt2anftCAy0fxRo1xopLH9+Qd9OqH9y7
vr2h4oy/NmSr21hS9LOH1n/tlpUPvLLdqKp8l2+fdDQ+vnZn3o1vfO2OzX/e
lJ90Nr/rqWc7K3759Pq8m9745dMbmpsqo/21sf66jUVFX1+67vu3vb5u217+
eM1Zf51eVfbgK/vyrluz5MkdRmPVjLc92Fff2l5x1ZNrAXt55JWdXZbqs6Ga
UE/ditX7vrscvnFby/fP2Gve8neYdOWPvLHnK0tX/+SJTTXV+6ZcbbOOhpKy
ih/d88Z37tu69OVNJy1VH4c6RofqX92470fL1nzz5tf+Vljs7at5f7Sz/2Dp
LSu2gSWuen7znuKiM66Os/5aqq380odXA+I9fyiwGOtmPNUpt2pd4Z68m9dc
eNdrm/eV2Lpq3osCNenAcxv35F216j8f3lR7oCjtrYnZa43a8p88uCXvl288
9tfCfqb+tLcm4a7P31v4499uz7t85XPrCgFHfZOv6zIceGnd3rz/Xfndhzc3
NRfNcZ1n+TqaKl26Yss3bl/10wc3HdI3pKy1qeGaAGDXdsS0bQTrxozaVktS
JCbPD1Sfe+vQDTfddd3y1859+ffl35d/X/59+ffl35d/X/59+ffl35d/X/7J
//4/C7C4Pw==
   "], "Byte", ColorSpace -> "RGB", Interleaving -> 
   True], $CellContext`img2$$, $CellContext`saldo$$ = 
  27300, $CellContext`tr$$ = 0, $CellContext`hora$$ = 0, $CellContext`dia$$ = 
  "Lunes", $CellContext`grosor$$ = Thickness[0.007], $CellContext`color$$ = 
  RGBColor[0.58, 0.09, 0.16], $CellContext`azul$$ = RGBColor[0, 
   Rational[69, 256], 
   Rational[31, 64]], $CellContext`verde$$ = RGBColor[
   Rational[103, 128], 
   Rational[105, 128], 
   Rational[27, 256]], $CellContext`fuente$$ = 
  "Gabriola", $CellContext`tama$$ = 
  30, $CellContext`f01$$, $CellContext`f02$$, $CellContext`f03$$, \
$CellContext`f04$$, $CellContext`f05$$, $CellContext`f06$$, \
$CellContext`f07$$, $CellContext`h1$$ = 5, $CellContext`h2$$ = 
  0, $CellContext`h3$$ = 0, $CellContext`d$$ = "Lunes"}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
     1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {}, 
     Typeset`size$$ = {684., {240., 246.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {}, "ControllerVariables" :> {}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Panel[
         Column[{
           Grid[{{
              Column[{
                Style[
                "D\[IAcute]a y hora del viaje", $CellContext`tama$$ - 
                 8, $CellContext`verde$$, Bold, 
                 FontFamily -> $CellContext`fuente$$], 
                PopupMenu[
                 Dynamic[$CellContext`d$$], {
                 "Lunes", "Martes", "Mi\[EAcute]rcoles", "Jueves", "Viernes", 
                  "S\[AAcute]bado", "Domingo"}], 
                Row[{
                  PopupMenu[
                   Dynamic[$CellContext`h1$$], 
                   Range[1, 12]], "     ", 
                  PopupMenu[
                   Dynamic[$CellContext`h2$$], 
                   Table[$CellContext`i, {$CellContext`i, 0, 59, 5}]], "    ", 
                  SetterBar[
                   Dynamic[$CellContext`h3$$], {0 -> " a.m ", 1 -> " p.m "}, 
                   Appearance -> "Vertical"]}], Null, Null, 
                Style[
                 Column[{
                   Row[{"La fecha es: ", Null}], 
                   Dynamic[$CellContext`d$$], 
                   Which[$CellContext`h2$$ == 0, 
                    Row[{
                    Dynamic[$CellContext`h1$$], " : 0", 
                    Dynamic[$CellContext`h2$$], "    ", 
                    Dynamic[
                    $CellContext`f01$$[$CellContext`h3$$]]}], \
$CellContext`h2$$ == 5, 
                    Row[{
                    Dynamic[$CellContext`h1$$], " : 0", 
                    Dynamic[$CellContext`h2$$], "    ", 
                    Dynamic[
                    $CellContext`f01$$[$CellContext`h3$$]]}], True, 
                    Row[{
                    Dynamic[$CellContext`h1$$], " : ", 
                    Dynamic[$CellContext`h2$$], "    ", 
                    Dynamic[
                    $CellContext`f01$$[$CellContext`h3$$]]}]]}], \
$CellContext`tama$$, $CellContext`verde$$, Bold, 
                 FontFamily -> $CellContext`fuente$$]}], 
              Show[
               Image[$CellContext`img$$, ImageSize -> 500], 
               $CellContext`f03$$[$CellContext`d$$, $CellContext`h1$$, \
$CellContext`h2$$, $CellContext`h3$$]]}, {
              If[$CellContext`saldo$$ < 0, 
               Column[{
                 Style[
                 "No hay saldo", $CellContext`tama$$, $CellContext`verde$$, 
                  Bold, FontFamily -> $CellContext`fuente$$], 
                 Style[
                 "Recargar tarjeta", $CellContext`tama$$, \
$CellContext`verde$$, Bold, FontFamily -> $CellContext`fuente$$]}], 
               Column[{
                 Style[
                 "Pagar pasaje", $CellContext`tama$$, $CellContext`verde$$, 
                  Bold, FontFamily -> $CellContext`fuente$$], 
                 Button[
                 "Pagar", {$CellContext`saldo$$ = $CellContext`saldo$$ - \
$CellContext`f06$$[$CellContext`d$$, $CellContext`h1$$, $CellContext`h2$$, \
$CellContext`h3$$, $CellContext`tr$$, $CellContext`hora$$, \
$CellContext`dia$$]; If[$CellContext`tr$$ == 0, $CellContext`tr$$ = 1, 
                    If[
                    
                    And[$CellContext`dia$$ == $CellContext`d$$, 
                    5/60 <= $CellContext`f02$$[$CellContext`h1$$, \
$CellContext`h2$$, $CellContext`h3$$] - $CellContext`hora$$ <= 
                    75/60], $CellContext`tr$$ = 0, $CellContext`tr$$ = 
                    1]]; $CellContext`dia$$ = $CellContext`d$$; \
$CellContext`hora$$ = $CellContext`f02$$[$CellContext`h1$$, \
$CellContext`h2$$, $CellContext`h3$$]}], 
                 Style[
                  Row[{"valor: ", 
                    $CellContext`f06$$[$CellContext`d$$, $CellContext`h1$$, \
$CellContext`h2$$, $CellContext`h3$$, $CellContext`tr$$, $CellContext`hora$$, \
$CellContext`dia$$]}], $CellContext`tama$$, $CellContext`verde$$, Bold, 
                  FontFamily -> $CellContext`fuente$$]}]], 
              Style[
               $CellContext`f07$$[$CellContext`d$$, $CellContext`h1$$, \
$CellContext`h2$$, $CellContext`h3$$, $CellContext`tr$$, $CellContext`hora$$, \
$CellContext`dia$$], $CellContext`tama$$, $CellContext`verde$$, Bold, 
               FontFamily -> $CellContext`fuente$$]}, {
              Column[{
                Style[
                "Saldo de la tarjeta", $CellContext`tama$$ - 
                 5, $CellContext`verde$$, Bold, 
                 FontFamily -> $CellContext`fuente$$], 
                Style[
                 Dynamic[$CellContext`saldo$$], $CellContext`tama$$ + 
                 5, $CellContext`verde$$, Bold, 
                 FontFamily -> $CellContext`fuente$$]}], 
              Grid[{{
                 Style[
                 "Reiniciar tarjeta ", $CellContext`tama$$, \
$CellContext`verde$$, Bold, FontFamily -> $CellContext`fuente$$], "         ", 
                 Style[
                 "Recargar tarjeta", $CellContext`tama$$, \
$CellContext`verde$$, Bold, FontFamily -> $CellContext`fuente$$]}, {
                 Button[
                 "Saldo $27 300", {$CellContext`saldo$$ = 
                    27300; $CellContext`tr$$ = 0; $CellContext`hora$$ = 
                    0; $CellContext`dia$$ = $CellContext`d$$}], Null, 
                 Row[{
                   Button[
                   "+   $100", $CellContext`saldo$$ = $CellContext`saldo$$ + 
                    100], 
                   Button[
                   "+   $500", $CellContext`saldo$$ = $CellContext`saldo$$ + 
                    500], 
                   Button[
                   "+   $1 000", $CellContext`saldo$$ = $CellContext`saldo$$ + 
                    1000], 
                   Button[
                   "+   $10 000", $CellContext`saldo$$ = $CellContext`saldo$$ + 
                    10000]}, "     "]}}]}}]}, Alignment -> {{Right, Center}}],
          Background -> $CellContext`azul$$], "Specifications" :> {}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{737., {273., 280.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{{DownValues[$CellContext`f01$$] = {HoldPattern[
         $CellContext`f01$$[
          Pattern[$CellContext`x, 
           Blank[]]]] :> If[$CellContext`x == 0, "a.m", "p.m"]}}, {
    DownValues[$CellContext`f02$$] = {HoldPattern[
         $CellContext`f02$$[
          Pattern[$CellContext`h, 
           Blank[]], 
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`a, 
           Blank[]]]] :> If[$CellContext`a == 0, 
         If[$CellContext`h == 12, $CellContext`m/
          60, $CellContext`h + $CellContext`m/60], 
         If[$CellContext`h == 12, $CellContext`h + $CellContext`m/60, 
          12 + $CellContext`h + $CellContext`m/60]]}}, {
    DownValues[$CellContext`f03$$] = {HoldPattern[
         $CellContext`f03$$[
          Pattern[$CellContext`d$, 
           Blank[]], 
          Pattern[$CellContext`h$, 
           Blank[]], 
          Pattern[$CellContext`m$, 
           Blank[]], 
          Pattern[$CellContext`a$, 
           Blank[]]]] :> If[$CellContext`d$ == "Domingo", 
         Which[
         4 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[11, 59, 1], 
          Graphics[{
            EdgeForm[{$CellContext`grosor$$, $CellContext`color$$}], 
            FaceForm[], 
            Rectangle[{280, 75}, {484, 19}], 
            Rectangle[{69, 83}, {208, 55}]}], True, 
          Graphics[{
            EdgeForm[{$CellContext`grosor$$, $CellContext`color$$}], 
            FaceForm[$CellContext`azul$$], 
            Rectangle[{150, 315}, {363, 257}], 
            Style[
             Text["CERRADO", {154, 311}, {-1, 1}], 40, $CellContext`verde$$, 
             Background -> $CellContext`azul$$, Bold]}]], 
         Which[
         4 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[5, 59, 0], 
          Graphics[{
            EdgeForm[{$CellContext`grosor$$, $CellContext`color$$}], 
            FaceForm[], 
            Rectangle[{185, 210}, {341, 175}], 
            Rectangle[{19, 206}, {87, 98}], 
            Rectangle[{69, 83}, {208, 55}]}], 
          6 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[8, 29, 0], 
          Graphics[{
            EdgeForm[{$CellContext`grosor$$, $CellContext`color$$}], 
            FaceForm[], 
            Rectangle[{185, 210}, {341, 175}], 
            Rectangle[{88, 169}, {157, 99}], 
            Rectangle[{69, 46}, {208, 12}]}], $CellContext`f02$$[
           8, 30, 0] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[9, 29, 0], 
          Graphics[{
            EdgeForm[{$CellContext`grosor$$, $CellContext`color$$}], 
            FaceForm[], 
            Rectangle[{185, 210}, {341, 175}], 
            Rectangle[{157, 169}, {224, 99}], 
            Rectangle[{69, 83}, {208, 55}]}], $CellContext`f02$$[
           9, 30, 0] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[11, 59, 0], 
          Graphics[{
            EdgeForm[{$CellContext`grosor$$, $CellContext`color$$}], 
            FaceForm[], 
            Rectangle[{185, 210}, {341, 175}], 
            Rectangle[{224, 169}, {292, 99}], 
            Rectangle[{69, 46}, {208, 12}]}], $CellContext`f02$$[
           12, 0, 1] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[3, 29, 1], 
          Graphics[{
            EdgeForm[{$CellContext`grosor$$, $CellContext`color$$}], 
            FaceForm[], 
            Rectangle[{185, 210}, {341, 175}], 
            Rectangle[{224, 169}, {292, 99}], 
            Rectangle[{69, 46}, {208, 12}]}], $CellContext`f02$$[
           3, 30, 1] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[4, 29, 1], 
          Graphics[{
            EdgeForm[{$CellContext`grosor$$, $CellContext`color$$}], 
            FaceForm[], 
            Rectangle[{185, 210}, {341, 175}], 
            Rectangle[{292, 169}, {360, 99}], 
            Rectangle[{69, 83}, {208, 55}]}], $CellContext`f02$$[
           4, 30, 1] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[7, 29, 1], 
          Graphics[{
            EdgeForm[{$CellContext`grosor$$, $CellContext`color$$}], 
            FaceForm[], 
            Rectangle[{185, 210}, {341, 175}], 
            Rectangle[{360, 169}, {428, 99}], 
            Rectangle[{69, 46}, {208, 12}]}], $CellContext`f02$$[
           7, 30, 1] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[11, 59, 1], 
          Graphics[{
            EdgeForm[{$CellContext`grosor$$, $CellContext`color$$}], 
            FaceForm[], 
            Rectangle[{185, 210}, {341, 175}], 
            Rectangle[{432, 206}, {496, 99}], 
            Rectangle[{69, 83}, {208, 55}]}], True, 
          Graphics[{
            EdgeForm[{$CellContext`grosor$$, $CellContext`color$$}], 
            FaceForm[$CellContext`azul$$], 
            Rectangle[{150, 315}, {363, 257}], 
            Style[
             Text["CERRADO", {154, 311}, {-1, 1}], 40, $CellContext`verde$$, 
             Background -> $CellContext`azul$$, Bold]}]]]}}, {
    DownValues[$CellContext`f05$$] = {HoldPattern[
         $CellContext`f05$$[
          Pattern[$CellContext`d$, 
           Blank[]], 
          Pattern[$CellContext`h$, 
           Blank[]], 
          Pattern[$CellContext`m$, 
           Blank[]], 
          Pattern[$CellContext`a$, 
           Blank[]], 
          Pattern[$CellContext`t$, 
           Blank[]]]] :> If[$CellContext`d$ == "Domingo", 
         Which[
         4 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[11, 59, 1], 1500, True, 0], 
         Which[
         4 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[5, 59, 0], 1500, 
          6 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[8, 29, 0], 
          1800, $CellContext`f02$$[
           8, 30, 0] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[9, 29, 0], 
          1500, $CellContext`f02$$[
           9, 30, 0] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[11, 59, 0], 
          1800, $CellContext`f02$$[
           12, 0, 1] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[3, 29, 1], 
          1800, $CellContext`f02$$[
           3, 30, 1] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[4, 29, 1], 
          1500, $CellContext`f02$$[
           4, 30, 1] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[7, 29, 1], 
          1800, $CellContext`f02$$[
           7, 30, 1] <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[11, 59, 1], 1500, True, 0]]}}, {
    DownValues[$CellContext`f06$$] = {HoldPattern[
         $CellContext`f06$$[
          Pattern[$CellContext`d$, 
           Blank[]], 
          Pattern[$CellContext`h$, 
           Blank[]], 
          Pattern[$CellContext`m$, 
           Blank[]], 
          Pattern[$CellContext`a$, 
           Blank[]], 
          Pattern[$CellContext`t$, 
           Blank[]], 
          Pattern[$CellContext`hora$, 
           Blank[]], 
          Pattern[$CellContext`dia$, 
           Blank[]]]] :> If[
         And[$CellContext`t$ == 1, $CellContext`dia$ == $CellContext`d$], 
         Which[
         5/60 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] - $CellContext`hora$ <= 75/60, 
          If[$CellContext`d$ == "Domingo", 0, 
           Which[
           4 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[5, 59, 0], 0, 
            6 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[8, 29, 0], 
            300, $CellContext`f02$$[
             8, 30, 0] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[9, 29, 0], 
            0, $CellContext`f02$$[
             9, 30, 0] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[11, 59, 0], 
            300, $CellContext`f02$$[
             12, 0, 1] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[3, 29, 1], 
            300, $CellContext`f02$$[
             3, 30, 1] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[4, 29, 1], 
            0, $CellContext`f02$$[
             4, 30, 1] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[7, 29, 1], 
            300, $CellContext`f02$$[
             7, 30, 1] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[11, 59, 1], 0, True, 
            0]], True, 
          $CellContext`f05$$[$CellContext`d$, $CellContext`h$, \
$CellContext`m$, $CellContext`a$, $CellContext`t$]], 
         $CellContext`f05$$[$CellContext`d$, $CellContext`h$, \
$CellContext`m$, $CellContext`a$, $CellContext`t$]]}}, {
    DownValues[$CellContext`f07$$] = {HoldPattern[
         $CellContext`f07$$[
          Pattern[$CellContext`d$, 
           Blank[]], 
          Pattern[$CellContext`h$, 
           Blank[]], 
          Pattern[$CellContext`m$, 
           Blank[]], 
          Pattern[$CellContext`a$, 
           Blank[]], 
          Pattern[$CellContext`t$, 
           Blank[]], 
          Pattern[$CellContext`hora$, 
           Blank[]], 
          Pattern[$CellContext`dia$, 
           Blank[]]]] :> If[
         And[$CellContext`t$ == 1, $CellContext`dia$ == $CellContext`d$], 
         Which[
         5/60 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] - $CellContext`hora$ <= 75/60, 
          If[$CellContext`d$ == "Domingo", "Se realiza transbordo", 
           Which[
           4 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[5, 59, 0], "Se realiza transbordo", 
            6 <= $CellContext`f02$$[$CellContext`h$, $CellContext`m$, \
$CellContext`a$] <= $CellContext`f02$$[8, 29, 0], 
            "Se realiza transbordo", $CellContext`f02$$[
             8, 30, 0] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[9, 29, 0], 
            "Se realiza transbordo", $CellContext`f02$$[
             9, 30, 0] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[11, 59, 0], 
            "Se realiza transbordo", $CellContext`f02$$[
             12, 0, 1] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[3, 29, 1], 
            "Se realiza transbordo", $CellContext`f02$$[
             3, 30, 1] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[4, 29, 1], 
            "Se realiza transbordo", $CellContext`f02$$[
             4, 30, 1] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[7, 29, 1], 
            "Se realiza transbordo", $CellContext`f02$$[
             7, 30, 1] <= $CellContext`f02$$[$CellContext`h$, \
$CellContext`m$, $CellContext`a$] <= $CellContext`f02$$[11, 59, 1], 
            "Se realiza transbordo", True, ""]], True, ""], ""]}}}]], "Output",
 TextAlignment->Center,ExpressionUUID->"12e43662-5570-4a41-916f-61558371caca"]
}, Closed]],

Cell[CellGroupData[{

Cell["Problema 1  ", "Section",ExpressionUUID->"2da7ae99-aa78-45fb-a18e-c5b7177669dc"],

Cell["\<\
Juanito tiene una recarga en su tarjeta por un valor de $27,300 para viajar \
de lunes a domingo.\
\>", "Text",ExpressionUUID->"4ed9ced9-b467-4190-8891-682a1daad0f5"],

Cell["\<\
De lunes a viernes, Juanito toma un bus a las 6:30 a.m. para la universidad y \
toma el bus de regreso a las 4:00 de la tarde.\
\>", "Item",
 ShowCellBracket->True,
 CellGroupingRules->
  "NormalGrouping",ExpressionUUID->"e4a2c752-20dd-4eee-89a6-70b122083081"],

Cell["\<\
El s\[AAcute]bado sale de compras, usando este sistema de transporte, a las  \
9:00 a.m. y regresando a las 5:00 de la tarde.\
\>", "Item",
 ShowCellBracket->True,
 CellGroupingRules->
  "NormalGrouping",ExpressionUUID->"2bd60a17-e052-46d3-8c27-77e2350dfa6c"],

Cell["\<\
El domingo, Juanito invita a su amiga Sandra a cine. \[CapitalEAcute]l paga \
ambos pasajes, tanto de ida como de regreso a casa.\
\>", "Item",
 ShowCellBracket->True,
 CellGroupingRules->
  "NormalGrouping",ExpressionUUID->"57604931-6345-4dcb-a1d3-9c406a42884f"],

Cell[TextData[{
 "Al finalizar ese domingo, \[DownQuestion]con qu\[EAcute] saldo termina la \
tarjeta ",
 StyleBox["\[OpenCurlyDoubleQuote]Tullave Plus\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 "?"
}], "Ejercicio",
 TextAlignment->Right,
 FontSlant->"Italic",ExpressionUUID->"0a8f4cfa-ac7f-4131-bc96-63d345009ecc"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",ExpressionUUID->"24a45c2a-dc1f-4558-8492-f85d7e1a597b"],

Cell["La soluci\[OAcute]n se ver\[AAcute] en la siguiente tabla:", "Text",ExpressionUUID->"f80dbed0-d9ad-4cd8-8321-98734b18f601"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {"\<\"Horario\"\>", "\<\"Pico/valle\"\>", "\<\"Precio trayecto\"\>", "\<\
\"N\[UAcute]mero de trayectos\"\>", "\<\"Costo total\"\>"},
     {
      ItemBox["\<\"lunes a viernes (6:30 a.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"pico\"\>", "\<\"$ 1800\"\>", "\<\"5\"\>", "\<\"$ \
9000\"\>"},
     {
      ItemBox["\<\"lunes a viernes (4:00 p.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"valle\"\>", "\<\"$ 1500\"\>", "\<\"5\"\>", "\<\"$ 7500\"\
\>"},
     {
      ItemBox["\<\"s\[AAcute]bado \
\\!\\(\\*\\nStyleBox[\\\"ida\\\",\\nFontSlant->\\\"Italic\\\"]\\) (9:00 \
a.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"valle\"\>", "\<\"$ 1500\"\>", "\<\"1\"\>", "\<\"$ 1500\"\
\>"},
     {
      ItemBox["\<\"s\[AAcute]bado \
\\!\\(\\*\\nStyleBox[\\\"regreso\\\",\\nFontSlant->\\\"Italic\\\"]\\) (5:00 \
p.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"pico\"\>", "\<\"$ 1800\"\>", "\<\"1\"\>", "\<\"$ \
1800\"\>"},
     {
      ItemBox["\<\"domingo\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"valle\"\>", "\<\"$ 1500\"\>", "\<\"4\"\>", "\<\"$ 6000\"\
\>"},
     {"", "", "", 
      ItemBox["\<\"TOTAL\"\>",
       Alignment->Left,
       StripOnInput->False], "\<\"$ 25800\"\>"}
    },
    AutoDelete->False,
    GridBoxAlignment->{
     "Columns" -> {Center, Center, Center, Center, Center}, 
      "Rows" -> {Left, Left, Left, Left, Left}},
    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"5e0b5d23-5cbc-47ff-ae9d-be1b5f6f149b"],

Cell[TextData[{
 "Para encontrar la recarga con la que finaliza el domingo la tarjeta, se \
encuentra la diferencia entre la recarga y el costo total de los pasajes, es \
decir\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"27300", "-", "25800"}], "=", "1500"}], TraditionalForm]],
  ExpressionUUID->"5ca165da-07a4-4610-b2ef-8c93d7d2c387"]
}], "Text",ExpressionUUID->"6d0bbe29-7fd7-4508-b452-7c4dfea1435a"],

Cell["\<\
La tarjeta \[OpenCurlyDoubleQuote]Tullave Plus\[CloseCurlyDoubleQuote] de \
Juanito queda con un saldo de $1,500.\
\>", "Answer",ExpressionUUID->"20a5131c-4352-42af-9860-d710ee1bfc6d"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problema 2  ", "Section",ExpressionUUID->"590dd343-54e4-4d76-a506-a93311560f20"],

Cell["\<\
El domingo, despu\[EAcute]s de ir a cine, Juanito recarga la tarjeta, \
quedando un saldo de $31,500.\
\>", "Text",ExpressionUUID->"4f1d7f71-67b6-4990-b928-91de2bec7c6d"],

Cell["\<\
Suponga que el recorrido de lunes a viernes, entre la universidad y la casa, \
contin\[UAcute]a a la misma hora.\
\>", "Item",
 CellGroupingRules->
  "NormalGrouping",ExpressionUUID->"c3d71fc1-14f7-425f-9698-175a0ef824b4"],

Cell["\<\
El lunes olvid\[OAcute] llevar un material que deb\[IAcute]a entregar, as\
\[IAcute] que a las 7:00 a.m. tom\[OAcute] el transporte para regresar a su \
casa (teniendo en cuenta que estaba en el rango de los 75 minutos del \
transbordo). Al intentar salir de casa, una fuerte lluvia lo impidi\[OAcute], \
por lo cual tuvo que tomar nuevamente el transporte a la universidad a las \
9:45 de la ma\[NTilde]ana.\
\>", "Item",
 CellGroupingRules->
  "NormalGrouping",ExpressionUUID->"21c7e0ef-71bc-4513-bbd6-982f8bb024a6"],

Cell["\<\
El jueves, el concierto de Katy Perry, la nueva princesa del pop, lo hizo \
tomar el transporte hacia el parque deportivo a las 5:00 p.m, de tal manera \
que lleg\[OAcute] a la casa y enseguida sali\[OAcute] para el concierto. El \
regreso fue en taxi.\
\>", "Item",
 CellGroupingRules->
  "NormalGrouping",ExpressionUUID->"19da55f2-0486-4ba5-b8fa-a30213a0273f"],

Cell["El s\[AAcute]bado no sali\[OAcute] de casa, dedic\[OAcute] el \
d\[IAcute]a para organizarla.", "Item",
 CellGroupingRules->
  "NormalGrouping",ExpressionUUID->"69835c4c-9234-4021-810d-410823474f95"],

Cell["\<\
El domingo invit\[OAcute] a Sandra al parque El Salitre, por lo que era \
necesario movilizarse por el sistema de transporte. Salieron de la casa a las \
10:20 a.m. y llegaron al parque a las 10:50 a.m., con tan mala suerte que el \
parque se encontraba ese d\[IAcute]a en mantenimiento y no hab\[IAcute]a \
servicio. Decidieron regresar a casa y ver pel\[IAcute]culas. Juanito pag\
\[OAcute] todos los pasajes con su tarjeta y Sandra le dio su parte en \
efectivo.\
\>", "Item",
 CellGroupingRules->
  "NormalGrouping",ExpressionUUID->"2835083a-d8b1-4763-a854-fc927a579d9e"],

Cell["El d\[IAcute]a que carg\[OAcute] la tarjeta, \[DownQuestion]de cu\
\[AAcute]nto fue dicha recarga?", "Ejercicio",
 TextAlignment->Right,
 FontSlant->"Italic",ExpressionUUID->"65dfcae5-3b97-4f39-968d-31b08b974729"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",ExpressionUUID->"555d3ed9-a122-430e-969a-7a050bef4b75"],

Cell[TextData[{
 "Si la tarjeta ten\[IAcute]a un saldo de $1,500 y al realizar la recarga \
qued\[OAcute] con $31,500 la recarga realizada se puede encontrar mediante la \
operaci\[OAcute]n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"31500", "-", "1500"}], "=", "30000"}], TraditionalForm]], "Text",
  ExpressionUUID->"6dae720d-cced-419b-8904-563ca2ac264b"]
}], "Text",ExpressionUUID->"5271e95c-9cf2-4e8b-8afc-2d9767f3272a"],

Cell[TextData[StyleBox["Por tanto, la recarga del domingo fue de $30,000.", \
"answer"]], "Answer",ExpressionUUID->"6d08b74f-5690-4c2d-b966-6f38a206d6bc"]
}, Closed]],

Cell["\<\
Al llegar a casa despu\[EAcute]s de ir al parque el Salitre, \
\[DownQuestion]con qu\[EAcute] saldo termina la tarjeta de Juanito?\
\>", "Ejercicio",
 TextAlignment->Right,
 FontSlant->"Italic",ExpressionUUID->"a39b7d38-f8b0-4ea6-940c-59d93af3690a"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",ExpressionUUID->"228d5e27-e0be-416b-b24f-66745c42015b"],

Cell["La soluci\[OAcute]n se ver\[AAcute] en la siguiente tabla:", "Text",ExpressionUUID->"d42d6445-52a6-459e-bbf3-5cd7c5e2a7c1"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {"\<\"Horario\"\>", "\<\"Pico/valle\"\>", "\<\"Precio trayecto\"\>", "\<\
\"N\[UAcute]mero de trayectos\"\>", "\<\"Costo total\"\>"},
     {
      ItemBox["\<\"lunes a viernes (6:30 a.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"pico\"\>", "\<\"$ 1800\"\>", "\<\"5\"\>", "\<\"$ \
9000\"\>"},
     {
      ItemBox["\<\"lunes a viernes (4:00 p.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"valle\"\>", "\<\"$ 1500\"\>", "\<\"5\"\>", "\<\"$ 7500\"\
\>"},
     {
      ItemBox["\<\"lunes (7:00 a.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"pico\"\>", "\<\"$ 300\"\>", "\<\"1\"\>", "\<\"$ 300\"\>"},
     {
      ItemBox["\<\"lunes (9:45 a.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"pico\"\>", "\<\"$ 1800\"\>", "\<\"1\"\>", "\<\"$ \
1800\"\>"},
     {
      ItemBox["\<\"jueves (5:00 p.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"pico\"\>", "\<\"$ 300\"\>", "\<\"1\"\>", "\<\"$ 300\"\>"},
     {
      ItemBox["\<\"domingo \
\\!\\(\\*\\nStyleBox[\\\"ida\\\",\\nFontSlant->\\\"Italic\\\"]\\) (10:20 a.m)\
\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"pico\"\>", "\<\"$ 1500\"\>", "\<\"2\"\>", "\<\"$ \
3000\"\>"},
     {
      ItemBox["\<\"domingo \
\\!\\(\\*\\nStyleBox[\\\"regreso\\\",\\nFontSlant->\\\"Italic\\\"]\\)\\!\\(\\*\
\\nStyleBox[\\\" \\\",\\nFontSlant->\\\"Italic\\\"]\\)(11:00 a.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"valle\"\>", "\<\"$ 1500\"\>", "\<\"1\"\>", "\<\"$ 1500\"\
\>"},
     {"", "", "", 
      ItemBox["\<\"TOTAL\"\>",
       Alignment->Left,
       StripOnInput->False], "\<\"$ 23400\"\>"}
    },
    AutoDelete->False,
    GridBoxAlignment->{
     "Columns" -> {Center, Center, Center, Center, Center}, 
      "Rows" -> {Left, Left, Left, Left, Left}},
    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"166179f3-76b5-410c-a51c-c498725cecad"],

Cell[TextData[{
 "Para encontrar la recarga con la que finaliza el domingo la tarjeta se \
encuentra la diferencia entre la recarga y el costo total de los pasajes, es \
decir\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"31500", "-", "23400"}], "=", "8100"}], TraditionalForm]],
  ExpressionUUID->"7b195ced-c14c-49c6-b034-276d4d0a0e59"]
}], "Text",ExpressionUUID->"17676935-de93-4213-a0e9-15cbbac8810a"],

Cell["La tarjeta de Juanito queda con un saldo de $8,100.", "Answer",ExpressionUUID->"be73074f-de1d-4199-a600-5b6fd2890f1f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAeiIWBGMT+TxD8+/t7ocbvRRr/7m79/+8fYfVw8PXV7+l8QPRrGh/QhP+/
vxGp79/TE7/AuiAk0Gpi9P57cw2oEqQLjH5P54fai9fNIF0LNWBaYBrBjL93
tqJ55/+Pj////QE6BuhCuC64O+GGgCyFgb/H2+AmY0UwS2GhBAMg88Ghh1Mv
2CKgS/4BHfbvL1YbQSSGIaCofHMNS1h8fYXVbZAwAel6jU0XxLXb41DVIwwB
uhBftP39hRyAyKEBlMKv8e/1NdAARw0i5NBAA/8+Pvo1V+3/62sQveg2AiMX
u7a/kOgGRRDQVf/+okUrLhtByqaDEzAwjuDgx8e/lxcCjfp7dytWXUBHgmQv
LyQtuwEdiWYRkfqAEUSSRaNgFAw1AAB1Yza7
     "], {{0, 31}, {19, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{19, 31},
   PlotRange->{{0, 19}, {0, 31}}]], "Input",ExpressionUUID->
  "944e26f5-50f4-4a5f-89e2-7050f1af308c"],
 " Resumen"
}], "Section",ExpressionUUID->"f57eda7f-96eb-40fd-b5b9-b3add4375f50"],

Cell["\<\
Desde peque\[NTilde]os, cada uno de nosotros se ha encontrado inmerso dentro \
de un mundo en donde se habla de precios, cantidades, orden... en otras \
palabras, de n\[UAcute]meros; raz\[OAcute]n por la cual su estudio se hace \
imprescindible dentro del \[AAcute]rea de la matem\[AAcute]tica. \
\>", "Text",ExpressionUUID->"8504a0ae-1f1a-4ca2-906c-11611d7e37fe"],

Cell["\<\
Aunque no hay seguridad de la forma como el hombre genera y utiliza el n\
\[UAcute]mero natural, se hace necesario realizar las siguientes precisiones \
al respecto:\
\>", "Text",ExpressionUUID->"dc686209-3afe-40e0-83b2-ea4a30e62a29"],

Cell[CellGroupData[{

Cell["Se establece una distinci\[OAcute]n entre uno y muchos.", "Item",ExpressionUUID->"022999dc-4582-4e7b-ab9f-8ce916bfd93d"],

Cell["\<\
Al hablar de muchos, se crea la necesidad de establecer una correspondencia \
uno a uno entre esos muchos y un conjunto de igual cantidad de elementos, que \
se representa por medio de un n\[UAcute]mero natural, en este caso, el n\
\[UAcute]mero natural es un n\[UAcute]mero cardinal. Por ejemplo, a una oveja \
le puede asignar el n\[UAcute]mero 1, a dos ovejas el n\[UAcute]mero 2 y as\
\[IAcute] sucesivamente.\
\>", "Item",ExpressionUUID->"f7f267a7-9111-40bd-9b4a-c1bf1bfcee85"],

Cell["\<\
Aparece la necesidad de registrar, ya sea por medio de r\[OAcute]tulos o \
etiquetas, los elementos que tiene un conjunto, dando lugar al n\[UAcute]mero \
natural, pero esta vez estableciendo un orden, es decir como n\[UAcute]mero \
ordinal. Por ejemplo, primero, segundo, tercero, etc.\
\>", "Item",ExpressionUUID->"7b154561-2c2b-4660-a59a-26cf447ba5b0"],

Cell[TextData[{
 "Aparecen as\[IAcute] los diferentes sistemas de numeraci\[OAcute]n, seg\
\[UAcute]n cada civilizaci\[OAcute]n; su representaci\[OAcute]n permit\
\[IAcute]a organizar aquellos n\[UAcute]meros naturales y darles otros usos. \
En nuestro caso, se usa el sistema decimal de numeraci\[OAcute]n, un sistema \
posicional y polin\[OAcute]mico. Cuando se habla de posicional, se habla de \
unidades, decenas, centenas, etc., por ejemplo, el n\[UAcute]mero 547 \
representa 7 unidades, 4 decenas y 5 centenas, en tanto que, cuando se habla \
de polin\[OAcute]mico, quiere decir que cualquier n\[UAcute]mero se puede \
escribir como una suma de cada una de sus cifras multiplicada por un m\
\[UAcute]ltiplo de 10, por ejemplo, 547 es igual a ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"5", " ", "100"}], "+", 
    RowBox[{"4", " ", "10"}], "+", "7"}], TraditionalForm]],ExpressionUUID->
  "75456f35-5f17-4e0b-a24a-ab55b631c3aa"],
 "."
}], "Item",ExpressionUUID->"022a0334-07dc-4658-bc91-bde120d51bf6"],

Cell["\<\
Finalmente, aparece la acci\[OAcute]n de conteo, como una secuencia ordenada \
de la correspondencia uno a uno que se establece entre los elementos de dos \
conjuntos, donde el \[UAcute]ltimo elemento es el que nombra la cantidad de \
elementos del conjunto, por ejemplo, si en un conjunto hay 14 ovejas, el n\
\[UAcute]mero que representa ese conjunto es el natural 14.\
\>", "Item",ExpressionUUID->"a31c43a3-db8b-4a64-8ad7-dc2b92a66483"]
}, Open  ]],

Cell["\<\
Con lo escrito anteriormente, los n\[UAcute]meros que se utilizan para contar \
o representar una cantidad se denominan n\[UAcute]meros naturales. En los \
problemas anteriores, se utilizaron para representar cantidades que \
aumentaban o disminu\[IAcute]an de acuerdo con diferentes circunstancias \
(como pagar un pasaje o recargar una tarjeta).\
\>", "Text",ExpressionUUID->"3a8f326c-881c-442c-ac8c-bb1f82b97e4b"],

Cell["\<\
A diario, cada uno de nosotros est\[AAcute] expuesto a una gran cantidad de \
problemas y algunos de ellos se pueden resolver mediante operaciones o \
algoritmos matem\[AAcute]ticos. El conjunto de los n\[UAcute]meros naturales \
constituye un conjunto cerrado para las operaciones de adici\[OAcute]n y \
multiplicaci\[OAcute]n: esto significa que al operar cualquiera de sus \
elementos, el resultado es un n\[UAcute]mero natural (la sustracci\[OAcute]n \
y la divisi\[OAcute]n no son operaciones en este conjunto por que no siempre \
se pueden realizar). Ambas operaciones, la adici\[OAcute]n y la multiplicaci\
\[OAcute]n, cumplen las propiedades de conmutatividad y asociatividad.\
\>", "Text",ExpressionUUID->"41d81833-a7c5-452a-b1f3-0268fde44aa3"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`framePane$$, $CellContext`textPane$$, \
$CellContext`tabImage$$, $CellContext`tabText$$, $CellContext`style1$$, \
$CellContext`style2$$, $CellContext`style3$$, $CellContext`color1$$ = 
    RGBColor[0, 0, 
     Rational[1, 2]], $CellContext`color2$$ = RGBColor[
    0.2, 0.08, 0.28], $CellContext`color3$$ = RGBColor[
    0.796078431372549, 0.07058823529411765, 0.], $CellContext`tama1$$ = 
    15, $CellContext`tama2$$ = 18, $CellContext`tama3$$ = 
    25, $CellContext`font1$$ = "Georgia", $CellContext`page1$$ = 
    1, $CellContext`page2$$ = 1, $CellContext`page3$$ = 
    1, $CellContext`page4$$ = 1, $CellContext`page5$$ = 
    1, $CellContext`titlePopUp$$, $CellContext`textPopUp$$, \
$CellContext`panelWidth$$ = 750, $CellContext`bodyWidth$$ = 
    600, $CellContext`rati$$, $CellContext`int$$}, 
    PaneBox[
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJy9WEuS0zAQTQELllyBDWuWbFmyHYoDzBRhiixCxSFf5+eZgtmwYOdj+BI+
RA6ROzR6GnqQjWS3LNmq6nwcx/3U/d6T7Nc3366+PBuNRvOX6uXqevU+Sa43
H1+pL5+m86+30/HnD9Pv49tx8u7muTr4VsUbFS9UrFYrOp1OAZFTeSEaRRi4
3uFwoEP2QGmaUji2gs4Ujg3XAp403dFyudQYw3CpyMsouI7Ho47tdhuhXo+R
q4aG4uJAvYCvbc5lLsNWnLv307wO6mX20TVnUgwqetYB/p9lGe33e30tfm+b
M11KynvUAdcJ/UOt1uu1eM50LmR8U5Prggu8Qp2Y/z76Ohf96AD/mc/numbs
Zdxb6Zz70AHOhzcAD/cSx+5/PFC9FkPqAOfPZjPabDYVPWZ39/R/LRq4JtWB
0HNxbpIkumbwfe7nKbsjez63vi5lHk0HOG+xWFR4z9x/qkVddwPogPnFvvW4
VqYVXLZaNF03hg4Yi+kP9Xq58jk9V6wDNyfwO7wUfK97fXu+CJ7r4AR+Yx0C
1263e9pTWPPVddDAtRAdMC72LtPDxPka9NVVBzgG70Kt8I7vbbhs+cJ1UOUE
4wIW9FBSL3u+CJ5r6MDkF2uR+d+Gy8dzfXXAfZP4hChfDB38Dfb6Lrhs+Zq4
JtWBiYMxSvlljvieWw32WF9cXp4r1sG/YE364tL5PLgm0QHXB7WCNoGtCy4M
H8+V6AD7Zu6hbT/hM2J5LvoGXPBXBPZjuBfpisuLawIdABN6CE0CZ1dcOp+P
5zp0wDznuuEzahaCS+cL1AHznvmOmEwmUZ5j+XBN4rnoZQxcGFLPtZ1rPqPg
nsbCFaKD+v11zHrpfB5cw6jXzPT9mLgwfDzXhQv3urFxYUh1YPNXfMazlD5w
Sbnm0iPuifrApbEJPNe1JmH97guXxtaiA5vn98X7+mjimmtNwhrQNy4Ml+fW
tchr0lC4rDoo3WvlULg0NsHedeg+8mjauwKTuacYEhdG036Cefbz1+/Bcbn2
rn8AgmcqHw==
                    "], {{0, 48}, {38, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{38, 48},
                    PlotRange->{{0, 38}, {0, 48}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Naturales\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 1), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]]}
           },
           AutoDelete->False,
           FrameStyle->GrayLevel[0.7],
           GridBoxBackground->{"Columns" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "Columns"]], 
             "ColumnsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "ColumnsIndexed"]], 
             "Rows" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "Rows"]], 
             "RowsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "RowsIndexed"]], 
             "ItemsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "ItemsIndexed"]]},
           GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.7}}, "Rows" -> {{0.7}}}],
          "Grid"]},
        {
         FrameBox[
          PaneSelectorBox[{1->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {1, 
                    0}, $CellContext`scale$$ = 20, Typeset`show$$ = True, 
                    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                    Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 20, "m\[AAcute]ximo"}, {20, 
                    60, 100, 200, 1000}}, {{
                    Hold[$CellContext`pos$$], {1, 0}}}}, Typeset`size$$ = {
                    720., {37., 43.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$4890$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {1, 
                    0}, $CellContext`scale$$ = 20}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$4890$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    Max[1, 
                    Round[
                    Part[$CellContext`pos$$, 1]]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.003], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalN], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{(-0.05) $CellContext`scale$$, \
$CellContext`scale$$}, {-0.5, 0.5}}, Ticks -> {
                    Delete[
                    Range[0, $CellContext`scale$$, $CellContext`scale$$/20], 
                    1], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Max[1, 
                    Round[
                    Part[$CellContext`pos$$, 1]]], TraditionalForm], Red, 30],
                     ImageSize -> {350, 30}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 20, 
                    "m\[AAcute]ximo"}, {20, 60, 100, 200, 
                    1000}}, {{$CellContext`pos$$, {1, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{779., {88., 95.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"Los \\!\\(\\*StyleBox[\\\"n\[UAcute]meros\\\
\",FontSlant->\\\"Italic\\\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\
\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\\)\\!\\(\\*StyleBox[\\\"naturales\\\",FontSlant->\\\"\
Italic\\\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\\) son aquellos \
que se utilizan para \\!\\(\\*StyleBox[\\\"contar\\\",FontSlant->\\\"Italic\\\
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\\), el conjunto de todos \
los n\[UAcute]meros naturales se denota por \[DoubleStruckCapitalN] y son: \
\\n \[DoubleStruckCapitalN]={1, 2, 3, 4, 5, 6, 7, 8, 9...}\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "a589ba4f-53f0-4bfa-81c0-a5b88ecae48a"],
                  TextCell[
                   Style[
                   "Los \!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"\
Italic\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\
\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\) son aquellos que se utilizan para \
\!\(\*StyleBox[\"contar\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\), el conjunto de todos los n\[UAcute]meros naturales se \
denota por \[DoubleStruckCapitalN] y son: \n \[DoubleStruckCapitalN]={1, 2, \
3, 4, 5, 6, 7, 8, 9...}", {FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros naturales \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalN] , + )", "Text",
                    ExpressionUUID->"cd95d422-aba8-4946-b319-a5ca8226a35e"],
                    TextCell[" ( \[DoubleStruckCapitalN] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros naturales es un n\
\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalN]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text",
                    ExpressionUUID->"dbd7c490-d35e-4a15-85e0-cd84b3b8b7a8"],
                    TextCell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros naturales es \
un n\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalN]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros naturales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros naturales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero natural da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "b3b42292-da52-4aa6-819d-ead45868d823"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La sustracci\[OAcute]n es el proceso inverso a la adici\
\[OAcute]n y no se considera una operaci\[OAcute]n porque no es cerrada, lo \
que quiere decir que no siempre se puede realizar la sustracci\[OAcute]n \
entre dos n\[UAcute]meros naturales.\nEn la sustracci\[OAcute]n \
\!\(TraditionalForm\`a - b = c\) el t\[EAcute]rmino \!\(TraditionalForm\`a\) \
se llama \!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\) y \
\!\(TraditionalForm\`c\) la \!\(\*StyleBox[\"diferencia\",FontSlant->\"Italic\
\"]\).\nLa sustracci\[OAcute]n se puede realizar dentro del conjunto de los n\
\[UAcute]meros naturales solo cuando el \
\!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\) es mayor que el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\), por ejemplo: \
\!\(TraditionalForm\`505 - 124 = 381\) , en el caso contrario, la operaci\
\[OAcute]n no da como resultado un n\[UAcute]mero natural: \
\!\(TraditionalForm\`124 - 505 = \(-381\) \[NotElement] \
\[DoubleStruckCapitalN]\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "367d4e79-bc2f-48db-bebb-c9ca8f070d95"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]meros naturales. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros naturales solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \!\(TraditionalForm\`6\[Divide]2 = 3\) , \
en el caso contrario, la operaci\[OAcute]n no da como resultado un \
n\[UAcute]mero natural: \!\(TraditionalForm\`2\[Divide]6 = \
\(\*FractionBox[\(2\), \(6\)] = \*FractionBox[\(1\), \(3\)] \[NotElement] \
\[DoubleStruckCapitalN]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "7bccfdc0-05ae-402a-8c5d-fd791b10c1f5"]
                  }], "Multimedia",ExpressionUUID->
                   "12b5f9a0-b754-4f65-b495-edd45db5ccf7"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros naturales \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalN] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros naturales es un n\
\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalN]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros naturales es \
un n\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalN]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros naturales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros naturales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero natural da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La sustracci\[OAcute]n es el proceso inverso a la adici\
\[OAcute]n y no se considera una operaci\[OAcute]n porque no es cerrada, lo \
que quiere decir que no siempre se puede realizar la sustracci\[OAcute]n \
entre dos n\[UAcute]meros naturales.\nEn la sustracci\[OAcute]n \
\!\(TraditionalForm\`a - b = c\) el t\[EAcute]rmino \!\(TraditionalForm\`a\) \
se llama \!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\) y \
\!\(TraditionalForm\`c\) la \!\(\*StyleBox[\"diferencia\",FontSlant->\"Italic\
\"]\).\nLa sustracci\[OAcute]n se puede realizar dentro del conjunto de los n\
\[UAcute]meros naturales solo cuando el \
\!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\) es mayor que el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\), por ejemplo: \
\!\(TraditionalForm\`505 - 124 = 381\) , en el caso contrario, la operaci\
\[OAcute]n no da como resultado un n\[UAcute]mero natural: \
\!\(TraditionalForm\`124 - 505 = \(-381\) \[NotElement] \
\[DoubleStruckCapitalN]\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]meros naturales. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros naturales solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \!\(TraditionalForm\`6\[Divide]2 = 3\) , \
en el caso contrario, la operaci\[OAcute]n no da como resultado un \
n\[UAcute]mero natural: \!\(TraditionalForm\`2\[Divide]6 = \
\(\*FractionBox[\(2\), \(6\)] = \*FractionBox[\(1\), \(3\)] \[NotElement] \
\[DoubleStruckCapitalN]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}]}, Dynamic[$CellContext`page1$$]],
          FrameMargins->1,
          FrameStyle->GrayLevel[0.7],
          ImageMargins->{{1, 1}, {0, 0}},
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Top}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"],
     ImageSize->{800, Automatic}],
    DynamicModuleValues:>{{DownValues[$CellContext`framePane$$] = {HoldPattern[
           $CellContext`framePane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            $CellContext`style1$$[$CellContext`s$], "Cuadro/Titulo", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPane$$] = {HoldPattern[
           $CellContext`textPane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "EmphasisText", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`style1$$] = {HoldPattern[
           $CellContext`style1$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style2$$] = {HoldPattern[
           $CellContext`style2$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style3$$] = {HoldPattern[
           $CellContext`style3$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`titlePopUp$$] = {HoldPattern[
           $CellContext`titlePopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama2$$, 
             FontFamily -> $CellContext`font1$$, $CellContext`color3$$, 
             Italic], "Text", LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPopUp$$] = {HoldPattern[
           $CellContext`textPopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama1$$, 
             FontFamily -> $CellContext`font1$$], "Text", LineIndent -> 0, 
            TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`rati$$] = {HoldPattern[
           $CellContext`rati$$[
            Pattern[$CellContext`x, 
             Blank[]]]] :> Rationalize[$CellContext`x, 0.1]}}, {
      DownValues[$CellContext`int$$] = {HoldPattern[
           $CellContext`int$$[
            Pattern[$CellContext`x, 
             Blank[]], 
            Pattern[$CellContext`y, 
             Blank[]]]] :> IntegerPart[$CellContext`x/$CellContext`y]}}}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"e94b4a5f-19dd-4360-a6be-329835fe37f5"],

Cell["Resumen de operaciones en n\[UAcute]meros naturales (Video)", \
"Multimedia",ExpressionUUID->"c17c20a7-6d1a-4763-a910-d6fc5e58f6bc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejercicios de refuerzo", "Section",ExpressionUUID->"68cd1f20-57c6-4146-8a1f-079e0633acd9"],

Cell[CellGroupData[{

Cell["Ejercicios num\[EAcute]ricos", "Subsection",ExpressionUUID->"65e69c19-1d05-4ca5-89fb-70dca046c93b"],

Cell[CellGroupData[{

Cell["\<\
Simplifique completamente cada una de las siguientes expresiones\
\>", "ItemNumbered",ExpressionUUID->"2ebd757d-c17c-4d11-bb81-16d139019e18"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"2", "+", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{"8", "-", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"4", "-", "3"}], ")"}], "2"}], "-", "2"}], "}"}], "2"}], "-", 
   "1"}], TraditionalForm]],ExpressionUUID->"b4354064-8607-4539-8900-\
0640a6f05061"]], "SubitemNumbered",ExpressionUUID->"f0816069-0ca0-4ff8-bead-\
be4860c3c0d5"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"12", "-", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{"8", "-", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"4", "-", "2"}], ")"}], "2"}], "-", "1"}], "}"}], "2"}], "-", 
   "3"}], TraditionalForm]],ExpressionUUID->"9f1abf75-0896-4b63-bc1f-\
85dc2828f8e2"]], "SubitemNumbered",ExpressionUUID->"e79a412c-f6eb-4b18-a558-\
350eebdee8a9"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"13", "\[Divide]", "4"}], "+", "2", "-", 
   RowBox[{"1", "\[CenterDot]", "3"}]}], 
  TraditionalForm]],ExpressionUUID->"958d420c-0e2a-44fd-93d0-0b61544d0cd1"]], \
"SubitemNumbered",ExpressionUUID->"477e3f65-ee2a-4c71-bfd7-3f1c52a1b475"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"6", "+", 
   RowBox[{"24", "\[Divide]", "2"}], "-", 
   RowBox[{"3", "\[CenterDot]", "2"}]}], 
  TraditionalForm]],ExpressionUUID->"de1b5a8d-7bb3-40c1-82b3-2b9297aa7c3a"]], \
"SubitemNumbered",ExpressionUUID->"7d5a5fd3-fecc-4c15-956c-7446e75b30bd"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"24", "-", 
   RowBox[{"2", 
    RowBox[{"{", 
     RowBox[{"6", "-", 
      RowBox[{"4", "\[Divide]", "2"}]}], "}"}], "2"}], "-", "1"}], 
  TraditionalForm]],ExpressionUUID->"e1e59dcd-de39-4820-af7f-94b15fff500c"]], \
"SubitemNumbered",ExpressionUUID->"762401a4-e704-4dd3-8873-e5dd5f039583"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"3", "+", 
   RowBox[{"5", 
    RowBox[{"{", 
     RowBox[{"30", "-", 
      RowBox[{"6", 
       RowBox[{"(", 
        RowBox[{"4", "-", "2"}], ")"}], "2"}]}], "}"}], "2"}], "+", "1"}], 
  TraditionalForm]],ExpressionUUID->"39982dd4-48c3-456a-b63c-b6317785598b"]], \
"SubitemNumbered",ExpressionUUID->"b2e7195d-6414-4481-9b6e-c89b92c54f4f"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"15", "+", 
   RowBox[{"5", "\[Divide]", "5"}], "-", 
   RowBox[{"4", " ", "2"}]}], 
  TraditionalForm]],ExpressionUUID->"b8465b04-4b6b-4668-81d2-17fcc1369d30"]], \
"SubitemNumbered",ExpressionUUID->"e6df58aa-8ac5-4218-87b7-9faaa8df218f"],

Cell["18 \[Divide] 6 + 3 \[CenterDot] 4", "SubitemNumbered",ExpressionUUID->"f38fd781-abf9-43ce-8376-55939ffa4b99"],

Cell["18 \[Divide] (6 + 3) \[CenterDot] 4", "SubitemNumbered",ExpressionUUID->"fc51ac89-362d-4b07-bb82-c18b9f042d34"],

Cell["18 \[Divide] (6 + 3 \[CenterDot] 4)", "SubitemNumbered",ExpressionUUID->"762c055d-2d3a-49a9-9a02-7d4b18c59d65"],

Cell["(18 \[Divide] 6 + 3) \[CenterDot] 4", "SubitemNumbered",ExpressionUUID->"f1c055ed-0062-4e31-a588-ebb2dbd68c65"],

Cell["8 \[CenterDot] 3 + 5 - 32 \[Divide] (8 + 8)", "SubitemNumbered",ExpressionUUID->"9d5fc8c9-e725-49ac-a8ff-c5f05a10da7f"],

Cell["8 \[CenterDot] (3 + 5) - 32 \[Divide] (8 + 8)", "SubitemNumbered",ExpressionUUID->"e1673e4f-8664-4576-b9a5-209e33ad5182"],

Cell["8 \[CenterDot] 3 + 5 - 32 \[Divide] 8 + 8", "SubitemNumbered",ExpressionUUID->"2cd7e6bd-2585-4bb0-834c-3927432ae7f3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Soluciones a los ejercicios", "Subsubsection",ExpressionUUID->"21d70013-bb6b-4de3-8692-53f8407d24b3"],

Cell[CellGroupData[{

Cell["\<\
Simplifique completamente cada una de las siguientes expresiones\
\>", "ItemNumbered",ExpressionUUID->"36003e80-e65c-42a0-b1af-bbc922ef045a"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"2", "+", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{"8", "-", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"4", "-", "3"}], ")"}], "2"}], "-", "2"}], "}"}], "2"}], "-", 
   "1"}], TraditionalForm]],ExpressionUUID->"009f47a5-5cbc-4e88-a3fa-\
e976dcda0d18"]], "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15001.},ExpressionUUID->"f4639ba8-8a33-4b69-a91c-a808f0d546e1"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"2", "+", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{"8", "-", 
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{"4", "-", "3"}], ")"}], "2"}], "-", "2"}], "}"}], 
           "2"}], "-", "1"}], "=", 
         RowBox[{"2", "+", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{"8", "-", 
             RowBox[{"2", 
              RowBox[{"(", "1", ")"}], "2"}], "-", "2"}], "}"}], "2"}], "-", 
          "1"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"2", "+", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{"8", "-", "4", "-", "2"}], "}"}], "2"}], "-", "1"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"2", "+", 
          RowBox[{"3", 
           RowBox[{"{", "2", "}"}], "2"}], "-", "1"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"2", "+", "12", "-", "1"}]}]},
       {
        RowBox[{"=", "13"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"8995206d-8495-45c0-8a40-1046760274dd"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15001.},ExpressionUUID->"3203eb9d-0153-46dd-b0d2-6801c5447d29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"12", "-", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{"8", "-", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"4", "-", "2"}], ")"}], "2"}], "+", "1"}], "}"}], "2"}], "-", 
   "3"}], TraditionalForm]],ExpressionUUID->"8bf159c5-c141-4acc-94a2-\
85fbf3e4b0b6"]], "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15002.},ExpressionUUID->"5d6d5c38-f79a-49ff-834d-2a0220b7b7ce"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"12", "-", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{"8", "-", 
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{"4", "-", "2"}], ")"}], "2"}], "+", "1"}], "}"}], 
           "2"}], "-", "3"}], "=", 
         RowBox[{"12", "-", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{"8", "-", 
             RowBox[{"2", 
              RowBox[{"(", "2", ")"}], "2"}], "+", "1"}], "}"}], "2"}], "-", 
          "3"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"12", "-", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{"8", "-", "8", "+", "1"}], "}"}], "2"}], "-", "3"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"12", "-", 
          RowBox[{"3", 
           RowBox[{"{", "1", "}"}], "2"}], "-", "3"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"12", "-", "6", "-", "3"}]}]},
       {
        RowBox[{"=", "3"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"4137a36e-5998-4468-9eae-36e06c012ba6"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15002.},ExpressionUUID->"1a48efdc-dd65-4c04-a81d-40db39a86cd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"12", "\[Divide]", "4"}], "+", "2", "-", 
   RowBox[{"1", "\[CenterDot]", "3"}]}], 
  TraditionalForm]],ExpressionUUID->"02840a63-1731-4a48-a601-2898b0f4a899"]], \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15003.},ExpressionUUID->"6f0944c5-5b97-435d-b9f9-5f16c7ed79fc"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"12", "\[Divide]", "4"}], "+", "2", "-", 
          RowBox[{"1", "\[CenterDot]", "3"}]}], "=", 
         RowBox[{"3", "+", "2", "-", "3"}]}]},
       {
        RowBox[{"=", "2"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"43da119c-1bea-47d0-b7ee-524bbb8d1c03"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15003.},ExpressionUUID->"92ec4244-c973-46f7-b325-5fab15782133"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"6", "+", 
   RowBox[{"24", "\[Divide]", "2"}], "-", 
   RowBox[{"3", "\[CenterDot]", "2"}]}], 
  TraditionalForm]],ExpressionUUID->"38e58ef9-f8ba-4fa5-a730-cd61818e64f2"]], \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15004.},ExpressionUUID->"1725a742-2733-4069-91db-beeb65418a84"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"6", "+", 
          RowBox[{"24", "\[Divide]", "2"}], "-", 
          RowBox[{"3", "\[CenterDot]", "2"}]}], "=", 
         RowBox[{"6", "+", "12", "-", "6"}]}]},
       {
        RowBox[{"=", "12"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"3579cf50-4b68-4419-a68b-171202b486f2"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15004.},ExpressionUUID->"e3130ddf-56f1-4fb7-a5fc-b9d3e623c446"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"24", "-", 
   RowBox[{"2", 
    RowBox[{"{", 
     RowBox[{"6", "-", 
      RowBox[{"4", "\[Divide]", "2"}]}], "}"}], "2"}], "-", "1"}], 
  TraditionalForm]],ExpressionUUID->"b695cb2b-0238-44a8-9394-094c1f0d4db8"]], \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15005.},ExpressionUUID->"390cdc16-6a14-43aa-b618-8b0be5aa931f"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"24", "-", 
          RowBox[{"2", 
           RowBox[{"{", 
            RowBox[{"6", "-", 
             RowBox[{"4", "\[Divide]", "2"}]}], "}"}], "2"}], "-", "1"}], "=", 
         RowBox[{"24", "-", 
          RowBox[{"2", 
           RowBox[{"{", 
            RowBox[{"6", "-", "2"}], "}"}], "2"}], "-", "1"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"24", "-", 
          RowBox[{"2", 
           RowBox[{"{", "4", "}"}], "2"}], "-", "1"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"24", "-", "16", "-", "1"}]}]},
       {
        RowBox[{"=", "7"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"510e5fc5-3083-4259-aab7-bdec07dc45fa"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15005.},ExpressionUUID->"87712edc-5bdf-45db-bdf8-b243ccd1544e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"3", "+", 
   RowBox[{"5", 
    RowBox[{"{", 
     RowBox[{"30", "-", 
      RowBox[{"6", 
       RowBox[{"(", 
        RowBox[{"4", "-", "2"}], ")"}], "2"}]}], "}"}], "2"}], "+", "1"}], 
  TraditionalForm]],ExpressionUUID->"d1b66adf-fbb2-4080-a811-4ba12f6a968b"]], \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15006.},ExpressionUUID->"1c313e97-db17-4460-8513-e9f105d493d3"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"3", "+", 
          RowBox[{"5", 
           RowBox[{"{", 
            RowBox[{"30", "-", 
             RowBox[{"6", 
              RowBox[{"(", 
               RowBox[{"4", "-", "2"}], ")"}], "2"}]}], "}"}], "2"}], "+", 
          "1"}], "=", 
         RowBox[{"3", "+", 
          RowBox[{"5", 
           RowBox[{"{", 
            RowBox[{"30", "-", 
             RowBox[{"6", 
              RowBox[{"(", "2", ")"}], "2"}]}], "}"}], "2"}], "+", "1"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"3", "+", 
          RowBox[{"5", 
           RowBox[{"{", 
            RowBox[{"30", "-", "24"}], "}"}], "2"}], "+", "1"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"3", "+", 
          RowBox[{"5", 
           RowBox[{"{", "6", "}"}], "2"}], "+", "1"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"3", "+", "60", "+", "1"}]}]},
       {
        RowBox[{"=", "64"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"02d4741e-1f22-4792-bdee-2324aba700b8"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15006.},ExpressionUUID->"e5a47bb4-3ef5-4477-8a7f-3ddd93b6a87c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"15", "+", 
   RowBox[{"5", "\[Divide]", "5"}], "-", 
   RowBox[{"4", " ", "2"}]}], 
  TraditionalForm]],ExpressionUUID->"c35d0b69-aee4-4ad9-a8bd-f9fc2eadad03"]], \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15007.},ExpressionUUID->"b3148c38-9aea-49b5-a232-d41b92633283"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"15", "+", 
          RowBox[{"5", "\[Divide]", "5"}], "-", 
          RowBox[{"4", " ", "2"}]}], "=", 
         RowBox[{"15", "+", 
          RowBox[{"5", "\[Divide]", "5"}], "-", 
          RowBox[{"4", " ", "2"}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{"15", "+", "1", "-", "8"}]}]},
       {
        RowBox[{"=", "8"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"8925ccba-2c8b-4e92-ab7c-abe826c28b82"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15007.},ExpressionUUID->"a74aec75-1f91-499f-b5fb-c48a9cad2f92"]
}, Open  ]],

Cell["18 \[Divide] 6 + 3 \[CenterDot] 4", "SubitemNumbered",ExpressionUUID->"611df5f3-f477-4ef2-a9f3-129d4af0bda1"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"18", "\[Divide]", "6"}], "+", 
          RowBox[{"3", "\[CenterDot]", "4"}]}], "=", 
         RowBox[{"3", "+", "12"}]}]},
       {
        RowBox[{"=", "15"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b5cde1f3-0cd3-48fd-ba78-282b34e16e65"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15007.},ExpressionUUID->"ebe22fb6-a529-4acd-a173-1d19be71eee1"],

Cell["18 \[Divide] (6 + 3) \[CenterDot] 4", "SubitemNumbered",ExpressionUUID->"9ea24656-4559-451b-86f2-9e2fb4c618db"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"18", "\[Divide]", 
           RowBox[{"(", 
            RowBox[{"6", "+", "3"}], ")"}]}], "\[CenterDot]", "4"}], "=", 
         RowBox[{
          RowBox[{"18", "\[Divide]", "9"}], "\[CenterDot]", "4"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"2", "\[CenterDot]", "4"}]}]},
       {
        RowBox[{"=", "8"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"9030d51a-110d-4640-9318-c7db1137ac88"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15007.},ExpressionUUID->"0a1abdc3-8205-4980-98f1-7f3aa40f782a"],

Cell["18 \[Divide] (6 + 3 \[CenterDot] 4)", "SubitemNumbered",ExpressionUUID->"ec627866-cdde-43ee-9752-9745a64a8468"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"18", "\[Divide]", 
          RowBox[{"(", 
           RowBox[{"6", "+", 
            RowBox[{"3", "\[CenterDot]", "4"}]}], ")"}]}], "=", 
         RowBox[{"18", "\[Divide]", 
          RowBox[{"(", 
           RowBox[{"6", "+", "12"}], ")"}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{"18", "\[Divide]", "18"}]}]},
       {
        RowBox[{"=", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"e86972af-799d-48f4-8324-a0bbb3ee5c18"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15007.},ExpressionUUID->"39f9de22-8d40-434d-9c64-9e5319ba15f2"],

Cell["(18 \[Divide] 6 + 3) \[CenterDot] 4", "SubitemNumbered",ExpressionUUID->"ed3527b7-3d13-481a-afd2-8ef6406c726e"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"18", "\[Divide]", "6"}], "+", "3"}], ")"}], 
          "\[CenterDot]", "4"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "+", "3"}], ")"}], "\[CenterDot]", "4"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"6", "\[CenterDot]", "4"}]}]},
       {
        RowBox[{"=", "24"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"2cf0a17f-a886-4e57-b07f-f124b845a323"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15007.},ExpressionUUID->"cd41203c-9720-4121-997d-dbff36b49bcd"],

Cell["8 \[CenterDot] 3 + 5 - 32 \[Divide] (8 + 8)", "SubitemNumbered",ExpressionUUID->"a130486a-488b-4de2-ad40-bc6a45b939c0"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"8", "\[CenterDot]", "3"}], "+", "5", "-", 
          RowBox[{"32", "\[Divide]", 
           RowBox[{"(", 
            RowBox[{"8", "+", "8"}], ")"}]}]}], "=", 
         RowBox[{"24", "+", "5", "-", 
          RowBox[{"32", "\[Divide]", "16"}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{"29", "-", "2"}]}]},
       {
        RowBox[{"=", "27"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"f03ec92b-97d0-42e1-9af6-aae47fd96307"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15007.},ExpressionUUID->"589d7b55-1d1c-4e51-b52a-6fa642e056ef"],

Cell["8 \[CenterDot] (3 + 5) - 32 \[Divide] (8 + 8)", "SubitemNumbered",ExpressionUUID->"2c9bdb6a-7575-4532-ac5b-4a00a90b575b"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"8", "\[CenterDot]", 
           RowBox[{"(", 
            RowBox[{"3", "+", "5"}], ")"}]}], "-", 
          RowBox[{"32", "\[Divide]", 
           RowBox[{"(", 
            RowBox[{"8", "+", "8"}], ")"}]}]}], "=", 
         RowBox[{
          RowBox[{"8", "\[CenterDot]", "8"}], "-", 
          RowBox[{"32", "\[Divide]", "16"}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{"64", "-", "2"}]}]},
       {
        RowBox[{"=", "62"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"db14279e-8586-4059-b6a3-564677d14aea"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15007.},ExpressionUUID->"047cb2f2-e46a-4d46-8f3c-21f44a78d68d"],

Cell["8 \[CenterDot] 3 + 5 - 32 \[Divide] 8 + 8", "SubitemNumbered",ExpressionUUID->"9aebca7c-8c68-43f2-b4a2-53a321c4a633"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"8", "\[CenterDot]", "3"}], "+", "5", "-", 
          RowBox[{"32", "\[Divide]", "8"}], "+", "8"}], "=", 
         RowBox[{"24", "+", "5", "-", "4", "+", "8"}]}]},
       {
        RowBox[{"=", "33"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"53733d80-3c96-4ca7-9156-8e31f7a806a4"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15007.},ExpressionUUID->"726a3c10-021f-47b7-9de0-989357ff8ee8"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problemas de aplicaci\[OAcute]n", "Subsection",ExpressionUUID->"e55c66a7-1a0a-49bc-8b7a-c7a6a59717c9"],

Cell[CellGroupData[{

Cell["\<\
Carla hizo 4 bandejas de galletas (cada bandeja tiene 31 galletas). Mientras \
que se enfriaban, Carla sali\[OAcute] al jard\[IAcute]n a regar las flores. \
Ella ve a su hijo Tom\[AAcute]s y sus amigos entrar corriendo a la casa y \
salir de nuevo al jard\[IAcute]n con galletas en sus manos. Cuando ella \
vuelve a la cocina encuentra solo 7 galletas en una bandeja; ella se dispone \
a llevar leche para acompa\[NTilde]ar las galletas pero no sabe \
cu\[AAcute]ntos ni\[NTilde]os son. Si cada ni\[NTilde]o tom\[OAcute] el mismo \
n\[UAcute]mero de galletas y ella sabe que hay entre 10 y 30 ni\[NTilde]os, \
\[DownQuestion]cu\[AAcute]ntos vasos de leche debe llevar? \
\>", "ItemNumbered",ExpressionUUID->"e783e71c-6ca5-4070-865b-812c6c117513"],

Cell[CellGroupData[{

Cell["\<\
Pedro destina $150,000 de su salario para hacer mercado. Cuando llega al \
almac\[EAcute]n encuentra la siguiente lista de precios, de los \
art\[IAcute]culos que va a comprar:\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15001.},ExpressionUUID->"e575b021-0dc5-47f2-b239-42debe5daa89"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {"\<\"Art\[IAcute]culo\"\>", "\<\"Precio por unidad\"\>"},
      {"\<\"Chocolate\"\>", "\<\"$3400\"\>"},
      {"\<\"Arroz\"\>", "\<\"$1700\"\>"},
      {"\<\"Az\[UAcute]car\"\>", "\<\"$1600\"\>"},
      {"\<\"Panela\"\>", "\<\"$1000\"\>"},
      {"\<\"Jab\[OAcute]n l\[IAcute]quido para lavadora\"\>", \
"\<\"$12500\"\>"},
      {"\<\"Crema dental\"\>", "\<\"$10800\"\>"},
      {"\<\"Pan tajado\"\>", "\<\"$3450\"\>"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 15001.},
 TextAlignment->Center,ExpressionUUID->"95e5ee82-8313-438f-af2e-e7c7286ea46e"],

Cell["\<\
Pedro quiere invertir lo que lleva de dinero en su totalidad. \
\[CapitalEAcute]l siempre lleva m\[AAcute]s de un art\[IAcute]culo de los que \
quiere comprar. Puedes ayudarle a Pedro a decidir, \
\[DownQuestion]cu\[AAcute]ntos art\[IAcute]culos de la lista puede comprar y \
que no le sobre dinero?\
\>", "Text",
 CellMargins->{{70, 0}, {5, 0}},
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15001.},ExpressionUUID->"f6035291-7a99-44c5-bdba-c6697ee18144"]
}, Open  ]],

Cell["\<\
En la finca de Paco hay 750 animales entre gallinas, conejos y cabras. El n\
\[UAcute]mero de conejos es 305 y el de gallinas es 105 m\[AAcute]s que los \
conejos.\
\>", "ItemNumbered",ExpressionUUID->"195291d8-8735-4872-b5d8-b83fb8913383"],

Cell[CellGroupData[{

Cell["\[DownQuestion]Cu\[AAcute]ntas cabras hay en la finca?", \
"SubitemNumbered",ExpressionUUID->"30802c71-1146-4d58-8109-d829c2c6a93e"],

Cell["\<\
Si se venden 185 conejos, 207 gallinas y 10 cabras, \
\[DownQuestion]cu\[AAcute]ntos animales quedan en la finca?\
\>", "SubitemNumbered",ExpressionUUID->"9b50cd50-22da-497a-984d-325a301d9bba"]
}, Open  ]],

Cell["\<\
Se quieren elaborar s\[AAcute]ndwiches de jam\[OAcute]n y queso. Se compran 4 \
bolsas de pan tajado a $4,350 cada una. Cada bolsa tiene 16 tajadas de pan. \
El jam\[OAcute]n necesario para elaborar los s\[AAcute]ndwiches cuesta \
$11,450 y el queso $7,300. Si al vender todos los s\[AAcute]ndwiches se \
quiere obtener una ganancia de $27,850, \[DownQuestion]cu\[AAcute]l debe ser \
el precio de venta de cada s\[AAcute]ndwich?\
\>", "ItemNumbered",ExpressionUUID->"96b8ac73-9613-4708-a03d-8dd4436d9621"],

Cell["\<\
En la poblaci\[OAcute]n \[OpenCurlyDoubleQuote]PACHIA\[CloseCurlyDoubleQuote] \
hay 12144 habitantes. All\[IAcute] se han sembrado 2 \[AAcute]rboles por cada \
46 habitantes.\
\>", "ItemNumbered",ExpressionUUID->"cebcf469-18fe-496b-8ed7-1bbe5dcbe435"],

Cell[CellGroupData[{

Cell["\[DownQuestion]Cu\[AAcute]ntos \[AAcute]rboles hay sembrados en la \
poblaci\[OAcute]n \[OpenCurlyDoubleQuote]PACHIA\[CloseCurlyDoubleQuote]?", \
"SubitemNumbered",ExpressionUUID->"bbf8f1f5-afac-4a99-abb1-cda93a632a8a"],

Cell["\<\
Si se quiere que haya 3 \[AAcute]rboles sembrados por cada habitante, \
\[DownQuestion]cu\[AAcute]ntos \[AAcute]rboles m\[AAcute]s se deben sembrar?\
\>", "SubitemNumbered",ExpressionUUID->"52ff456d-9bfc-4b5a-b22e-b8039cc23203"]
}, Open  ]],

Cell["\<\
El centro comercial \[OpenCurlyDoubleQuote]TAPIAO\[CloseCurlyDoubleQuote] \
consta de 4 niveles de estacionamiento. En el primer nivel se pueden \
estacionar 84 veh\[IAcute]culos. En cada uno de los siguientes niveles, se \
pueden estacionar el doble del anterior. \[DownQuestion]Qu\[EAcute] capacidad \
de estacionamiento tiene este centro comercial?\
\>", "ItemNumbered",ExpressionUUID->"1b6414bb-1a3b-42d8-b800-2b217d4e4ca7"],

Cell["\<\
Gladys vende cajas de chicles y las ordena dentro de una vitrina, formando \
una torre que tiene de base 6 x 6 cajas y de altura 7 cajas. \
\[DownQuestion]Cu\[AAcute]ntas cajas de chicles tiene Gladys para la venta?\
\>", "ItemNumbered",ExpressionUUID->"6337bba4-b53a-4051-b650-8d60cc9b2cb0"],

Cell["\<\
La pasteler\[IAcute]a \[OpenCurlyDoubleQuote]JULITA\[CloseCurlyDoubleQuote] \
vende tortas de chocolate a $2350 cada porci\[OAcute]n. Si de cada torta \
salen 8 porciones y vende 4 tortas durante el d\[IAcute]a, \[DownQuestion]cu\
\[AAcute]nto recauda la pasteler\[IAcute]a por este concepto durante 3 d\
\[IAcute]as?\
\>", "ItemNumbered",ExpressionUUID->"a3c6ddee-da8c-421c-b10d-14099fcf6cef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n a los problemas de aplicaci\[OAcute]n", "Subsubsection",ExpressionUUID->"7df87e7a-3b16-40b0-8167-a2665c3421bb"],

Cell["\<\
Carla hizo 4 bandejas de galletas (cada bandeja tiene 31 galletas). Mientras \
que se enfriaban, Carla sali\[OAcute] al jard\[IAcute]n a regar las flores. \
Ella ve a su hijo Tom\[AAcute]s y sus amigos entrar corriendo a la casa y \
salir de nuevo al jard\[IAcute]n con galletas en sus manos. Cuando ella \
vuelve a la cocina encuentra solo 7 galletas en una bandeja; ella se dispone \
a llevar leche para acompa\[NTilde]ar las galletas pero no sabe \
cu\[AAcute]ntos ni\[NTilde]os son. Si cada ni\[NTilde]o tom\[OAcute] el mismo \
n\[UAcute]mero de galletas y ella sabe que hay entre 10 y 30 ni\[NTilde]os, \
\[DownQuestion]cu\[AAcute]ntos vasos de leche debe llevar? \
\>", "ItemNumbered",ExpressionUUID->"2dddf882-f204-4cf6-909e-3f2028a43a1f"],

Cell[TextData[{
 "Carla hizo en total ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"31", " ", "4"}], "=", "124"}], TraditionalForm]],ExpressionUUID->
  "3e97f46e-5591-4862-a464-42dd163ace87"],
 " galletas, como sobraron solamente 7, significa que los ni\[NTilde]os \
llevaron ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"124", "-", "7"}], "=", "117"}], TraditionalForm]],
  ExpressionUUID->"1eddd314-09c8-4f1e-95af-6f88b3b509e8"],
 " galletas."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"5f4c2a56-ea78-474a-9c65-5c4f4fa7fe01"],

Cell[TextData[{
 "Como se repartieron las galletas en partes iguales, es necesario encontrar \
los divisores de ",
 Cell[BoxData[
  FormBox["117", TraditionalForm]],ExpressionUUID->
  "08a915b8-d860-4c95-a56c-6d5948e3d1ee"],
 ", los cuales son: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", ",", "9", ",", 
    RowBox[{"13", " ", 
     StyleBox["y",
      FontSlant->"Plain"], " ", "39"}]}], TraditionalForm]],ExpressionUUID->
  "dc057a9c-f21f-41c3-b9e5-45f0c1fe5868"],
 "."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"7b3f9243-a770-4db1-b3ca-9206a9d073b8"],

Cell[TextData[{
 "Como se sabe que hay entre ",
 Cell[BoxData[
  FormBox["10", TraditionalForm]],ExpressionUUID->
  "30194453-00b8-4437-b94a-8b82583bb781"],
 " y ",
 Cell[BoxData[
  FormBox["30", TraditionalForm]],ExpressionUUID->
  "4e9ee1f8-3378-445e-a591-c74ce8058bd9"],
 " ni\[NTilde]os, la respuesta es que hay ",
 Cell[BoxData[
  FormBox["13", TraditionalForm]],ExpressionUUID->
  "10249a64-63ce-477d-99ec-3d877c453205"],
 " ni\[NTilde]os y cada uno tom\[OAcute] ",
 Cell[BoxData[
  FormBox["9", TraditionalForm]],ExpressionUUID->
  "72eb99ac-52e7-445e-875e-da6f91e15404"],
 " galletas."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"7ffc29e5-932c-47bc-b674-17398ba448ec"],

Cell["\<\
Pedro destina $150,000 de su salario para hacer mercado. Cuando llega al \
almac\[EAcute]n encuentra la siguiente lista de precios, de los \
art\[IAcute]culos que va a comprar:\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   15001.},ExpressionUUID->"1b23095e-e8f9-4bd5-ab11-5dd4dbf8b460"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {"\<\"Art\[IAcute]culo\"\>", "\<\"Precio por unidad\"\>"},
      {"\<\"Chocolate\"\>", "\<\"$3400\"\>"},
      {"\<\"Arroz\"\>", "\<\"$1700\"\>"},
      {"\<\"Az\[UAcute]car\"\>", "\<\"$1600\"\>"},
      {"\<\"Panela\"\>", "\<\"$1000\"\>"},
      {"\<\"Jab\[OAcute]n l\[IAcute]quido para lavadora\"\>", \
"\<\"$12500\"\>"},
      {"\<\"Crema dental\"\>", "\<\"$10800\"\>"},
      {"\<\"Pan tajado\"\>", "\<\"$3450\"\>"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 TextAlignment->Center,ExpressionUUID->"9df75b40-1040-4701-b521-654c2fc9954a"],

Cell["\<\
Pedro quiere invertir lo que lleva de dinero en su totalidad. \
\[CapitalEAcute]l siempre lleva m\[AAcute]s de un art\[IAcute]culo de los que \
quiere comprar. Puedes ayudarle a Pedro a decidir, \
\[DownQuestion]cu\[AAcute]ntos art\[IAcute]culos de la lista puede comprar y \
que no le sobre dinero?\
\>", "Text",
 CellMargins->{{70, 0}, {5, 0}},
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"1628ea51-64f5-400d-9f8b-2aa4027c4567"],

Cell[TextData[{
 "Una forma de soluci\[OAcute]n ser\[IAcute]a encontrar el costo al comprar \
un solo art\[IAcute]culo: \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
    "3400", "+", "1700", "+", "1600", "+", "1000", "+", "12500", "+", "10800",
      "+", "3450"}], "=", "34450"}], TraditionalForm]],ExpressionUUID->
  "fe638f3b-bb13-4bbf-b2a1-97ed1bab7571"],
 " pesos."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"36e8fe08-1045-4e2c-8c00-ae21922ddb74"],

Cell[TextData[{
 "Dividir\[IAcute]a el total entre este valor para saber cu\[AAcute]ntas \
veces puedo llevar un art\[IAcute]culo: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"150000", "/", "34450"}], "=", "4"}], TraditionalForm]],
  ExpressionUUID->"3126a49d-927c-4c0e-90ce-07f077432016"],
 " veces exactas y sobra ",
 Cell[BoxData[
  FormBox["12200", TraditionalForm]],ExpressionUUID->
  "7cb1767c-6ed3-4be2-a5f3-37509837eb11"],
 " pesos. Con estos $12,200 puede comprar 2 libras m\[AAcute]s de \
az\[UAcute]car y 9 panelas m\[AAcute]s, por tanto:"
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"c24fa250-7387-4a90-867d-7c25e2611fa8"],

Cell[TextData[Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {"\<\"Art\[IAcute]culo\"\>", "\<\"Precio por unidad\"\>", "", ""},
      {"\<\"Chocolate\"\>", "\<\"$3400\"\>", "\<\"4\"\>", "\<\"$13600\"\>"},
      {"\<\"Arroz\"\>", "\<\"$1700\"\>", "\<\"4\"\>", "\<\"$6800\"\>"},
      {"\<\"Az\[UAcute]car\"\>", "\<\"$1600\"\>", "\<\"6\"\>", \
"\<\"$9600\"\>"},
      {"\<\"Panela\"\>", "\<\"$1000\"\>", "\<\"13\"\>", "\<\"$13000\"\>"},
      {"\<\"Jab\[OAcute]n l\[IAcute]quido para lavadora\"\>", \
"\<\"$12500\"\>", "\<\"4\"\>", "\<\"$50000\"\>"},
      {"\<\"Crema dental\"\>", "\<\"$10800\"\>", "\<\"4\"\>", \
"\<\"$43200\"\>"},
      {"\<\"Pan tajado\"\>", "\<\"$3450\"\>", "\<\"4\"\>", "\<\"$13800\"\>"},
      {"\<\"TOTAL A CANCELAR\"\>", "\[SpanFromLeft]", 
       "\[SpanFromLeft]", "\<\"$150000\"\>"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 CellChangeTimes->{{3.6457786171009293`*^9, 3.645778671308366*^9}, {
  3.649083885879353*^9, 
  3.649083903077529*^9}},ExpressionUUID->"8731f591-ec29-41f3-899a-\
d740a5e81c19"]], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"6451a94f-d162-44a0-b2d1-041641d324b7"],

Cell["\<\
Note que quiz\[AAcute]s esta no sea la mejor manera de comprar los productos \
(13 panelas y 6 libras de azucar quiz\[AAcute]s sea innecesario), pero es una \
respuesta v\[AAcute]lida a lo pedido en el problema.\
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"88241938-f401-4d3e-bbec-d1f806e3248e"],

Cell["\<\
En la finca de Paco hay 750 animales entre gallinas, conejos y cabras. El n\
\[UAcute]mero de conejos es 305 y el de gallinas es 105 m\[AAcute]s que los \
conejos.\
\>", "ItemNumbered",ExpressionUUID->"a0d6139b-7986-472e-8381-776557c96c2f"],

Cell[CellGroupData[{

Cell["\[DownQuestion]Cu\[AAcute]ntas cabras hay en la finca?", \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"5993d9ad-2a43-4273-9ca5-8751ab752896"],

Cell[TextData[{
 "Hay 305 conejos y ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"305", "+", "105"}], "=", "410"}], TraditionalForm]],
  ExpressionUUID->"e556ca49-9a48-436a-8ec9-b9e3c20ac15d"],
 " gallinas. Entre conejos y gallinas tiene ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"305", "+", "410"}], "=", "715"}], TraditionalForm]],
  ExpressionUUID->"29681c04-3789-4a0b-b2a7-5ff290bafd38"],
 ". Como en total hay 750 animales, el resto, que son 35, son cabras."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"2acd701d-4503-4fc3-b2f1-2a2217a439bc"],

Cell["\<\
Si se venden 185 conejos, 207 gallinas y 10 cabras, \
\[DownQuestion]cu\[AAcute]ntos animales quedan en la finca?\
\>", "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"19738adb-a9cf-4830-b1b1-3f4acae8e435"],

Cell[TextData[{
 "Conejos: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"305", "-", "185"}], "=", "120"}], TraditionalForm]],
  ExpressionUUID->"af035b4e-bb35-4af6-ac87-2cc5d59eb627"],
 ",\nGallinas: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"410", "-", "207"}], "=", "203"}], TraditionalForm]],
  ExpressionUUID->"307dcfa6-538f-4d76-83e2-2f101db1cb43"],
 ",\nCabras: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"35", "-", "10"}], "=", "25"}], TraditionalForm]],ExpressionUUID->
  "f9be4c68-d697-4d33-bc52-555090c81bc9"],
 "."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"cfef18f6-3a38-45f6-9e4f-f2d345ec4493"],

Cell[TextData[{
 "En total quedan ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"120", "+", "203", "+", "25"}], "=", "348"}], TraditionalForm]],
  ExpressionUUID->"de5935f4-4e17-4484-ad96-f4000b65c2b5"],
 " animales en la granaja."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"fd801930-1539-4fa0-bd09-c8c0dd0e367b"]
}, Open  ]],

Cell["\<\
Se quieren elaborar s\[AAcute]ndwiches de jam\[OAcute]n y queso. Se compran 4 \
bolsas de pan tajado a $4,350 cada una. Cada bolsa tiene 16 tajadas de pan. \
El jam\[OAcute]n necesario para elaborar los s\[AAcute]ndwiches cuesta \
$11,450 y el queso $7,300. Si al vender todos los s\[AAcute]ndwiches se \
quiere obtener una ganancia de $27,850, \[DownQuestion]cu\[AAcute]l debe ser \
el precio de venta de cada s\[AAcute]ndwich?\
\>", "ItemNumbered",ExpressionUUID->"0b8d9eaf-c453-4f73-aa04-b2e9c69aa186"],

Cell[TextData[{
 "Primero, se realizar\[AAcute]n los c\[AAcute]lculos de la cantidad de \
dinero gastada en la compra:\npan tajado: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"4", "\:22194350"}], "=", "17400"}], TraditionalForm]],
  ExpressionUUID->"638f9106-2546-4227-8085-9820273e9a36"],
 ",\njam\[OAcute]n: ",
 Cell[BoxData[
  FormBox["11450", TraditionalForm]],ExpressionUUID->
  "d0899b6d-e2b5-44f1-9f27-0c3871ac07c2"],
 "\nqueso: ",
 Cell[BoxData[
  FormBox["7300", TraditionalForm]],ExpressionUUID->
  "a5149fc3-da38-4165-807a-3d7ba09d8816"],
 ",\ntotal de la compra: ",
 Cell[BoxData[
  FormBox["36150.", TraditionalForm]],ExpressionUUID->
  "e4757412-8bae-45a5-82b4-91f1b7a484e1"],
 "\nSegundo, se realizar\[AAcute] el c\[AAcute]lculo de la cantidad de s\
\[AAcute]ndwiches que se elaborar\[AAcute]n:\nCada bolsa tiene 16 tajadas de \
pan, es decir, de cada bolsa salen 8 s\[AAcute]ndwiches. Como son 4 bolsas, \
en total salen ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"4", "\:22198"}], "=", "32"}], TraditionalForm]],ExpressionUUID->
  "147c5050-4359-4f7d-864b-1bee032ad5dd"],
 " s\[AAcute]ndwiches.\nFinalmente, para saber el precio de venta de cada s\
\[AAcute]ndwiches, al total de la compra se le adiciona lo que quiere ganar y \
se divide por el n\[UAcute]mero de s\[AAcute]ndwich que se \
preparar\[AAcute]n, es decir, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"36150", "+", "27850"}], "=", "64000"}], TraditionalForm]],
  ExpressionUUID->"a2dc8aff-f7d3-462e-affb-6680b5651508"],
 " cantidad de dinero que debe ingresar.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"64000", "\[Divide]", "32"}], "=", "2000"}], TraditionalForm]],
  ExpressionUUID->"786c91b7-ec89-4171-b507-7d0bc3b5749e"],
 " precio de cada s\[AAcute]ndwich."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"9f193bd5-6301-489c-ab15-ef9f1f437996"],

Cell[CellGroupData[{

Cell["\<\
En la poblaci\[OAcute]n \[OpenCurlyDoubleQuote]PACHIA\[CloseCurlyDoubleQuote] \
hay 12144 habitantes. All\[IAcute] se han sembrado 2 \[AAcute]rboles por cada \
46 habitantes.\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"ea809c8f-f8d3-4622-b69e-084c274ca0c4"],

Cell["\[DownQuestion]Cu\[AAcute]ntos \[AAcute]rboles hay sembrados en la \
poblaci\[OAcute]n \[OpenCurlyDoubleQuote]PACHIA\[CloseCurlyDoubleQuote]?", \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"ad7d9654-f31b-4ba4-b267-fc94d6c2c778"],

Cell[TextData[{
 "Si se siembran dos \[AAcute]rboles por cada 46 habitantes, significa que \
siembra un \[AAcute]rbol por cada 23 habitantes. Para conocer el \
n\[UAcute]mero de \[AAcute]rboles que hay se debe dividir el n\[UAcute]mero \
de habitantes entre 23, es decir:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"12144", "\[Divide]", "23"}], "=", "528"}], TraditionalForm]],
  ExpressionUUID->"319c1a93-ce59-4a3a-b283-592de17fc217"],
 " \[AAcute]rboles hay sembrados en la poblaci\[OAcute]n \
\[OpenCurlyDoubleQuote]PACHIA\[CloseCurlyDoubleQuote]."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"765b7362-c10a-44cf-af76-b1bd3a9e9095"],

Cell["\<\
Si se quiere que haya 3 \[AAcute]rboles sembrados por cada habitante, \
\[DownQuestion]cu\[AAcute]ntos \[AAcute]rboles m\[AAcute]s se deben sembrar?\
\>", "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"c28fbaca-d4bb-43a8-ace9-28f6cad1648d"],

Cell[TextData[{
 "Para que cada habitante tenga 3 \[AAcute]rboles, se debe multiplicar el \
total de la poblaci\[OAcute]n por 3, es decir: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"12144", "\:22193"}], "=", "3643"}], TraditionalForm]],
  ExpressionUUID->"ec1fea61-4c69-4f33-9c37-058964217890"],
 "2 \[AAcute]rboles.            \nComo ya se han sembrado 528 \
\[AAcute]rboles, la cantidad de \[AAcute]rboles que faltan por sembrar son:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"36432", "-", "528"}], "=", "35904"}], TraditionalForm]],
  ExpressionUUID->"2cceb7f6-c049-4d66-bc73-8b5ada27cfe7"],
 " \[AAcute]rboles."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"7a59743d-093a-4320-8652-641250af56f7"]
}, Open  ]],

Cell["\<\
El centro comercial \[OpenCurlyDoubleQuote]TAPIAO\[CloseCurlyDoubleQuote] \
consta de 4 niveles de estacionamiento. En el primer nivel se pueden \
estacionar 84 veh\[IAcute]culos. En cada uno de los siguientes niveles, se \
pueden estacionar el doble del anterior. \[DownQuestion]Qu\[EAcute] capacidad \
de estacionamiento tiene este centro comercial?\
\>", "ItemNumbered",ExpressionUUID->"9c3ff3e3-5f75-4d8b-b78e-48145cdabd7c"],

Cell[CellGroupData[{

Cell["\<\
Nivel 1: 84 veh\[IAcute]culos,
nivel 2: 168 veh\[IAcute]culos,
nivel 3: 336 veh\[IAcute]culos,
nivel 4: 672 veh\[IAcute]culos,\
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"9758b2dc-2dba-4f4a-93be-d85350f16766"],

Cell[TextData[{
 "total estacionamientos: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"84", "+", "168", "+", "336", "+", "672"}], "=", "1260"}], 
   TraditionalForm]],ExpressionUUID->"3aa06bed-750c-4988-a120-1dc2ee4e52df"],
 " veh\[IAcute]culos"
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"e034b747-d1fe-4c3c-a007-1ab15eb21d24"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Gladys vende cajas de chicles y las ordena dentro de una vitrina, formando \
una torre que tiene de base 6 x 6 cajas y de altura 7 cajas. \
\[DownQuestion]Cu\[AAcute]ntas cajas de chicles tiene Gladys para la venta?\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"bbef0f46-bf65-41ad-9726-afecbce2507a"],

Cell[TextData[{
 "En la base hay ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"6", " ", "\:2219", " ", "6"}], "=", "36"}], TraditionalForm]],
  ExpressionUUID->"5d546393-851c-4b5c-83b7-e25581c0f11d"],
 " cajas. Como se repite 7 veces la base para formar la altura, hay ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"36", "\:22197"}], "=", "252"}], TraditionalForm]],
  ExpressionUUID->"7c595dbd-884b-4643-8152-33da220a05dd"],
 " cajas de chicles para la venta."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"859ee59f-fbd0-40af-940a-93090124cbc8"]
}, Open  ]],

Cell["\<\
La pasteler\[IAcute]a \[OpenCurlyDoubleQuote]JULITA\[CloseCurlyDoubleQuote] \
vende tortas de chocolate a $2,350 cada porci\[OAcute]n. Si de cada torta \
salen 8 porciones y vende 4 tortas durante el d\[IAcute]a, \[DownQuestion]cu\
\[AAcute]nto recauda la pasteler\[IAcute]a por este concepto durante 3 d\
\[IAcute]as?\
\>", "ItemNumbered",ExpressionUUID->"76e9ecf0-5556-4f34-8d0e-c62c07259619"],

Cell[TextData[{
 "El n\[UAcute]mero de porciones que vende cada d\[IAcute]a son ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"8", "\:22194"}], "=", "32"}], TraditionalForm]],ExpressionUUID->
  "804f987b-a784-4bbe-9908-90937ed958da"],
 " porciones.\nEn tres d\[IAcute]as vende ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"32", "\:22193"}], "=", "96"}], TraditionalForm]],ExpressionUUID->
  "576b318b-19c4-4ac9-9b4a-7d7439fc843e"],
 " porciones.\nEl recaudo de esas 96 porciones es ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"96", "\:22192350"}], "=", "225600"}], TraditionalForm]],
  ExpressionUUID->"d77244e8-3d91-4894-b34f-25c49e23599d"],
 " pesos"
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"ce818725-a683-43f0-9b9f-a6ceaf8ba2ba"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ". N\[UAcute]meros enteros"
}], "Chapter",ExpressionUUID->"4d15697d-dc6e-4682-91a8-9ac14348cde4"],

Cell[CellGroupData[{

Cell["Un poco de historia...", "Subchapter",ExpressionUUID->"55a17a44-c419-47dd-a4f7-6da98d05ed4e"],

Cell[TextData[{
 "El conjunto de los n\[UAcute]meros enteros est\[AAcute] constituido por el \
conjunto de los n\[UAcute]meros naturales, el cero y sus ",
 StyleBox["opuestos. ",
  FontSlant->"Italic"],
 "Ese opuesto de cada natural es llamado un ",
 StyleBox["n\[UAcute]mero negativo",
  FontSlant->"Italic"],
 ".\n\nHist\[OAcute]ricamente, los hind\[UAcute]es introdujeron los \
n\[UAcute]meros negativos para representar deudas, as\[IAcute] los positivos \
representaban los haberes. Brahmagupta, hacia el a\[NTilde]o 628, es el \
primero en usar este tipo de n\[UAcute]meros, estableciendo reglas para las \
operaciones entre ellos, sin embargo, a pesar de haber llegado a Europa a \
trav\[EAcute]s de los textos \[AAcute]rabes, la mayor\[IAcute]a de los matem\
\[AAcute]ticos de los siglos XVI y XVII no los aceptaban como \
n\[UAcute]meros; solo hacia 1860, el matem\[AAcute]tico Weierstrass defini\
\[OAcute] y acept\[OAcute] los negativos como n\[UAcute]meros.\n\nA \
continuaci\[OAcute]n aparecen algunas actividades en las que se necesita el \
uso de n\[UAcute]meros enteros."
}], "Resumen",ExpressionUUID->"f46f93a5-971e-4d7e-be50-392e46d052ac"],

Cell["\<\
Para el desarrollo de los siguientes problemas, se deben tener en cuenta los \
costos del servicio del sistema integrado de transporte y los diferentes \
beneficios explicados en la actividad anterior.\
\>", "Text",ExpressionUUID->"8d8a2483-373d-4810-945c-4d6f484eb690"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Problema ",
 
 CounterBox["Section"]
}], "Section",ExpressionUUID->"f5563df7-0188-44b9-b6e1-b124df0d4bd4"],

Cell["\<\
Recuerde que en el \[UAcute]ltimo problema de la unidad anterior, Juanito \
lleg\[OAcute] el domingo del parque el Salitre.\
\>", "Text",ExpressionUUID->"5ac8d921-32db-4821-acfe-80c866e5a360"],

Cell["\<\
Para la siguiente semana, Juanito olvid\[OAcute] recargar la tarjeta. El \
lunes en la ma\[NTilde]ana, cuando se subi\[OAcute] al bus, al marcar el \
pasaje se dio cuenta que el saldo que le quedaba era de $6,300. Al sentarse \
se puso a pensar hasta cuando podr\[IAcute]a viajar sin recargar la tarjeta.\
\>", "Text",ExpressionUUID->"98b59512-f4b2-4bb1-926c-e13577d7de97"],

Cell["\<\
\[DownQuestion]Hasta qu\[EAcute] d\[IAcute]a en la semana podr\[AAcute] \
viajar Juanito antes de hacer otra recarga, suponiendo que de lunes a viernes \
solo realiza los dos trayectos cotidianos (a las 6:30 a.m. casa - universidad \
y a las 4:00 p.m. universidad - casa)?\
\>", "Ejercicio",
 TextAlignment->Right,
 FontSlant->"Italic",ExpressionUUID->"48e614b9-64f9-4a0b-97ae-ba1697a11eb8"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"b9b76f44-791e-49c2-ab5d-1fd6f22d9220"],

Cell["La soluci\[OAcute]n se ver\[AAcute] en la siguiente tabla:", "Text",ExpressionUUID->"20436fd4-3b24-4a6a-bd25-cf5adab3f355"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {"\<\"Horario\"\>", "\<\"Pico/valle\"\>", "\<\"Precio trayecto\"\>", "\<\
\"Costo acumulado\"\>"},
     {
      ItemBox["\<\"lunes (6:30 a.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"pico\"\>", "\<\"$ 1800\"\>", "\<\"$ 1800\"\>"},
     {
      ItemBox["\<\"lunes (4:00 p.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"valle\"\>", "\<\"$ 1500\"\>", "\<\"$ 3300\"\>"},
     {
      ItemBox["\<\"martes (6:30 a.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"pico\"\>", "\<\"$ 1800\"\>", "\<\"$ 5100\"\>"},
     {
      ItemBox["\<\"martes (4:00 p.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"valle\"\>", "\<\"$ 1500\"\>", "\<\"$ 6600\"\>"},
     {
      ItemBox["\<\"mi\[EAcute]rcoles (6:30 a.m)\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"pico\"\>", "\<\"$ 1800\"\>", "\<\"$ 8400\"\>"},
     {"", "", 
      ItemBox["\<\"TOTAL\"\>",
       Alignment->Left,
       StripOnInput->
        False], "\<\"\\!\\(\\*\\nStyleBox[\\\"$\\\",\\nFontColor->RGBColor[1, \
0, 0]]\\)\\!\\(\\*\\nStyleBox[\\\" \\\",\\nFontColor->RGBColor[1, 0, \
0]]\\)\\!\\(\\*\\nStyleBox[\\\"8400\\\",\\nFontColor->RGBColor[1, 0, 0]]\\)\"\
\>"}
    },
    AutoDelete->False,
    GridBoxAlignment->{
     "Columns" -> {Center, Center, Center, Center, Center}, 
      "Rows" -> {Left, Left, Left, Left, Left}},
    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"dc4dd98f-3897-4d88-8ecc-607e1138bd78"],

Cell[TextData[{
 "Hasta el mi\[EAcute]rcoles en la ma\[NTilde]ana, el costo de los pasajes es \
de $8,400. Lo que implica un saldo en la tarjeta de ",
 StyleBox["-$300",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 ". El sistema le fiar\[AAcute] el valor necesario hasta por un viaje, por lo \
que si no recarga la tarjeta, no podr\[AAcute] viajar el mi\[EAcute]rcoles en \
la tarde de regreso a casa."
}], "Answer",ExpressionUUID->"74363d58-1cec-4637-890c-217afcd4798c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Problema ",
 
 CounterBox["Section"]
}], "Section",ExpressionUUID->"7c160334-12c8-4ec3-b28f-f29edb7a471c"],

Cell[TextData[StyleBox["\[DownQuestion]Cu\[AAcute]l es el saldo final de la \
tarjeta antes de tener que recargarla?",
 FontSlant->"Italic"]], "Ejercicio",
 TextAlignment->Right,ExpressionUUID->"3851e17a-9c5b-46db-8dad-de29947d9023"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"b14e9792-8a37-4b40-ba25-8b2ee1f55210"],

Cell[TextData[{
 "En el problema anterior se lleg\[OAcute] a la conclusi\[OAcute]n que el \
saldo es de ",
 StyleBox["-$300",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 "."
}], "Answer",ExpressionUUID->"4eef0250-e6d3-4e67-8970-f44849aa36f2"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Problema ",
 
 CounterBox["Section"]
}], "Section",ExpressionUUID->"ecb5a028-b60f-43e9-916d-cd2900978b45"],

Cell[TextData[{
 "Juanito decide no recargar la tarjeta por el resto de la semana  y por \
tanto, viajar\[AAcute] en bus los d\[IAcute]as siguientes y pagar\[AAcute] en \
efectivo.\nEl domingo en la noche, Juanito sale a recargar la tarjeta, pero \
esta vez quiere realizar una recarga de tal manera que la pueda utilizar \
hasta el ",
 StyleBox["viernes",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " en el trayecto de regreso (universidad - casa)  y que la tarjeta quede con \
un saldo de ",
 StyleBox["-$1,000",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 ".\n\[DownQuestion]de cu\[AAcute]nto debe ser la recarga?"
}], "Text",ExpressionUUID->"603e723f-7bb9-45e0-9fdd-3f94a3399581"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"2876f2cc-7fd6-4775-8901-bf62f27b9644"],

Cell[TextData[{
 "Cada d\[IAcute]a Juanito gasta $",
 Cell[BoxData[
  FormBox["3300", TraditionalForm]],ExpressionUUID->
  "c1f787b9-7903-4cc8-a2c4-5ae1c27645d3"],
 " en el viaje de ida y regreso. De lunes a viernes, como son 5 d\[IAcute]as, \
gasta ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"3300", "x5"}], "=", "16500"}], TraditionalForm]],ExpressionUUID->
  "ac93e293-96e7-468c-b400-40ba74343526"],
 ".\nComo la tarjeta tiene un saldo de  ",
 StyleBox["-$300",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 ", para quedar en cero, debe recargar $",
 Cell[BoxData[
  FormBox["16800", TraditionalForm]],ExpressionUUID->
  "ebde0ff3-e8d8-4a35-90ea-2f97831fe8e0"],
 ". Como se quiere que quede un saldo de ",
 StyleBox["-$1,000",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 ", entonces solo debe cargar con $15,800."
}], "Text",ExpressionUUID->"379c079c-9cf9-446b-a890-eb867cca069c"],

Cell["Juanito debe recargar la tarjeta con $15,800.", "Answer",ExpressionUUID->"bd8893fb-cc40-4ad9-a6a1-59d114e93ead"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAeiIWBGMT+TxD8+/t7ocbvRRr/7m79/+8fYfVw8PXV7+l8QPRrGh/QhP+/
vxGp79/TE7/AuiAk0Gpi9P57cw2oEqQLjH5P54fai9fNIF0LNWBaYBrBjL93
tqJ55/+Pj////QE6BuhCuC64O+GGgCyFgb/H2+AmY0UwS2GhBAMg88Ghh1Mv
2CKgS/4BHfbvL1YbQSSGIaCofHMNS1h8fYXVbZAwAel6jU0XxLXb41DVIwwB
uhBftP39hRyAyKEBlMKv8e/1NdAARw0i5NBAA/8+Pvo1V+3/62sQveg2AiMX
u7a/kOgGRRDQVf/+okUrLhtByqaDEzAwjuDgx8e/lxcCjfp7dytWXUBHgmQv
LyQtuwEdiWYRkfqAEUSSRaNgFAw1AAB1Yza7
     "], {{0, 31}, {19, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{19, 31},
   PlotRange->{{0, 19}, {0, 31}}]], "Input",ExpressionUUID->
  "e810d514-8098-48a2-b350-b017324b683a"],
 " Resumen"
}], "Section",ExpressionUUID->"e57b853b-70f0-4b29-a8c9-d6b3c0012d62"],

Cell[TextData[{
 "Las matem\[AAcute]ticas, consideradas como una ciencia natural hasta antes \
del siglo XVIII, deja de serlo y se convierte en una creaci\[OAcute]n \
intelectual del hombre y en una disciplina que necesita empezar a teorizar \
ciertos conceptos como el de ",
 StyleBox["n\[UAcute]mero negativo, ",
  FontSlant->"Italic"],
 "el cual se considera como el opuesto del n\[UAcute]mero positivo. "
}], "Text",ExpressionUUID->"1bcf6813-6643-43a1-be0d-f98cf00f49e3"],

Cell["\<\
El conjunto de n\[UAcute]meros enteros se construye a partir de la uni\
\[OAcute]n del conjunto de los n\[UAcute]meros naturales, el cero, \
considerado un punto de origen o punto neutro y los n\[UAcute]meros opuestos \
a los naturales, llamados enteros negativos. Este conjunto se representa con \
la letra \[DoubleStruckCapitalZ].\
\>", "Text",ExpressionUUID->"3bd619b7-9eaf-4528-b3f3-63942dae37bb"],

Cell[TextData[{
 "Los enteros negativos aparecen en la vida cotidiana sin que se, noten \
porque no siempre se expresan con el signo negativo, como las respuestas \
dadas en los anteriores problemas; algunas veces, el simple hecho de utilizar \
frases como \"el elevador est\[AAcute] en el s\[OAcute]tano 2\", \"hoy se \
pronostica una temperatura de doce grados bajo cero\" o \"el saldo de mi \
tarjeta de cr\[EAcute]dito es de un mill\[OAcute]n de pesos\",  representan \
cantidades negativas en diferentes contextos, ya que al representar las \
cantidades involucradas en cada frase, en lenguaje matem\[AAcute]tico, se \
tienen que escribir como, \"",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "2"}], TraditionalForm]],ExpressionUUID->
  "75f5e040-42d7-4020-bd26-3e6f306c6f5e"],
 "\", \"",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "12"}], TraditionalForm]],ExpressionUUID->
  "aa75d393-d1d7-4490-9173-0964dd452606"],
 "\" o \"",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1000000"}], TraditionalForm]],ExpressionUUID->
  "5f36468c-6b72-45eb-b755-b29fcec38711"],
 "\", respectivamente."
}], "Text",ExpressionUUID->"33368047-85a9-45ed-8a14-e4680a63ad65"],

Cell[TextData[{
 "En el conjunto de los n\[UAcute]meros naturales, tal y como se vio \
anteriormente, la sustracci\[OAcute]n solo se pod\[IAcute]a realizar si el \
minuendo era mayor que el sustraendo. Dentro del conjunto de los enteros, el \
caso contrario tiene soluci\[OAcute]n; por ejemplo, la operaci\[OAcute]n ",
 Cell[BoxData[
  FormBox[
   RowBox[{"8", "-", "16"}], TraditionalForm]],ExpressionUUID->
  "f7bf5182-f5c0-486f-ad23-036a1dc56b3d"],
 " tiene como resultado un n\[UAcute]mero entero. Tal y como se ve a \
continuaci\[OAcute]n, la sustracci\[OAcute]n es solo una adici\[OAcute]n \
escrita de manera diferente, observe:"
}], "Text",ExpressionUUID->"7d6a5a17-cb14-4505-96f2-bb258657358b"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"8", "-", "16"}], "=", 
         RowBox[{"8", "+", 
          RowBox[{"(", 
           RowBox[{"-", "16"}], ")"}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", "8"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"0050152d-c86d-4022-ae9c-6c93003b5b25"]], \
"Text",ExpressionUUID->"d6610dd5-b595-45f5-83da-9f734bd98a96"],

Cell["\<\
En otras palabras, la sustracci\[OAcute]n es considerada una adici\[OAcute]n \
de un n\[UAcute]mero con un entero negativo, luego ya no se habla de \
sustracci\[OAcute]n sino solo de la operaci\[OAcute]n de adici\[OAcute]n. \
\>", "Text",ExpressionUUID->"6b348fd0-a698-4b2b-90ff-610c42846600"],

Cell["\<\
El conjunto de los n\[UAcute]meros enteros cumple las mismas propiedades de \
los n\[UAcute]meros naturales, con respecto a la adici\[OAcute]n y a la \
multiplicaci\[OAcute]n.\
\>", "Text",ExpressionUUID->"62aeeeb1-d348-40b1-bfbf-307f342833b8"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`framePane$$, $CellContext`textPane$$, \
$CellContext`tabImage$$, $CellContext`tabText$$, $CellContext`style1$$, \
$CellContext`style2$$, $CellContext`style3$$, $CellContext`color1$$ = 
    RGBColor[0, 0, 
     Rational[1, 2]], $CellContext`color2$$ = RGBColor[
    0.2, 0.08, 0.28], $CellContext`color3$$ = RGBColor[
    0.796078431372549, 0.07058823529411765, 0.], $CellContext`tama1$$ = 
    15, $CellContext`tama2$$ = 18, $CellContext`tama3$$ = 
    25, $CellContext`font1$$ = "Georgia", $CellContext`page1$$ = 
    2, $CellContext`page2$$ = 2, $CellContext`page3$$ = 
    2, $CellContext`page4$$ = 2, $CellContext`page5$$ = 
    2, $CellContext`titlePopUp$$, $CellContext`textPopUp$$, \
$CellContext`panelWidth$$ = 750, $CellContext`bodyWidth$$ = 
    600, $CellContext`rati$$, $CellContext`int$$}, 
    PaneBox[
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJy9WEuS0zAQTQELllyBDWuWbFmyHYoDzBRhiixCxSFf5+eZgtmwYOdj+BI+
RA6ROzR6GnqQjWS3LNmq6nwcx/3U/d6T7Nc3366+PBuNRvOX6uXqevU+Sa43
H1+pL5+m86+30/HnD9Pv49tx8u7muTr4VsUbFS9UrFYrOp1OAZFTeSEaRRi4
3uFwoEP2QGmaUji2gs4Ujg3XAp403dFyudQYw3CpyMsouI7Ho47tdhuhXo+R
q4aG4uJAvYCvbc5lLsNWnLv307wO6mX20TVnUgwqetYB/p9lGe33e30tfm+b
M11KynvUAdcJ/UOt1uu1eM50LmR8U5Prggu8Qp2Y/z76Ohf96AD/mc/numbs
Zdxb6Zz70AHOhzcAD/cSx+5/PFC9FkPqAOfPZjPabDYVPWZ39/R/LRq4JtWB
0HNxbpIkumbwfe7nKbsjez63vi5lHk0HOG+xWFR4z9x/qkVddwPogPnFvvW4
VqYVXLZaNF03hg4Yi+kP9Xq58jk9V6wDNyfwO7wUfK97fXu+CJ7r4AR+Yx0C
1263e9pTWPPVddDAtRAdMC72LtPDxPka9NVVBzgG70Kt8I7vbbhs+cJ1UOUE
4wIW9FBSL3u+CJ5r6MDkF2uR+d+Gy8dzfXXAfZP4hChfDB38Dfb6Lrhs+Zq4
JtWBiYMxSvlljvieWw32WF9cXp4r1sG/YE364tL5PLgm0QHXB7WCNoGtCy4M
H8+V6AD7Zu6hbT/hM2J5LvoGXPBXBPZjuBfpisuLawIdABN6CE0CZ1dcOp+P
5zp0wDznuuEzahaCS+cL1AHznvmOmEwmUZ5j+XBN4rnoZQxcGFLPtZ1rPqPg
nsbCFaKD+v11zHrpfB5cw6jXzPT9mLgwfDzXhQv3urFxYUh1YPNXfMazlD5w
Sbnm0iPuifrApbEJPNe1JmH97guXxtaiA5vn98X7+mjimmtNwhrQNy4Ml+fW
tchr0lC4rDoo3WvlULg0NsHedeg+8mjauwKTuacYEhdG036Cefbz1+/Bcbn2
rn8AgmcqHw==
                    "], {{0, 48}, {38, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{38, 48},
                    PlotRange->{{0, 38}, {0, 48}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Naturales\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 1), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]], 
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJztmkFOg0AUhom6cOkVvEHduXXptsYDtBEbN5hQAzIQhlm48QJzDC7BITgE
J3DznKExljrIpBn6Zlpe8reFTJP3hvd/eSRzvXydP595nre+FB/zRXwXhovk
4UpcPAbrl1XgP90Hb/7KD2+X5+LmTOhG6ML7jSzLgFIKeZ63KoqivWaMtb9t
1CbXAmT+cRz78p74BkJIZ53NNWzEYOs5fEVRBCR5b+tLksSC/P6X3F/GPsFD
CIAaSo0cyxqU+VV8ax2vUGqoy+H8edUoc+v+l4NYdvAamooP90nP3kJdaj2n
MQOaCvhgD6n39k//iQIOnb+MTh8fqQf69rbbfzge2O1jtUrRLYoe2um/Pq+P
mr8WR933gB5H1c9p7DDHUSQPaHHUXg/ImDiK6wEtjto8S0wcRfeAFkdtniUM
ctReD2hyFMkD5t7JXOeozR7Q46jzswSSB8xxFMkDJ8FRuz1gjKNIs4Q5jk4e
2Dcmjh6LB5BmCYMcxfKAMY667gHnOYrjARmmOOr8LIHkAedniRPhqM0ecH2W
kMFoPlyDpUrTFAih7dkY7Fz21c85nw/mbg1S8tzJN1kfm2o=
                    "], {{0, 48}, {49, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{49, 48},
                    PlotRange->{{0, 49}, {0, 48}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Enteros\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 2), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]]}
           },
           AutoDelete->False,
           FrameStyle->GrayLevel[0.7],
           GridBoxBackground->{"Columns" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "Columns"]], 
             "ColumnsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "ColumnsIndexed"]], 
             "Rows" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "Rows"]], 
             "RowsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "RowsIndexed"]], 
             "ItemsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "ItemsIndexed"]]},
           GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.7}}, "Rows" -> {{0.7}}}],
          "Grid"]},
        {
         FrameBox[
          PaneSelectorBox[{1->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {1, 
                    0}, $CellContext`scale$$ = 20, Typeset`show$$ = True, 
                    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                    Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 20, "m\[AAcute]ximo"}, {20, 
                    60, 100, 200, 1000}}, {{
                    Hold[$CellContext`pos$$], {1, 0}}}}, Typeset`size$$ = {
                    720., {37., 43.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$5624$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {1, 
                    0}, $CellContext`scale$$ = 20}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$5624$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    Max[1, 
                    Round[
                    Part[$CellContext`pos$$, 1]]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.003], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalN], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{(-0.05) $CellContext`scale$$, \
$CellContext`scale$$}, {-0.5, 0.5}}, Ticks -> {
                    Delete[
                    Range[0, $CellContext`scale$$, $CellContext`scale$$/20], 
                    1], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Max[1, 
                    Round[
                    Part[$CellContext`pos$$, 1]]], TraditionalForm], Red, 30],
                     ImageSize -> {350, 30}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 20, 
                    "m\[AAcute]ximo"}, {20, 60, 100, 200, 
                    1000}}, {{$CellContext`pos$$, {1, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{779., {88., 95.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"Los \\!\\(\\*StyleBox[\\\"n\[UAcute]meros\\\
\",FontSlant->\\\"Italic\\\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\
\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\\)\\!\\(\\*StyleBox[\\\"naturales\\\",FontSlant->\\\"\
Italic\\\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\\) son aquellos \
que se utilizan para \\!\\(\\*StyleBox[\\\"contar\\\",FontSlant->\\\"Italic\\\
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\\), el conjunto de todos \
los n\[UAcute]meros naturales se denota por \[DoubleStruckCapitalN] y son: \
\\n \[DoubleStruckCapitalN]={1, 2, 3, 4, 5, 6, 7, 8, 9...}\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "32e055a0-2b04-42f4-a648-05031d21adbe"],
                  TextCell[
                   Style[
                   "Los \!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"\
Italic\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\
\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\) son aquellos que se utilizan para \
\!\(\*StyleBox[\"contar\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\), el conjunto de todos los n\[UAcute]meros naturales se \
denota por \[DoubleStruckCapitalN] y son: \n \[DoubleStruckCapitalN]={1, 2, \
3, 4, 5, 6, 7, 8, 9...}", {FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros naturales \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalN] , + )", "Text",
                    ExpressionUUID->"dedc6ab7-fe7c-4d45-af3c-c6a41ee64b63"],
                    TextCell[" ( \[DoubleStruckCapitalN] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros naturales es un n\
\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalN]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text",
                    ExpressionUUID->"e1788c57-27f3-4160-b7d9-732f61f129bc"],
                    TextCell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros naturales es \
un n\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalN]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros naturales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros naturales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero natural da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "fc055bdc-7101-4d67-b6dc-3ae4a00eee4e"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La sustracci\[OAcute]n es el proceso inverso a la adici\
\[OAcute]n y no se considera una operaci\[OAcute]n porque no es cerrada, lo \
que quiere decir que no siempre se puede realizar la sustracci\[OAcute]n \
entre dos n\[UAcute]meros naturales.\nEn la sustracci\[OAcute]n \
\!\(TraditionalForm\`a - b = c\) el t\[EAcute]rmino \!\(TraditionalForm\`a\) \
se llama \!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\) y \
\!\(TraditionalForm\`c\) la \!\(\*StyleBox[\"diferencia\",FontSlant->\"Italic\
\"]\).\nLa sustracci\[OAcute]n se puede realizar dentro del conjunto de los n\
\[UAcute]meros naturales solo cuando el \
\!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\) es mayor que el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\), por ejemplo: \
\!\(TraditionalForm\`505 - 124 = 381\) , en el caso contrario, la operaci\
\[OAcute]n no da como resultado un n\[UAcute]mero natural: \
\!\(TraditionalForm\`124 - 505 = \(-381\) \[NotElement] \
\[DoubleStruckCapitalN]\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "57ffbda8-b779-43fc-af97-2b8c08906211"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]meros naturales. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros naturales solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \!\(TraditionalForm\`6\[Divide]2 = 3\) , \
en el caso contrario, la operaci\[OAcute]n no da como resultado un \
n\[UAcute]mero natural: \!\(TraditionalForm\`2\[Divide]6 = \
\(\*FractionBox[\(2\), \(6\)] = \*FractionBox[\(1\), \(3\)] \[NotElement] \
\[DoubleStruckCapitalN]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "cb3cb6a3-b3ce-498a-ac65-36e731934f43"]
                  }], "Multimedia",ExpressionUUID->
                   "f3a1330e-ecbb-458b-aa96-86fad55dc1a2"],
                  TextCell[
                   Row[{
                    "Operaciones con los n\[UAcute]meros naturales \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalN] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros naturales es un n\
\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalN]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros naturales es \
un n\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalN]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros naturales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros naturales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero natural da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La sustracci\[OAcute]n es el proceso inverso a la adici\
\[OAcute]n y no se considera una operaci\[OAcute]n porque no es cerrada, lo \
que quiere decir que no siempre se puede realizar la sustracci\[OAcute]n \
entre dos n\[UAcute]meros naturales.\nEn la sustracci\[OAcute]n \
\!\(TraditionalForm\`a - b = c\) el t\[EAcute]rmino \!\(TraditionalForm\`a\) \
se llama \!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\) y \
\!\(TraditionalForm\`c\) la \!\(\*StyleBox[\"diferencia\",FontSlant->\"Italic\
\"]\).\nLa sustracci\[OAcute]n se puede realizar dentro del conjunto de los n\
\[UAcute]meros naturales solo cuando el \
\!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\) es mayor que el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\), por ejemplo: \
\!\(TraditionalForm\`505 - 124 = 381\) , en el caso contrario, la operaci\
\[OAcute]n no da como resultado un n\[UAcute]mero natural: \
\!\(TraditionalForm\`124 - 505 = \(-381\) \[NotElement] \
\[DoubleStruckCapitalN]\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]meros naturales. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros naturales solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \!\(TraditionalForm\`6\[Divide]2 = 3\) , \
en el caso contrario, la operaci\[OAcute]n no da como resultado un \
n\[UAcute]mero natural: \!\(TraditionalForm\`2\[Divide]6 = \
\(\*FractionBox[\(2\), \(6\)] = \*FractionBox[\(1\), \(3\)] \[NotElement] \
\[DoubleStruckCapitalN]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}], 2->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10, Typeset`show$$ = True, 
                    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                    Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 10, "m\[AAcute]ximo"}, {10, 
                    20, 50, 100}}, {{
                    Hold[$CellContext`pos$$], {0, 0}}}}, Typeset`size$$ = {
                    720., {37., 43.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$5644$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$5644$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    Round[
                    Part[$CellContext`pos$$, 1]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.003], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalZ], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{-$CellContext`scale$$, \
$CellContext`scale$$}, {-0.5, 0.5}}, Ticks -> {
                    
                    Range[-$CellContext`scale$$, $CellContext`scale$$, \
$CellContext`scale$$/10], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Round[
                    Part[$CellContext`pos$$, 1]], TraditionalForm], Red, 30], 
                    ImageSize -> {350, 30}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 10, 
                    "m\[AAcute]ximo"}, {10, 20, 50, 
                    100}}, {{$CellContext`pos$$, {0, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{779., {88., 95.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"El conjunto de los n\[UAcute]meros enteros \
es una extensi\[OAcute]n del conjunto de los n\[UAcute]meros naturales. Este \
conjunto est\[AAcute] conformado por el conjunto de los n\[UAcute]meros \
naturales, el cero (considerado como un punto de referencia o punto de \
origen) y los opuestos de los naturales (enteros negativos). Los \
n\[UAcute]meros enteros se representan con la letra \[DoubleStruckCapitalZ]: \
\\n \[DoubleStruckCapitalZ]={..., -4, -3 , -2 , -1, 0, 1, 2, 3, 4, ...}\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "cd29b2a8-1118-434a-a6df-8f107155b342"],
                  TextCell[
                   Style[
                   "El conjunto de los n\[UAcute]meros enteros es una extensi\
\[OAcute]n del conjunto de los n\[UAcute]meros naturales. Este conjunto est\
\[AAcute] conformado por el conjunto de los n\[UAcute]meros naturales, el \
cero (considerado como un punto de referencia o punto de origen) y los \
opuestos de los naturales (enteros negativos). Los n\[UAcute]meros enteros se \
representan con la letra \[DoubleStruckCapitalZ]: \n \
\[DoubleStruckCapitalZ]={..., -4, -3 , -2 , -1, 0, 1, 2, 3, 4, ...}", {
                    FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros enteros \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalZ] , + )", "Text",
                    ExpressionUUID->"f934c649-0815-4721-b2cf-85a7fa412b99"],
                    TextCell[" ( \[DoubleStruckCapitalZ] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un n\
\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalZ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros enteros el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
entero existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text",
                    ExpressionUUID->"9f16e8de-3a46-48ae-bb54-42936967b771"],
                    TextCell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un \
n\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalZ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros enteros el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se puede distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "0d2405f6-bcc0-4246-89e9-b1950cf3ed9a"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] que la sustracci\[OAcute]n es una \
adici\[OAcute]n de un n\[UAcute]mero con el opuesto de otro n\[UAcute]mero, \
sin embargo, es necesario recalcar que la sustracci\[OAcute]n no es \
conmutativa ni asociativa. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"2\", \"-\", \"5\"}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"5\", \"-\", \
\"2\"}]}]},{RowBox[{RowBox[{\"-\", \"3\"}], \"\[AlignmentMarker]\", \"\
\[NotEqual]\", \" \", \"3\"}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"Center\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{\"2\", \"-\", \"3\"}], \")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
\"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{\"2\", \"-\", RowBox[{\"(\", RowBox[{\"3\", \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \
\")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \"1\"}], \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{\"2\", \"-\", \"8\"}]}]},{RowBox[{\"4\", \
\"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"-\", \"6\"}]}]}\n   \
  },GridBoxAlignment->{\"Columns\" -> {{\"\[AlignmentMarker]\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es asociativa.\nSi se desea \
aplicar estas propiedades se debe escribir como una suma, por ejemplo \
\!\(TraditionalForm\`2 - 5\) se puede escribir como \!\(TraditionalForm\`2 + \
\((\(-5\))\)\) y \!\(TraditionalForm\`2 + \((\(-5\))\) = \(\((\(-5\))\) + 2 = \
\(-3\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "81d8b85a-8148-4eaf-91e1-a3579a8e50ca"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]mero enteros. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros enteros solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \
\!\(TraditionalForm\`\((\(-6\))\)\[Divide]2 = \(-3\)\) , en el caso \
contrario, la operaci\[OAcute]n no da como resultado un n\[UAcute]mero \
entero: \!\(TraditionalForm\`2\[Divide]\((\(-6\))\) = \
\(\(-\*FractionBox[\(2\), \(6\)]\) = \(-\*FractionBox[\(1\), \(3\)]\) \
\[NotElement] \[DoubleStruckCapitalZ]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "46dc2b7c-4788-464f-adae-099f0c8a632d"]
                  }], "Multimedia",ExpressionUUID->
                   "52909948-8257-4936-afdb-9b2fda960c0b"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros enteros \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalZ] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un n\
\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalZ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros enteros el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
entero existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un \
n\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalZ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros enteros el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se puede distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] que la sustracci\[OAcute]n es una \
adici\[OAcute]n de un n\[UAcute]mero con el opuesto de otro n\[UAcute]mero, \
sin embargo, es necesario recalcar que la sustracci\[OAcute]n no es \
conmutativa ni asociativa. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"2\", \"-\", \"5\"}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"5\", \"-\", \
\"2\"}]}]},{RowBox[{RowBox[{\"-\", \"3\"}], \"\[AlignmentMarker]\", \"\
\[NotEqual]\", \" \", \"3\"}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"Center\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{\"2\", \"-\", \"3\"}], \")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
\"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{\"2\", \"-\", RowBox[{\"(\", RowBox[{\"3\", \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \
\")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \"1\"}], \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{\"2\", \"-\", \"8\"}]}]},{RowBox[{\"4\", \
\"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"-\", \"6\"}]}]}\n   \
  },GridBoxAlignment->{\"Columns\" -> {{\"\[AlignmentMarker]\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es asociativa.\nSi se desea \
aplicar estas propiedades se debe escribir como una suma, por ejemplo \
\!\(TraditionalForm\`2 - 5\) se puede escribir como \!\(TraditionalForm\`2 + \
\((\(-5\))\)\) y \!\(TraditionalForm\`2 + \((\(-5\))\) = \(\((\(-5\))\) + 2 = \
\(-3\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]mero enteros. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros enteros solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \
\!\(TraditionalForm\`\((\(-6\))\)\[Divide]2 = \(-3\)\) , en el caso \
contrario, la operaci\[OAcute]n no da como resultado un n\[UAcute]mero \
entero: \!\(TraditionalForm\`2\[Divide]\((\(-6\))\) = \
\(\(-\*FractionBox[\(2\), \(6\)]\) = \(-\*FractionBox[\(1\), \(3\)]\) \
\[NotElement] \[DoubleStruckCapitalZ]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}]}, Dynamic[$CellContext`page1$$]],
          FrameMargins->1,
          FrameStyle->GrayLevel[0.7],
          ImageMargins->{{1, 1}, {0, 0}},
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Top}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"],
     ImageSize->{800, Automatic}],
    DynamicModuleValues:>{{DownValues[$CellContext`framePane$$] = {HoldPattern[
           $CellContext`framePane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            $CellContext`style1$$[$CellContext`s$], "Cuadro/Titulo", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPane$$] = {HoldPattern[
           $CellContext`textPane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "EmphasisText", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`style1$$] = {HoldPattern[
           $CellContext`style1$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style2$$] = {HoldPattern[
           $CellContext`style2$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style3$$] = {HoldPattern[
           $CellContext`style3$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`titlePopUp$$] = {HoldPattern[
           $CellContext`titlePopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama2$$, 
             FontFamily -> $CellContext`font1$$, $CellContext`color3$$, 
             Italic], "Text", LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPopUp$$] = {HoldPattern[
           $CellContext`textPopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama1$$, 
             FontFamily -> $CellContext`font1$$], "Text", LineIndent -> 0, 
            TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`rati$$] = {HoldPattern[
           $CellContext`rati$$[
            Pattern[$CellContext`x, 
             Blank[]]]] :> Rationalize[$CellContext`x, 0.1]}}, {
      DownValues[$CellContext`int$$] = {HoldPattern[
           $CellContext`int$$[
            Pattern[$CellContext`x, 
             Blank[]], 
            Pattern[$CellContext`y, 
             Blank[]]]] :> IntegerPart[$CellContext`x/$CellContext`y]}}}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"76acd88a-c8a2-43de-9be8-de9fbad94db0"],

Cell["Resumen de operaciones en n\[UAcute]meros enteros", "Multimedia",ExpressionUUID->"ef389cb1-3dff-46f2-b4f2-51a453085893"],

Cell[TextData[{
 "Es infortunado que usemos el s\[IAcute]mbolo \[OpenCurlyDoubleQuote]-\
\[CloseCurlyDoubleQuote] para indicar dos situaciones totalmente diferentes: \
el ",
 StyleBox["signo negativo u opuesto de un n\[UAcute]mero",
  FontSlant->"Italic"],
 " (por ejemplo ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "3"}], TraditionalForm]],ExpressionUUID->
  "ab8d69fe-aa6a-4ee5-87dc-df917ae3bdd7"],
 ") y ",
 StyleBox["la sustracci\[OAcute]n de un par de n\[UAcute]meros",
  FontSlant->"Italic"],
 " (por ejemplo ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"51", "-", "45"}], ")"}], TraditionalForm]],ExpressionUUID->
  "07b39ed2-a862-4208-a332-8c423953c24e"],
 ", esto naturalmente debe resultar confuso, y m\[AAcute]s a\[UAcute]n cuando \
se tienen operaciones con ambas situaciones, como ",
 Cell[BoxData[
  FormBox[
   RowBox[{"51", "-", 
    RowBox[{"(", 
     RowBox[{"-", "34"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "a3f248ee-a926-4b91-9932-f0c476530102"],
 "."
}], "Text",ExpressionUUID->"5d8d3155-0363-4eb7-acf6-7a987698ea05"],

Cell["\<\
Afortunadamente es nuestra naturaleza aprender a superar cualquier tipo de \
situaciones, y aseguramos que con algo de pr\[AAcute]ctica, la lectura y \
escritura de n\[UAcute]meros enteros se dar\[AAcute] de manera natural; eso s\
\[IAcute], es necesario practicar  y resolver situaciones que involucren \
operaciones de este tipo, escribir pausadamente el desarrollo y la respuesta. \
Es por eso que se tienen ejercicios num\[EAcute]ricos, pues el desarrollo de \
estos permitir\[AAcute] m\[AAcute]s adelante resolver problemas de mayor \
nivel.\
\>", "Text",ExpressionUUID->"e1fde836-80ca-4829-9961-5a1dab731d2a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejercicios de refuerzo", "Section",ExpressionUUID->"91d84647-e145-46c0-a6ed-4d4cec561235"],

Cell[CellGroupData[{

Cell["Ejercicios num\[EAcute]ricos", "Subsection",ExpressionUUID->"15504ff2-c1be-4c91-87d9-b08505ea3f6d"],

Cell[CellGroupData[{

Cell["\<\
Simplifique completamente cada una de las siguientes expresiones\
\>", "ItemNumbered",ExpressionUUID->"3d5b082d-a81e-4187-9cd0-6a468ec9d659"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "6"}], "+", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], "-", 
      RowBox[{"4", "\[Divide]", 
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}]}]}], "}"}], "2"}], "-", "3"}], 
  TraditionalForm]],ExpressionUUID->"efab6b12-bb6d-4072-8438-da89edfd334f"]], \
"SubitemNumbered",ExpressionUUID->"410a9762-bc88-41b6-937e-67a28898193f"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6"}], "+", "3"}], ")"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], "-", 
      RowBox[{"4", "\[Divide]", 
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}]}]}], "}"}], "2"}], "-", "3"}], 
  TraditionalForm]],ExpressionUUID->"2ceae2f8-5143-4b9d-a2b7-07e6b6b23f36"]], \
"SubitemNumbered",ExpressionUUID->"18d2ca88-8716-4511-9ea7-24d3703c2167"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "6"}], "+", "3"}], ")"}], "-", 
   RowBox[{"5", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Divide]", 
      RowBox[{"(", 
       RowBox[{"-", "2"}], ")"}]}], "}"}], "2"}], "-", "3"}], 
  TraditionalForm]],ExpressionUUID->"f908f2af-c6f2-43d8-b465-b4b167becca1"]], \
"SubitemNumbered",ExpressionUUID->"3c39f59c-cb46-488b-8627-1f04b1b2dd88"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "6"}], "+", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "-", "4"}], ")"}], "\[Divide]", 
      RowBox[{"(", 
       RowBox[{"-", "3"}], ")"}]}], "}"}], "2"}], "-", "3"}], 
  TraditionalForm]],ExpressionUUID->"bcc03945-6d04-4fb9-bef1-4996f5c20dcb"]], \
"SubitemNumbered",ExpressionUUID->"324f64aa-baf0-4eff-bd9e-7fa925ac82e4"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "6"}], "+", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], "-", 
      RowBox[{"4", "\[Divide]", 
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}]}]}], "}"}], 
    RowBox[{"(", 
     RowBox[{"2", "-", "3"}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"51086a36-b54b-40a2-b33d-345c749497fd"]], \
"SubitemNumbered",ExpressionUUID->"517a30a1-91c3-4881-b30d-3f2ee8cac591"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "3"}], "-", 
   RowBox[{"8", 
    RowBox[{"{", 
     RowBox[{"2", "-", 
      RowBox[{"5", 
       RowBox[{"(", 
        RowBox[{"3", "-", "4"}], ")"}], "2"}]}], "}"}], "2"}], "-", "2"}], 
  TraditionalForm]],ExpressionUUID->"6c73b0fa-eac9-42e7-8841-de19d28ddd30"]], \
"SubitemNumbered",ExpressionUUID->"66dc5b27-78c9-430a-99b9-ec4d93b5dac3"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "2"}], "+", 
   RowBox[{"3", "\[Divide]", 
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}]}], "+", 
   RowBox[{"4", "\[Times]", 
    RowBox[{"(", 
     RowBox[{"-", "2"}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"9ebc5ac6-000c-4eb5-bfd2-16bf2e5dce47"]], \
"SubitemNumbered",ExpressionUUID->"8cc497b5-1d3d-4ef4-a7d7-5b31f82e08e5"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"2", "-", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{"5", "-", 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", "4"}], ")"}], " ", "3"}], "+", 
      RowBox[{"6", "\[Divide]", 
       RowBox[{"(", 
        RowBox[{"-", "3"}], ")"}]}]}], "}"}]}]}], 
  TraditionalForm]],ExpressionUUID->"476da381-e0d0-4b6e-86d7-fee87d5fad0b"]], \
"SubitemNumbered",ExpressionUUID->"b701348e-fcc7-4d8c-973e-df13e2f66c8e"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", "-", " ", 
      RowBox[{"5", "\[Divide]", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ")"}], "3"}], "-", "2"}], 
  TraditionalForm]],ExpressionUUID->"81bafeec-3ddb-4b0b-be36-b50df7a804c2"]], \
"SubitemNumbered",ExpressionUUID->"f2f7ac73-54db-40e7-b41a-b14507783bc2"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", "4"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "\[Divide]", "2"}], "+", "3"}], ")"}], "4"}], "-", 
   "1"}], TraditionalForm]],ExpressionUUID->"e84ee832-ea58-476b-8dab-\
c1ec38e1a35b"]], "SubitemNumbered",ExpressionUUID->"99d78c2e-f48c-4e72-80b5-\
5eae4b6a89f6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Soluciones a los ejercicios", "Subsubsection",ExpressionUUID->"b40c3b78-4d74-4f9f-a444-922b52d93af3"],

Cell[CellGroupData[{

Cell["\<\
Simplifique completamente cada una de las siguientes expresiones\
\>", "ItemNumbered",ExpressionUUID->"457e751e-0d57-4131-941a-93ac3c5d9916"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "6"}], "+", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], "-", 
      RowBox[{"4", "\[Divide]", 
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}]}]}], "}"}], "2"}], "-", "3"}], 
  TraditionalForm]],ExpressionUUID->"65e6557b-dace-4ee7-a9be-0940795f6517"]], \
"SubitemNumbered",ExpressionUUID->"3998833d-23b9-479e-8981-b79510b57cf6"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], "-", 
             RowBox[{"4", "\[Divide]", 
              RowBox[{"(", 
               RowBox[{"-", "2"}], ")"}]}]}], "}"}], "2"}], "-", "3"}], "=", 
         TagBox[
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"3", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], "+", "2"}], "}"}], "2"}], "-", "3"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{"-", "3"}], "}"}], "2"}], "-", "3"}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"-", "6"}], "-", "18", "-", "3"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", "27"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"4c653458-fb0d-41eb-ae2f-f7aa24e1aca9"]], \
"Text",ExpressionUUID->"ff40f8df-bb5c-4c72-8ecd-3c5e7a57d6f7"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6"}], "+", "3"}], ")"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], "-", 
      RowBox[{"4", "\[Divide]", 
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}]}]}], "}"}], "2"}], "-", "3"}], 
  TraditionalForm]],ExpressionUUID->"fdef45b4-8170-447c-9f72-c923e76d9305"]], \
"SubitemNumbered",ExpressionUUID->"e757638b-c079-49c3-872b-90e430b874dd"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", "3"}], ")"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], "-", 
             RowBox[{"4", "\[Divide]", 
              RowBox[{"(", 
               RowBox[{"-", "2"}], ")"}]}]}], "}"}], "2"}], "-", "3"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "3"}], ")"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], "+", "2"}], "}"}], "2"}], "-", "3"}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "3"}], ")"}], 
           RowBox[{"{", 
            RowBox[{"-", "3"}], "}"}], "2"}], "-", "3"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"18", "-", "3"}]}]},
       {
        RowBox[{"=", "15"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"5fd4fc8c-fe8b-420c-8cb5-5da07315e9b3"]], \
"Text",ExpressionUUID->"33ea99cf-5b17-4b85-b465-aad5d6065adb"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "6"}], "+", "3"}], ")"}], "-", 
   RowBox[{"5", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Divide]", 
      RowBox[{"(", 
       RowBox[{"-", "2"}], ")"}]}], "}"}], "2"}], "-", "3"}], 
  TraditionalForm]],ExpressionUUID->"8177fbef-b1c4-4264-bc3e-dc2a9bdf05a4"]], \
"SubitemNumbered",ExpressionUUID->"11daca84-3850-48fd-82a0-3cd0938e794f"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", "3"}], ")"}], "-", 
          RowBox[{"5", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], "\[Divide]", 
             RowBox[{"(", 
              RowBox[{"-", "2"}], ")"}]}], "}"}], "2"}], "-", "3"}], "=", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          RowBox[{"5", 
           RowBox[{"{", "2", "}"}], "2"}], "-", "3"}]}]},
       {
        RowBox[{"=", 
         TagBox[
          RowBox[{
           RowBox[{"-", "3"}], "-", "20", "-", "3"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", "26"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"6eab6341-1a54-416a-8625-804101217197"]], \
"Text",ExpressionUUID->"0b0a88d1-f5db-4b30-a39c-67af9ef61d4e"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "6"}], "+", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "-", "4"}], ")"}], "\[Divide]", 
      RowBox[{"(", 
       RowBox[{"-", "3"}], ")"}]}], "}"}], "2"}], "-", "3"}], 
  TraditionalForm]],ExpressionUUID->"fbf8985b-8be6-4341-b75f-2654dfe94a23"]], \
"SubitemNumbered",ExpressionUUID->"874df1aa-1df2-4c92-9a5c-24839c56e45c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "5"}], "-", "4"}], ")"}], "\[Divide]", 
             RowBox[{"(", 
              RowBox[{"-", "3"}], ")"}]}], "}"}], "2"}], "-", "3"}], "=", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", "9"}], ")"}], "\[Divide]", 
             RowBox[{"(", 
              RowBox[{"-", "3"}], ")"}]}], "}"}], "2"}], "-", "3"}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"3", 
           RowBox[{"{", "3", "}"}], "2"}], "-", "3"}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"-", "6"}], "+", "18", "-", "3"}]}]},
       {
        RowBox[{"=", "9"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"cf9b5a55-b4b3-4017-9ee2-87c395c72bb8"]], \
"Text",ExpressionUUID->"7c9b84f3-700e-4139-9e65-d5a92e5bfb9c"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "6"}], "+", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], "-", 
      RowBox[{"4", "\[Divide]", 
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}]}]}], "}"}], 
    RowBox[{"(", 
     RowBox[{"2", "-", "3"}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"6a4a9777-cfea-42ba-b175-1d7a5ec0fcb1"]], \
"SubitemNumbered",ExpressionUUID->"be2a5807-9234-40ad-a878-bf1ffa726fde"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], "-", 
             RowBox[{"4", "\[Divide]", 
              RowBox[{"(", 
               RowBox[{"-", "2"}], ")"}]}]}], "}"}], 
           RowBox[{"(", 
            RowBox[{"2", "-", "3"}], ")"}]}]}], "=", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], "+", "2"}], "}"}], 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}]}]}]},
       {
        RowBox[{"=", 
         TagBox[
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"3", 
            RowBox[{"{", 
             RowBox[{"-", "3"}], "}"}], 
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}]}]}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         TagBox[
          RowBox[{
           RowBox[{"-", "6"}], "+", "9"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", "3"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"670b40de-da27-42c1-8e59-62b6be03d658"]], \
"Text",ExpressionUUID->"fc3e3179-a35e-43f1-8c1a-5e7f5d9a90ac"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "3"}], "-", 
   RowBox[{"8", 
    RowBox[{"{", 
     RowBox[{"2", "-", 
      RowBox[{"5", 
       RowBox[{"(", 
        RowBox[{"3", "-", "4"}], ")"}], "2"}]}], "}"}], "2"}], "-", "2"}], 
  TraditionalForm]],ExpressionUUID->"24a7b038-778f-414b-82f6-c8622d1fcb7c"]], \
"SubitemNumbered",ExpressionUUID->"b7b932b2-595c-4e62-9e7b-7265377d3872"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          RowBox[{"8", 
           RowBox[{"{", 
            RowBox[{"2", "-", 
             RowBox[{"5", 
              RowBox[{"(", 
               RowBox[{"3", "-", "4"}], ")"}], "2"}]}], "}"}], "2"}], "-", 
          "2"}], "=", 
         TagBox[
          RowBox[{
           RowBox[{"-", "3"}], "-", 
           RowBox[{"8", 
            RowBox[{"{", 
             RowBox[{"2", "-", 
              RowBox[{"5", 
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "2"}]}], "}"}], "2"}], "-", "2"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         TagBox[
          RowBox[{
           RowBox[{"-", "3"}], "-", 
           RowBox[{"8", 
            RowBox[{"{", 
             RowBox[{"2", "+", "10"}], "}"}], "2"}], "-", "2"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         TagBox[
          RowBox[{
           RowBox[{"-", "3"}], "-", 
           RowBox[{"8", 
            RowBox[{"{", "12", "}"}], "2"}], "-", "2"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         TagBox[
          RowBox[{
           RowBox[{"-", "3"}], "-", "192", "-", "2"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", "197"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"97616170-4698-4db1-8651-ac7fd29831fc"]], \
"Text",ExpressionUUID->"e1f74090-bba6-429a-8c13-8c85c6cc1788"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "2"}], "+", 
   RowBox[{"3", "\[Divide]", 
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}]}], "+", 
   RowBox[{"4", "\[Times]", 
    RowBox[{"(", 
     RowBox[{"-", "2"}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"47e4f2bc-7a91-484d-a49d-767689531d8f"]], \
"SubitemNumbered",ExpressionUUID->"47101a29-59fb-42be-b90b-6af13ba36ed2"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", "\[Divide]", 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}], "+", 
          RowBox[{"4", "\[Times]", 
           RowBox[{"(", 
            RowBox[{"-", "2"}], ")"}]}]}], "=", 
         TagBox[
          RowBox[{
           RowBox[{"-", "2"}], "-", "3", "-", "8"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", "13"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"d714747d-4680-40d4-804a-3a9252816e92"]], \
"Text",ExpressionUUID->"d6faa87f-db87-474e-b38b-0b2f5d02fc78"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"2", "-", 
   RowBox[{"3", 
    RowBox[{"{", 
     RowBox[{"5", "-", 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", "4"}], ")"}], " ", "3"}], "+", 
      RowBox[{"6", "\[Divide]", 
       RowBox[{"(", 
        RowBox[{"-", "3"}], ")"}]}]}], "}"}]}]}], 
  TraditionalForm]],ExpressionUUID->"1449efdd-8090-46d5-b2ea-3e07d457a75a"]], \
"SubitemNumbered",ExpressionUUID->"acc51f68-8dc6-4f2c-b1ff-940b7992643a"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"2", "-", 
          RowBox[{"3", 
           RowBox[{"{", 
            RowBox[{"5", "-", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", "4"}], ")"}], " ", "3"}], "+", 
             RowBox[{"6", "\[Divide]", 
              RowBox[{"(", 
               RowBox[{"-", "3"}], ")"}]}]}], "}"}]}]}], "=", 
         TagBox[
          RowBox[{"2", "-", 
           RowBox[{"3", 
            RowBox[{"{", 
             RowBox[{"5", "-", 
              RowBox[{"6", 
               RowBox[{"(", 
                RowBox[{"-", "2"}], ")"}], "3"}], "-", "2"}], "}"}]}]}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         TagBox[
          RowBox[{"2", "-", 
           RowBox[{"3", 
            RowBox[{"{", 
             RowBox[{"5", "+", "36", "-", "2"}], "}"}]}]}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         TagBox[
          RowBox[{"2", "-", 
           RowBox[{"3", 
            RowBox[{"{", "39", "}"}]}]}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         TagBox[
          RowBox[{"2", "-", "117"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", "115"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"3c0fa88e-662e-444b-ac38-f3971cab51ad"]], \
"Text",ExpressionUUID->"090b0e0f-d558-4fd5-8f7e-0deeda9f27fa"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", "-", " ", 
      RowBox[{"5", "\[Divide]", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ")"}], "3"}], "-", "2"}], 
  TraditionalForm]],ExpressionUUID->"ae003c4e-e049-48d5-bd41-9d2a298b88dd"]], \
"SubitemNumbered",ExpressionUUID->"5ea88e4f-965a-4061-92d0-ddf3865ab2be"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"4", " ", "-", " ", 
             RowBox[{"5", "\[Divide]", 
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}]}]}], ")"}], "3"}], "-", "2"}], "=", 
         TagBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "+", "5"}], ")"}], "3"}], "-", "2"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         TagBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", "9", ")"}], "3"}], "-", "2"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         RowBox[{"27", "-", "2"}]}]},
       {
        RowBox[{"=", "25"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"0578f7e7-4302-446c-bc05-eb4a185c6cf7"]], \
"Text",ExpressionUUID->"6ed2d0d1-4416-4cac-b1ef-cb0dac488675"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", "4"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "\[Divide]", "2"}], "+", "3"}], ")"}], "4"}], "-", 
   "1"}], TraditionalForm]],ExpressionUUID->"5e2c3641-39c0-495f-95fc-\
bfb85e9b9e8a"]], "SubitemNumbered",ExpressionUUID->"75474bb3-495b-4bc5-ac33-\
1c30eb71810c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "-", "4"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], "\[Divide]", "2"}], "+", "3"}], ")"}], 
           "4"}], "-", "1"}], "=", 
         TagBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "3"}], ")"}], "4"}], "-", "1"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         TagBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"(", "2", ")"}], "4"}], "-", "1"}],
          "MathMLPresentationTag",
          AutoDelete->True]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"-", "8"}], "-", "1"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", "9"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"8ba33650-de30-4ac3-93f2-a4b5ec7713e2"]], \
"Text",ExpressionUUID->"7e4144cb-2813-430c-a3aa-8977f0fac3fe"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problemas de aplicaci\[OAcute]n", "Subsection",ExpressionUUID->"25d8dabd-ebd3-4fbd-91de-a9d70794eb70"],

Cell[CellGroupData[{

Cell["\<\
En un tanque hay 728 litros de agua. Por la parte superior, una llave vierte \
agua 33 litros por minuto al tanque, en tanto que por la parte inferior, por \
un tubo salen 47 litros por minuto.\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"f1744746-55e4-4597-b4e3-719103d21dc5"],

Cell["\<\
\[DownQuestion]Cu\[AAcute]ntos litros de agua hay en el tanque, \
despu\[EAcute]s de una hora?\
\>", "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"7c0a5963-3cb3-49f3-bbbf-040482ca86e0"],

Cell["\[DownQuestion]Cu\[AAcute]nto tardar\[AAcute] en desocuparse el \
tanque?", "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"09a775d4-8822-412d-b3ff-808fd0a1006e"],

Cell["\<\
Si se quiere que el tanque nunca se desocupe, \[DownQuestion]c\[OAcute]mo \
modificar\[IAcute]a el problema?\
\>", "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"e78d76cb-c0ce-4c72-91d4-c8de722bbe5e"]
}, Open  ]],

Cell["\<\
Pedro tiene $30,000, Luc\[IAcute]a tiene $28,000 m\[AAcute]s que el doble de \
lo que tiene Pedro; Jos\[EAcute] tiene la mitad de lo que tienen Pedro y Luc\
\[IAcute]a juntos. Entre los tres quieren comprar un regalo a sus padres que \
tiene un costo de $200,000, \[DownQuestion]les alcanza? En caso afirmativo, \
\[DownQuestion]cu\[AAcute]nto les sobra?, en caso negativo, \[DownQuestion]cu\
\[AAcute]nto les falta?.\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"7e6eab6a-1016-47e0-a097-50bd5cf35cb1"],

Cell["\<\
Mar\[IAcute]a compr\[OAcute] a cr\[EAcute]dito un vestido que le \
cost\[OAcute] $427,000. Realiz\[OAcute] un primer abono de $140,000 a los \
quince d\[IAcute]as. En la siguiente quincena abon\[OAcute] $53,000 y a los \
otros quince d\[IAcute]as, abon\[OAcute] $78,500. Cuando fue a cancelar el \
saldo pendiente, Mar\[IAcute]a llevaba $200,000 y, al llegar al \
almac\[EAcute]n, le gust\[OAcute] una sofisticada blusa blanca, que no dud\
\[OAcute] en comprar.  Si al salir del almac\[EAcute]n, Mar\[IAcute]a qued\
\[OAcute] debiendo $63,000 y solo le quedaron $15,200, \[DownQuestion]cu\
\[AAcute]nto cost\[OAcute] la blusa?\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"9d3e5ed4-0db3-47b6-ab91-18c748f5f5b1"],

Cell["\<\
Ana abre una cuenta de ahorros con $1,250,000. El lunes retira $435,000, el \
martes consigna $285,000, el mi\[EAcute]rcoles consigna $145,000 y el jueves \
intenta retirar $1,850,000. \[DownQuestion]Puede hacer ese retiro? \
\[DownQuestion]Por qu\[EAcute]?\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"066f7dce-d5f4-4ac7-8f8e-f478f0ee6fea"],

Cell[CellGroupData[{

Cell["\<\
El domingo, hacia las 8 de la ma\[NTilde]ana, la temperatura ambiente era de \
14 \[Degree]C. A las 10 a.m. hab\[IAcute]a subido 6 \[Degree]C la \
temperatura. A las 4 p.m. la temperatura descendi\[OAcute] 22 \[Degree]C\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"e689267e-fb69-41f6-b0fb-2da3be318c86"],

Cell["\[DownQuestion]Cu\[AAcute]l era la temperatura a las 4 p.m.?", \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"5fb46e4e-0bef-4218-8ddb-2b594a0ff347"],

Cell["\<\
Si a las 6 p.m. la temperatura es de 4 \[Degree]C, \
\[DownQuestion]cu\[AAcute]l fue el movimiento de la temperatura entre las 4 \
p.m. y las 6 p.m.?\
\>", "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"2616e68e-97b8-4fca-89ce-6cf5e503d20b"]
}, Open  ]],

Cell["\<\
Sal\[IAcute] de mi apartamento y baj\[EAcute] 4 pisos para encontrarme con mi \
hija. Subimos 7 pisos y llegamos al apartamento de mi hermana que vive en el \
piso 13. \[DownQuestion]En qu\[EAcute] piso queda mi apartamento?\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"9e4baf54-44f5-4fae-b9b5-47f854651de8"],

Cell["\<\
Un accionista compra 250 acciones a $150,000 cada una. Al pasar el primer \
mes, las acciones se encuentran a un valor de $119,000 cada una. En ese \
momento, \[DownQuestion]a cu\[AAcute]nto asciende la p\[EAcute]rdida del \
accionista?\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10005.},ExpressionUUID->"0e3ce146-ee54-42fd-ba12-3d3a105da3b7"],

Cell[CellGroupData[{

Cell["Soluciones a los ejercicios", "Subsubsection",ExpressionUUID->"8f5db014-35ef-4424-b91a-f107f6661db1"],

Cell[CellGroupData[{

Cell["\<\
En un tanque hay 728 litros de agua. Por la parte superior, una llave vierte \
agua 33 litros por minuto al tanque, en tanto que por la parte inferior, por \
un tubo salen 47 litros por minuto.\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"0852fee2-2181-43c9-91ef-8b429b828ccf"],

Cell["\<\
\[DownQuestion]Cu\[AAcute]ntos litros de agua hay en el tanque, \
despu\[EAcute]s de una hora?\
\>", "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"31b6f07e-37f9-434f-b9cb-98639571c249"],

Cell[TextData[{
 "Por minuto, lo que entra menos lo que sale es ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"33", "-", "47"}], "=", 
    RowBox[{"-", "14"}]}], TraditionalForm]],ExpressionUUID->
  "8f2e842e-263b-4c45-a4ea-4bb7dc139dee"],
 " litros. Es decir, salen 14 litros por minuto del tanque, en los 60 \
minutos, salen ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"14", "\[Cross]", "60"}]}], "=", 
    RowBox[{"-", "840"}]}], TraditionalForm]],ExpressionUUID->
  "70a064d2-750a-4b86-8707-0460b715062d"],
 ". Como solo tiene ",
 Cell[BoxData[
  FormBox["728", TraditionalForm]],ExpressionUUID->
  "e4279b41-ee5c-4b52-963f-00f2817a4b63"],
 " litros de agua en el tanque, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"728", "-", "840"}], "=", 
    RowBox[{"-", "112"}]}], TraditionalForm]],ExpressionUUID->
  "48d650c5-8829-45c1-a43e-ab68678b5aba"],
 ", es decir que no hay agua en el tanque (faltan 112 litros) y hace mucho se \
desocup\[OAcute]."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"6208e03b-8bb8-48c5-b765-ea010b5b0eaa"],

Cell["\[DownQuestion]Cu\[AAcute]nto tardar\[AAcute] en desocuparse el \
tanque?", "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"72d72d48-d39f-487f-bbca-6bca056f6940"],

Cell["\<\
Como salen 14 litros por minuto, se divide el total, 728 litros entre los 14, \
quedando como resultado 52 minutos.\
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"28f08983-6b5c-4590-b07c-0a790f73ea9a"],

Cell["\<\
Si se quiere que el tanque nunca se desocupe, \[DownQuestion]c\[OAcute]mo \
modificar\[IAcute]a el problema?\
\>", "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"3d058294-5354-41c1-914c-3e1800062a09"],

Cell["\<\
Es necesario que la cantidad de agua que sale del tanque por el tubo inferior \
sea menor que la que ingresa por la parte superior (33 litros).\
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"975084ee-c00d-4151-b486-5ca32af24404"]
}, Open  ]],

Cell["\<\
Pedro tiene $30,000, Luc\[IAcute]a tiene $28,000 m\[AAcute]s que el doble de \
lo que tiene Pedro; Jos\[EAcute] tiene la mitad de lo que tienen Pedro y Luc\
\[IAcute]a juntos. Entre los tres quieren comprar un regalo a sus padres que \
tiene un costo de $200,000, \[DownQuestion]les alcanza? En caso afirmativo, \
\[DownQuestion]cu\[AAcute]nto les sobra?, en caso negativo, \[DownQuestion]cu\
\[AAcute]nto les falta?.\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"b9982893-1a40-4665-ac05-d299791e8575"],

Cell[TextData[{
 "Pedro aporta ",
 Cell[BoxData[
  FormBox["30000", TraditionalForm]],ExpressionUUID->
  "5bb041e6-f7e6-424d-b741-2449e830d9b1"],
 ",\nLuc\[IAcute]a aporta ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", "30000", ")"}]}], "+", "28000"}], "=", "88000"}], 
   TraditionalForm]],ExpressionUUID->"d825b616-2161-43be-bb4b-53e5944e71cf"],
 ",\nJos\[EAcute] aporta ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"30000", "+", "88000"}], ")"}], " ", "\[Divide]", "2"}], "=", 
    "59000"}], TraditionalForm]],ExpressionUUID->
  "15612359-6449-430a-95e2-6d507568836f"],
 ",\nEn total re\[UAcute]nen ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"30000", "+", "88000", "+", "59000"}], "=", "177000"}], 
   TraditionalForm]],ExpressionUUID->"285f73c4-123c-42fe-99e2-6d7c22ee215f"],
 ", por tanto, no les alcanza para el regalo.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"177000", "-", "200000"}], "=", 
    RowBox[{"-", "23000"}]}], TraditionalForm]],ExpressionUUID->
  "0d9ee8ee-5121-417b-972f-2b5323e070df"],
 ", faltar\[IAcute]a $",
 Cell[BoxData[
  FormBox["23000", TraditionalForm]],ExpressionUUID->
  "0284a327-cfe9-451f-9d07-0a77609703b3"],
 "."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"81710567-86f1-462e-9b6f-2b3e407ab091"],

Cell["\<\
Mar\[IAcute]a compr\[OAcute] a cr\[EAcute]dito un vestido que le \
cost\[OAcute] $427,000. Realiz\[OAcute] un primer abono de $140,000 a los \
quince d\[IAcute]as. En la siguiente quincena abon\[OAcute] $53,000 y a los \
otros quince d\[IAcute]as, abon\[OAcute] $78,500. Cuando fue a cancelar el \
saldo pendiente, Mar\[IAcute]a llevaba $200,000 y, al llegar al \
almac\[EAcute]n, le gust\[OAcute] una sofisticada blusa blanca, que no dud\
\[OAcute] en comprar.  Si al salir del almac\[EAcute]n, Mar\[IAcute]a qued\
\[OAcute] debiendo $63,000 y solo le quedaron $15,200, \[DownQuestion]cu\
\[AAcute]nto cost\[OAcute] la blusa?\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"9d1d2ce7-2c36-41b2-ba32-40ed4972a3d7"],

Cell[TextData[{
 "Deuda por el costo del vestido: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "427000"}], TraditionalForm]],ExpressionUUID->
  "01e5314e-a85e-423b-9a27-f4cbd845b999"],
 "\nDeuda a los quince d\[IAcute]as: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "427000"}], "+", "140000"}], "=", 
    RowBox[{"-", "287000"}]}], TraditionalForm]],ExpressionUUID->
  "d2a3d4bd-3bf6-422c-9956-c620f272e177"],
 "\nDeuda al mes: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "287000"}], "+", "53000"}], "=", 
    RowBox[{"-", "234000"}]}], TraditionalForm]],ExpressionUUID->
  "41cb4d13-5c3b-4ca4-ad5f-2884751d58ff"],
 "\nDeuda al mes y medio: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "234000"}], "+", "78500"}], "=", 
    RowBox[{"-", "155500"}]}], TraditionalForm]],ExpressionUUID->
  "0e6f313e-5810-46db-972a-9c579b7dde3e"],
 "\nSaldo pendiente: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "155500"}], TraditionalForm]],ExpressionUUID->
  "3dc8fa52-b990-4336-bc2f-3a65ea3abd28"],
 "\nDinero que llevaba Mar\[IAcute]a: ",
 Cell[BoxData[
  FormBox["200000", TraditionalForm]],ExpressionUUID->
  "9f05e165-968b-40fb-97f2-409d0a85f143"],
 "\nDinero que le queda despu\[EAcute]s de cancelar el vestido: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "155500"}], "+", "200000"}], "=", "44500"}], 
   TraditionalForm]],ExpressionUUID->"38564567-8021-418b-b1a7-3fa8f149a5d9"],
 "\nDinero que le queda al salir de la tienda: ",
 Cell[BoxData[
  FormBox["15200", TraditionalForm]],ExpressionUUID->
  "5349dcae-f56f-4293-aad7-8c12d4d8f594"],
 "\nDinero que abona a la blusa: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"44500", "-", "15200"}], "=", "29300"}], TraditionalForm]],
  ExpressionUUID->"976ee358-5735-45bb-860a-62dbcb431ca0"],
 ".\nCosto de la blusa: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"29300", "+", "63000"}], "=", "92300"}], TraditionalForm]],
  ExpressionUUID->"5af77e42-0a29-4ef2-806e-b7394f36962b"],
 "\nLa blusa cost\[OAcute] $92,300."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"0e3938dc-9c48-4bd5-818a-cf14af7e12aa"],

Cell["\<\
Ana abre una cuenta de ahorros con $1,250,000. El lunes retira $435,000, el \
martes consigna $285,000, el mi\[EAcute]rcoles consigna $145,000 y el jueves \
intenta retirar $1,850,000. \[DownQuestion]Puede hacer ese retiro? \
\[DownQuestion]Por qu\[EAcute]?\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"0118fbf2-937d-4305-afe0-6b949f4937b9"],

Cell[TextData[{
 "Abre la cuenta, tiene un saldo de +",
 Cell[BoxData[
  FormBox["1250000", TraditionalForm]],ExpressionUUID->
  "025cc799-31bf-4ccf-837f-640ab45aef77"],
 ",\nlunes retira:  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "435.000"}], TraditionalForm]],ExpressionUUID->
  "c6f61c85-b343-47f4-9a09-f23556d50b5f"],
 ", nuevo saldo: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1250000", "-", "435000"}], "=", "815000"}], TraditionalForm]],
  ExpressionUUID->"b1065eaa-f8b1-4fdf-b6fb-30d201057c46"],
 ",\nmartes consigna: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", "285000"}], TraditionalForm]],ExpressionUUID->
  "7f2bef3c-268f-4c1e-86f5-3b1a853e044b"],
 ", nuevo saldo: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"815000", "+", "285000"}], "=", "1100000"}], TraditionalForm]],
  ExpressionUUID->"b90dfda0-61a7-440f-9723-00f21863da4d"],
 ",\nmi\[EAcute]rcoles consigna: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", "145000"}], TraditionalForm]],ExpressionUUID->
  "bcc776f6-6769-4eb2-b3c3-5059b9fd00cb"],
 ", nuevo saldo: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1100000", "+", "145000"}], "=", "1245000"}], TraditionalForm]],
  ExpressionUUID->"7f0fe30a-b588-45d4-9c38-e4c71363c921"],
 ",\njueves intenta retirar: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "1850000"}], TraditionalForm]],ExpressionUUID->
  "69ab5eb2-2bfa-4179-9617-0c08c6e659d0"],
 ", no puede pues: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1245000", "-", "1850000"}], "=", 
    RowBox[{"-", "605000"}]}], TraditionalForm]],ExpressionUUID->
  "cc76c70d-052e-488a-be1a-32d118bc2e90"],
 "\nNo puede retirar ya que le har\[IAcute]an falta $605,000."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"a4a7f8dd-48fa-4b82-ae44-ef0311cdc1bf"],

Cell["\<\
El domingo, hacia las 8 de la ma\[NTilde]ana, la temperatura ambiente era de \
14 \[Degree]C. A las 10 a.m. hab\[IAcute]a subido 6 \[Degree]C la \
temperatura. A las 4 p.m. la temperatura descendi\[OAcute] 22 \[Degree]C\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"71fba268-d6c5-45c1-87c3-1fb856b225d5"],

Cell["\[DownQuestion]Cu\[AAcute]l era la temperatura a las 4 p.m.?", \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"fe7eeb62-1d2b-41dd-9e55-d0dadcc00a3d"],

Cell[TextData[{
 "Temperatura a las 8 a.m: 14 \[Degree]C.\nTemperatura a las 10 a.m: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"14", "+", "6"}], "=", "20"}], TraditionalForm]],ExpressionUUID->
  "b8c35311-99f5-4a27-81bc-573db4d943cc"],
 ".\nTemperatura a las 4 p.m: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"20", "-", "22"}], "=", 
    RowBox[{"-", "2"}]}], TraditionalForm]],ExpressionUUID->
  "99122aa2-3c8d-4e88-932e-6c8027c499e2"],
 ".\nA las 4 de la tarde, la temperatura es de 2 \[Degree]C bajo cero."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"92d40734-ed99-4bb2-84b6-901a1df0e557"],

Cell["\<\
Si a las 6 p.m. la temperatura es de 4 \[Degree]C, \
\[DownQuestion]cu\[AAcute]l fue el movimiento de la temperatura entre las 4 \
p.m. y las 6 p.m.?\
\>", "SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"c8e3534f-5188-4a50-b7a6-64fda85c1016"],

Cell[TextData[{
 "A las 4 p.m la temperatura es de -2 \[Degree]C, para llegar a la \
temperatura de las 6 p.m.  que es de 4 \[Degree]C, se debe encontrar la \
\[OpenCurlyDoubleQuote]distancia\[CloseCurlyDoubleQuote] que hay desde -2 \
hasta 4, es decir los valores absolutos: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"4", "+", "2"}], "=", "6"}], TraditionalForm]],ExpressionUUID->
  "c0b0b91e-f4bc-403f-b885-18182eb23da6"],
 ", el movimiento de temperatura en ese rango de tiempo es de 6 \[Degree]C "
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"ab3331fc-3ef8-4485-be5e-28993c667d6b"],

Cell["\<\
Sal\[IAcute] de mi apartamento y baj\[EAcute] 4 pisos para encontrarme con mi \
hija. Subimos 7 pisos y llegamos al apartamento de mi hermana que vive en el \
piso 13. \[DownQuestion]En qu\[EAcute] piso queda mi apartamento?\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"ffaef68f-3c79-43f3-986f-985de4bf6c1c"],

Cell[TextData[{
 "Sal\[IAcute] del apartamento, baj\[EAcute] 4 pisos, es decir estoy a -4 de \
mi apartamento,\nsubimos 7 pisos, es decir, estoy a ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], "+", "7"}], "=", "3"}], TraditionalForm]],
  ExpressionUUID->"3997fdd3-6617-4baa-9106-158e6e5e1430"],
 " pisos de mi apartamento,\nmi hermana vive a 3 pisos de mi apartamento, \
luego ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"13", "-", "3"}], "=", "10"}], TraditionalForm]],ExpressionUUID->
  "e0dd6d81-512b-472d-9e00-43d71e063b4a"],
 ", mi apartamento queda en el piso d\[EAcute]cimo."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"8f3d7e21-a0ef-42ca-9453-79cb59654f56"],

Cell["\<\
Un accionista compra 250 acciones a $150,000 cada una. Al pasar el primer \
mes, las acciones se encuentran a un valor de $119,000 cada una. En ese \
momento, \[DownQuestion]a cu\[AAcute]nto asciende la p\[EAcute]rdida del \
accionista?\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10005.},ExpressionUUID->"dd140f4d-3502-45c5-ae76-c8193411ed6c"],

Cell[TextData[{
 "Precio de compra de acci\[OAcute]n: ",
 Cell[BoxData[
  FormBox["150000", TraditionalForm]],ExpressionUUID->
  "91a9fc6d-8d9a-4336-8c7a-2649a6b733e8"],
 ",\nPrecio de acci\[OAcute]n despu\[EAcute]s de un mes: ",
 Cell[BoxData[
  FormBox["119000", TraditionalForm]],ExpressionUUID->
  "8feedba3-512a-44ef-ac41-6b1a577acb90"],
 ",\nP\[EAcute]rdida por cada acci\[OAcute]n: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"150000", "-", "119000"}], "=", "31000"}], TraditionalForm]],
  ExpressionUUID->"8c48b799-6d1d-41ad-b137-ceaff52abe19"],
 ".\nTotal de p\[EAcute]rdida: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"31000", 
     RowBox[{"(", "250", ")"}]}], "=", "7750000"}], TraditionalForm]],
  ExpressionUUID->"5bf40abc-b371-4afa-ad4a-647fbc3ba1de"],
 "."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10005.},ExpressionUUID->"f8752e98-3c81-49b3-8e77-4d64f013b236"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ". N\[UAcute]meros racionales"
}], "Chapter",ExpressionUUID->"09da38fa-55ac-47fa-8c33-a6ba3d43bcb1"],

Cell[CellGroupData[{

Cell["Un poco de historia...", "Subchapter",ExpressionUUID->"9a7d07df-a6e8-4849-a63d-4e921f493230"],

Cell[TextData[{
 "Indudablemente, los babil\[OAcute]nicos dejaron su legado mediante el uso \
del sistema de numeraci\[OAcute]n sexagesimal, base que permit\[IAcute]a un \
gran n\[UAcute]mero de divisores y as\[IAcute] mismo de fracciones que daban \
como resultado un n\[UAcute]mero entero. A\[UAcute]n se conservan algunas \
fracciones utilizadas por ellos, como por ejemplo, 1/2 d\[IAcute]a (medio d\
\[IAcute]a), as\[IAcute] como tambi\[EAcute]n se mantiene el sistema horario \
y las medidas angulares asociadas (por ejemplo son las dos y cuarto 2",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "4"], TraditionalForm]],ExpressionUUID->
  "b95d092a-5519-4cc1-8056-c0e8243bc8a0"],
 "). \n\nPara los Pitag\[OAcute]ricos, a toda relaci\[OAcute]n entre \
magnitudes deb\[IAcute]a corresponder un n\[UAcute]mero o una \
relaci\[OAcute]n entre ellos, as\[IAcute] se originaron los racionales \
positivos y aunque nunca le dieron el estatus de n\[UAcute]mero en sus \
reflexiones te\[OAcute]ricas, si los usaban como n\[UAcute]meros en sus \
aplicaciones en el comercio.\n\nEntre los griegos se encuentran dos \
personajes que marcan la historia por sus grandes aportes a la noci\[OAcute]n \
de fracci\[OAcute]n. Euclides y Pit\[AAcute]goras. Euclides en sus libros V, \
VII y VIII define la fracci\[OAcute]n como una raz\[OAcute]n entre magnitudes \
homog\[EAcute]neas y establece algunas propiedades de \[EAcute]sta, en tanto \
que Pit\[AAcute]goras relaciona la fracci\[OAcute]n con la m\[UAcute]sica. No \
se puede olvidar que fue la escuela pitag\[OAcute]rica qui\[EAcute]n trabaj\
\[OAcute] con razones conmensurables y con razones inconmensurables, dando \
origen a los n\[UAcute]meros irracionales. As\[IAcute], la teor\[IAcute]a de \
las proporciones se centr\[OAcute] en mostrar la armon\[IAcute]a \
c\[OAcute]smica mediante el establecimiento de razones num\[EAcute]ricas \
entre cantidades discretas que les permit\[IAcute]an establecer proporciones.\
\n\nEl primero en trabajar sobre la definici\[OAcute]n de n\[UAcute]meros \
racionales y la deducci\[OAcute]n de todas sus propiedades fue Martin Ohm \
hacia el a\[NTilde]o 1822."
}], "Resumen",ExpressionUUID->"92373a9d-8e16-4c3d-9094-b37635588367"]
}, Closed]],

Cell[CellGroupData[{

Cell["Situaci\[OAcute]n: elaboraci\[OAcute]n de un cartel", "Subchapter",ExpressionUUID->"04ea1b47-8681-4362-9c48-d182b01c7738"],

Cell[TextData[{
 "Para la clase de matem\[AAcute]ticas, ",
 "Sandra",
 " debe presentar un cartel, el cual se debe dividir en ",
 StyleBox["tres partes de igual \[AAcute]rea",
  FontWeight->"Bold"],
 " y en cada una de ellas debe realizar actividades puntuales que se ir\
\[AAcute]n asignando m\[AAcute]s adelante."
}], "Text",ExpressionUUID->"267b656e-f67e-41fd-ba27-9a45eb4c71bb"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Problema ",
 
 CounterBox["Section"]
}], "Section",ExpressionUUID->"88bb9f53-5b26-458d-b670-1fea1119408d"],

Cell[TextData[{
 "La primera tarea que se propone es trazar un margen que encierre un \
\[AAcute]rea correspondiente al ",
 Cell[BoxData[
  FormBox[
   RowBox[{"72", "%"}], TraditionalForm]],ExpressionUUID->
  "19f5beec-93db-41d8-a68f-84c5d831779e"],
 " del pliego de cartulina y dividir el \[AAcute]rea encerrada en tres \
\[AAcute]reas iguales.\nPara trazar el margen, Sandra sabe que una de las \
formas m\[AAcute]s sencillas es dibujar un rect\[AAcute]ngulo cuya \
\[AAcute]rea encerrada sea el ",
 Cell[BoxData[
  FormBox[
   RowBox[{"72", "%"}], TraditionalForm]],ExpressionUUID->
  "5fca4cb6-515c-4057-b64c-5d4a40a580af"],
 " del pliego. Interact\[UAcute]e con el siguiente recurso para identificar \
una posible margen rectangular, note c\[OAcute]mo la respuesta ",
 StyleBox["no es \[UAcute]nica",
  FontWeight->"Bold"]
}], "Text",ExpressionUUID->"e4cc85fb-e7df-4034-9f57-feb2f8ced15a"],

Cell[BoxData[
 FormBox[
  DynamicModuleBox[{$CellContext`rojo$$ = RGBColor[
   0.58, 0.09, 0.16], $CellContext`azul$$ = RGBColor[0, 
    Rational[69, 256], 
    Rational[31, 64]], $CellContext`verde$$ = RGBColor[
    Rational[103, 128], 
    Rational[105, 128], 
    Rational[27, 256]], $CellContext`fuente$$ = 
   "Gabriola", $CellContext`tama$$ = 30, $CellContext`anc$$ = 
   775, $CellContext`alto$$ = 350, $CellContext`tam$$ = 
   20, $CellContext`anchrow$$ = 356, $CellContext`loc1$$ = {4, 
   6}, $CellContext`loc2$$ = {86, 58}, $CellContext`area$$ = Dynamic[
    If[(100/(100 70)) 
      Abs[(Part[$CellContext`loc1$$, 1] - Part[$CellContext`loc2$$, 1]) (
         Part[$CellContext`loc1$$, 2] - Part[$CellContext`loc2$$, 2])] <= 100, 
     NumberForm[
     N[100/(100 70)] 
      Abs[(Part[$CellContext`loc1$$, 1] - Part[$CellContext`loc2$$, 1]) (
         Part[$CellContext`loc1$$, 2] - Part[$CellContext`loc2$$, 2])], {3, 
      1}], 100]]}, 
   TagBox[
    PanelBox[
     TagBox[GridBox[{
        {
         StyleBox[
          
          TemplateBox[{
           "\"El \[AAcute]rea encerrada es \[DoubleRightArrow]    \"",
            DynamicBox[
             ToBoxes[
              
              If[(100/(100 70)) 
                Abs[(Part[$CellContext`loc1$$, 1] - 
                   Part[$CellContext`loc2$$, 1]) (
                   Part[$CellContext`loc1$$, 2] - 
                   Part[$CellContext`loc2$$, 2])] <= 100, 
               NumberForm[
               N[100/(100 70)] 
                Abs[(Part[$CellContext`loc1$$, 1] - 
                   Part[$CellContext`loc2$$, 1]) (
                   Part[$CellContext`loc1$$, 2] - 
                   Part[$CellContext`loc2$$, 2])], {3, 1}], 100], 
              TraditionalForm]],"\" %\""},
           "Row",
           DisplayFunction->(FrameBox[
             RowBox[{
               TemplateSlotSequence[1, "\[InvisibleSpace]"]}], FrameStyle -> 
             Automatic]& ),
           InterpretationFunction->(RowBox[{"Row", "[", 
              RowBox[{
                RowBox[{"{", 
                  TemplateSlotSequence[1, ","], "}"}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]& )], 
          "Multimedia",
          StripOnInput->False,
          FontSize->25]},
        {
         TagBox[GridBox[{
            {
             RowBox[{
              GraphicsBox[{
                {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
                 RectangleBox[{0, 0}, {100, 70}]}, 
                {RGBColor[1, 0, 0], AbsolutePointSize[7], 
                 PointBox[Dynamic[$CellContext`loc1$$]], 
                 PointBox[Dynamic[$CellContext`loc2$$]], 
                 {RGBColor[0, 1, 0], Opacity[0.5], 
                  RectangleBox[Dynamic[$CellContext`loc1$$], 
                   Dynamic[$CellContext`loc2$$]], 
                  LocatorBox[
                   Dynamic[$CellContext`loc1$$, ($CellContext`loc1$$ = 
                    Round[#])& ], None], 
                  LocatorBox[
                   Dynamic[$CellContext`loc2$$, ($CellContext`loc2$$ = 
                    Round[#])& ], None], 
                  StyleBox[{},
                   PlotRange -> {{0, 118.9}, {0, 84.1}}]}}, {
                 LineBox[{
                  Dynamic[{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc2$$, 2] - 2}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc2$$, 2] - 2}]}], 
                 LineBox[{
                  Dynamic[{
                    Part[$CellContext`loc2$$, 1] - 2, 
                    Part[$CellContext`loc2$$, 2]}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1] - 2, 
                    Part[$CellContext`loc1$$, 2]}]}], 
                 StyleBox[InsetBox[
                   DynamicBox[ToBoxes[
                    Abs[
                    Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], TraditionalForm],
                    ImageSizeCache->{22., {0., 15.}}], 
                   Dynamic[{(Part[$CellContext`loc1$$, 1] + 
                    Part[$CellContext`loc2$$, 1])/2, 
                    Part[$CellContext`loc2$$, 2]}], {0, 1}],
                  StripOnInput->False,
                  FontSize->20,
                  Background->RGBColor[
                    Rational[45, 128], 
                    Rational[217, 256], 
                    Rational[1, 2]]], 
                 StyleBox[InsetBox[
                   DynamicBox[ToBoxes[
                    Abs[
                    Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]], TraditionalForm],
                    ImageSizeCache->{22., {0., 15.}}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1], (
                    Part[$CellContext`loc1$$, 2] + 
                    Part[$CellContext`loc2$$, 2])/2}], {1, 0}],
                  StripOnInput->False,
                  FontSize->20,
                  Background->RGBColor[
                    Rational[45, 128], 
                    Rational[217, 256], 
                    Rational[1, 2]]]}},
               ImagePadding->{{0., 0.}, {0., 0.}},
               ImageSize->{600, 420},
               PlotRange->{{0., 100.}, {0., 70.}},
               PlotRangePadding->Automatic], " ", 
              RotationBox[
               ItemBox[
                StyleBox[
                 
                 TemplateBox[{
                  "\"\[DoubleLongLeftArrow]        ancho del pliego:        \
70 cm        \[DoubleLongRightArrow]\""},
                  "RowDefault"],
                 StripOnInput->False,
                 LineColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 FrontFaceColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 BackFaceColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 GraphicsColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 FontFamily->"Gabriola",
                 FontSize->25,
                 FontColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]]],
                StripOnInput->False],
               BoxRotation->1.5707963267948966`]}], ""},
            {
             ItemBox[
              StyleBox[
               
               TemplateBox[{
                "\"\[DoubleLongLeftArrow]        largo del pliego:        100 \
cm        \[DoubleLongRightArrow]\""},
                "RowDefault"],
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               FrontFaceColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               BackFaceColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               GraphicsColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               FontFamily->"Gabriola",
               FontSize->25,
               FontColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]]],
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   DynamicModuleValues:>{}], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"e75530f8-1fa5-4370-815a-be0461272420"],

Cell[" \[DownQuestion]C\[OAcute]mo puede Sandra trazar este margen ?", \
"Ejercicio",ExpressionUUID->"d39c0916-847a-4d42-ad0f-6a662c6b23a1"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`framePane$$, $CellContext`textPane$$, \
$CellContext`tabImage$$, $CellContext`tabText$$, $CellContext`style1$$, \
$CellContext`style2$$, $CellContext`style3$$, $CellContext`color1$$ = 
    RGBColor[0, 0, 
     Rational[1, 2]], $CellContext`color2$$ = RGBColor[
    0.2, 0.08, 0.28], $CellContext`color3$$ = RGBColor[
    0.796078431372549, 0.07058823529411765, 0.], $CellContext`tama1$$ = 
    15, $CellContext`tama2$$ = 18, $CellContext`tama3$$ = 
    25, $CellContext`font1$$ = "Georgia", $CellContext`page1$$ = 
    1, $CellContext`page2$$ = 1, $CellContext`page3$$ = 
    1, $CellContext`page4$$ = 1, $CellContext`page5$$ = 
    1, $CellContext`titlePopUp$$, $CellContext`textPopUp$$, \
$CellContext`panelWidth$$ = 500, $CellContext`bodyWidth$$ = 610}, 
    InterpretationBox[Cell[TextData[{
      "Recuerde: el \[AAcute]rea de una figura plana depende de su forma, \n\
si desea identificarlas hacer clic en el enlace \[DoubleRightArrow]",
      "   ",
      Cell[BoxData[
       FormBox[
        TagBox[
         ButtonBox[
          
          InterpretationBox[Cell[
           "  \[CapitalAAcute]rea  ", "Text",ExpressionUUID->
            "e083c108-a755-409f-abb7-d6037a3a92f4"],
           TextCell["  \[CapitalAAcute]rea  ", "Text"]],
          Appearance->Automatic,
          ButtonFunction:>CreateDialog[{
             Pane[
              Column[{
                $CellContext`titlePopUp$$[
                "\!\(\*\nStyleBox[\"\[CapitalAAcute]rea\",\n\
FontSlant->\"Italic\",\nFontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*\nStyleBox[\" \",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*\n\
StyleBox[\"de\",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*\n\
StyleBox[\" \",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*\n\
StyleBox[\"figuras\",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*\n\
StyleBox[\" \",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*\n\
StyleBox[\"planas\",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                Style[
                 Grid[{{
                    $CellContext`textPopUp$$[
                    "\!\(\*\nStyleBox[\"Nombre\",\nFontWeight->\"Bold\",\n\
FontSlant->\"Italic\"]\)"], 
                    $CellContext`textPopUp$$[
                    "\!\(\*\nStyleBox[\"Figura\",\nFontWeight->\"Bold\",\n\
FontSlant->\"Italic\"]\)"], 
                    $CellContext`textPopUp$$[
                    "\!\(\*\nStyleBox[\"F\[OAcute]rmula\",\n\
FontWeight->\"Bold\",\nFontSlant->\"Italic\"]\)"], 
                    $CellContext`textPopUp$$[
                    "\!\(\*\nStyleBox[\"Ejemplo\",\nFontWeight->\"Bold\",\n\
FontSlant->\"Italic\"]\)"]}, {
                    $CellContext`textPopUp$$[
                    "\!\(\*\nStyleBox[\"Tri\[AAcute]ngulo\",\n\
FontSlant->\"Italic\"]\)"], 
                    Image[
                    Graphics[{
                    RGBColor[0, 0, 1], 
                    Opacity[0.4], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Thickness[Large]}], 
                    Triangle[{{0, 0}, {4, 0}, {1, 2}}], {
                    GrayLevel[0], 
                    Opacity[1], 
                    Dashing[{Small, Small}], 
                    Line[{{1, 0}, {1, 2}}], 
                    Inset[
                    Style["h", FontSize -> 20], {1.1, 1}, {-1, 0}], 
                    Inset[
                    Style["b", FontSize -> 20], {2, 0}, {0, -1}]}}]], 
                    $CellContext`textPopUp$$[
                    " \!\(TraditionalForm\`\(\(A\)\(:\)\)\) \[AAcute]rea,\n\!\
\(TraditionalForm\`\(\(b\)\(:\)\)\) base,\n\
\!\(TraditionalForm\`\(\(h\)\(:\)\)\) altura,\n\!\(TraditionalForm\`A = \
\*FractionBox[\(b\[Times]h\), \(2\)]\)"], 
                    $CellContext`textPopUp$$[
                    "Si en un tri\[AAcute]ngulo\n\!\(TraditionalForm\`b = \
12\\ cm\) y \!\(TraditionalForm\`h = 5  cm\),\nentonces\n\
\!\(TraditionalForm\`A = \(\*FractionBox[\(12\\ 5\), \(2\)] = 30\)\),\n\
\!\(TraditionalForm\`A = 30\\ \*SuperscriptBox[\(cm\), \(2\)]\)"]}, {
                    $CellContext`textPopUp$$[
                    "\!\(\*\nStyleBox[\"Cuadrado\",\n\
FontSlant->\"Italic\"]\)"], 
                    Image[
                    Graphics[{
                    RGBColor[0, 0, 1], 
                    Opacity[0.4], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Thickness[Large]}], 
                    Rectangle[{0, 0}, {4, 4}], {
                    GrayLevel[0], 
                    Opacity[1], 
                    Inset[
                    Style["l", FontSize -> 15, FontSlant -> Italic], {2, 0}, {
                    0, -1}]}}], ImageSize -> {120, 120}], 
                    $CellContext`textPopUp$$[
                    " \!\(TraditionalForm\`A\): \[AAcute]rea\n\
\!\(TraditionalForm\`l\): lado\n\!\(TraditionalForm\`A = \*SuperscriptBox[\(l\
\), \(2\)]\)"], 
                    $CellContext`textPopUp$$[
                    "Si el lado \!\(TraditionalForm\`l\) de un cuadrado\nmide \
\!\(TraditionalForm\`7\\ m\), entonces\n\!\(TraditionalForm\`A = \
\(\*SuperscriptBox[\(7\), \(2\)] = 49\)\),\n\!\(TraditionalForm\`A = 49\\ \
\*SuperscriptBox[\(m\), \(2\)]\)"]}, {
                    $CellContext`textPopUp$$[
                    "\!\(\*\nStyleBox[\"Rect\[AAcute]ngulo\",\n\
FontSlant->\"Italic\"]\)"], 
                    Image[
                    Graphics[{
                    RGBColor[0, 0, 1], 
                    Opacity[0.4], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Thickness[Large]}], 
                    Rectangle[{0, 0}, {4, 2}], {
                    GrayLevel[0], 
                    Opacity[1], 
                    Inset[
                    Style["h", FontSize -> 20], {0.1, 1}, {-1, 0}], 
                    Inset[
                    Style["b", FontSize -> 20], {2, 0}, {0, -1}]}}]], 
                    $CellContext`textPopUp$$[
                    " \!\(TraditionalForm\`A\): \[AAcute]rea\n\
\!\(TraditionalForm\`b\): base\n\!\(TraditionalForm\`h\): altura\n\
\!\(TraditionalForm\`A = b\[Cross]h\)"], 
                    $CellContext`textPopUp$$[
                    "Si en un rect\[AAcute]ngulo\n\!\(TraditionalForm\`b = 10\
\\ cm\) y \!\(TraditionalForm\`h = 4  cm\),\nentonces\n\!\(TraditionalForm\`A \
= \(10\\ 4 = 40\)\),\n\!\(TraditionalForm\`A = 40\\ \*SuperscriptBox[\(cm\), \
\(2\)]\)"]}, {
                    $CellContext`textPopUp$$[
                    "\!\(\*\nStyleBox[\"C\[IAcute]rculo\",\n\
FontSlant->\"Italic\"]\)"], 
                    Image[
                    Graphics[{
                    RGBColor[0, 0, 1], 
                    Opacity[0.4], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Thickness[Large]}], 
                    Disk[{0, 0}], {
                    GrayLevel[0], 
                    Opacity[1], 
                    Dashing[{Small, Small}], 
                    Line[{{0, 0}, {0.7, 0.714142842854285}}], 
                    Inset[
                    Style["r", FontSize -> 15, FontSlant -> Italic], {0.5, 
                    0.5}, {0, -1}]}}], ImageSize -> {120, 120}], 
                    $CellContext`textPopUp$$[
                    " \!\(TraditionalForm\`A\): \[AAcute]rea\n\
\!\(TraditionalForm\`r\): radio\n\!\(TraditionalForm\`A = \[Pi]\\ \
\*SuperscriptBox[\(r\), \(2\)]\)"], 
                    $CellContext`textPopUp$$[
                    "Un c\[IAcute]rculo de radio \!\(TraditionalForm\`3\\ \
cm\)\ntiene como \[AAcute]rea:\n\!\(TraditionalForm\`A = \
\(\[Pi](\*SuperscriptBox[\(3\), \(2\)]) = 9  \[Pi]\)\),\n\
\!\(TraditionalForm\`A = 9  \[Pi]\\ \*SuperscriptBox[\(cm\), \(2\)]\)"]}}, 
                  Alignment -> Left, Frame -> All]]}], 
              ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
             Deployed -> True],
          Evaluator->Automatic,
          ImageSize->All,
          Method->"Preemptive"],
         MouseAppearanceTag["LinkHand"]], TraditionalForm]],ExpressionUUID->
       "38d31fb0-2eae-49af-a723-ea5334a8a421"]
     }], "Multimedia",ExpressionUUID->"f57d413e-e9cb-4813-9346-738de2cbf71b"],
     TextCell[
      Row[{
       "Recuerde: el \[AAcute]rea de una figura plana depende de su forma, \n\
si desea identificarlas hacer clic en el enlace \[DoubleRightArrow]", "   ", 
        MouseAppearance[
         Button[
          TextCell["  \[CapitalAAcute]rea  ", "Text"], 
          CreateDialog[{
            Pane[
             Column[{
               $CellContext`titlePopUp$$[
               "\!\(\*\nStyleBox[\"\[CapitalAAcute]rea\",\n\
FontSlant->\"Italic\",\nFontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*\nStyleBox[\" \",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*\n\
StyleBox[\"de\",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*\n\
StyleBox[\" \",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*\n\
StyleBox[\"figuras\",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*\n\
StyleBox[\" \",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*\n\
StyleBox[\"planas\",\nFontSlant->\"Italic\",\n\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
               Style[
                Grid[{{
                   $CellContext`textPopUp$$[
                   "\!\(\*\nStyleBox[\"Nombre\",\nFontWeight->\"Bold\",\n\
FontSlant->\"Italic\"]\)"], 
                   $CellContext`textPopUp$$[
                   "\!\(\*\nStyleBox[\"Figura\",\nFontWeight->\"Bold\",\n\
FontSlant->\"Italic\"]\)"], 
                   $CellContext`textPopUp$$[
                   "\!\(\*\nStyleBox[\"F\[OAcute]rmula\",\nFontWeight->\"Bold\
\",\nFontSlant->\"Italic\"]\)"], 
                   $CellContext`textPopUp$$[
                   "\!\(\*\nStyleBox[\"Ejemplo\",\nFontWeight->\"Bold\",\n\
FontSlant->\"Italic\"]\)"]}, {
                   $CellContext`textPopUp$$[
                   "\!\(\*\nStyleBox[\"Tri\[AAcute]ngulo\",\n\
FontSlant->\"Italic\"]\)"], 
                   Image[
                    Graphics[{
                    RGBColor[0, 0, 1], 
                    Opacity[0.4], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Thickness[Large]}], 
                    Triangle[{{0, 0}, {4, 0}, {1, 2}}], {
                    GrayLevel[0], 
                    Opacity[1], 
                    Dashing[{Small, Small}], 
                    Line[{{1, 0}, {1, 2}}], 
                    Inset[
                    Style["h", FontSize -> 20], {1.1, 1}, {-1, 0}], 
                    Inset[
                    Style["b", FontSize -> 20], {2, 0}, {0, -1}]}}]], 
                   $CellContext`textPopUp$$[
                   " \!\(TraditionalForm\`\(\(A\)\(:\)\)\) \[AAcute]rea,\n\
\!\(TraditionalForm\`\(\(b\)\(:\)\)\) base,\n\
\!\(TraditionalForm\`\(\(h\)\(:\)\)\) altura,\n\!\(TraditionalForm\`A = \
\*FractionBox[\(b\[Times]h\), \(2\)]\)"], 
                   $CellContext`textPopUp$$[
                   "Si en un tri\[AAcute]ngulo\n\!\(TraditionalForm\`b = 12\\ \
cm\) y \!\(TraditionalForm\`h = 5  cm\),\nentonces\n\!\(TraditionalForm\`A = \
\(\*FractionBox[\(12\\ 5\), \(2\)] = 30\)\),\n\!\(TraditionalForm\`A = 30\\ \
\*SuperscriptBox[\(cm\), \(2\)]\)"]}, {
                   $CellContext`textPopUp$$[
                   "\!\(\*\nStyleBox[\"Cuadrado\",\n\
FontSlant->\"Italic\"]\)"], 
                   Image[
                    Graphics[{
                    RGBColor[0, 0, 1], 
                    Opacity[0.4], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Thickness[Large]}], 
                    Rectangle[{0, 0}, {4, 4}], {
                    GrayLevel[0], 
                    Opacity[1], 
                    Inset[
                    Style["l", FontSize -> 15, FontSlant -> Italic], {2, 0}, {
                    0, -1}]}}], ImageSize -> {120, 120}], 
                   $CellContext`textPopUp$$[
                   " \!\(TraditionalForm\`A\): \[AAcute]rea\n\
\!\(TraditionalForm\`l\): lado\n\!\(TraditionalForm\`A = \*SuperscriptBox[\(l\
\), \(2\)]\)"], 
                   $CellContext`textPopUp$$[
                   "Si el lado \!\(TraditionalForm\`l\) de un cuadrado\nmide \
\!\(TraditionalForm\`7\\ m\), entonces\n\!\(TraditionalForm\`A = \
\(\*SuperscriptBox[\(7\), \(2\)] = 49\)\),\n\!\(TraditionalForm\`A = 49\\ \
\*SuperscriptBox[\(m\), \(2\)]\)"]}, {
                   $CellContext`textPopUp$$[
                   "\!\(\*\nStyleBox[\"Rect\[AAcute]ngulo\",\n\
FontSlant->\"Italic\"]\)"], 
                   Image[
                    Graphics[{
                    RGBColor[0, 0, 1], 
                    Opacity[0.4], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Thickness[Large]}], 
                    Rectangle[{0, 0}, {4, 2}], {
                    GrayLevel[0], 
                    Opacity[1], 
                    Inset[
                    Style["h", FontSize -> 20], {0.1, 1}, {-1, 0}], 
                    Inset[
                    Style["b", FontSize -> 20], {2, 0}, {0, -1}]}}]], 
                   $CellContext`textPopUp$$[
                   " \!\(TraditionalForm\`A\): \[AAcute]rea\n\
\!\(TraditionalForm\`b\): base\n\!\(TraditionalForm\`h\): altura\n\
\!\(TraditionalForm\`A = b\[Cross]h\)"], 
                   $CellContext`textPopUp$$[
                   "Si en un rect\[AAcute]ngulo\n\!\(TraditionalForm\`b = \
10\\ cm\) y \!\(TraditionalForm\`h = 4  cm\),\nentonces\n\
\!\(TraditionalForm\`A = \(10\\ 4 = 40\)\),\n\!\(TraditionalForm\`A = 40\\ \
\*SuperscriptBox[\(cm\), \(2\)]\)"]}, {
                   $CellContext`textPopUp$$[
                   "\!\(\*\nStyleBox[\"C\[IAcute]rculo\",\n\
FontSlant->\"Italic\"]\)"], 
                   Image[
                    Graphics[{
                    RGBColor[0, 0, 1], 
                    Opacity[0.4], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Thickness[Large]}], 
                    Disk[{0, 0}], {
                    GrayLevel[0], 
                    Opacity[1], 
                    Dashing[{Small, Small}], 
                    Line[{{0, 0}, {0.7, 0.714142842854285}}], 
                    Inset[
                    Style["r", FontSize -> 15, FontSlant -> Italic], {0.5, 
                    0.5}, {0, -1}]}}], ImageSize -> {120, 120}], 
                   $CellContext`textPopUp$$[
                   " \!\(TraditionalForm\`A\): \[AAcute]rea\n\
\!\(TraditionalForm\`r\): radio\n\!\(TraditionalForm\`A = \[Pi]\\ \
\*SuperscriptBox[\(r\), \(2\)]\)"], 
                   $CellContext`textPopUp$$[
                   "Un c\[IAcute]rculo de radio \!\(TraditionalForm\`3\\ cm\)\
\ntiene como \[AAcute]rea:\n\!\(TraditionalForm\`A = \
\(\[Pi](\*SuperscriptBox[\(3\), \(2\)]) = 9  \[Pi]\)\),\n\
\!\(TraditionalForm\`A = 9  \[Pi]\\ \*SuperscriptBox[\(cm\), \(2\)]\)"]}}, 
                 Alignment -> Left, Frame -> All]]}], 
             ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
            Deployed -> True], ImageSize -> All], "LinkHand"]}], 
      "Multimedia"]],
    DynamicModuleValues:>{{DownValues[$CellContext`framePane$$] = {HoldPattern[
           $CellContext`framePane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "Cuadro/Titulo", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPane$$] = {HoldPattern[
           $CellContext`textPane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "EmphasisText", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`style1$$] = {HoldPattern[
           $CellContext`style1$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style2$$] = {HoldPattern[
           $CellContext`style2$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style3$$] = {HoldPattern[
           $CellContext`style3$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`titlePopUp$$] = {HoldPattern[
           $CellContext`titlePopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama2$$, 
             FontFamily -> $CellContext`font1$$, $CellContext`color3$$, 
             Italic], "Text", LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPopUp$$] = {HoldPattern[
           $CellContext`textPopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama1$$, 
             FontFamily -> $CellContext`font1$$], "Text", LineIndent -> 0, 
            TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"be4b66bd-f23f-4146-a8a9-b6bb9feea1da"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`framePane$$, $CellContext`textPane$$, \
$CellContext`tabImage$$, $CellContext`tabText$$, $CellContext`style1$$, \
$CellContext`style2$$, $CellContext`style3$$, $CellContext`color1$$ = 
    RGBColor[0, 0, 
     Rational[1, 2]], $CellContext`color2$$ = RGBColor[
    0.2, 0.08, 0.28], $CellContext`color3$$ = RGBColor[
    0.796078431372549, 0.07058823529411765, 0.], $CellContext`tama1$$ = 
    15, $CellContext`tama2$$ = 18, $CellContext`tama3$$ = 
    25, $CellContext`font1$$ = "Georgia", $CellContext`page1$$ = 
    1, $CellContext`page2$$ = 1, $CellContext`page3$$ = 
    1, $CellContext`page4$$ = 1, $CellContext`page5$$ = 
    1, $CellContext`titlePopUp$$, $CellContext`textPopUp$$, \
$CellContext`panelWidth$$ = 750, $CellContext`bodyWidth$$ = 700}, 
    InterpretationBox[Cell[TextData[{
      "Si desea profundizar un poco sobre el concepto de porcentaje,\nhacer \
clic en el siguiente enlace \[DoubleRightArrow]",
      "   ",
      Cell[BoxData[
       FormBox[
        TagBox[
         ButtonBox[
          
          InterpretationBox[Cell[
           "  Porcentaje  ", "Text",ExpressionUUID->
            "3968c769-ec7a-44a9-bd08-2d9f0ed1c3fd"],
           TextCell["  Porcentaje  ", "Text"]],
          Appearance->Automatic,
          ButtonFunction:>CreateDialog[{
             Pane[
              Column[{
                $CellContext`titlePopUp$$[
                "\!\(\*StyleBox[\"N\[UAcute]meros\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"porcentajes\",FontSlant->\"Italic\
\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                $CellContext`textPopUp$$[
                "Cuando los racionales son utilizados como un \[IAcute]ndice \
comparativo entre dos cantidades de una magnitud (comparaci\[OAcute]n de \
situaciones) estamos hablando de razones. En este caso, la relaci\[OAcute]n \
es parte -\!\(\*StyleBox[\"parte\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"o\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"todo\",FontSlant->\"Italic\"]\)- \
todo. Los racionales como raz\[OAcute]n aparecen asociados a otros contextos, \
como los porcentajes."], 
                $CellContext`textPopUp$$[
                "En los porcentajes, esta relaci\[OAcute]n se define como la \
\!\(\*StyleBox[\"raz\[OAcute]n\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"entre\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"un\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"n\[UAcute]mero\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"100\",FontSlant->\"Italic\"]\), \
es decir, se pueden entender como el establecimiento de relaciones entre \
conjuntos, form\[AAcute]ndose subconjuntos de cien partes."], 
                $CellContext`textPopUp$$[
                "El porcentaje se puede representar de tres formas distintas, \
con el signo de porcentaje %, por ejemplo 90%, como un racional \
\!\(TraditionalForm\`\*FractionBox[\(n\), \(100\)]\), por ejemplo \
\!\(TraditionalForm\`\*FractionBox[\(90\), \(100\)]\) y como decimal, al \
realizar la divisi\[OAcute]n sobre 100, por ejemplo, \!\(TraditionalForm\`0.9\
\). En otras palabras, \!\(TraditionalForm\`90  % = \(\*FractionBox[\(90\), \
\(100\)] = 0\), 9\)."], 
                $CellContext`textPopUp$$[
                "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\):\n\n1. Encontrar el \!\(TraditionalForm\`70  %\) de \
\!\(TraditionalForm\`2100\)\n\
\!\(\*FormBox[GridBox[{{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\"70\", \
\"100\"], RowBox[{\"(\", \"2100\", \")\"}]}], \"=\", FractionBox[\"147000\", \
\"100\"]}]}\n      },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"=\", \
\"1470\"}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n2. Encontrar el \
\!\(TraditionalForm\`25  %\) de 2800\n\
\!\(\*FormBox[GridBox[{{RowBox[{GridBox[{{RowBox[{RowBox[{\"0.25\", \
RowBox[{\"(\", \"2800\", \")\"}]}], \"=\", FractionBox[\"70000\", \"100\"]}]}\
\n      },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"=\", \"700\"}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n3. \
De 300 estudiantes de una universidad, 140 son de ingenier\[IAcute]a. \
\[DownQuestion]Qu\[EAcute] porcentaje de los estudiantes son de ingenier\
\[IAcute]a?\nUna forma de solucionar este problema es encontrando la raz\
\[OAcute]n de estudiantes de ingenier\[IAcute]a y el total, es decir:\n\
\!\(TraditionalForm\`\*FractionBox[\(140\), \(300\)] = 0.4666\), la cual es \
la escritura decimal del porcentaje, es decir, equivale al \
\!\(TraditionalForm\`46.66  %\) aproximadamente.\n4. En el almac\[EAcute]n \
VENUS, todos los productos tienen el 35% de descuento sobre el tiquete que \
aparece en la prenda y que se hace efectivo en la caja. Si un vestido est\
\[AAcute] etiquetado con un precio de $267.000, \[DownQuestion]cu\[AAcute]nto \
se debe cancelar por \[EAcute]l?\nUna forma de solucionar es encontrar \
primero de cu\[AAcute]nto es el descuento:\nDescuento:\!\(TraditionalForm\`\(\
\(\\ \)\(0.35\\ \((267000)\) = 93450\)\)\)\nValor a \
cancelar:\!\(TraditionalForm\`\(\(\\ \)\(267000 - 93450 = 173550\)\)\) \
pesos."]}], 
              ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
             Deployed -> True],
          Evaluator->Automatic,
          ImageSize->All,
          Method->"Preemptive"],
         MouseAppearanceTag["LinkHand"]], TraditionalForm]],ExpressionUUID->
       "fc75967c-882e-4c39-9090-5711d665fe86"]
     }], "Multimedia",ExpressionUUID->"e9c30d4e-f346-4978-9665-d199b874f9de"],
     TextCell[
      Row[{
       "Si desea profundizar un poco sobre el concepto de porcentaje,\nhacer \
clic en el siguiente enlace \[DoubleRightArrow]", "   ", 
        MouseAppearance[
         Button[
          TextCell["  Porcentaje  ", "Text"], 
          CreateDialog[{
            Pane[
             Column[{
               $CellContext`titlePopUp$$[
               "\!\(\*StyleBox[\"N\[UAcute]meros\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"porcentajes\",FontSlant->\"Italic\
\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
               $CellContext`textPopUp$$[
               "Cuando los racionales son utilizados como un \[IAcute]ndice \
comparativo entre dos cantidades de una magnitud (comparaci\[OAcute]n de \
situaciones) estamos hablando de razones. En este caso, la relaci\[OAcute]n \
es parte -\!\(\*StyleBox[\"parte\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"o\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"todo\",FontSlant->\"Italic\"]\)- \
todo. Los racionales como raz\[OAcute]n aparecen asociados a otros contextos, \
como los porcentajes."], 
               $CellContext`textPopUp$$[
               "En los porcentajes, esta relaci\[OAcute]n se define como la \
\!\(\*StyleBox[\"raz\[OAcute]n\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"entre\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"un\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"n\[UAcute]mero\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"100\",FontSlant->\"Italic\"]\), \
es decir, se pueden entender como el establecimiento de relaciones entre \
conjuntos, form\[AAcute]ndose subconjuntos de cien partes."], 
               $CellContext`textPopUp$$[
               "El porcentaje se puede representar de tres formas distintas, \
con el signo de porcentaje %, por ejemplo 90%, como un racional \
\!\(TraditionalForm\`\*FractionBox[\(n\), \(100\)]\), por ejemplo \
\!\(TraditionalForm\`\*FractionBox[\(90\), \(100\)]\) y como decimal, al \
realizar la divisi\[OAcute]n sobre 100, por ejemplo, \!\(TraditionalForm\`0.9\
\). En otras palabras, \!\(TraditionalForm\`90  % = \(\*FractionBox[\(90\), \
\(100\)] = 0\), 9\)."], 
               $CellContext`textPopUp$$[
               "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\):\n\n1. Encontrar el \!\(TraditionalForm\`70  %\) de \
\!\(TraditionalForm\`2100\)\n\
\!\(\*FormBox[GridBox[{{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\"70\", \
\"100\"], RowBox[{\"(\", \"2100\", \")\"}]}], \"=\", FractionBox[\"147000\", \
\"100\"]}]}\n      },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"=\", \
\"1470\"}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n2. Encontrar el \
\!\(TraditionalForm\`25  %\) de 2800\n\
\!\(\*FormBox[GridBox[{{RowBox[{GridBox[{{RowBox[{RowBox[{\"0.25\", \
RowBox[{\"(\", \"2800\", \")\"}]}], \"=\", FractionBox[\"70000\", \"100\"]}]}\
\n      },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"=\", \"700\"}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n3. \
De 300 estudiantes de una universidad, 140 son de ingenier\[IAcute]a. \
\[DownQuestion]Qu\[EAcute] porcentaje de los estudiantes son de ingenier\
\[IAcute]a?\nUna forma de solucionar este problema es encontrando la raz\
\[OAcute]n de estudiantes de ingenier\[IAcute]a y el total, es decir:\n\
\!\(TraditionalForm\`\*FractionBox[\(140\), \(300\)] = 0.4666\), la cual es \
la escritura decimal del porcentaje, es decir, equivale al \
\!\(TraditionalForm\`46.66  %\) aproximadamente.\n4. En el almac\[EAcute]n \
VENUS, todos los productos tienen el 35% de descuento sobre el tiquete que \
aparece en la prenda y que se hace efectivo en la caja. Si un vestido est\
\[AAcute] etiquetado con un precio de $267.000, \[DownQuestion]cu\[AAcute]nto \
se debe cancelar por \[EAcute]l?\nUna forma de solucionar es encontrar \
primero de cu\[AAcute]nto es el descuento:\nDescuento:\!\(TraditionalForm\`\(\
\(\\ \)\(0.35\\ \((267000)\) = 93450\)\)\)\nValor a \
cancelar:\!\(TraditionalForm\`\(\(\\ \)\(267000 - 93450 = 173550\)\)\) \
pesos."]}], 
             ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
            Deployed -> True], ImageSize -> All], "LinkHand"]}], 
      "Multimedia"]],
    DynamicModuleValues:>{{DownValues[$CellContext`framePane$$] = {HoldPattern[
           $CellContext`framePane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "Cuadro/Titulo", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPane$$] = {HoldPattern[
           $CellContext`textPane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "EmphasisText", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`style1$$] = {HoldPattern[
           $CellContext`style1$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style2$$] = {HoldPattern[
           $CellContext`style2$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style3$$] = {HoldPattern[
           $CellContext`style3$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`titlePopUp$$] = {HoldPattern[
           $CellContext`titlePopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama2$$, 
             FontFamily -> $CellContext`font1$$, $CellContext`color3$$, 
             Italic], "Text", LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPopUp$$] = {HoldPattern[
           $CellContext`textPopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama1$$, 
             FontFamily -> $CellContext`font1$$], "Text", LineIndent -> 0, 
            TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"1810d36c-6970-4304-85d0-7191ce3ecbea"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"3c322ca8-db4c-4978-9207-489418c3705b"],

Cell[TextData[{
 "Lo primero que se debe saber es el \[AAcute]rea total del pliego ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["A", "c"], ")"}], TraditionalForm]],ExpressionUUID->
  "d8bc9f53-c909-4be9-9684-4f32d33f1b59"],
 ". Ella encuentra que las dimensiones son 100 cent\[IAcute]metros de largo \
por 70 cent\[IAcute]metros de ancho, como el \[AAcute]rea de un \
rect\[AAcute]ngulo es el producto del largo y el ancho se tiene que"
}], "Text",ExpressionUUID->"119770d8-452b-436f-820b-f3683e607556"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox["A", "c"], "=", 
         RowBox[{"l", "\[Times]", "a"}]}]},
       {
        RowBox[{
         SubscriptBox["A", "c"], "=", 
         RowBox[{"100", " ", "70"}]}]},
       {
        RowBox[{
         SubscriptBox["A", "c"], "=", 
         RowBox[{"7000", " ", 
          SuperscriptBox["cm", "2"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"56ea81f8-1711-4f0b-87b6-3b680d6915be"]], \
"Text",ExpressionUUID->"5f6cb209-762d-4dec-93af-da202cc5ed13"],

Cell[TextData[{
 "(Recuerde que la magnitud del \[AAcute]rea es ",
 StyleBox["cent\[IAcute]metros cuadrados",
  FontSlant->"Italic"],
 ")\nAhora, el \[AAcute]rea encerrada ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["A", "e"], ")"}], TraditionalForm]],ExpressionUUID->
  "f11c56be-c979-49fc-ad7d-e065c33afd05"],
 " es el ",
 Cell[BoxData[
  FormBox[
   RowBox[{"72", "%"}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"4893b0c8-727b-4aa2-af92-ff014334d60b"],
 StyleBox[" de ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"7000", " ", 
    SuperscriptBox["cm", "2"]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"96a80009-f7b0-4cc1-98b4-9aa2971a3c08"],
 ". Para poder entender la expresi\[OAcute]n es necesario investigar qu\
\[EAcute] es el porcentaje"
}], "Text",ExpressionUUID->"7146e24d-b498-457c-ab1c-dcdbb8d98c24"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`framePane$$, $CellContext`textPane$$, \
$CellContext`tabImage$$, $CellContext`tabText$$, $CellContext`style1$$, \
$CellContext`style2$$, $CellContext`style3$$, $CellContext`color1$$ = 
    RGBColor[0, 0, 
     Rational[1, 2]], $CellContext`color2$$ = RGBColor[
    0.2, 0.08, 0.28], $CellContext`color3$$ = RGBColor[
    0.796078431372549, 0.07058823529411765, 0.], $CellContext`tama1$$ = 
    15, $CellContext`tama2$$ = 18, $CellContext`tama3$$ = 
    25, $CellContext`font1$$ = "Georgia", $CellContext`page1$$ = 
    1, $CellContext`page2$$ = 1, $CellContext`page3$$ = 
    1, $CellContext`page4$$ = 1, $CellContext`page5$$ = 
    1, $CellContext`titlePopUp$$, $CellContext`textPopUp$$, \
$CellContext`panelWidth$$ = 750, $CellContext`bodyWidth$$ = 700}, 
    InterpretationBox[Cell[TextData[{
      "Si desea profundizar un poco sobre el concepto de porcentaje,\nhacer \
clic en el siguiente enlace \[DoubleRightArrow]",
      "   ",
      Cell[BoxData[
       FormBox[
        TagBox[
         ButtonBox[
          
          InterpretationBox[Cell[
           "  Porcentaje  ", "Text",ExpressionUUID->
            "cf9806aa-df0e-4360-8b4b-ab9277515f85"],
           TextCell["  Porcentaje  ", "Text"]],
          Appearance->Automatic,
          ButtonFunction:>CreateDialog[{
             Pane[
              Column[{
                $CellContext`titlePopUp$$[
                "\!\(\*StyleBox[\"N\[UAcute]meros\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"porcentajes\",FontSlant->\"Italic\
\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                $CellContext`textPopUp$$[
                "Cuando los racionales son utilizados como un \[IAcute]ndice \
comparativo entre dos cantidades de una magnitud (comparaci\[OAcute]n de \
situaciones) estamos hablando de razones. En este caso, la relaci\[OAcute]n \
es parte -\!\(\*StyleBox[\"parte\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"o\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"todo\",FontSlant->\"Italic\"]\)- \
todo. Los racionales como raz\[OAcute]n aparecen asociados a otros contextos, \
como los porcentajes."], 
                $CellContext`textPopUp$$[
                "En los porcentajes, esta relaci\[OAcute]n se define como la \
\!\(\*StyleBox[\"raz\[OAcute]n\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"entre\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"un\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"n\[UAcute]mero\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"100\",FontSlant->\"Italic\"]\), \
es decir, se pueden entender como el establecimiento de relaciones entre \
conjuntos, form\[AAcute]ndose subconjuntos de cien partes."], 
                $CellContext`textPopUp$$[
                "El porcentaje se puede representar de tres formas distintas, \
con el signo de porcentaje %, por ejemplo 90%, como un racional \
\!\(TraditionalForm\`\*FractionBox[\(n\), \(100\)]\), por ejemplo \
\!\(TraditionalForm\`\*FractionBox[\(90\), \(100\)]\) y como decimal, al \
realizar la divisi\[OAcute]n sobre 100, por ejemplo, \!\(TraditionalForm\`0.9\
\). En otras palabras, \!\(TraditionalForm\`90  % = \(\*FractionBox[\(90\), \
\(100\)] = 0\), 9\)."], 
                $CellContext`textPopUp$$[
                "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\):\n\n1. Encontrar el \!\(TraditionalForm\`70  %\) de \
\!\(TraditionalForm\`2100\)\n\
\!\(\*FormBox[GridBox[{{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\"70\", \
\"100\"], RowBox[{\"(\", \"2100\", \")\"}]}], \"=\", FractionBox[\"147000\", \
\"100\"]}]}\n      },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"=\", \
\"1470\"}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n2. Encontrar el \
\!\(TraditionalForm\`25  %\) de 2800\n\
\!\(\*FormBox[GridBox[{{RowBox[{GridBox[{{RowBox[{RowBox[{\"0.25\", \
RowBox[{\"(\", \"2800\", \")\"}]}], \"=\", FractionBox[\"70000\", \"100\"]}]}\
\n      },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"=\", \"700\"}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n3. \
De 300 estudiantes de una universidad, 140 son de ingenier\[IAcute]a. \
\[DownQuestion]Qu\[EAcute] porcentaje de los estudiantes son de ingenier\
\[IAcute]a?\nUna forma de solucionar este problema es encontrando la raz\
\[OAcute]n de estudiantes de ingenier\[IAcute]a y el total, es decir:\n\
\!\(TraditionalForm\`\*FractionBox[\(140\), \(300\)] = 0.4666\), la cual es \
la escritura decimal del porcentaje, es decir, equivale al \
\!\(TraditionalForm\`46.66  %\) aproximadamente.\n4. En el almac\[EAcute]n \
VENUS, todos los productos tienen el 35% de descuento sobre el tiquete que \
aparece en la prenda y que se hace efectivo en la caja. Si un vestido est\
\[AAcute] etiquetado con un precio de $267.000, \[DownQuestion]cu\[AAcute]nto \
se debe cancelar por \[EAcute]l?\nUna forma de solucionar es encontrar \
primero de cu\[AAcute]nto es el descuento:\nDescuento:\!\(TraditionalForm\`\(\
\(\\ \)\(0.35\\ \((267000)\) = 93450\)\)\)\nValor a \
cancelar:\!\(TraditionalForm\`\(\(\\ \)\(267000 - 93450 = 173550\)\)\) \
pesos."]}], 
              ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
             Deployed -> True],
          Evaluator->Automatic,
          ImageSize->All,
          Method->"Preemptive"],
         MouseAppearanceTag["LinkHand"]], TraditionalForm]],ExpressionUUID->
       "f500a1cf-7dde-4407-b1ee-0b49b1f1b58c"]
     }], "Multimedia",ExpressionUUID->"b0d1d482-7382-4fd4-9665-1a1a8ac84ce8"],
     TextCell[
      Row[{
       "Si desea profundizar un poco sobre el concepto de porcentaje,\nhacer \
clic en el siguiente enlace \[DoubleRightArrow]", "   ", 
        MouseAppearance[
         Button[
          TextCell["  Porcentaje  ", "Text"], 
          CreateDialog[{
            Pane[
             Column[{
               $CellContext`titlePopUp$$[
               "\!\(\*StyleBox[\"N\[UAcute]meros\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"porcentajes\",FontSlant->\"Italic\
\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
               $CellContext`textPopUp$$[
               "Cuando los racionales son utilizados como un \[IAcute]ndice \
comparativo entre dos cantidades de una magnitud (comparaci\[OAcute]n de \
situaciones) estamos hablando de razones. En este caso, la relaci\[OAcute]n \
es parte -\!\(\*StyleBox[\"parte\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"o\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"todo\",FontSlant->\"Italic\"]\)- \
todo. Los racionales como raz\[OAcute]n aparecen asociados a otros contextos, \
como los porcentajes."], 
               $CellContext`textPopUp$$[
               "En los porcentajes, esta relaci\[OAcute]n se define como la \
\!\(\*StyleBox[\"raz\[OAcute]n\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"entre\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"un\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"n\[UAcute]mero\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"100\",FontSlant->\"Italic\"]\), \
es decir, se pueden entender como el establecimiento de relaciones entre \
conjuntos, form\[AAcute]ndose subconjuntos de cien partes."], 
               $CellContext`textPopUp$$[
               "El porcentaje se puede representar de tres formas distintas, \
con el signo de porcentaje %, por ejemplo 90%, como un racional \
\!\(TraditionalForm\`\*FractionBox[\(n\), \(100\)]\), por ejemplo \
\!\(TraditionalForm\`\*FractionBox[\(90\), \(100\)]\) y como decimal, al \
realizar la divisi\[OAcute]n sobre 100, por ejemplo, \!\(TraditionalForm\`0.9\
\). En otras palabras, \!\(TraditionalForm\`90  % = \(\*FractionBox[\(90\), \
\(100\)] = 0\), 9\)."], 
               $CellContext`textPopUp$$[
               "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\):\n\n1. Encontrar el \!\(TraditionalForm\`70  %\) de \
\!\(TraditionalForm\`2100\)\n\
\!\(\*FormBox[GridBox[{{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\"70\", \
\"100\"], RowBox[{\"(\", \"2100\", \")\"}]}], \"=\", FractionBox[\"147000\", \
\"100\"]}]}\n      },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"=\", \
\"1470\"}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n2. Encontrar el \
\!\(TraditionalForm\`25  %\) de 2800\n\
\!\(\*FormBox[GridBox[{{RowBox[{GridBox[{{RowBox[{RowBox[{\"0.25\", \
RowBox[{\"(\", \"2800\", \")\"}]}], \"=\", FractionBox[\"70000\", \"100\"]}]}\
\n      },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"=\", \"700\"}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n3. \
De 300 estudiantes de una universidad, 140 son de ingenier\[IAcute]a. \
\[DownQuestion]Qu\[EAcute] porcentaje de los estudiantes son de ingenier\
\[IAcute]a?\nUna forma de solucionar este problema es encontrando la raz\
\[OAcute]n de estudiantes de ingenier\[IAcute]a y el total, es decir:\n\
\!\(TraditionalForm\`\*FractionBox[\(140\), \(300\)] = 0.4666\), la cual es \
la escritura decimal del porcentaje, es decir, equivale al \
\!\(TraditionalForm\`46.66  %\) aproximadamente.\n4. En el almac\[EAcute]n \
VENUS, todos los productos tienen el 35% de descuento sobre el tiquete que \
aparece en la prenda y que se hace efectivo en la caja. Si un vestido est\
\[AAcute] etiquetado con un precio de $267.000, \[DownQuestion]cu\[AAcute]nto \
se debe cancelar por \[EAcute]l?\nUna forma de solucionar es encontrar \
primero de cu\[AAcute]nto es el descuento:\nDescuento:\!\(TraditionalForm\`\(\
\(\\ \)\(0.35\\ \((267000)\) = 93450\)\)\)\nValor a \
cancelar:\!\(TraditionalForm\`\(\(\\ \)\(267000 - 93450 = 173550\)\)\) \
pesos."]}], 
             ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
            Deployed -> True], ImageSize -> All], "LinkHand"]}], 
      "Multimedia"]],
    DynamicModuleValues:>{{DownValues[$CellContext`framePane$$] = {HoldPattern[
           $CellContext`framePane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "Cuadro/Titulo", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPane$$] = {HoldPattern[
           $CellContext`textPane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "EmphasisText", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`style1$$] = {HoldPattern[
           $CellContext`style1$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style2$$] = {HoldPattern[
           $CellContext`style2$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style3$$] = {HoldPattern[
           $CellContext`style3$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`titlePopUp$$] = {HoldPattern[
           $CellContext`titlePopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama2$$, 
             FontFamily -> $CellContext`font1$$, $CellContext`color3$$, 
             Italic], "Text", LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPopUp$$] = {HoldPattern[
           $CellContext`textPopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama1$$, 
             FontFamily -> $CellContext`font1$$], "Text", LineIndent -> 0, 
            TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"f4636958-8b5e-4447-929f-bdffd37927c7"],

Cell[TextData[{
 "Por tanto, ella entiende que ",
 Cell[BoxData[
  FormBox[
   RowBox[{"72", "%"}], TraditionalForm]],ExpressionUUID->
  "9169a70e-d3ac-4382-8823-4efc91abd539"],
 " es equivalente a ",
 Cell[BoxData[
  FormBox["0.72", TraditionalForm]],ExpressionUUID->
  "324c7147-f546-4fa1-af6a-e8c759b0e36b"],
 " y que este valor se debe multiplicar al todo ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "7000", ")"}], TraditionalForm]],ExpressionUUID->
  "02895b15-0d12-472d-b8ac-b712e5ebd9b9"],
 ", es decir:"
}], "Text",ExpressionUUID->"e0218d29-42e4-41a7-a944-507b15930b25"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SubscriptBox["A", "e"], "=", 
         RowBox[{"7000", " ", "0.72"}]}]},
       {
        RowBox[{
         SubscriptBox["A", "e"], "=", 
         RowBox[{"5040", " ", 
          SuperscriptBox["cm", "2"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"e289b010-cb54-4a25-b99e-8d7b28b5f76d"]], \
"Text",ExpressionUUID->"77121447-e321-463d-bf52-4e165e635e17"],

Cell[TextData[{
 "El \[AAcute]rea encerrada corresponde a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"5040", " ", 
    SuperscriptBox["cm", "2"]}], TraditionalForm]],ExpressionUUID->
  "70a2423b-30c6-4dd3-aba1-1349daa141fa"],
 ", el objetivo es encontrar un rect\[AAcute]ngulo que tenga esta \
\[AAcute]rea para poder trazar dicha margen y que sus dimensiones sean \
menores a las del pliego de cartulina."
}], "Text",ExpressionUUID->"c982524e-c5ae-4b1f-953d-99c80d7e8026"],

Cell[TextData[{
 "Existen muchas soluciones (",
 StyleBox["\[DownQuestion]por qu\[EAcute]?",
  FontSlant->"Italic"],
 "), por ejemplo un rect\[AAcute]ngulo de dimensiones 90 cent\[IAcute]metros \
de largo por 56 cent\[IAcute]metros de ancho ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"90", " ", "56"}], "=", "5040"}], ")"}], TraditionalForm]],
  ExpressionUUID->"ee60f552-c004-400a-97af-b271e5b51af0"],
 ". ",
 StyleBox["Otra soluci\[OAcute]n puede ser ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{"84", " ", "cm"}], TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->"728584ff-3072-4ccd-96d2-4f86099b5849"],
 StyleBox[" por ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{"63", " ", "cm"}], TraditionalForm]],
  FontSlant->"Italic",ExpressionUUID->"6fc4b52b-7b90-4a72-9827-2cc346871b06"],
 "."
}], "Text",ExpressionUUID->"ad060da4-7049-4801-96ed-0a8f2a9b6b7e"],

Cell[TextData[{
 "No hay \[UAcute]nica soluci\[OAcute]n a este problema; una de las \
soluciones es trazar una margen que encierre un cuadrado de dimensiones 90 \
cent\[IAcute]metros de largo por 56 cent\[IAcute]metros de ancho.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3U+IdOtdJ/BiBiTgIBEumk0gyl1Own15QaQXkos0XBeB4ZWXK+GCMZO0
7eYqeUWvyTt4N469cNGhGQmXOAOuuldZOPQlBrEZtGcWWbhpjOmF0CBC40YQ
FFFq6tTf87eqTtU5Vc+v6/PlY7xvd1WdqtPd51vPOc859VNf/vUXJ/9hMBi8
+sTof178ym+//bWv/crv/OInR/94+f6rX/vV97/6lV94/ze/+qtf/drPfvk/
jr74Y6Pb/o/R/2X/PRQREREREREREREREREREXkq+d8iIiKScP7pn/+ttr5H
XwcAErS8vvsf5YuIiEjrqG8REZFwUd8iIiLhor5FRETCRX2LiIiEi/oWEREJ
F/UtIiISLupbREQkXNS3iIhIuKhvERGRcNmgvgciImun522YyIFms/r+/g/v
AFZS3yI9RX0D/VHfIj1FfQP9Ud8iPUV9A/1R3yI9RX0D/VHfIj1FfQP9Ud8i
PUV9A/1R3yI9RX0D/VHfIj1FfQP9Ud8iPWXn9f2tF/nrMb37rRb3/d4Hn8vu
8/Kb+94iUfbtl4ONf6w8aepbpKd0UN/TVl2Zt159r3KXFtv5j189G9/l2Qff
2fcWiXrzElffzKhvkZ7S2eh7UeLl0fF3vvFWub7nX1x7Oz+9ve5O2zffVd9P
0nynWeGvODN+z/bi2433Vd8iPaXDnefTTXfdzu1x+W5R3+P3Bp/7xsf73oix
Qtt3ZaRv8jOdFfTHr57l/8CzWl/+h6m+RXrKbup7/Ge+cX2X70uy1PdTMzkg
kv+BfvvlfKyd/bhX7RBT3yI9ZVf1XWY7/yT5sT4tkwknxTfPi/rOht5LdptP
qG+RntJ3fY+257X71mznn6Qn8GMd/Rr3f5hmNg9zWfJ/R5Xbt13DlfmlK2t3
ca/isr7zjZeTNl9n6P199S3SW/qu76aNYYvtfOmkpNIWI79dGn9r9jRKy13j
hLXlC1pmyYPnvzVeM4WlNB0UKG6ua55t8xKXr5A1V9e6q6JUKy9fNf1Ye1m3
dTcYvPW5Z+t109Il9tzga9T37JVW/1JmP7I1jyjVnLIxfYRVP4XJoour4uNX
707utdbQ+/vqW6S39Fvf4432FvU92fIsHnA2ib20f36+gXr5YrzpLj+T0vG7
aZVURzcrF1Rn9YMvns+Ldyub5eoiJo8w37ROCje/pV335TStkHW+u8aqmC53
USLzdwLFH2uf67Y8PJy+tO3qe/qw2z7IMuPn2dSe2cucvcb6ax3M23/1Omxo
6tkjLP0DLE5amz63yT+zh13vPZj6FukpPdR3ORvXd90ZZw3b52KVFB68Wn+V
85taLKhuO7/8wXNPr/Ro02Fj4YvVzXWpJdstsW6FLP3uuqtiNoovvqKaUuh1
3Y7/WRqErhgVzp7PWumtwbM10PDghbH//NmWblx7MmbjOqx9IfW/kzV3z/39
fuvF5MeRfX3d2aQD9S3ST5IefdcMPaZb/vJjlkaslWdVun15ALj+gjZ48B/W
D8lrF1Et4tIGvN0Sl43vGr673qpo2vta82Ptcd3Wvw1omm7RVt17g66UTr8q
vcDK7oX1rqXQ8Gg1dx+bHXRY+jc4+yl88CL3ON/M7UTKH46pXe3qW6SnBDj2
Xd6UtarvuhHuD2t2/K67oM0efN36nj5gYaGFDXjLJW5Q32utirrnueaPtdN1
mxtK99GzdfOu+7XuAeX1zvJYfqHCFpcx/M43Pii+oyis/9x5ZC+r60p9i/SU
CDPPZ8OEbDvTcvS94oKuNftdVyxoswdfs76X7OrcbImb1/fSVTF7Gm3qu6d1
W50D1ukl8Xd7mf11Dyivs987v3K2ru/yk8wfliruaXlR+ZkO1LdIP0n7vO/q
/r0N63vVhm7tBW3y4N3X97pL3KS+11gVzU+j7sfa87rNL2KWjuaNfyu/x7h3
682XW/eod249d1nfi6F33a6J733wqvL81bdIT9llfed3pK9R37WTY9se+27c
zbvhglo/eO7pbbbzfJsltq7vNVfF+jvP+1+3dfda8kvYauraDvecj9fJ8nez
y4/4LHuxmx/7rj7J6U+kbmLh97/9gZ3nIjvL7uq7OLhYo75rj35uOHWtdkGz
txNtFtT6wfMb3pX1veR0ntGTzO7ebomt63vdVdH0NCo/1j7X7eg3qvEdSGPH
tanvHR71zn4iSxa36X6AJbvZ190DX7pL4WTMhlPCC9S3SE/ZWX1PvrtBfZc3
ES3ru3HMstj4t1lQ6wfP32z1zPOmB1xMIWi1xE3re/WqaH6etfXdz7qtvb5K
+TTzTaz6FK2uLRt6Vz/up5VtzvuuPsnS+8PSr4SZ5yK7THf1vTj+2LhPteYS
H8s2s+XbjI+7fa5us7P8gGDNd7OHWix6/QVt8OC529Sf911/anPuAbO7Lz+T
unGJa6+QLtZ57sT/3azbuhW4ffP2fs2W2pe57E3vsixee9O1XDa/6lpBfug9
X/n508caHm2gvkX6SQf1vWKScD7j7XDp+plLR2GFzVdxsDyoXgU0v5TyQxVn
N1U2NasXtGzjtuTBy7OqJt+t7sKtvShK89Kbl7h8hayxulqsiuKjjV5C4XXN
nlWf6/blN8u/TtvONNvJNc/LL7BpiS3qO/ezWLKrfLDkNkvUfmJv/jGb3wkM
1LdIP+lw5znQ1pKh99OgvkV6ivqGvdn5jvrdU98iPUV9w76s/8EfcalvkZ6i
vmEvaj7P6ylS3yI9RX0D/VHfIj1FfQP9Ud8iPUV9A/1R3yI9RX0D/VHfIj1F
fQP9Ud8iPUV9A/1R3yI9ZbP6FhFZMz1vw0QONBvU997fzwOB9LwNEznQbFDf
IiIist+obxERkXBR3yIiIuGivkVERMJFfYuIiITLBvX9J38CAIcrhahvAGgl
hahvAGglhahvAGglhahvAGglhahvAGglhahvAGglhahvAGglhahvAGglhahv
AGglhahvAGglhahvAGglhahvAGglhahvAGglhahvAGglhahvAGglhahvAGgl
hahvAGglhahvAGglhahvAGglhahvAGglhahvAGglhahvAGglhahvAGglhahv
AGglhahvAGglhahvAGglhahvAGglhahvAGglhahvAGglhahvAGglhahvAGgl
hahvAGglhahvAGglhahvAGglhahvAGglhahvAGhljdydnN7cb9XPK6K+AaCV
Vbk7OX49yFxdb9vSjVHfANDKsjzcHGXFfXF+O/mPvhpcfQPwxPzpH//9w89/
6R8++/m/+7lf+os/+L+dP35jbq+yQfdit/lkGH5x/rB9Xa9b0+obgIj+7I/+
9l9/9JPDwWDu9r//ebeLqM+ku49fH10+zr92fTbZi959g6tvAJ6S0Yg7390j
//jTb3W7iGruLy9GNX1y+3h+Wqnv05vr6Xc7au6lNb2X+v7i33wIfPEHW9v7
S4Ce/fSLt5q+9frsP334u4ORfIP3W9/Z8e7JMe76+r4v3KabqG9IjvqGVQaD
QdO3fusPP1Oq73/58U/1Pfqepbm+u476huSob1hlSX1/5c/fK9X3X//y76vv
ofqGvqlvWGVJfY+cfvxf/tvvfWJU3P/+I5/ovLvVt/qGetMWfv/5s8E8b35U
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
7Hj39FNLFhdh6/QS6OobgHBSr+/+o74BCEd9q28AwlHf6huAcNS3+gYgHPWt
vgEIR32rbwDCUd/qG4Bw1Lf6BiAc9a2+AQhHfatvAMJR3+obgHDUt/oGIBz1
rb4BCEd9q28AwlHf6huAcNS3+gYgHPWtvgEIR32rbwDCUd/qG4Bw1Lf6BiAc
9a2+AQhHfatvAMJR3+obgHDUt/oGIBz1rb4BCEd9q28AwlHf6huAcNS3+gYg
HPWtvgEIR32rbwDCUd/qG4Bw1Lf6BiAc9a2+AQhHfatvAMJJtb4fz09fH10+
zv99ffZ6cHpzv2VV10V9AxCO+lbfAISjvtU3AOGob/UNQDjqW30DEI76Vt8A
hKO+1TcA4ahv9Q1AOOpbfQMQjvpW3wCEo77VNwDhqG/1DUA46lt9AxCO+lbf
AISjvtU3AOGob/UNQDjqW30DEI76Vt8AhKO+1TcA4ahv9Q1AOOpbfQMQjvpW
3wCEo77VNwDhqG/1DUA46lt9AxBOWvX9cHN0/HpwdrekvrP/OL667qy91TcA
8aRV31nuTkYNfnp1UlPfF1m5dz0GV98AhJNefQ8nQ+/BcaW+pwPzjqO+AQgn
yfoezhv85Db7x/3lRU/dvaSm1TcAyUq1vrNMR9zH5ZF4t1HfAISTcn0PZw3e
X3cPk6nvP/3jv3/4+S/91h9+5tX//M9f/suv7P0XA4CUJV7fO0gK9f1nf/S3
//qjnxwOBh/+7tR//T9f2vvvBgDJUt8p1Pff/dwvjbo7X9+/c/6pvf9uAJAs
9Z1Cff/Lj39qUt95/a12AKL7iZ/4zB6XnkJSqO9/+OznS909KvS9/24AQK0U
kkJ9/78PPy7V91//8u/v/acDALVSSAr1PfJXv/G/JrPX/v1HPqG7AUhZCkmk
vgEgihSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGg
lRSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSi
vgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGg
lRSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSi
vgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGglRSivgGg
lRSyQX2LiIjIfqO+RUREwkV9i4iIhIv6FhERCRf1LSIiEi7qW2Lm8fz09eDs
bt9PI5+7k+PXR5ePq262zTNP8FWLyH6iviVmsq5Mq8gebo7Wqu9tnnl6r1pE
9hT1LTGz5lB3hxnX98ntyttt88zTe9UisqeobwmZdbtyh7m9GhxfnD+sutk2
z7x033XH+yLyBKO+Dz7ZgC6tHlwnidb31fXKm6lv6THZ7Ai/EgcS9X3YCbsz
NmuuNYa6u0yL+t70mSf4qiW1JPjOVvqJ+j7gjKcxn97c7/t5bJI191TvMPeX
F2utzG2eeXqvWlJM9nuiwZ9+1PehZtzdx13b2ZuBNYe67R7zZptmbFPfmz7z
Dl/1di9Wuk32y9P5H6N3ek896vswc30W/K+7WmTjEcfE7HDA/C3K9JWOX/Xs
xKvxPsbJ7SfjlNF3K3dcdZZWfqGnF5Ub5x5n3uyNFTw+Kayw1Z19Zf6wpfvW
DMbrlrjZi53cZQcnqS2eW/NrqRlLLv9uwy2zdVL+rZhWZ+EHFPyvI8vkZUZ/
FbIs6vsAM2mxkIe85xltY3P1lG2BZ0VTfmcyOxS4GOCM7pjrwfzAZ9wCo9Kc
3X2yJW+osPGCFmWa/bNwy/LjTCum+MzLWRy4HN19/ODN9x0/8/w7geYlbvBi
dzQv7vH8bPyKym9F8jMqp4WbezLLv5tP7pb5g8Lz/769yu44/+foP7I18DQu
jzN5+9f1TipJJur70DLdgAffNBX3VBdn25bmd03/meup8uzcwrY6NyydLah2
CFMeRJdn/F6fFRZXKNAV9Z3d8fps/uCL6YWl+5b+2bDELl7sDlKs78p7ocI6
XP7dfAovMFu3s9vMfyumjzNt+evL6fqsLCJmJm/Jgs5vkVVR3weYSYOHHn2X
S3A6aJr9d7W+L6+Km/HC7tbco1VOo6ufBVQ9Pac4hz+3s7pUiGvV9+VVbomL
wl1W301L7ODF7iSFt0M1JzPm3los/24uSybqT9fzTf44xcnon/kRffT6nvxK
6O6nG/V9mOlnqszuthU1JZg7DF3pr6uTs9JO5tJIebatrh5Nrq2Amk68OsoX
evMcszXqe9Td5aHl6tH30kPqW73Y3ST//GtPfZo/2+XfbXrMUibr+XK+Msdr
6fRmduNdnz3d19+jPedPOur7YDOdx/UU6ru477S00a6bglU4Pp7vrGoL1FZA
5UDt+eXdebm+63twjfoudlPuK6vqu36J277Y3aRS3+X2nN9g+XfLX1wy+i4f
TM/9kuz6egj91LfufuJR34ecbMMec99ac3NVpus07BDObTDLXV8/Vs2nWLLj
49TV4++l7f/j/Xye86rRd36rm7/9yp3ntUvc9sXuJMWXNv4hFtdS7rkt/24u
S2bflX4r6to87nnT+5zDIDuM+j7sRD3Gt5h0/fB4v6jv0cu5ui5tmZt2qy6b
T54fqzaf5DV+hNHtx8vKHaF+eJw9Tn6ec37u9+yZVx94/OSbRvGl+5b+2bTE
DV/sbo+D17wzOW48Y275d/MpnoYwm8xfvUt5p0duuuBDtCkiru1zMFHfB5+s
d+INNOZHuuen+SwOeRf/WbdtLzRdOQ2nTjc8gdwY/HXTVwqPU3jmdQ97enN+
1rD/s3TfykPVLnGzFzupyH3Vd5b8ZIbqD2L5dxfJnx5eenNSqu9C5VV/mkES
889ZNor6lsNM6dB/Klu85WeFb5pEX6yIbBH1LQeXus/tahwO7zbrXnl1/ST8
YkVkm6hvObDUz0pKZBZf/vJxXSTpFysi20R9y2GlfmJPKp+S3HF9p/1iRWSb
qG85sFQvBJ3QB6d2fepW0i9WRLaJ+pbDS+nDUhM6y6aHM6/TfbEisk3Ut4iI
SLiobxERkXBR3yIiIuGivkVERMJFfYuIiISL+hYREQkX9S0iIhIu6ltERCRc
1LeIiEi4qG8REZFwWVLfIiIikmxq63v0RQAgZf2P8kVERERERERERERERERE
RHaU/w8GSk0X
     "], {{0, 526}, {661, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{481., Automatic},
   ImageSizeRaw->{661, 526},
   PlotRange->{{0, 661}, {0, 526}}]], "Input",
  TextAlignment->Center,ExpressionUUID->"156dd1de-7db5-448c-921b-a58a7d2f4de7"]
}], "Answer",ExpressionUUID->"38e49cdd-d77e-49f6-930e-c0f61af61d6a"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Problema ",
 
 CounterBox["Section"]
}], "Section",ExpressionUUID->"7b665c53-6bfc-4669-98e2-a13e82233c88"],

Cell["\<\
Una vez trazado el margen y encerrado la parte donde se trabajar\[AAcute], es \
necesario dividir este espacio en tres partes que tengan la misma \
\[AAcute]rea.\
\>", "Text",ExpressionUUID->"a3341e01-f29a-4469-843b-1e0886d19d39"],

Cell["\<\
\[DownQuestion]C\[OAcute]mo puede hacer la divisi\[OAcute]n de esta \
\[AAcute]rea en tres partes iguales?\
\>", "Ejercicio",ExpressionUUID->"90efae9a-6bdc-414d-99c6-ec34f29ffee7"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"c42eb4d9-84b4-4317-b6d4-4ab7feb45018"],

Cell[TextData[{
 "Suponiendo que Sandra traz\[OAcute] el margen como un rect\[AAcute]ngulo de \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"90", "cm", " ", "\[Times]", " ", "56", " ", "cm"}], 
   TraditionalForm]],ExpressionUUID->"7487062c-ef23-4d13-831c-69fb3c164a26"],
 ", entonces se puede dividir en tres el largo y trazar las divisiones. As\
\[IAcute] se obtiene tres rect\[AAcute]ngulos adyacentes, cada uno de \
dimensiones ",
 Cell[BoxData[
  FormBox[
   RowBox[{"30", "cm", " ", "\[Times]", " ", "56", " ", "cm"}], 
   TraditionalForm]],ExpressionUUID->"db6b55ba-6c7d-433b-89d1-e89b20a9c803"],
 ", por lo cual cada uno tiene un \[AAcute]rea de ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1680", " ", 
    SuperscriptBox["cm", "2"]}], TraditionalForm]],ExpressionUUID->
  "d4bad1b3-7e1b-41c2-bab7-538f4fe1908a"],
 "."
}], "Text",ExpressionUUID->"ca332b4f-5b10-4fdd-b9c1-300532078824"],

Cell[TextData[{
 "Manipulando el siguiente interactivo puede encontrar diferentes soluciones \
al problema, recuerde que el \[AAcute]rea encerrada debe ser el ",
 Cell[BoxData[
  FormBox[
   RowBox[{"72", "%"}], TraditionalForm]],ExpressionUUID->
  "4a9f636c-362d-4010-be31-df606e6ed0e2"],
 " del \[AAcute]rea total."
}], "Text",ExpressionUUID->"824baea9-760d-40f9-a60c-b420a6532be2"],

Cell[BoxData[
 FormBox[
  DynamicModuleBox[{$CellContext`rojo$$ = RGBColor[
   0.58, 0.09, 0.16], $CellContext`azul$$ = RGBColor[0, 
    Rational[69, 256], 
    Rational[31, 64]], $CellContext`verde$$ = RGBColor[
    Rational[103, 128], 
    Rational[105, 128], 
    Rational[27, 256]], $CellContext`fuente$$ = 
   "Gabriola", $CellContext`tama$$ = 30, $CellContext`anc$$ = 
   775, $CellContext`alto$$ = 350, $CellContext`tam$$ = 
   20, $CellContext`anchrow$$ = 356, $CellContext`loc1$$ = {5, 
   7}, $CellContext`loc2$$ = {95, 63}, $CellContext`area$$ = Dynamic[
    If[(100/(100 70)) 
      Abs[(Part[$CellContext`loc1$$, 1] - Part[$CellContext`loc2$$, 1]) (
         Part[$CellContext`loc1$$, 2] - Part[$CellContext`loc2$$, 2])] <= 100, 
     NumberForm[
     N[100/(100 70)] 
      Abs[(Part[$CellContext`loc1$$, 1] - Part[$CellContext`loc2$$, 1]) (
         Part[$CellContext`loc1$$, 2] - Part[$CellContext`loc2$$, 2])], {3, 
      1}], 100]]}, 
   TagBox[
    PanelBox[
     TagBox[GridBox[{
        {
         StyleBox[
          
          TemplateBox[{
           "\"El \[AAcute]rea encerrada es \[DoubleRightArrow]    \"",
            DynamicBox[
             ToBoxes[
              
              If[(100/(100 70)) 
                Abs[(Part[$CellContext`loc1$$, 1] - 
                   Part[$CellContext`loc2$$, 1]) (
                   Part[$CellContext`loc1$$, 2] - 
                   Part[$CellContext`loc2$$, 2])] <= 100, 
               NumberForm[
               N[100/(100 70)] 
                Abs[(Part[$CellContext`loc1$$, 1] - 
                   Part[$CellContext`loc2$$, 1]) (
                   Part[$CellContext`loc1$$, 2] - 
                   Part[$CellContext`loc2$$, 2])], {3, 1}], 100], 
              TraditionalForm]],"\" %\""},
           "Row",
           DisplayFunction->(FrameBox[
             RowBox[{
               TemplateSlotSequence[1, "\[InvisibleSpace]"]}], FrameStyle -> 
             Automatic]& ),
           InterpretationFunction->(RowBox[{"Row", "[", 
              RowBox[{
                RowBox[{"{", 
                  TemplateSlotSequence[1, ","], "}"}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]& )], 
          "Multimedia",
          StripOnInput->False,
          FontSize->25]},
        {
         TagBox[GridBox[{
            {
             RowBox[{
              GraphicsBox[{
                {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
                 RectangleBox[{0, 0}, {100, 70}]}, 
                {RGBColor[1, 0, 0], AbsolutePointSize[7], 
                 PointBox[Dynamic[$CellContext`loc1$$]], 
                 PointBox[Dynamic[$CellContext`loc2$$]], 
                 {RGBColor[0, 1, 0], Opacity[0.5], 
                  RectangleBox[Dynamic[$CellContext`loc1$$], 
                   Dynamic[$CellContext`loc2$$]], 
                  LocatorBox[
                   Dynamic[$CellContext`loc1$$, ($CellContext`loc1$$ = 
                    Round[#])& ], None], 
                  LocatorBox[
                   Dynamic[$CellContext`loc2$$, ($CellContext`loc2$$ = 
                    Round[#])& ], None], 
                  StyleBox[{},
                   PlotRange -> {{0, 118.9}, {0, 84.1}}]}}, {
                 LineBox[{
                  Dynamic[{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc2$$, 2] - 2}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc2$$, 2] - 2}]}], 
                 LineBox[{
                  Dynamic[{
                    Part[$CellContext`loc2$$, 1] - 2, 
                    Part[$CellContext`loc2$$, 2]}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1] - 2, 
                    Part[$CellContext`loc1$$, 2]}]}], 
                 StyleBox[InsetBox[
                   DynamicBox[ToBoxes[
                    Abs[
                    Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], TraditionalForm],
                    ImageSizeCache->{22., {0., 15.}}], 
                   Dynamic[{(Part[$CellContext`loc1$$, 1] + 
                    Part[$CellContext`loc2$$, 1])/2, 
                    Part[$CellContext`loc2$$, 2]}], {0, 1}],
                  StripOnInput->False,
                  FontSize->20,
                  Background->RGBColor[
                    Rational[45, 128], 
                    Rational[217, 256], 
                    Rational[1, 2]]], 
                 StyleBox[InsetBox[
                   DynamicBox[ToBoxes[
                    Abs[
                    Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]], TraditionalForm],
                    ImageSizeCache->{22., {0., 15.}}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1], (
                    Part[$CellContext`loc1$$, 2] + 
                    Part[$CellContext`loc2$$, 2])/2}], {1, 0}],
                  StripOnInput->False,
                  FontSize->20,
                  Background->RGBColor[
                    Rational[45, 128], 
                    Rational[217, 256], 
                    Rational[1, 2]]]}, 
                {Dashing[{Small, Small}], 
                 DynamicBox[Typeset`ToBoxes[
                   Table[
                    
                    Line[{{Part[$CellContext`loc1$$, 1] + $CellContext`i (
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]]/3), 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + $CellContext`i (
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]]/3), 
                    Part[$CellContext`loc2$$, 2]}}], {$CellContext`i, 0, 3}], 
                   TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{33.58578643762689, 
                   666.4142135623731}, {-200.4142135623731, 
                   194.4142135623731}}], 
                 DynamicBox[Typeset`ToBoxes[
                   Line[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc1$$, 2]}}], TraditionalForm, 
                   Graphics],
                  
                  ImageSizeCache->{{33.58578643762691, 666.4142135623731}, {
                   191.58578643762692`, 194.4142135623731}}], 
                 DynamicBox[Typeset`ToBoxes[
                   Line[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc2$$, 2]}, {
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc2$$, 2]}}], TraditionalForm, 
                   Graphics],
                  
                  ImageSizeCache->{{33.58578643762691, 
                   
                   666.4142135623731}, {-200.41421356237308`, \
-197.5857864376269}}]}, 
                DynamicBox[Typeset`ToBoxes[
                  Table[
                   Text[
                    Style[
                    Row[{"Parte ", $CellContext`i + 1}], 20], {
                    Part[$CellContext`loc1$$, 1] + ($CellContext`i/3 + 1/6) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], (1/2) 
                    Abs[Part[$CellContext`loc1$$, 2] + 
                    Part[$CellContext`loc2$$, 2]]}, {0, 0}], {$CellContext`i, 
                    0, 2}], TraditionalForm, Graphics],
                 ImageSizeCache->{{107.5, 592.5}, {-14.5, 8.5}}]},
               ImagePadding->{{0., 0.}, {0., 0.}},
               ImageSize->{700, 490},
               PlotRange->{{0., 100.}, {0., 70.}},
               PlotRangePadding->Automatic], " ", 
              RotationBox[
               ItemBox[
                StyleBox[
                 
                 TemplateBox[{
                  "\"\[DoubleLongLeftArrow]        ancho del pliego:        \
70 cm        \[DoubleLongRightArrow]\""},
                  "RowDefault"],
                 StripOnInput->False,
                 LineColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 FrontFaceColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 BackFaceColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 GraphicsColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 FontFamily->"Gabriola",
                 FontSize->25,
                 FontColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]]],
                StripOnInput->False],
               BoxRotation->1.5707963267948966`]}], ""},
            {
             ItemBox[
              StyleBox[
               
               TemplateBox[{
                "\"\[DoubleLongLeftArrow]        largo del pliego:        100 \
cm        \[DoubleLongRightArrow]\""},
                "RowDefault"],
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               FrontFaceColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               BackFaceColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               GraphicsColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               FontFamily->"Gabriola",
               FontSize->25,
               FontColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]]],
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   DynamicModuleValues:>{}], TraditionalForm]], "Answer",
 Editable->False,ExpressionUUID->"f2f00a8b-8d3d-4d4c-87b5-a782dd36c51b"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Problema ",
 
 CounterBox["Section"],
 " (para realizar en la parte izquierda)"
}], "Section",ExpressionUUID->"1b16df54-8a28-444c-acf1-4cea00671fd8"],

Cell["\<\
En una de las tres partes, Sandra debe colocar una imagen que ocupar\[AAcute] \
las dos quintas partes de esa \[AAcute]rea. Debe colocar informaci\[OAcute]n \
sobre la imagen que ocupe otras dos quintas partes de esa \[AAcute]rea y en \
el espacio restante debe colocar un t\[IAcute]tulo relacionado con lo escrito \
all\[IAcute] y que permita dejar espacio entre la imagen y el escrito.\
\>", "Text",ExpressionUUID->"6c059eba-bca0-4506-a7f2-65e7bd564b24"],

Cell["\[DownQuestion]C\[OAcute]mo puede realizar el trabajo encargado?", \
"Ejercicio",ExpressionUUID->"221ef595-bec3-4c54-b55a-5bbd1c3ca917"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`framePane$$, $CellContext`textPane$$, \
$CellContext`tabImage$$, $CellContext`tabText$$, $CellContext`style1$$, \
$CellContext`style2$$, $CellContext`style3$$, $CellContext`color1$$ = 
    RGBColor[0, 0, 
     Rational[1, 2]], $CellContext`color2$$ = RGBColor[
    0.2, 0.08, 0.28], $CellContext`color3$$ = RGBColor[
    0.796078431372549, 0.07058823529411765, 0.], $CellContext`tama1$$ = 
    15, $CellContext`tama2$$ = 18, $CellContext`tama3$$ = 
    25, $CellContext`font1$$ = "Georgia", $CellContext`page1$$ = 
    1, $CellContext`page2$$ = 1, $CellContext`page3$$ = 
    1, $CellContext`page4$$ = 1, $CellContext`page5$$ = 
    1, $CellContext`titlePopUp$$, $CellContext`textPopUp$$, \
$CellContext`panelWidth$$ = 750, $CellContext`bodyWidth$$ = 700}, 
    InterpretationBox[Cell[BoxData[
      FormBox[
       TagBox[GridBox[{
          {"\<\"N\[UAcute]mero racional como operador \[DoubleRightArrow]     \
    \"\>", "\<\"   \"\>", 
           TagBox[
            ButtonBox[
             
             InterpretationBox[Cell[
              "  Enlace  ", "Text",ExpressionUUID->
               "34e50574-1f40-469d-96a8-c2fab1fcbcf9"],
              TextCell["  Enlace  ", "Text"]],
             Appearance->Automatic,
             ButtonFunction:>CreateDialog[{
                Pane[
                 Column[{
                   $CellContext`titlePopUp$$[
                   "\!\(\*StyleBox[\"N\[UAcute]mero\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racional\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"como\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"operador\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)"], 
                   $CellContext`textPopUp$$[
                   "Significado que hace actuar a la fracci\[OAcute]n como \!\
\(\*StyleBox[\"transformador\",FontSlant->\"Italic\"]\) o funci\[OAcute]n de \
cambio de un determinado estado inicial. As\[IAcute], la fracci\[OAcute]n \
\!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)]\) empleada como operador es \
el n\[UAcute]mero que \
\!\(\*StyleBox[\"modifica\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\) un \
valor particular \!\(TraditionalForm\`n\) multiplic\[AAcute]ndolo por \
\!\(TraditionalForm\`a\) y dividi\[EAcute]ndolo por \
\!\(TraditionalForm\`b\)."], 
                   $CellContext`textPopUp$$[
                   "Estos operadores funcionan como transformadores que hacen \
mas peque\[NTilde]o \
(\!\(\*StyleBox[\"achicar\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)) o \
m\[AAcute]s grande \
(\!\(\*StyleBox[\"agrandar\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)) \
las cantidades dadas. Achican la cantidad cuando la fracci\[OAcute]n operador \
es menor que 1 (el numerador es menor que el denominador) y en el caso \
contrario (cuando la fracci\[OAcute]n es mayor que 1), la agrandan. Por \
ejemplo, el operador \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)]\) \
achica el n\[UAcute]mero dado, en tanto que el operador \!\(TraditionalForm\`\
\*FractionBox[\(4\), \(3\)]\) lo agranda. Suponga que se va a aplicar esos \
operadores al n\[UAcute]mero 24, tenemos que:\n\
\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] \((24)\) = \
\(\*FractionBox[\(72\), \(4\)] = 18\)\) este n\[UAcute]mero es \
\!\(\*StyleBox[\"menor\",FontSlant->\"Italic\"]\) que 24, es decir, el \
operador achic\[OAcute] este n\[UAcute]mero.\n\
\!\(TraditionalForm\`\*FractionBox[\(4\), \(3\)]\\ \((24)\) = \
\(\*FractionBox[\(96\), \(3\)] = 32\)\) este n\[UAcute]mero es \
\!\(\*StyleBox[\"mayor\",FontSlant->\"Italic\"]\) que 24, es decir, el \
operador lo agrand\[OAcute]."], 
                   $CellContext`textPopUp$$[
                   "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\):"], 
                   $CellContext`textPopUp$$[
                   "1. Halle los dos quintos de \!\(TraditionalForm\`80\).\n\
La escritura de esta situaci\[OAcute]n es: \
\!\(TraditionalForm\`\*FractionBox[\(2\), \(5\)]\\ \((80)\)\) y su resultado \
es \!\(TraditionalForm\`\*FractionBox[\(2\\ 80\), \(5\)] = 32\)."], 
                   $CellContext`textPopUp$$[
                   "2. Encuentre la mitad de la mitad de \
\!\(TraditionalForm\`80\).\nLa escritura de esta situaci\[OAcute]n es: \
\!\(TraditionalForm\`\*FractionBox[\(1\), \(2\)] \((\*FractionBox[\(1\), \
\(2\)]\\ \((80)\))\)\) y su resultado es \
\!\(TraditionalForm\`\*FractionBox[\(80\), \(4\)] = 20\)."], 
                   $CellContext`textPopUp$$[
                   "3. Halle el \!\(TraditionalForm\`20  %\) de la mitad de \
\!\(TraditionalForm\`100\).\nObserve que el porcentaje se puede expresar en \
forma de fracci\[OAcute]n, por lo que el porcentaje act\[UAcute]a como un \
operador.\nLa escritura de esta situaci\[OAcute]n es: \
\!\(TraditionalForm\`\*FractionBox[\(20\), \(100\)]\\ \((\*FractionBox[\(1\), \
\(2\)]\\ \((100)\))\)\) y su resultado es \!\(TraditionalForm\`\*FractionBox[\
\(2000\), \(200\)] = 10\)."], 
                   $CellContext`textPopUp$$[
                   "4. Si los tres cuartos de la mitad de un n\[UAcute]mero \
es \!\(TraditionalForm\`3\), \[DownQuestion]cu\[AAcute]l es el \
n\[UAcute]mero?\nAl hablar de los tres cuartos de la mitad de un \
n\[UAcute]mero, lo que se halla es \!\(TraditionalForm\`\*FractionBox[\(3\), \
\(4\)]\\ \((\*FractionBox[\(1\), \(2\)])\) = \*FractionBox[\(3\), \(8\)]\) \
del n\[UAcute]mero. Luego, lo que se va a buscar es un n\[UAcute]mero que al \
multiplicarlo por \!\(TraditionalForm\`3\) y dividirlo entre \
\!\(TraditionalForm\`8\) d\[EAcute] como resultado \!\(TraditionalForm\`3\). \
\nAl aplicar los procesos contrarios, se tiene que \!\(TraditionalForm\`3  \
\:22198 = 24\) y \!\(TraditionalForm\`24\[Divide]3 = 8\), es decir, el n\
\[UAcute]mero es \!\(TraditionalForm\`8\).\nLa escritura de esta situaci\
\[OAcute]n es: \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)]\\ \
\((\*FractionBox[\(1\), \(2\)]\\ \((x)\))\) = 3\), por lo que \
\!\(TraditionalForm\`\*FractionBox[\(3\), \(8\)]\\ \((x)\) = 3\), luego \
\!\(TraditionalForm\`x = \(\*FractionBox[\((3  \:22198)\), \(3\)] = 8\)\)."], 
                   $CellContext`textPopUp$$[
                   "5. Juanita invierte el \!\(TraditionalForm\`30  %\) de la \
mitad de su salario en arriendo. Si gana $\!\(TraditionalForm\`900000\), \
\[DownQuestion]cu\[AAcute]nto dinero paga de arriendo?\nLa escritura de esta \
situaci\[OAcute]n es: \!\(TraditionalForm\`\*FractionBox[\(30\), \(100\)]\\ \
\((\*FractionBox[\(1\), \(2\)]\\ \((900000)\))\)\) y su resultado es \
\!\(TraditionalForm\`\*FractionBox[\(27000000\), \(200\)] = 135000\) pesos, \
que es el valor del arriendo."]}], 
                 ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                Deployed -> True],
             Evaluator->Automatic,
             ImageSize->All,
             Method->"Preemptive"],
            MouseAppearanceTag["LinkHand"]]},
          {"\<\"Fracciones equivalentes \[DoubleRightArrow]                   \
 \"\>", "\<\"         \"\>", 
           TagBox[
            ButtonBox[
             
             InterpretationBox[Cell[
              "  Enlace  ", "Text",ExpressionUUID->
               "e0af1697-ad6e-4b18-bbf4-022c723f8c0e"],
              TextCell["  Enlace  ", "Text"]],
             Appearance->Automatic,
             ButtonFunction:>CreateDialog[{
                Pane[
                 Column[{
                   $CellContext`titlePopUp$$[
                   "\!\(\*StyleBox[\"Fracciones\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"equivalentes\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                   $CellContext`textPopUp$$[
                   "Dos fracciones son equivalentes si representan la misma \
cantidad. Por ejemplo, la fracci\[OAcute]n  \
\!\(TraditionalForm\`\*FractionBox[\(1\), \(2\)]\) es equivalente a la fracci\
\[OAcute]n \!\(TraditionalForm\`\*FractionBox[\(2\), \(4\)]\), ya que ambas \
representan la misma cantidad (tomar \
\!\(TraditionalForm\`\*FractionBox[\(1\), \(2\)]\) de una unidad es lo mismo \
que tomar los \!\(TraditionalForm\`\*FractionBox[\(2\), \(4\)]\) de la misma \
unidad)."], 
                   $CellContext`textPopUp$$[
                   "Hay dos formas de obtener fracciones equivalentes, por \!\
\(\*StyleBox[\"simplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) y por \!\(\*StyleBox[\"amplificaci\[OAcute]n\",FontWeight->\"Bold\
\",FontSlant->\"Italic\"]\).\nLa \
\!\(\*StyleBox[\"simplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) consiste en dividir tanto el numerador como el denominador por un \
mismo n\[UAcute]mero. Cuando ya no se puede simplificar m\[AAcute]s, la \
fracci\[OAcute]n que se obtiene se llama fracci\[OAcute]n irreductible.  Por \
ejemplo, \!\(TraditionalForm\`\*FractionBox[\(12\), \(8\)] = \(\*FractionBox[\
\(6\), \(4\)] = \*FractionBox[\(3\), \(2\)]\)\). \nLa \
\!\(\*StyleBox[\"amplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) consiste en multiplicar tanto el numerador como el denominador \
por un mismo n\[UAcute]mero, de esta forma se obtienen infinitas fracciones \
equivalentes. Por ejemplo, \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)] = \
\(\*FractionBox[\(4\), \(6\)] = \(\*FractionBox[\(8\), \(12\)] = \\  ... \)\)\
\)"]}], ImageSize -> {$CellContext`panelWidth$$, $CellContext`bodyWidth$$}, 
                 Scrollbars -> {False, True}]}, Background -> White, Deployed -> 
               True],
             Evaluator->Automatic,
             ImageSize->All,
             Method->"Preemptive"],
            MouseAppearanceTag["LinkHand"]]},
          {"\<\"Operaciones con n\[UAcute]meros racionales \
\[DoubleRightArrow]\"\>", "\<\"   \"\>", 
           TagBox[
            ButtonBox[
             
             InterpretationBox[Cell[
              "  Adici\[OAcute]n  ", "Text",ExpressionUUID->
               "83439036-c1da-4778-ac1b-5a25295222c1"],
              TextCell["  Adici\[OAcute]n  ", "Text"]],
             Appearance->Automatic,
             ButtonFunction:>CreateDialog[{
                Pane[
                 Column[{
                   $CellContext`titlePopUp$$[
                   "\!\(\*StyleBox[\"Adici\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"en\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                   $CellContext`textPopUp$$[
                   "Una de las formas como se pueden sumar dos racionales es \
que sean \!\(\*StyleBox[\"homog\[EAcute]neos\",FontWeight->\"Bold\",FontSlant-\
>\"Italic\"]\), es decir, que \
\!\(\*StyleBox[\"tengan\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"el\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"mismo\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"denominador\",FontSlant->\"Italic\
\"]\). En este caso, se suman los numeradores y se deja el mismo denominador. \
En otras palabras, \!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)] + \
\*FractionBox[\(c\), \(b\)] = \*FractionBox[\((a + c)\), \(b\)]\). \nPor \
ejemplo, \!\(TraditionalForm\`\*FractionBox[\(3\), \(5\)] + \*FractionBox[\(6\
\), \(5\)] = \(\*FractionBox[\((3 + 6)\), \(5\)] = \*FractionBox[\(9\), \
\(5\)]\)\).\nEn el caso de tener denominadores diferentes, es decir, las \
fracciones son \
\!\(\*StyleBox[\"heterog\[EAcute]neas\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\), es necesario encontrar fracciones equivalentes para convertirlas \
en fracciones homog\[EAcute]neas y as\[IAcute] poder sumarlas. Se explicar\
\[AAcute]n dos m\[EAcute]todos para realizar estas sumas."], 
                   $CellContext`textPopUp$$[
                   "\!\(\*StyleBox[\"M\[EAcute]todo\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"1\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\
\):\n\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"a\", \"b\
\"], \"+\", FractionBox[\"c\", \"d\"]}], \"=\", \
RowBox[{RowBox[{FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \
\", \"d\"}]], \"+\", FractionBox[RowBox[{\"b\", \" \", \"c\"}], \
RowBox[{\"b\", \" \", \"d\"}]]}], \"=\", FractionBox[RowBox[{RowBox[{\"a\", \
\" \", \"d\"}], \"+\", RowBox[{\"b\", \" \", \"c\"}]}], RowBox[{\"b\", \" \", \
\"d\"}]]}]}]}\n     },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
Observe que el com\[UAcute]n denominador se obtiene multiplicando los \
denominadores.\nEjemplo: \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \
\*FractionBox[\(5\), \(12\)] = \(\*FractionBox[\((36 + 20)\), \(48\)] = \
\*FractionBox[\(56\), \(48\)]\)\). Es necesario simplificar esta fracci\
\[OAcute]n, luego, \!\(TraditionalForm\`\*FractionBox[\(56\), \(48\)] = \
\*FractionBox[\(7\), \(6\)]\). Por lo que\n \
\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \*FractionBox[\(5\), \
\(12\)] = \*FractionBox[\(7\), \(6\)]\). \nEste m\[EAcute]todo es muy \
dispendioso, ya que los n\[UAcute]meros con los que se trabajan son muy \
grandes y exige el proceso de simplificaci\[OAcute]n. Adem\[AAcute]s, si son \
m\[AAcute]s de dos n\[UAcute]meros los que se van a sumar, implica la \
multiplicaci\[OAcute]n del numerador por todos los dem\[AAcute]s \
denominadores, tarea bastante pesada."], 
                   $CellContext`textPopUp$$[
                   "\!\(\*StyleBox[\"M\[EAcute]todo\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"2\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\
\):\nAntes de realizar la suma, se encuentra el \
\!\(\*StyleBox[\"m\[IAcute]nimo\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"com\[UAcute]n\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"m\
\[UAcute]ltiplo\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"denominadores\",FontSlant->\"\
Italic\"]\) (recuerden que el m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo \
entre dos o m\[AAcute]s n\[UAcute]meros, es el producto de los factores \
comunes con su mayor exponente por los no comunes), para amplificar cada \
fracci\[OAcute]n de tal forma que todas tengan como denominador el \
m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo y luego sumar como fracciones \
homog\[EAcute]neas. Observe la suma realizada con el m\[EAcute]todo 1, \
haciendo uso de este m\[EAcute]todo, \
\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \*FractionBox[\(5\), \
\(12\)]\).\nLa descomposici\[OAcute]n en factores de los denominadores es: \!\
\(TraditionalForm\`4 = \*SuperscriptBox[\(2\), \(2\)]\)  y \
\!\(TraditionalForm\`12 = 3 \*SuperscriptBox[\(\:22192\), \(2\)]\), por lo \
que el m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo de los denominadores es: \
\!\(TraditionalForm\`3 \*SuperscriptBox[\(\:22192\), \(2\)] = 12\) (observe \
que \!\(TraditionalForm\`\*SuperscriptBox[\(2\), \(2\)]\) es factor com\
\[UAcute]n en ambos n\[UAcute]meros y \!\(TraditionalForm\`3\) es no com\
\[UAcute]n). La tarea ahora es amplificar ambas fracciones de tal manera que \
el denominador sea \!\(TraditionalForm\`12\).\n \
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"3\", \"4\"], \
\"+\", FractionBox[\"5\", \"12\"]}], \"=\", \
RowBox[{RowBox[{FractionBox[RowBox[{\"(\", RowBox[{\"3\", \" \", \"3\"}], \")\
\"}], RowBox[{\"(\", RowBox[{\"4\", \" \", \"3\"}], \")\"}]], \"+\", \
FractionBox[\"5\", \"12\"]}], \"=\", RowBox[{RowBox[{FractionBox[\"9\", \
\"12\"], \"+\", FractionBox[\"5\", \"12\"]}], \"=\", RowBox[{FractionBox[\"14\
\", \"12\"], \"=\", FractionBox[\"7\", \"6\"]}]}]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
Este m\[EAcute]todo trabaja con n\[UAcute]meros m\[AAcute]s peque\[NTilde]os \
y eso evita que se cometan errores de c\[AAcute]lculo."], 
                   $CellContext`textPopUp$$[
                   "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\):"], 
                   $CellContext`textPopUp$$[
                   "1. \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] - \
\*FractionBox[\(2\), \(5\)] + \*FractionBox[\(5\), \(2\)] - 3\)\n\
\!\(TraditionalForm\`m . c . m\\ \((4, 5, 2)\) = 20\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`20\).\n\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] - \*FractionBox[\(2\
\), \(5\)] + \*FractionBox[\(5\), \(2\)] - 3 = \(\*FractionBox[\(3\\ 5\), \(4\
\\ 5\)] - \*FractionBox[\(2\\ 4\), \(5\\ 4\)] + \*FractionBox[\(5\\ 10\), \(2\
\\ 10\)] - \*FractionBox[\(3\\ 20\), \(1\\ 20\)] = \(\*FractionBox[\(15\), \
\(20\)] - \*FractionBox[\(8\), \(20\)] + \*FractionBox[\(50\), \(20\)] - \
\*FractionBox[\(60\), \(20\)] = \(-\*FractionBox[\(3\), \(20\)]\)\)\)\)."], 
                   $CellContext`textPopUp$$[
                   "2. \!\(TraditionalForm\`2 - \*FractionBox[\(1\), \(3\)] + \
\*FractionBox[\(5\), \(6\)] - \*FractionBox[\(3\), \(4\)]\)\n\
\!\(TraditionalForm\`m . c . m\\ \((1, 3, 6, 4)\) = 12\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`12\).\n\!\(TraditionalForm\`2 - \*FractionBox[\(1\), \(3\)] + \
\*FractionBox[\(5\), \(6\)] - \*FractionBox[\(3\), \(4\)] = \
\(\*FractionBox[\(24\), \(12\)] - \*FractionBox[\(4\), \(12\)] + \
\*FractionBox[\(10\), \(12\)] - \*FractionBox[\(9\), \(12\)] = \
\(\*FractionBox[\(21\), \(12\)] = \*FractionBox[\(7\), \(4\)]\)\)\)."], 
                   $CellContext`textPopUp$$[
                   "3. \!\(TraditionalForm\`\*FractionBox[\(3\), \(20\)] - \
\*FractionBox[\(7\), \(10\)] + \*FractionBox[\(1\), \(4\)] - 1\)\n\
\!\(TraditionalForm\`m . c . m\\ \((20, 10, 4, 1)\) = 20\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`20\).\n\!\(TraditionalForm\`\*FractionBox[\(3\), \(20\)] - \
\*FractionBox[\(7\), \(10\)] + \*FractionBox[\(1\), \(4\)] - 1 = \
\(\*FractionBox[\(3\), \(20\)] - \*FractionBox[\(14\), \(20\)] + \
\*FractionBox[\(5\), \(20\)] - \*FractionBox[\(20\), \(20\)] = \
\(\*FractionBox[\(-26\), \(20\)] = \(-\*FractionBox[\(13\), \(10\)]\)\)\)\)"], 
                   $CellContext`textPopUp$$[
                   "4. \!\(TraditionalForm\`\(-\*FractionBox[\(1\), \(2\)]\) \
+ \*FractionBox[\(3\), \(5\)] - \*FractionBox[\(1\), \(6\)] + \
\*FractionBox[\(2\), \(3\)]\)\n\!\(TraditionalForm\`m . c . m\\ \((2, 5, 6, \
3)\) = 30\), luego se deben amplificar las fracciones para que queden con \
denominador \!\(TraditionalForm\`30\).\n\
\!\(TraditionalForm\`\(-\*FractionBox[\(1\), \(2\)]\) + \*FractionBox[\(3\), \
\(5\)] - \*FractionBox[\(1\), \(6\)] + \*FractionBox[\(2\), \(3\)] = \
\(\(-\*FractionBox[\(15\), \(30\)]\) + \*FractionBox[\(18\), \(30\)] - \
\*FractionBox[\(5\), \(30\)] + \*FractionBox[\(20\), \(30\)] = \
\(\*FractionBox[\(18\), \(30\)] = \*FractionBox[\(3\), \(5\)]\)\)\)."]}], 
                 ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                Deployed -> True],
             Evaluator->Automatic,
             ImageSize->All,
             Method->"Preemptive"],
            MouseAppearanceTag["LinkHand"]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"], TraditionalForm]], "Multimedia",ExpressionUUID->
      "5c37aa66-0062-4b81-903c-e80b05a09fb8"],
     TextCell[
      Grid[{{
        "N\[UAcute]mero racional como operador \[DoubleRightArrow]         ", 
         "   ", 
         MouseAppearance[
          Button[
           TextCell["  Enlace  ", "Text"], 
           CreateDialog[{
             Pane[
              Column[{
                $CellContext`titlePopUp$$[
                "\!\(\*StyleBox[\"N\[UAcute]mero\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racional\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"como\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"operador\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)"], 
                $CellContext`textPopUp$$[
                "Significado que hace actuar a la fracci\[OAcute]n como \
\!\(\*StyleBox[\"transformador\",FontSlant->\"Italic\"]\) o funci\[OAcute]n \
de cambio de un determinado estado inicial. As\[IAcute], la fracci\[OAcute]n \
\!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)]\) empleada como operador es \
el n\[UAcute]mero que \
\!\(\*StyleBox[\"modifica\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\) un \
valor particular \!\(TraditionalForm\`n\) multiplic\[AAcute]ndolo por \
\!\(TraditionalForm\`a\) y dividi\[EAcute]ndolo por \
\!\(TraditionalForm\`b\)."], 
                $CellContext`textPopUp$$[
                "Estos operadores funcionan como transformadores que hacen \
mas peque\[NTilde]o \
(\!\(\*StyleBox[\"achicar\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)) o \
m\[AAcute]s grande \
(\!\(\*StyleBox[\"agrandar\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)) \
las cantidades dadas. Achican la cantidad cuando la fracci\[OAcute]n operador \
es menor que 1 (el numerador es menor que el denominador) y en el caso \
contrario (cuando la fracci\[OAcute]n es mayor que 1), la agrandan. Por \
ejemplo, el operador \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)]\) \
achica el n\[UAcute]mero dado, en tanto que el operador \!\(TraditionalForm\`\
\*FractionBox[\(4\), \(3\)]\) lo agranda. Suponga que se va a aplicar esos \
operadores al n\[UAcute]mero 24, tenemos que:\n\
\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] \((24)\) = \
\(\*FractionBox[\(72\), \(4\)] = 18\)\) este n\[UAcute]mero es \
\!\(\*StyleBox[\"menor\",FontSlant->\"Italic\"]\) que 24, es decir, el \
operador achic\[OAcute] este n\[UAcute]mero.\n\
\!\(TraditionalForm\`\*FractionBox[\(4\), \(3\)]\\ \((24)\) = \
\(\*FractionBox[\(96\), \(3\)] = 32\)\) este n\[UAcute]mero es \
\!\(\*StyleBox[\"mayor\",FontSlant->\"Italic\"]\) que 24, es decir, el \
operador lo agrand\[OAcute]."], 
                $CellContext`textPopUp$$[
                "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\):"], 
                $CellContext`textPopUp$$[
                "1. Halle los dos quintos de \!\(TraditionalForm\`80\).\nLa \
escritura de esta situaci\[OAcute]n es: \
\!\(TraditionalForm\`\*FractionBox[\(2\), \(5\)]\\ \((80)\)\) y su resultado \
es \!\(TraditionalForm\`\*FractionBox[\(2\\ 80\), \(5\)] = 32\)."], 
                $CellContext`textPopUp$$[
                "2. Encuentre la mitad de la mitad de \!\(TraditionalForm\`80\
\).\nLa escritura de esta situaci\[OAcute]n es: \
\!\(TraditionalForm\`\*FractionBox[\(1\), \(2\)] \((\*FractionBox[\(1\), \
\(2\)]\\ \((80)\))\)\) y su resultado es \
\!\(TraditionalForm\`\*FractionBox[\(80\), \(4\)] = 20\)."], 
                $CellContext`textPopUp$$[
                "3. Halle el \!\(TraditionalForm\`20  %\) de la mitad de \
\!\(TraditionalForm\`100\).\nObserve que el porcentaje se puede expresar en \
forma de fracci\[OAcute]n, por lo que el porcentaje act\[UAcute]a como un \
operador.\nLa escritura de esta situaci\[OAcute]n es: \
\!\(TraditionalForm\`\*FractionBox[\(20\), \(100\)]\\ \((\*FractionBox[\(1\), \
\(2\)]\\ \((100)\))\)\) y su resultado es \!\(TraditionalForm\`\*FractionBox[\
\(2000\), \(200\)] = 10\)."], 
                $CellContext`textPopUp$$[
                "4. Si los tres cuartos de la mitad de un n\[UAcute]mero es \
\!\(TraditionalForm\`3\), \[DownQuestion]cu\[AAcute]l es el n\[UAcute]mero?\n\
Al hablar de los tres cuartos de la mitad de un n\[UAcute]mero, lo que se \
halla es \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)]\\ \((\*FractionBox[\
\(1\), \(2\)])\) = \*FractionBox[\(3\), \(8\)]\) del n\[UAcute]mero. Luego, \
lo que se va a buscar es un n\[UAcute]mero que al multiplicarlo por \
\!\(TraditionalForm\`3\) y dividirlo entre \!\(TraditionalForm\`8\) \
d\[EAcute] como resultado \!\(TraditionalForm\`3\). \nAl aplicar los procesos \
contrarios, se tiene que \!\(TraditionalForm\`3  \:22198 = 24\) y \
\!\(TraditionalForm\`24\[Divide]3 = 8\), es decir, el n\[UAcute]mero es \
\!\(TraditionalForm\`8\).\nLa escritura de esta situaci\[OAcute]n es: \
\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)]\\ \((\*FractionBox[\(1\), \
\(2\)]\\ \((x)\))\) = 3\), por lo que \
\!\(TraditionalForm\`\*FractionBox[\(3\), \(8\)]\\ \((x)\) = 3\), luego \
\!\(TraditionalForm\`x = \(\*FractionBox[\((3  \:22198)\), \(3\)] = 8\)\)."], 
                $CellContext`textPopUp$$[
                "5. Juanita invierte el \!\(TraditionalForm\`30  %\) de la \
mitad de su salario en arriendo. Si gana $\!\(TraditionalForm\`900000\), \
\[DownQuestion]cu\[AAcute]nto dinero paga de arriendo?\nLa escritura de esta \
situaci\[OAcute]n es: \!\(TraditionalForm\`\*FractionBox[\(30\), \(100\)]\\ \
\((\*FractionBox[\(1\), \(2\)]\\ \((900000)\))\)\) y su resultado es \
\!\(TraditionalForm\`\*FractionBox[\(27000000\), \(200\)] = 135000\) pesos, \
que es el valor del arriendo."]}], 
              ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
             Deployed -> True], ImageSize -> All], "LinkHand"]}, {
        "Fracciones equivalentes \[DoubleRightArrow]                    ", 
         "         ", 
         MouseAppearance[
          Button[
           TextCell["  Enlace  ", "Text"], 
           CreateDialog[{
             Pane[
              Column[{
                $CellContext`titlePopUp$$[
                "\!\(\*StyleBox[\"Fracciones\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"equivalentes\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                $CellContext`textPopUp$$[
                "Dos fracciones son equivalentes si representan la misma \
cantidad. Por ejemplo, la fracci\[OAcute]n  \
\!\(TraditionalForm\`\*FractionBox[\(1\), \(2\)]\) es equivalente a la fracci\
\[OAcute]n \!\(TraditionalForm\`\*FractionBox[\(2\), \(4\)]\), ya que ambas \
representan la misma cantidad (tomar \
\!\(TraditionalForm\`\*FractionBox[\(1\), \(2\)]\) de una unidad es lo mismo \
que tomar los \!\(TraditionalForm\`\*FractionBox[\(2\), \(4\)]\) de la misma \
unidad)."], 
                $CellContext`textPopUp$$[
                "Hay dos formas de obtener fracciones equivalentes, por \
\!\(\*StyleBox[\"simplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) y por \!\(\*StyleBox[\"amplificaci\[OAcute]n\",FontWeight->\"Bold\
\",FontSlant->\"Italic\"]\).\nLa \
\!\(\*StyleBox[\"simplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) consiste en dividir tanto el numerador como el denominador por un \
mismo n\[UAcute]mero. Cuando ya no se puede simplificar m\[AAcute]s, la \
fracci\[OAcute]n que se obtiene se llama fracci\[OAcute]n irreductible.  Por \
ejemplo, \!\(TraditionalForm\`\*FractionBox[\(12\), \(8\)] = \(\*FractionBox[\
\(6\), \(4\)] = \*FractionBox[\(3\), \(2\)]\)\). \nLa \
\!\(\*StyleBox[\"amplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) consiste en multiplicar tanto el numerador como el denominador \
por un mismo n\[UAcute]mero, de esta forma se obtienen infinitas fracciones \
equivalentes. Por ejemplo, \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)] = \
\(\*FractionBox[\(4\), \(6\)] = \(\*FractionBox[\(8\), \(12\)] = \\  ... \)\)\
\)"]}], ImageSize -> {$CellContext`panelWidth$$, $CellContext`bodyWidth$$}, 
              Scrollbars -> {False, True}]}, Background -> White, Deployed -> 
            True], ImageSize -> All], "LinkHand"]}, {
        "Operaciones con n\[UAcute]meros racionales \[DoubleRightArrow]", 
         "   ", 
         MouseAppearance[
          Button[
           TextCell["  Adici\[OAcute]n  ", "Text"], 
           CreateDialog[{
             Pane[
              Column[{
                $CellContext`titlePopUp$$[
                "\!\(\*StyleBox[\"Adici\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"en\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                $CellContext`textPopUp$$[
                "Una de las formas como se pueden sumar dos racionales es que \
sean \!\(\*StyleBox[\"homog\[EAcute]neos\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\), es decir, que \!\(\*StyleBox[\"tengan\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"el\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"mismo\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"denominador\",FontSlant->\"Italic\
\"]\). En este caso, se suman los numeradores y se deja el mismo denominador. \
En otras palabras, \!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)] + \
\*FractionBox[\(c\), \(b\)] = \*FractionBox[\((a + c)\), \(b\)]\). \nPor \
ejemplo, \!\(TraditionalForm\`\*FractionBox[\(3\), \(5\)] + \*FractionBox[\(6\
\), \(5\)] = \(\*FractionBox[\((3 + 6)\), \(5\)] = \*FractionBox[\(9\), \
\(5\)]\)\).\nEn el caso de tener denominadores diferentes, es decir, las \
fracciones son \
\!\(\*StyleBox[\"heterog\[EAcute]neas\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\), es necesario encontrar fracciones equivalentes para convertirlas \
en fracciones homog\[EAcute]neas y as\[IAcute] poder sumarlas. Se explicar\
\[AAcute]n dos m\[EAcute]todos para realizar estas sumas."], 
                $CellContext`textPopUp$$[
                "\!\(\*StyleBox[\"M\[EAcute]todo\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"1\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\
\):\n\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"a\", \"b\
\"], \"+\", FractionBox[\"c\", \"d\"]}], \"=\", \
RowBox[{RowBox[{FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \
\", \"d\"}]], \"+\", FractionBox[RowBox[{\"b\", \" \", \"c\"}], \
RowBox[{\"b\", \" \", \"d\"}]]}], \"=\", FractionBox[RowBox[{RowBox[{\"a\", \
\" \", \"d\"}], \"+\", RowBox[{\"b\", \" \", \"c\"}]}], RowBox[{\"b\", \" \", \
\"d\"}]]}]}]}\n     },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
Observe que el com\[UAcute]n denominador se obtiene multiplicando los \
denominadores.\nEjemplo: \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \
\*FractionBox[\(5\), \(12\)] = \(\*FractionBox[\((36 + 20)\), \(48\)] = \
\*FractionBox[\(56\), \(48\)]\)\). Es necesario simplificar esta fracci\
\[OAcute]n, luego, \!\(TraditionalForm\`\*FractionBox[\(56\), \(48\)] = \
\*FractionBox[\(7\), \(6\)]\). Por lo que\n \
\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \*FractionBox[\(5\), \
\(12\)] = \*FractionBox[\(7\), \(6\)]\). \nEste m\[EAcute]todo es muy \
dispendioso, ya que los n\[UAcute]meros con los que se trabajan son muy \
grandes y exige el proceso de simplificaci\[OAcute]n. Adem\[AAcute]s, si son \
m\[AAcute]s de dos n\[UAcute]meros los que se van a sumar, implica la \
multiplicaci\[OAcute]n del numerador por todos los dem\[AAcute]s \
denominadores, tarea bastante pesada."], 
                $CellContext`textPopUp$$[
                "\!\(\*StyleBox[\"M\[EAcute]todo\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"2\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\
\):\nAntes de realizar la suma, se encuentra el \
\!\(\*StyleBox[\"m\[IAcute]nimo\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"com\[UAcute]n\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"m\
\[UAcute]ltiplo\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"denominadores\",FontSlant->\"\
Italic\"]\) (recuerden que el m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo \
entre dos o m\[AAcute]s n\[UAcute]meros, es el producto de los factores \
comunes con su mayor exponente por los no comunes), para amplificar cada \
fracci\[OAcute]n de tal forma que todas tengan como denominador el \
m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo y luego sumar como fracciones \
homog\[EAcute]neas. Observe la suma realizada con el m\[EAcute]todo 1, \
haciendo uso de este m\[EAcute]todo, \
\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \*FractionBox[\(5\), \
\(12\)]\).\nLa descomposici\[OAcute]n en factores de los denominadores es: \!\
\(TraditionalForm\`4 = \*SuperscriptBox[\(2\), \(2\)]\)  y \
\!\(TraditionalForm\`12 = 3 \*SuperscriptBox[\(\:22192\), \(2\)]\), por lo \
que el m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo de los denominadores es: \
\!\(TraditionalForm\`3 \*SuperscriptBox[\(\:22192\), \(2\)] = 12\) (observe \
que \!\(TraditionalForm\`\*SuperscriptBox[\(2\), \(2\)]\) es factor com\
\[UAcute]n en ambos n\[UAcute]meros y \!\(TraditionalForm\`3\) es no com\
\[UAcute]n). La tarea ahora es amplificar ambas fracciones de tal manera que \
el denominador sea \!\(TraditionalForm\`12\).\n \
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"3\", \"4\"], \
\"+\", FractionBox[\"5\", \"12\"]}], \"=\", \
RowBox[{RowBox[{FractionBox[RowBox[{\"(\", RowBox[{\"3\", \" \", \"3\"}], \")\
\"}], RowBox[{\"(\", RowBox[{\"4\", \" \", \"3\"}], \")\"}]], \"+\", \
FractionBox[\"5\", \"12\"]}], \"=\", RowBox[{RowBox[{FractionBox[\"9\", \
\"12\"], \"+\", FractionBox[\"5\", \"12\"]}], \"=\", RowBox[{FractionBox[\"14\
\", \"12\"], \"=\", FractionBox[\"7\", \"6\"]}]}]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
Este m\[EAcute]todo trabaja con n\[UAcute]meros m\[AAcute]s peque\[NTilde]os \
y eso evita que se cometan errores de c\[AAcute]lculo."], 
                $CellContext`textPopUp$$[
                "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\):"], 
                $CellContext`textPopUp$$[
                "1. \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] - \
\*FractionBox[\(2\), \(5\)] + \*FractionBox[\(5\), \(2\)] - 3\)\n\
\!\(TraditionalForm\`m . c . m\\ \((4, 5, 2)\) = 20\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`20\).\n\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] - \*FractionBox[\(2\
\), \(5\)] + \*FractionBox[\(5\), \(2\)] - 3 = \(\*FractionBox[\(3\\ 5\), \(4\
\\ 5\)] - \*FractionBox[\(2\\ 4\), \(5\\ 4\)] + \*FractionBox[\(5\\ 10\), \(2\
\\ 10\)] - \*FractionBox[\(3\\ 20\), \(1\\ 20\)] = \(\*FractionBox[\(15\), \
\(20\)] - \*FractionBox[\(8\), \(20\)] + \*FractionBox[\(50\), \(20\)] - \
\*FractionBox[\(60\), \(20\)] = \(-\*FractionBox[\(3\), \(20\)]\)\)\)\)."], 
                $CellContext`textPopUp$$[
                "2. \!\(TraditionalForm\`2 - \*FractionBox[\(1\), \(3\)] + \
\*FractionBox[\(5\), \(6\)] - \*FractionBox[\(3\), \(4\)]\)\n\
\!\(TraditionalForm\`m . c . m\\ \((1, 3, 6, 4)\) = 12\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`12\).\n\!\(TraditionalForm\`2 - \*FractionBox[\(1\), \(3\)] + \
\*FractionBox[\(5\), \(6\)] - \*FractionBox[\(3\), \(4\)] = \
\(\*FractionBox[\(24\), \(12\)] - \*FractionBox[\(4\), \(12\)] + \
\*FractionBox[\(10\), \(12\)] - \*FractionBox[\(9\), \(12\)] = \
\(\*FractionBox[\(21\), \(12\)] = \*FractionBox[\(7\), \(4\)]\)\)\)."], 
                $CellContext`textPopUp$$[
                "3. \!\(TraditionalForm\`\*FractionBox[\(3\), \(20\)] - \
\*FractionBox[\(7\), \(10\)] + \*FractionBox[\(1\), \(4\)] - 1\)\n\
\!\(TraditionalForm\`m . c . m\\ \((20, 10, 4, 1)\) = 20\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`20\).\n\!\(TraditionalForm\`\*FractionBox[\(3\), \(20\)] - \
\*FractionBox[\(7\), \(10\)] + \*FractionBox[\(1\), \(4\)] - 1 = \
\(\*FractionBox[\(3\), \(20\)] - \*FractionBox[\(14\), \(20\)] + \
\*FractionBox[\(5\), \(20\)] - \*FractionBox[\(20\), \(20\)] = \
\(\*FractionBox[\(-26\), \(20\)] = \(-\*FractionBox[\(13\), \(10\)]\)\)\)\)"], 
                $CellContext`textPopUp$$[
                "4. \!\(TraditionalForm\`\(-\*FractionBox[\(1\), \(2\)]\) + \
\*FractionBox[\(3\), \(5\)] - \*FractionBox[\(1\), \(6\)] + \*FractionBox[\(2\
\), \(3\)]\)\n\!\(TraditionalForm\`m . c . m\\ \((2, 5, 6, 3)\) = 30\), luego \
se deben amplificar las fracciones para que queden con denominador \
\!\(TraditionalForm\`30\).\n\!\(TraditionalForm\`\(-\*FractionBox[\(1\), \
\(2\)]\) + \*FractionBox[\(3\), \(5\)] - \*FractionBox[\(1\), \(6\)] + \
\*FractionBox[\(2\), \(3\)] = \(\(-\*FractionBox[\(15\), \(30\)]\) + \
\*FractionBox[\(18\), \(30\)] - \*FractionBox[\(5\), \(30\)] + \*FractionBox[\
\(20\), \(30\)] = \(\*FractionBox[\(18\), \(30\)] = \*FractionBox[\(3\), \
\(5\)]\)\)\)."]}], 
              ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
             Deployed -> True], ImageSize -> All], "LinkHand"]}}, Alignment -> 
       Left], "Multimedia"]],
    DynamicModuleValues:>{{DownValues[$CellContext`framePane$$] = {HoldPattern[
           $CellContext`framePane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "Cuadro/Titulo", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPane$$] = {HoldPattern[
           $CellContext`textPane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "EmphasisText", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`style1$$] = {HoldPattern[
           $CellContext`style1$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style2$$] = {HoldPattern[
           $CellContext`style2$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style3$$] = {HoldPattern[
           $CellContext`style3$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`titlePopUp$$] = {HoldPattern[
           $CellContext`titlePopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama2$$, 
             FontFamily -> $CellContext`font1$$, $CellContext`color3$$, 
             Italic], "Text", LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPopUp$$] = {HoldPattern[
           $CellContext`textPopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama1$$, 
             FontFamily -> $CellContext`font1$$], "Text", LineIndent -> 0, 
            TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"89c7d376-9db2-439d-91a3-c4610d6718cc"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"99f1d00a-f54d-497c-ad93-15fbca5a7459"],

Cell[TextData[{
 "Si la imagen y la descripci\[OAcute]n deben ocupar ",
 Cell[BoxData[
  FormBox[
   FractionBox["2", "5"], TraditionalForm]],ExpressionUUID->
  "377e310c-7936-4556-9507-5efd350a9098"],
 " partes cada una, entonces entre las dos ocupar\[AAcute]n  ",
 Cell[BoxData[
  FormBox[
   FractionBox["4", "5"], TraditionalForm]],ExpressionUUID->
  "7f7163c4-50b8-4e18-83b2-b1696b202411"],
 " partes del \[AAcute]rea, por tanto, el t\[IAcute]tulo debe ocupar ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "5"], TraditionalForm]],ExpressionUUID->
  "fbe005ca-2819-435f-b03a-d7691a515736"],
 " parte del \[AAcute]rea. Una de las soluciones puede ser dividir esta parte \
en cinco y acomodar los objetos de tal manera que cumplan las condiciones \
descritas."
}], "Text",ExpressionUUID->"18159425-1813-4096-a8c5-96ec3c2932b7"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`rojo$$ = RGBColor[
    0.58, 0.09, 0.16], $CellContext`azul$$ = RGBColor[0, 
     Rational[69, 256], 
     Rational[31, 64]], $CellContext`azul2$$ = RGBColor[
     Rational[179, 256], 
     Rational[179, 256], 1], $CellContext`verde$$ = RGBColor[
     Rational[103, 128], 
     Rational[105, 128], 
     Rational[27, 256]], $CellContext`verde2$$ = RGBColor[
     Rational[45, 128], 
     Rational[217, 256], 
     Rational[1, 2]], $CellContext`fuente$$ = 
    "Gabriola", $CellContext`tama$$ = 30, $CellContext`anc$$ = 
    775, $CellContext`alto$$ = 350, $CellContext`tam$$ = 
    20, $CellContext`anchrow$$ = 356, $CellContext`loc1$$ = {5, 
    7}, $CellContext`loc2$$ = {95, 63}, $CellContext`area$$ = Dynamic[
     If[(100/(100 70)) 
       Abs[(Part[$CellContext`loc1$$, 1] - Part[$CellContext`loc2$$, 1]) (
          Part[$CellContext`loc1$$, 2] - Part[$CellContext`loc2$$, 2])] <= 
      100, 
      NumberForm[
      N[100/(100 70)] 
       Abs[(Part[$CellContext`loc1$$, 1] - Part[$CellContext`loc2$$, 1]) (
          Part[$CellContext`loc1$$, 2] - Part[$CellContext`loc2$$, 2])], {3, 
       1}], 100]]}, 
    PanelBox[
     TagBox[GridBox[{
        {
         StyleBox[
          
          TemplateBox[{
           "\"El \[AAcute]rea encerrada es \[DoubleRightArrow]    \"",
            DynamicBox[
             ToBoxes[
              
              If[(100/(100 70)) 
                Abs[(Part[$CellContext`loc1$$, 1] - 
                   Part[$CellContext`loc2$$, 1]) (
                   Part[$CellContext`loc1$$, 2] - 
                   Part[$CellContext`loc2$$, 2])] <= 100, 
               NumberForm[
               N[100/(100 70)] 
                Abs[(Part[$CellContext`loc1$$, 1] - 
                   Part[$CellContext`loc2$$, 1]) (
                   Part[$CellContext`loc1$$, 2] - 
                   Part[$CellContext`loc2$$, 2])], {3, 1}], 100], 
              TraditionalForm]],"\" %\""},
           "Row",
           DisplayFunction->(FrameBox[
             RowBox[{
               TemplateSlotSequence[1, "\[InvisibleSpace]"]}], FrameStyle -> 
             Automatic]& ),
           InterpretationFunction->(RowBox[{"Row", "[", 
              RowBox[{
                RowBox[{"{", 
                  TemplateSlotSequence[1, ","], "}"}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]& )], 
          "Multimedia",
          StripOnInput->False,
          FontSize->25]},
        {
         TagBox[GridBox[{
            {
             RowBox[{
              GraphicsBox[{
                {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
                 RectangleBox[{0, 0}, {100, 70}]}, 
                {RGBColor[1, 0, 0], AbsolutePointSize[7], 
                 PointBox[Dynamic[$CellContext`loc1$$]], 
                 PointBox[Dynamic[$CellContext`loc2$$]], 
                 {RGBColor[0, 1, 0], Opacity[0.5], 
                  RectangleBox[Dynamic[$CellContext`loc1$$], 
                   Dynamic[$CellContext`loc2$$]], 
                  LocatorBox[
                   Dynamic[$CellContext`loc1$$, ($CellContext`loc1$$ = 
                    Round[#])& ], None], 
                  LocatorBox[
                   Dynamic[$CellContext`loc2$$, ($CellContext`loc2$$ = 
                    Round[#])& ], None], 
                  StyleBox[{},
                   PlotRange -> {{0, 118.9}, {0, 84.1}}]}}, {
                 LineBox[{
                  Dynamic[{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc2$$, 2] + 2}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc2$$, 2] + 2}]}], 
                 StyleBox[InsetBox[
                   DynamicBox[ToBoxes[
                    Abs[
                    Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], TraditionalForm],
                    ImageSizeCache->{22., {0., 15.}}], 
                   Dynamic[{(Part[$CellContext`loc1$$, 1] + 
                    Part[$CellContext`loc2$$, 1])/2, 
                    Part[$CellContext`loc2$$, 2] + 2}], {0, 0}],
                  StripOnInput->False,
                  FontSize->20,
                  Background->RGBColor[
                    Rational[179, 256], 
                    Rational[179, 256], 1]]}, {
                 LineBox[{
                  Dynamic[{
                    Part[$CellContext`loc2$$, 1] - 2, 
                    Part[$CellContext`loc2$$, 2]}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1] - 2, 
                    Part[$CellContext`loc1$$, 2]}]}], 
                 StyleBox[InsetBox[
                   DynamicBox[ToBoxes[
                    Abs[
                    Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]], TraditionalForm],
                    ImageSizeCache->{22., {0., 15.}}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1], (
                    Part[$CellContext`loc1$$, 2] + 
                    Part[$CellContext`loc2$$, 2])/2}], {1, 0}],
                  StripOnInput->False,
                  FontSize->20,
                  Background->RGBColor[
                    Rational[45, 128], 
                    Rational[217, 256], 
                    Rational[1, 2]]]}, 
                {Dashing[{Small, Small}], 
                 DynamicBox[Typeset`ToBoxes[
                   Table[
                    
                    Line[{{Part[$CellContext`loc1$$, 1] + $CellContext`i (
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]]/3), 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + $CellContext`i (
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]]/3), 
                    Part[$CellContext`loc2$$, 2]}}], {$CellContext`i, 0, 3}], 
                   TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{33.58578643762689, 
                   666.4142135623731}, {-200.4142135623731, 
                   194.4142135623731}}], 
                 DynamicBox[Typeset`ToBoxes[
                   Line[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc1$$, 2]}}], TraditionalForm, 
                   Graphics],
                  
                  ImageSizeCache->{{33.58578643762691, 666.4142135623731}, {
                   191.58578643762692`, 194.4142135623731}}], 
                 DynamicBox[Typeset`ToBoxes[
                   Line[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc2$$, 2]}, {
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc2$$, 2]}}], TraditionalForm, 
                   Graphics],
                  
                  ImageSizeCache->{{33.58578643762691, 
                   666.4142135623731}, {-200.41421356237308`, \
-197.5857864376269}}]}, 
                DynamicBox[Typeset`ToBoxes[
                  Table[
                   Text[
                    Style[
                    Row[{"Parte ", $CellContext`i + 1}], 20], {
                    Part[$CellContext`loc1$$, 1] + ($CellContext`i/3 + 1/6) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], (1/2) 
                    Abs[Part[$CellContext`loc1$$, 2] + 
                    Part[$CellContext`loc2$$, 2]]}, {0, 0}], {$CellContext`i, 
                    0, 2}], TraditionalForm, Graphics],
                 ImageSizeCache->{{107.5, 592.5}, {-14.5, 8.5}}], 
                {Texture[
                  FormBox[
                   FrameBox[
                    StyleBox["\"imagen\"", 100, StripOnInput -> False], 
                    Background -> RGBColor[1, 0.85, 0.85], StripOnInput -> 
                    False], TraditionalForm]], EdgeForm[{Thickness[Large], 
                 Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{31.760693309010097`, 
                   248.2393066909899}, {-202.2393066909899, \
-38.7606933090101}}]}, 
                {Texture[
                  FormBox[
                   FrameBox[
                    StyleBox[
                    "\"t\[IAcute]tulo\"", 100, StripOnInput -> False], 
                    Background -> RGBColor[0.87, 0.94, 1], StripOnInput -> 
                    False], TraditionalForm]], EdgeForm[{Thickness[Large], 
                 Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{31.760693309010097`, 
                   248.2393066909899}, {-45.2393066909899, 
                   40.2393066909899}}]}, 
                {Texture[
                  FormBox[
                   FrameBox[
                    StyleBox[
                    "\"descripci\[OAcute]n\"", 100, StripOnInput -> False], 
                    Background -> RGBColor[0.88, 1, 0.88], StripOnInput -> 
                    False], TraditionalForm]], EdgeForm[{Thickness[Large], 
                 Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{31.760693309010097`, 248.2393066909899}, {
                   32.760693309010094`, 196.2393066909899}}]}, 
                {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
                 DynamicBox[Typeset`ToBoxes[
                   Table[
                    Line[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + ($CellContext`i/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]]/3, 
                    Part[$CellContext`loc1$$, 2] + ($CellContext`i/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}], {$CellContext`i, 0, 5}],
                    TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{33.58578643762689, 
                   246.4142135623731}, {-200.41421356237308`, 
                   194.41421356237313`}}]}},
               ImageSize->{700, 490},
               PlotRange->{{0, 100}, {0, 70}}], " ", 
              RotationBox[
               ItemBox[
                StyleBox[
                 
                 TemplateBox[{
                  "\"\[DoubleLongLeftArrow]        ancho del pliego:        \
70 cm        \[DoubleLongRightArrow]\""},
                  "RowDefault"],
                 StripOnInput->False,
                 LineColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 FrontFaceColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 BackFaceColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 GraphicsColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 FontFamily->"Gabriola",
                 FontSize->25,
                 FontColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]]],
                StripOnInput->False],
               BoxRotation->1.5707963267948966`]}], ""},
            {
             ItemBox[
              StyleBox[
               
               TemplateBox[{
                "\"\[DoubleLongLeftArrow]        largo del pliego:        100 \
cm        \[DoubleLongRightArrow]\""},
                "RowDefault"],
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               FrontFaceColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               BackFaceColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               GraphicsColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               FontFamily->"Gabriola",
               FontSize->25,
               FontColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]]],
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]],
    DynamicModuleValues:>{}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Answer",ExpressionUUID->\
"9572f4ec-0d9d-4d2b-ad17-de6e1d81e302"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Problema ",
 
 CounterBox["Section"],
 " (para realizar en la parte del centro)"
}], "Section",ExpressionUUID->"6b371664-4488-4bb7-8e2d-b742550aa6bc"],

Cell["\<\
Sandra tiene una receta de una torta de chocolate para 9 personas. Esa receta \
debe ir impresa dentro de un rect\[AAcute]ngulo que ocupe una tercera parte \
del \[AAcute]rea. En la mitad del resto de \[AAcute]rea debe escribir los \
ingredientes para hacer la misma torta, pero adapt\[AAcute]ndola para solo 4 \
personas. Por \[UAcute]ltimo, en el espacio que sobra puede pegar una imagen \
de la torta de chocolate.\
\>", "Text",ExpressionUUID->"210565e9-b4b4-4585-9a3d-c6a9b2fba6f8"],

Cell["La receta es la siguiente:", "Text",ExpressionUUID->"1536b16b-83f2-4743-8044-57e2462c86f2"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       ItemBox[
        StyleBox["\<\"Torta de chocolate para nueve personas\"\>",
         StripOnInput->False,
         FontWeight->Bold],
        Alignment->Center,
        StripOnInput->False], "\[SpanFromLeft]"},
      {
       StyleBox["\<\"Ingrediente\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"Cantidad y medida\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {"\<\"Mantequilla\"\>", "\<\"100 gramos\"\>"},
      {"\<\"Az\[UAcute]car\"\>", "\<\"1 taza\"\>"},
      {"\<\"Huevos\"\>", "\<\"4 unidades\"\>"},
      {"\<\"Cocoa\"\>", "\<\"6 cucharadas\"\>"},
      {"\<\"Harina de trigo\"\>", "\<\"1 taza y media\"\>"},
      {"\<\"Bicarbonato\"\>", "\<\"13 gramos\"\>"},
      {"\<\"Polvo de hornear\"\>", "\<\"20 gramos\"\>"},
      {"\<\"Jugo de naranja\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\nFractionBox[\\\"1\\\", \
\\\"4\\\"], TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]]]\\) de \
taza\"\>"},
      {"\<\"Leche\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\nFractionBox[\\\"1\\\", \
\\\"2\\\"], TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]]]\\) de \
taza\"\>"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"928d3ba8-1155-4a27-ad53-0a6a45d13280"],

Cell["\[DownQuestion]C\[OAcute]mo puede realizar el trabajo encargado?", \
"Ejercicio",ExpressionUUID->"e6936e0d-4dde-42f9-b080-39e06b5158e5"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`framePane$$, $CellContext`textPane$$, \
$CellContext`tabImage$$, $CellContext`tabText$$, $CellContext`style1$$, \
$CellContext`style2$$, $CellContext`style3$$, $CellContext`color1$$ = 
    RGBColor[0, 0, 
     Rational[1, 2]], $CellContext`color2$$ = RGBColor[
    0.2, 0.08, 0.28], $CellContext`color3$$ = RGBColor[
    0.796078431372549, 0.07058823529411765, 0.], $CellContext`tama1$$ = 
    15, $CellContext`tama2$$ = 18, $CellContext`tama3$$ = 
    25, $CellContext`font1$$ = "Georgia", $CellContext`page1$$ = 
    1, $CellContext`page2$$ = 1, $CellContext`page3$$ = 
    1, $CellContext`page4$$ = 1, $CellContext`page5$$ = 
    1, $CellContext`titlePopUp$$, $CellContext`textPopUp$$, \
$CellContext`panelWidth$$ = 750, $CellContext`bodyWidth$$ = 700}, 
    InterpretationBox[Cell[TextData[{
      "N\[UAcute]meros racionales como raz\[OAcute]n y proporci\[OAcute]n \
\[DoubleRightArrow]",
      "   ",
      Cell[BoxData[
       FormBox[
        TagBox[
         ButtonBox[
          
          InterpretationBox[Cell[
           "  enlace  ", "Text",ExpressionUUID->
            "43884902-61d0-47dc-a0f0-61c7a6194869"],
           TextCell["  enlace  ", "Text"]],
          Appearance->Automatic,
          ButtonFunction:>CreateDialog[{
             Pane[
              Column[{
                $CellContext`titlePopUp$$[
                "\!\(\*StyleBox[\"N\[UAcute]meros\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"como\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"raz\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"proporci\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                $CellContext`textPopUp$$[
                "Una \!\(\*StyleBox[\"raz\[OAcute]n\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\) es el cociente de dos cantidades, la raz\[OAcute]n \
entre la cantidad \!\(TraditionalForm\`a\) y la cantidad \
\!\(TraditionalForm\`b\) se expresa con la notaci\[OAcute]n de \
fracci\[OAcute]n \!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)]\) o con la \
notaci\[OAcute]n \!\(TraditionalForm\`a : b\). La fracci\[OAcute]n \
\!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)]\) como raz\[OAcute]n \
evidencia la comparaci\[OAcute]n bidireccional entre los valores \
\!\(TraditionalForm\`a\) y \!\(TraditionalForm\`b\), siendo esencial el orden \
en el que se citan las magnitudes comparadas."], 
                $CellContext`textPopUp$$[
                "Por ejemplo, en la clase de matem\[AAcute]ticas hay \
\!\(TraditionalForm\`12\) mujeres por cada \!\(TraditionalForm\`28\) hombres, \
eso significa que la raz\[OAcute]n entre mujeres y hombres es de \
\!\(TraditionalForm\`\*FractionBox[\(12\), \(28\)]\)  que al simplificarse, \
es lo mismo que \!\(TraditionalForm\`\*FractionBox[\(3\), \(7\)]\), lo que \
quiere decir que hay \!\(TraditionalForm\`3\) mujeres por cada \
\!\(TraditionalForm\`7\) hombres."], 
                $CellContext`textPopUp$$[
                "Cuando dos pares de n\[UAcute]meros, como \
\!\(TraditionalForm\`5, 4\) y \!\(TraditionalForm\`20, 16\) tienen la misma \
raz\[OAcute]n, se dice que ellas son \
\!\(\*StyleBox[\"proporcionales\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\
\)\!\(\*StyleBox[\".\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\) La \
expresi\[OAcute]n\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{FractionBox[\"5\", \"4\"], \"=\", \
FractionBox[\"20\", \"16\"]}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"=\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\nestablece que las parejas \
\!\(TraditionalForm\`5, 4\) y \!\(TraditionalForm\`20, 16\) son \
proporcionales. \
\!\(\*StyleBox[\"5\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"es\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"4\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"como\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"20\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"es\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"16\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)"], 
                $CellContext`textPopUp$$[
                "En los problemas que involucran proporciones usualmente se \
desconoce alg\[UAcute]n t\[EAcute]rmino, para resolver expesiones como \
\!\(TraditionalForm\`\*FractionBox[\(x\), \(a\)] = \*FractionBox[\(c\), \
\(d\)]\), donde \!\(TraditionalForm\`x\) se desconoce, se multiplica en cruz \
las cantidades y luego se divide a ambos lados para dejar \!\(TraditionalForm\
\`x\) sola:\n\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"d\", \" \", \
\"x\"}], \"=\", RowBox[{\"a\", \" \", \"c\"}]}]},{RowBox[{\"x\", \"=\", \
FractionBox[RowBox[{\"a\", \" \", \"c\"}], \"d\"]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\nde \
esta manera se puede encontrar el valor desconocido en la \
proporci\[OAcute]n."], 
                $CellContext`textPopUp$$[
                "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\):"], 
                $CellContext`textPopUp$$[
                "1. Luis tiene \!\(TraditionalForm\`24\) a\[NTilde]os y la \
raz\[OAcute]n entre la edad de \[EAcute]l y la de su hermano es de \
\!\(TraditionalForm\`6\) a \!\(TraditionalForm\`5\), \[DownQuestion]cu\
\[AAcute]l es la edad del hermano?\n\
\!\(TraditionalForm\`\*FractionBox[\((Edad\\ de\\ Luis)\), \((Edad\\ del\\ \
hermano)\)] = \(\*FractionBox[\(6\), \(5\)] = \*FractionBox[\(24\), \
\(x\)]\)\) ,\npara saber a cu\[AAcute]nto equivale \!\(TraditionalForm\`x\), \
se multiplica en cruz \n\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"6\
\", \"x\"}], \"=\", RowBox[{\"24\", \" \", \"5\"}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
luego se divide entre \!\(TraditionalForm\`6\), por lo tanto \
\!\(TraditionalForm\`x = \(\*FractionBox[\(24\\ 5\), \(6\)] = \(4\\ 5 = \
20\)\)\), luego la edad del hermano es 20 a\[NTilde]os."], 
                $CellContext`textPopUp$$[
                "2. Para elaborar un pastel se usan \!\(TraditionalForm\`3\) \
libras de harina de trigo por \!\(TraditionalForm\`2\) libras de mantequilla, \
si se quieren usar \!\(TraditionalForm\`8\) libras de harina de trigo, \
\[DownQuestion]cu\[AAcute]nta mantequilla se debe utilizar?\n\
\!\(TraditionalForm\`\*FractionBox[\((Libras\\ de\\ harina)\), \((Libras\\ de\
\\ mantequilla)\)] = \(\*FractionBox[\(3\), \(2\)] = \*FractionBox[\(8\), \(x\
\)]\)\),  \nOtra manera de encontrar la cantidad desconocida es utilizar la \
\!\(\*StyleBox[\"regla\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"tres\",FontSlant->\"Italic\"]\), \
por lo tanto \!\(TraditionalForm\`x = \(\*FractionBox[\((8  \:22192)\), \
\(3\)] = \*FractionBox[\(16\), \(3\)]\)\), \nentonces, se necesitan \
\!\(TraditionalForm\`\*FractionBox[\(16\), \(3\)]\) libras de \
mantequilla."]}], 
              ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
             Deployed -> True],
          Evaluator->Automatic,
          ImageSize->All,
          Method->"Preemptive"],
         MouseAppearanceTag["LinkHand"]], TraditionalForm]],ExpressionUUID->
       "fe86ae05-c5d4-4c25-9808-34af2b0225a2"]
     }], "Multimedia",ExpressionUUID->"57d5e56e-c657-456c-8d33-02ca30004045"],
     TextCell[
      Row[{
       "N\[UAcute]meros racionales como raz\[OAcute]n y proporci\[OAcute]n \
\[DoubleRightArrow]", "   ", 
        MouseAppearance[
         Button[
          TextCell["  enlace  ", "Text"], 
          CreateDialog[{
            Pane[
             Column[{
               $CellContext`titlePopUp$$[
               "\!\(\*StyleBox[\"N\[UAcute]meros\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"como\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"raz\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"proporci\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
               $CellContext`textPopUp$$[
               "Una \!\(\*StyleBox[\"raz\[OAcute]n\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\) es el cociente de dos cantidades, la raz\[OAcute]n \
entre la cantidad \!\(TraditionalForm\`a\) y la cantidad \
\!\(TraditionalForm\`b\) se expresa con la notaci\[OAcute]n de \
fracci\[OAcute]n \!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)]\) o con la \
notaci\[OAcute]n \!\(TraditionalForm\`a : b\). La fracci\[OAcute]n \
\!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)]\) como raz\[OAcute]n \
evidencia la comparaci\[OAcute]n bidireccional entre los valores \
\!\(TraditionalForm\`a\) y \!\(TraditionalForm\`b\), siendo esencial el orden \
en el que se citan las magnitudes comparadas."], 
               $CellContext`textPopUp$$[
               "Por ejemplo, en la clase de matem\[AAcute]ticas hay \
\!\(TraditionalForm\`12\) mujeres por cada \!\(TraditionalForm\`28\) hombres, \
eso significa que la raz\[OAcute]n entre mujeres y hombres es de \
\!\(TraditionalForm\`\*FractionBox[\(12\), \(28\)]\)  que al simplificarse, \
es lo mismo que \!\(TraditionalForm\`\*FractionBox[\(3\), \(7\)]\), lo que \
quiere decir que hay \!\(TraditionalForm\`3\) mujeres por cada \
\!\(TraditionalForm\`7\) hombres."], 
               $CellContext`textPopUp$$[
               "Cuando dos pares de n\[UAcute]meros, como \!\(TraditionalForm\
\`5, 4\) y \!\(TraditionalForm\`20, 16\) tienen la misma raz\[OAcute]n, se \
dice que ellas son \
\!\(\*StyleBox[\"proporcionales\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\
\)\!\(\*StyleBox[\".\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\) La \
expresi\[OAcute]n\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{FractionBox[\"5\", \"4\"], \"=\", \
FractionBox[\"20\", \"16\"]}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"=\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\nestablece que las parejas \
\!\(TraditionalForm\`5, 4\) y \!\(TraditionalForm\`20, 16\) son \
proporcionales. \
\!\(\*StyleBox[\"5\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"es\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"4\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"como\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"20\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"es\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"16\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)"], 
               $CellContext`textPopUp$$[
               "En los problemas que involucran proporciones usualmente se \
desconoce alg\[UAcute]n t\[EAcute]rmino, para resolver expesiones como \
\!\(TraditionalForm\`\*FractionBox[\(x\), \(a\)] = \*FractionBox[\(c\), \
\(d\)]\), donde \!\(TraditionalForm\`x\) se desconoce, se multiplica en cruz \
las cantidades y luego se divide a ambos lados para dejar \!\(TraditionalForm\
\`x\) sola:\n\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"d\", \" \", \
\"x\"}], \"=\", RowBox[{\"a\", \" \", \"c\"}]}]},{RowBox[{\"x\", \"=\", \
FractionBox[RowBox[{\"a\", \" \", \"c\"}], \"d\"]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\nde \
esta manera se puede encontrar el valor desconocido en la \
proporci\[OAcute]n."], 
               $CellContext`textPopUp$$[
               "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\):"], 
               $CellContext`textPopUp$$[
               "1. Luis tiene \!\(TraditionalForm\`24\) a\[NTilde]os y la raz\
\[OAcute]n entre la edad de \[EAcute]l y la de su hermano es de \
\!\(TraditionalForm\`6\) a \!\(TraditionalForm\`5\), \[DownQuestion]cu\
\[AAcute]l es la edad del hermano?\n\
\!\(TraditionalForm\`\*FractionBox[\((Edad\\ de\\ Luis)\), \((Edad\\ del\\ \
hermano)\)] = \(\*FractionBox[\(6\), \(5\)] = \*FractionBox[\(24\), \
\(x\)]\)\) ,\npara saber a cu\[AAcute]nto equivale \!\(TraditionalForm\`x\), \
se multiplica en cruz \n\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"6\
\", \"x\"}], \"=\", RowBox[{\"24\", \" \", \"5\"}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
luego se divide entre \!\(TraditionalForm\`6\), por lo tanto \
\!\(TraditionalForm\`x = \(\*FractionBox[\(24\\ 5\), \(6\)] = \(4\\ 5 = \
20\)\)\), luego la edad del hermano es 20 a\[NTilde]os."], 
               $CellContext`textPopUp$$[
               "2. Para elaborar un pastel se usan \!\(TraditionalForm\`3\) \
libras de harina de trigo por \!\(TraditionalForm\`2\) libras de mantequilla, \
si se quieren usar \!\(TraditionalForm\`8\) libras de harina de trigo, \
\[DownQuestion]cu\[AAcute]nta mantequilla se debe utilizar?\n\
\!\(TraditionalForm\`\*FractionBox[\((Libras\\ de\\ harina)\), \((Libras\\ de\
\\ mantequilla)\)] = \(\*FractionBox[\(3\), \(2\)] = \*FractionBox[\(8\), \(x\
\)]\)\),  \nOtra manera de encontrar la cantidad desconocida es utilizar la \
\!\(\*StyleBox[\"regla\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"tres\",FontSlant->\"Italic\"]\), \
por lo tanto \!\(TraditionalForm\`x = \(\*FractionBox[\((8  \:22192)\), \
\(3\)] = \*FractionBox[\(16\), \(3\)]\)\), \nentonces, se necesitan \
\!\(TraditionalForm\`\*FractionBox[\(16\), \(3\)]\) libras de \
mantequilla."]}], 
             ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
            Deployed -> True], ImageSize -> All], "LinkHand"]}], 
      "Multimedia"]],
    DynamicModuleValues:>{{DownValues[$CellContext`framePane$$] = {HoldPattern[
           $CellContext`framePane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "Cuadro/Titulo", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPane$$] = {HoldPattern[
           $CellContext`textPane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "EmphasisText", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`style1$$] = {HoldPattern[
           $CellContext`style1$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style2$$] = {HoldPattern[
           $CellContext`style2$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style3$$] = {HoldPattern[
           $CellContext`style3$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`titlePopUp$$] = {HoldPattern[
           $CellContext`titlePopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama2$$, 
             FontFamily -> $CellContext`font1$$, $CellContext`color3$$, 
             Italic], "Text", LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPopUp$$] = {HoldPattern[
           $CellContext`textPopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama1$$, 
             FontFamily -> $CellContext`font1$$], "Text", LineIndent -> 0, 
            TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"6165f02a-0135-4798-ad46-e1ea1980b7c5"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"d77d49bf-be0e-456d-a809-c1b7bca268a6"],

Cell[TextData[{
 "Como se tiene una receta para nueve personas, es necesario \
\[OpenCurlyDoubleQuote]",
 StyleBox["disminuirla proporcionalmente",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] a una receta para cuatro personas, esto significa \
encontrar el ",
 StyleBox["operador",
  FontWeight->"Bold"],
 " que ajustar\[AAcute] los ingredientes."
}], "Text",ExpressionUUID->"87cc5a04-fc47-4dbd-9c5a-b17c7624e2c1"],

Cell[TextData[{
 "Como las medidas de los ingredientes est\[AAcute]n para nueve personas, \
cada ingrediente se debe dividir por 9 para as\[IAcute] saber cu\[AAcute]l es \
la cantidad para una persona. Luego, como la torta es para 4 personas, es \
necesario multiplicar por 4.  Por tanto, el operador que va a actuar sobre \
cada ingrediente como un achicador de cada medida es ",
 Cell[BoxData[
  FormBox[
   FractionBox["4", "9"], TraditionalForm]],ExpressionUUID->
  "73e22a77-2bac-4bbb-a4c5-6b066082936a"],
 "."
}], "Text",ExpressionUUID->"58ecea7e-e521-4249-b349-f1aa086bc1bc"],

Cell["\<\
Con esta informaci\[OAcute]n se procede a aplicar el operador a cada medida \
de los ingredientes, los resultados se aproximan a cantidades \
\[OpenCurlyDoubleQuote]adecuadas\[CloseCurlyDoubleQuote] en el contexto que \
se est\[AAcute] trabajando (por ejemplo, no tiene sentido decir 1.7 huevos \
\[DownQuestion]o s\[IAcute]?):\
\>", "Text",ExpressionUUID->"80a5b0e9-f95b-4203-a356-864ed577db61"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       ItemBox[
        StyleBox["\<\"Torta de chocolate para \\!\\(\\*\\nStyleBox[\\\"cuatro\
\\\",\\nFontColor->RGBColor[0, 0, 1]]\\) personas\"\>",
         StripOnInput->False,
         FontWeight->Bold],
        Alignment->Center,
        StripOnInput->False], "\[SpanFromLeft]", "\[SpanFromLeft]", 
       "\[SpanFromLeft]"},
      {
       StyleBox["\<\"Ingrediente\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"Cantidad y medida\\n (original)\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"Cantidad y medida\\n (ajustada)\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"Cantidad y medida\\n (adecuada)\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {"\<\"Mantequilla\"\>", "\<\"100 gramos\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\nRowBox[{\\\"100\\\", \\\"\[Times]\\\", \\n\\n    \
StyleBox[\\nFractionBox[\\\"4\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[0, 0, 1]]}], \\\"=\\\", \\n\\n   \
RowBox[{\\nStyleBox[\\nFractionBox[\\\"400\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[1, 0, 0]], \\\"\[TildeTilde]\\\", \\\"44.43\\\"}]}], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]]]\\)\"\>", \
"\<\"44.5 gramos\"\>"},
      {"\<\"Az\[UAcute]car\"\>", "\<\"1 taza\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\nRowBox[{\\\"1\\\", \\\"\[Times]\\\", \\n\\n    \
StyleBox[\\nFractionBox[\\\"4\\\", \\\"9\\\"],\\nFontColor->RGBColor[0, 0, \
1]]}], \\n\\n   StyleBox[\\\"=\\\",\\nFontColor->RGBColor[0, 0, 1]], \\n\\n   \
RowBox[{\\nStyleBox[\\nFractionBox[\\\"4\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[1, 0, 0]], \\\"\[TildeTilde]\\\", \\\"0.43\\\"}]}], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]]]\\)\"\>", \
"\<\"media taza\"\>"},
      {"\<\"Huevos\"\>", "\<\"4 unidades\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\nRowBox[{\\\"4\\\", \\\"\[Times]\\\", \\n\\n    \
StyleBox[\\nFractionBox[\\\"4\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[0, 0, 1]]}], \\\"=\\\", \\n\\n   \
RowBox[{\\nStyleBox[\\nFractionBox[\\\"16\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[1, 0, 0]], \\\"\[TildeTilde]\\\", \\\"1.78\\\"}]}], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]]]\\)\"\>", "\<\"2 \
unidades\"\>"},
      {"\<\"Cocoa\"\>", "\<\"6 cucharadas\"\>", "\<\"\\!\\(\\*Cell[TextData[{\
\\n\\\"6\[Times]\\\",\\nCell[BoxData[\\nFormBox[\\n\\n   RowBox[{\\nStyleBox[\
\\nFractionBox[\\\"4\\\", \\\"9\\\"],\\n\\n     FontColor->RGBColor[0, 0, \
1]], \\\"=\\\", \\n\\n    RowBox[{\\nStyleBox[\\nFractionBox[\\\"8\\\", \\\"3\
\\\"],\\n\\n      FontColor->RGBColor[1, 0, 0]], \\\"\[TildeTilde]\\\", \
\\\"2.67\\\"}]}], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]\\n}]]\\)\"\>", \
"\<\"2 cucharadas y media\"\>"},
      {"\<\"Harina de trigo\"\>", "\<\"1 taza y media\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\nRowBox[{\\nFractionBox[\\\"3\\\", \\\"2\\\"], \\\"\[Times]\\\", \
\\n\\n    StyleBox[\\nFractionBox[\\\"4\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[0, 0, 1]]}], \\\"=\\\", \\n\\n   \
RowBox[{\\nStyleBox[\\nFractionBox[\\\"2\\\", \\\"3\\\"],\\n\\n     \
FontColor->RGBColor[1, 0, 0]], \\\"\[TildeTilde]\\\", \\\"0.67\\\"}]}], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]]]\\)\"\>", \
"\<\"media taza y \\n una cucharada\"\>"},
      {"\<\"Bicarbonato\"\>", "\<\"13 gramos\"\>", \
"\<\"\\!\\(\\*Cell[TextData[{\\nCell[BoxData[\\nFormBox[\\n\\n   \
RowBox[{\\nRowBox[{\\\"13\\\", \\\"\[Times]\\\", \\n\\n     \
StyleBox[\\nFractionBox[\\\"4\\\", \\\"9\\\"],\\n\\n      \
FontColor->RGBColor[0, 0, 1]]}], \\\"=\\\", \\n\\n    \
RowBox[{\\nStyleBox[\\nFractionBox[\\\"52\\\", \\\"9\\\"],\\n\\n      \
FontColor->RGBColor[1, 0, 0]], \\\"\[TildeTilde]\\\"}]}], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"],\\n\\\"5.78\\\"\\n}]\
]\\)\"\>", "\<\"6 gramos\"\>"},
      {"\<\"Polvo de hornear\"\>", "\<\"20 gramos\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\nRowBox[{\\\"20\\\", \\\"\[Times]\\\", \\n\\n    \
StyleBox[\\nFractionBox[\\\"4\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[0, 0, 1]]}], \\\"=\\\", \\n\\n   \
RowBox[{\\nStyleBox[\\nFractionBox[\\\"80\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[1, 0, 0]], \\\"\[TildeTilde]\\\", \\\"8.89\\\"}]}], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]]]\\)\"\>", "\<\"9 \
gramos\"\>"},
      {"\<\"Jugo de naranja\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\nFractionBox[\\\"1\\\", \
\\\"4\\\"], TraditionalForm]]]]]\\) de taza\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\nRowBox[{\\nFractionBox[\\\"1\\\", \\\"4\\\"], \\\"\[Times]\\\", \
\\n\\n    StyleBox[\\nFractionBox[\\\"4\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[0, 0, 1]]}], \\\"=\\\", \\n\\n   \
RowBox[{\\nStyleBox[\\nFractionBox[\\\"1\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[1, 0, 0]], \\\"\[TildeTilde]\\\", \\\"0.11\\\"}]}], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]]]\\)\"\>", "\<\"una \
cucharada\"\>"},
      {"\<\"Leche\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\nFractionBox[\\\"1\\\", \
\\\"2\\\"], TraditionalForm]]]]]\\) de taza\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\n\\n  \
RowBox[{\\nRowBox[{\\nFractionBox[\\\"1\\\", \\\"2\\\"], \\\"\[Times]\\\", \
\\n\\n    StyleBox[\\nFractionBox[\\\"4\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[0, 0, 1]]}], \\\"=\\\", \\n\\n   \
RowBox[{\\nStyleBox[\\nFractionBox[\\\"2\\\", \\\"9\\\"],\\n\\n     \
FontColor->RGBColor[1, 0, 0]], \\\"\[TildeTilde]\\\", \\\"0.22\\\"}]}], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]]]\\)\"\>", "\<\"\\!\
\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\nFractionBox[\\\"1\\\", \\\"4\\\
\"], TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]]]\\)de \
taza\"\>"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"40851dea-e15c-409d-a33b-483f7c721a7f"],

Cell["resumiendo, la nueva receta ser\[IAcute]a", "Text",ExpressionUUID->"7e45c7bb-101f-493d-9a4b-020590e744a7"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {
       ItemBox[
        StyleBox["\<\"Torta de chocolate para \\!\\(\\*\\nStyleBox[\\\"cuatro\
\\\",\\nFontColor->RGBColor[0, 0, 1]]\\) personas\"\>",
         StripOnInput->False,
         FontWeight->Bold],
        Alignment->Center,
        StripOnInput->False], "\[SpanFromLeft]"},
      {
       StyleBox["\<\"Ingrediente\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"Cantidad y medida\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {"\<\"Mantequilla\"\>", "\<\"44.5 gramos\"\>"},
      {"\<\"Az\[UAcute]car\"\>", "\<\"media taza\"\>"},
      {"\<\"Huevos\"\>", "\<\"2 unidades\"\>"},
      {"\<\"Cocoa\"\>", "\<\"2 cucharadas y media\"\>"},
      {"\<\"Harina de trigo\"\>", "\<\"media taza y una cucharada\"\>"},
      {"\<\"Bicarbonato\"\>", "\<\"6 gramos\"\>"},
      {"\<\"Polvo de hornear\"\>", "\<\"9 gramos\"\>"},
      {"\<\"Jugo de naranja\"\>", "\<\"una cucharada\"\>"},
      {"\<\"Leche\"\>", \
"\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\nFractionBox[\\\"1\\\", \
\\\"4\\\"], TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"]]]\\)de \
taza\"\>"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"5e6d8289-e0c2-46b2-868b-8b491d64ec38"],

Cell["\<\
Ahora se deben colocar en el cartel. Seg\[UAcute]n el problema se tienen las \
siguientes condiciones\
\>", "Text",ExpressionUUID->"958224b3-0fb8-4a42-ac53-0225b8beb6cf"],

Cell[CellGroupData[{

Cell["Receta original: tercera parte", "Item",ExpressionUUID->"bece8b87-dadf-453b-bff1-b3af948acea5"],

Cell["Receta nueva: en la mitad del resto", "Item",ExpressionUUID->"e082378e-92c7-413a-911c-e77eb240a21d"],

Cell["Imagen: en el resto", "Item",ExpressionUUID->"5960d7d7-14c6-4003-b38b-a2b269de9b55"]
}, Open  ]],

Cell[TextData[{
 "Entonces, la receta original ocupa ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "3"], TraditionalForm]],ExpressionUUID->
  "009cd5aa-5c3b-4b6a-80db-8bb78507ae3f"],
 " del \[AAcute]rea, por tanto, sobran ",
 Cell[BoxData[
  FormBox[
   FractionBox["2", "3"], TraditionalForm]],ExpressionUUID->
  "e923ada1-f50e-4580-af37-f33a917849a3"],
 " pues: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "-", 
     FractionBox["1", "3"]}], "=", 
    FractionBox["2", "3"]}], TraditionalForm]],ExpressionUUID->
  "62781158-23c0-4d28-84d4-fdfe2d335e1d"],
 "."
}], "Text",ExpressionUUID->"b9741235-45b4-4938-ba2a-8b652d1d5a9c"],

Cell[TextData[{
 "La receta nueva ocupa la mitad del resto, es decir ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      FractionBox["2", "3"], ")"}], 
     RowBox[{"(", 
      FractionBox["1", "2"], ")"}]}], "=", 
    FractionBox["1", "3"]}], TraditionalForm]],ExpressionUUID->
  "ceba9b5c-2fde-4ad9-881b-1a4ee397b6f5"],
 ", o sea, la tercera parte (igual que la receta original)."
}], "Text",ExpressionUUID->"1ea38985-27b9-441a-bc2c-8fcaeea0a02e"],

Cell[TextData[{
 "Como ya se utilizaron ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "3"], "+", 
     FractionBox["1", "3"]}], "=", 
    FractionBox["2", "3"]}], TraditionalForm]],ExpressionUUID->
  "a2236edc-0bb1-4f3a-8cf9-233e9f21a406"],
 " dos tercios del \[AAcute]rea lo que falta por utilizar es ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "3"], TraditionalForm]],ExpressionUUID->
  "a14ddfcb-b49e-4f66-b0bb-ee980a243a19"],
 ", por tanto, la imagen ocupa ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "3"], TraditionalForm]],ExpressionUUID->
  "9378b730-0794-4e5e-96e6-c8af7522c41d"],
 " del \[AAcute]rea."
}], "Text",ExpressionUUID->"ac5aadfe-45ce-423f-a9b5-44626a552484"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`rojo$$ = RGBColor[
    0.58, 0.09, 0.16], $CellContext`azul$$ = RGBColor[0, 
     Rational[69, 256], 
     Rational[31, 64]], $CellContext`azul2$$ = RGBColor[
     Rational[179, 256], 
     Rational[179, 256], 1], $CellContext`verde$$ = RGBColor[
     Rational[103, 128], 
     Rational[105, 128], 
     Rational[27, 256]], $CellContext`verde2$$ = RGBColor[
     Rational[45, 128], 
     Rational[217, 256], 
     Rational[1, 2]], $CellContext`fuente$$ = 
    "Gabriola", $CellContext`tama$$ = 30, $CellContext`anc$$ = 
    775, $CellContext`alto$$ = 350, $CellContext`tam$$ = 
    20, $CellContext`anchrow$$ = 356, $CellContext`loc1$$ = {5, 
    7}, $CellContext`loc2$$ = {95, 63}, $CellContext`area$$ = Dynamic[
     If[(100/(100 70)) 
       Abs[(Part[$CellContext`loc1$$, 1] - Part[$CellContext`loc2$$, 1]) (
          Part[$CellContext`loc1$$, 2] - Part[$CellContext`loc2$$, 2])] <= 
      100, 
      NumberForm[
      N[100/(100 70)] 
       Abs[(Part[$CellContext`loc1$$, 1] - Part[$CellContext`loc2$$, 1]) (
          Part[$CellContext`loc1$$, 2] - Part[$CellContext`loc2$$, 2])], {3, 
       1}], 100]]}, 
    PanelBox[
     TagBox[GridBox[{
        {
         StyleBox[
          
          TemplateBox[{
           "\"El \[AAcute]rea encerrada es \[DoubleRightArrow]    \"",
            DynamicBox[
             ToBoxes[
              
              If[(100/(100 70)) 
                Abs[(Part[$CellContext`loc1$$, 1] - 
                   Part[$CellContext`loc2$$, 1]) (
                   Part[$CellContext`loc1$$, 2] - 
                   Part[$CellContext`loc2$$, 2])] <= 100, 
               NumberForm[
               N[100/(100 70)] 
                Abs[(Part[$CellContext`loc1$$, 1] - 
                   Part[$CellContext`loc2$$, 1]) (
                   Part[$CellContext`loc1$$, 2] - 
                   Part[$CellContext`loc2$$, 2])], {3, 1}], 100], 
              TraditionalForm]],"\" %\""},
           "Row",
           DisplayFunction->(FrameBox[
             RowBox[{
               TemplateSlotSequence[1, "\[InvisibleSpace]"]}], FrameStyle -> 
             Automatic]& ),
           InterpretationFunction->(RowBox[{"Row", "[", 
              RowBox[{
                RowBox[{"{", 
                  TemplateSlotSequence[1, ","], "}"}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]& )], 
          "Multimedia",
          StripOnInput->False,
          FontSize->25]},
        {
         TagBox[GridBox[{
            {
             RowBox[{
              GraphicsBox[{
                {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
                 RectangleBox[{0, 0}, {100, 70}]}, 
                {RGBColor[1, 0, 0], AbsolutePointSize[7], 
                 PointBox[Dynamic[$CellContext`loc1$$]], 
                 PointBox[Dynamic[$CellContext`loc2$$]], 
                 {RGBColor[0, 1, 0], Opacity[0.5], 
                  RectangleBox[Dynamic[$CellContext`loc1$$], 
                   Dynamic[$CellContext`loc2$$]], 
                  LocatorBox[
                   Dynamic[$CellContext`loc1$$, ($CellContext`loc1$$ = 
                    Round[#])& ], None], 
                  LocatorBox[
                   Dynamic[$CellContext`loc2$$, ($CellContext`loc2$$ = 
                    Round[#])& ], None], 
                  StyleBox[{},
                   PlotRange -> {{0, 118.9}, {0, 84.1}}]}}, {
                 LineBox[{
                  Dynamic[{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc2$$, 2] + 2}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc2$$, 2] + 2}]}], 
                 StyleBox[InsetBox[
                   DynamicBox[ToBoxes[
                    Abs[
                    Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], TraditionalForm],
                    ImageSizeCache->{22., {0., 15.}}], 
                   Dynamic[{(Part[$CellContext`loc1$$, 1] + 
                    Part[$CellContext`loc2$$, 1])/2, 
                    Part[$CellContext`loc2$$, 2] + 2}], {0, 0}],
                  StripOnInput->False,
                  FontSize->20,
                  Background->RGBColor[
                    Rational[179, 256], 
                    Rational[179, 256], 1]]}, {
                 LineBox[{
                  Dynamic[{
                    Part[$CellContext`loc2$$, 1] - 2, 
                    Part[$CellContext`loc2$$, 2]}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1] - 2, 
                    Part[$CellContext`loc1$$, 2]}]}], 
                 StyleBox[InsetBox[
                   DynamicBox[ToBoxes[
                    Abs[
                    Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]], TraditionalForm],
                    ImageSizeCache->{22., {0., 15.}}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1], (
                    Part[$CellContext`loc1$$, 2] + 
                    Part[$CellContext`loc2$$, 2])/2}], {1, 0}],
                  StripOnInput->False,
                  FontSize->20,
                  Background->RGBColor[
                    Rational[45, 128], 
                    Rational[217, 256], 
                    Rational[1, 2]]]}, 
                {Dashing[{Small, Small}], 
                 DynamicBox[Typeset`ToBoxes[
                   Table[
                    
                    Line[{{Part[$CellContext`loc1$$, 1] + $CellContext`i (
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]]/3), 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + $CellContext`i (
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]]/3), 
                    Part[$CellContext`loc2$$, 2]}}], {$CellContext`i, 0, 3}], 
                   TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{33.58578643762689, 
                   666.4142135623731}, {-200.4142135623731, 
                   194.4142135623731}}], 
                 DynamicBox[Typeset`ToBoxes[
                   Line[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc1$$, 2]}}], TraditionalForm, 
                   Graphics],
                  
                  ImageSizeCache->{{33.58578643762691, 666.4142135623731}, {
                   191.58578643762692`, 194.4142135623731}}], 
                 DynamicBox[Typeset`ToBoxes[
                   Line[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc2$$, 2]}, {
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc2$$, 2]}}], TraditionalForm, 
                   Graphics],
                  
                  ImageSizeCache->{{33.58578643762691, 
                   666.4142135623731}, {-200.41421356237308`, \
-197.5857864376269}}]}, 
                DynamicBox[Typeset`ToBoxes[
                  Table[
                   Text[
                    Style[
                    Row[{"Parte ", $CellContext`i + 1}], 20], {
                    Part[$CellContext`loc1$$, 1] + ($CellContext`i/3 + 1/6) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], (1/2) 
                    Abs[Part[$CellContext`loc1$$, 2] + 
                    Part[$CellContext`loc2$$, 2]]}, {0, 0}], {$CellContext`i, 
                    0, 2}], TraditionalForm, Graphics],
                 ImageSizeCache->{{107.5, 592.5}, {-14.5, 8.5}}], 
                {Texture[
                  FormBox[
                   FrameBox[
                    StyleBox["\"imagen\"", 100, StripOnInput -> False], 
                    Background -> RGBColor[1, 0.85, 0.85], StripOnInput -> 
                    False], TraditionalForm]], EdgeForm[{Thickness[Large], 
                 Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{31.760693309010097`, 
                   248.2393066909899}, {-202.2393066909899, \
-38.7606933090101}}]}, 
                {Texture[
                  FormBox[
                   FrameBox[
                    StyleBox[
                    "\"t\[IAcute]tulo\"", 100, StripOnInput -> False], 
                    Background -> RGBColor[0.87, 0.94, 1], StripOnInput -> 
                    False], TraditionalForm]], EdgeForm[{Thickness[Large], 
                 Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{31.760693309010097`, 
                   248.2393066909899}, {-45.2393066909899, 
                   40.2393066909899}}]}, 
                {Texture[
                  FormBox[
                   FrameBox[
                    StyleBox[
                    "\"descripci\[OAcute]n\"", 100, StripOnInput -> False], 
                    Background -> RGBColor[0.88, 1, 0.88], StripOnInput -> 
                    False], TraditionalForm]], EdgeForm[{Thickness[Large], 
                 Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{31.760693309010097`, 248.2393066909899}, {
                   32.760693309010094`, 196.2393066909899}}]}, 
                {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
                 DynamicBox[Typeset`ToBoxes[
                   Table[
                    Line[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + ($CellContext`i/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]]/3, 
                    Part[$CellContext`loc1$$, 2] + ($CellContext`i/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}], {$CellContext`i, 0, 5}],
                    TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{33.58578643762689, 
                   246.4142135623731}, {-200.41421356237308`, 
                   194.41421356237313`}}]}, 
                {Texture[
                  FormBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztnU2u+zh2xd3JpIfZQsbZQOBZRkGmHWQB3Ui5kUkFqG6gkV14NZ72Qt5i
Xp5tfdxvXkqULVrnB1Th/2yJou7lESnKOvznP/3vHy7/cDqd/vL7n//94Y9/
+7fffvvj//3nP/388V+//uV//vzrL//9H7/+9Zc///Lbv/7pH38+/JffnU7/
/vPf/d/fAIBP5AQA6B8h6nddTwAATYCoAfgwIGoAPgyIGoAPIyPqr+s5uCU/
X79eVVkLUrk2NbldxvIutwbF7fKI4KPJinoQzNT+ns2PfLOU22V9Sx5q1ery
Ml4nXiexMazZI7YIGvhYcqK+jHIRombfLeFeHkRdecQ2QQMfS+U9tRL1Goam
DFHXHLFZ0MDH0lLU7N6bKGz6/GenZwHn603cp4+bszLCljtV5Xy9alGTcnKl
kN1niU2liOuFd6Z+mfFeWtRmHOTkhhE0+2TnDaZgxec0FWPlriJTdLrgpg7M
JhNoHYM8kuAOW46fbBUNFX0eCjer3hdxTMLYxu1u4tRK1M/jDQeS3cnYlZ7P
l+vjq/s3uiU/NnsWUeh8h68fu2rlkbp8TYfTkFrS8njzGv+YaxKeqVdmaq/x
gyAOnvyLJ8szx+sWHtHMXT5TczCJcJWsmWBLedQzEPMcQ5NoeIUYoWCZvF2s
qvvpDmJixdY7luLURtTD8WTbG/+mlZsm1xxRM0U4FRdZEBuzHuX5h5VaVgiJ
pKiYKDw+U6/MQnwsUdtxUEFLnqwdI/mndUQzd+lMxcGMv/VPjctazfmsjIZb
iBEKfc030hun2wm4jq19LINTG1GrzFphEju5N5LFp1TyUm0ejGGU4884J1qa
c6ZumYX42KGw4iC3TJ6sdxqJI5q5C7avCWb4bXRqtPpf16sYEa6Lhl+IFQo6
IlYj01S6nauiEVvzWAanbUQtLippUU+jnfD6nxN1YS6pkajZmaZFLeKjQuHG
wRN1ceKsJGr3iI6oc5lqIerwcnIfAE+abhMNvxDv+ubd+OfSrQMYxTYzWXR6
5fC7IGr6QdhUnJZdN0qh8x5R8TXDb7fMqvFYFAd56ukhWXhtio4YdU+bDr/j
UzPnMJtEwy8kM2ih0zyLht+J2Lpj3IFTq4kydiPiTJS5LeN2Ff1cKTs0vHpQ
MhY05yy6sSJ3alxUbMzl3MV6ZyrLrIlPFAcVtGUna09KJOayytsLzGDaolaN
Kz41FlFZszXRcAsxQvFzAiyn5nyAN1FmxsSPrXcsxSkvanWv4XRHPCDflurM
0NIjnC+Xs3MUVejwXIJvxyrrj8aMzehHpBqsGO9M40N7e7Ej0qubGQfjupo5
2anpmA9x3CM6uctmqhxMOpy8XOS34andvwsmS5ZHwy7EDMXX9UJOy73bdtNt
xCTIhXsszgkvdByDwij5YHx2NCDqg/DZzbiWz44GRH0Q0hPDh+CzowFRHwF2
e/ep/VOaj48GRA3AhwFRA/BhQNQAfBgQNQAfBkQNwIehRQ0A6J1A42CHIEcg
BqLuDuQIxEDU3YEcgZiMqLUVxHt+hWP6bEROVJ9JQdQ8W+Mrwtf2AfIin7BD
iQp8YwMLqGp77z6RdE8t3zF9EyXTgFVF93FpqMpRw/h88xCFJS9+YWLPb1pU
tb13nkjvom7WU98L7lrUsT1Ti1MTIYoifwhRbxOBBnQv6iZIa4pdY+YoTk+D
QUhdiI4h6mYbN2a5qOd7N8+TXN+LM5OW2VnNcEu0HVKkbz+tw7ixUUhYVf7O
Trkyb8fKUcUll52v4TCSC5EVeTdNwXETO6qtpg2KbmKirsJWxvMpWd72Fkeg
LacVPfVcScOril6pHA8oy9ufJIt7HHE7Ms9ByyskrKpxc+SVsweMHJkufBaP
cMV2YdkQicgn0mQfN97RqD772l3LjYtUSNY+95Vtb3EEmnNqIGrLFJH9FQn+
/t39H6zPfv4RWOSFdpS6kCpPy6icPWDkqE7UGZ/S8qSQub2XJv+4hR29M5W+
ju6GVnu05dik7S2IQHtObxS15U9JmbWeDKxXSG2L9cvZA0aO0qKW27cSdSlN
7nGTO+oinkPAa267WNRN2151BDbgtJGoM8NvS9TywrsqsDPLRL2f3pli5Siv
6ml42bSnLjdp57jVoia7XKNllBeIumnbS0dgA05bifqbXZXMGTQaRG/Ow9Gb
HVh/4qSuxZa8rN+LnSM6/ai/G1o/PdGmoi6kyT9uKb8W0amqjRKibtr2qiOw
AS1E7dz+++vymZdGeQDhoM7nH2TjE5MVqpC4qiTidQ75b8HN0TSMlFdLa2rH
nQqrDVE0TTR+EB03zm9wprEoau6pm7a9+gg055QQtb7noHccj7+1J3n5/lZn
ju2j+4TpSYEcx4uEqEIKVf029eBU5v2YOZqQcedNZ/5WGMXXhsiIvJ+m4Lil
HR2+psUqElEYHrGYf6nrnUh3VdtbHIHGnLZ6ocMS9V4HtH3RLkf94j7JAt+b
vqVlynpPXV6nHFfUt7H32+QFlc9hK1Hf4y+65dKQCeQ4rKinn4jsaYZjj2zX
U6uOGopuw2FFbUzBA4sNh99gG5AjEANRdwdyBGIg6u5AjkAMRN0dyBGIgai7
AzkCMVrUAIDeCTQOdghyBGIg6u5AjkDMQUT9+NkCfUWHvlnT2W8ZPjVHoBUJ
UWfeh3uJocMKRlHTV3FTr+XukEjU7kXKfC2z+BXokmxPHf9Cr81r3y969eZx
KsN50H/3gpMjZhzIuaeHDE2k44zzFeiV9PD7djmfz45wf5rD48uVTcJ3VWjK
h4r6gXU+zCaBazf4CvRLjaivN9Mt9/H21W21Ooz3urbhYKKWcSWbBF+BjqkS
9ZflI/Pz0XiDajkJ8vHg2Izk/Sx7pUv6OlmHnEr+2Yg6dwhzFWbbYQiZV9uu
896oE7X+ZJJy8JVXtArNENjhS200I5xk6FQG800KTHAse7v75oGV6MGpFDX3
On9+Pry2LtXB7IWmTe5JOp9JQpkLFh8KcoMsahnDjXCocucSpg2lwh1Rm3Xe
I28R9Twyn2Q12/LcF2X4GrYIU3/PPdHy5XKxxgyGrdp87SfJ3uWU7B6oFfX8
pvrj08n4QIuaCc/qMQ2BKp87yuQ2TNqhKtwQtfwjELVZ573xDlHTL3Si6C5u
GMWWfkuw5vJIhWe5o6d2qBY1s3Kcr5y2DNTYinfHvqi9KZvwLnCdqN067409
iLp8+TNTb9yIqS/1KIl8Mg8TIGifBaKeB73yM2WeqAbmNaJ25tm3E7VT571R
J+pGE2XeXu5V0Uz9alGTA+z4svtulohaTkvd8dW1SNRqVDc8xJZtqJ2oS011
P1SKWkqXDoKCrxRk6spLgCxxkajVrA29n7+peTegyYr6i7sGqsgzFaq55ke3
frsVRf28vt9uX1MbmhNNU15uNuSmXPYZvqjtOu+NWlE3+fGJ9xsCc4Tmpj4j
amPahjYsOpjDGNwmIWo2aUViajx5GrcgH00r9ZJ1jx/5Y9vQ51CWvzptbGoS
jbeUscjbdJmhAr86/745dW4c7hZ4ojYfCw7Yz6NKXzllTxtbz53sMPJk0wxe
1DqzohR2ybiRRrTL5OyCU3b4vU92PU7eiLfkSKsa3eRugai74x050j/LxwOl
/QJRd8frc6SfRWCJjD3Ts6i9nxJ+OO/pqc8Ye3dDz6I+KMgRiIGouwM5AjEQ
dXcgRyAGou4O5AjEQNTdgRyBGC1qAEDvBBoHOwQ5AjEQdXcgRyAGou4O5AjE
LBD1QttP8dIkWEqUI7xlDBaIevjBYLU451eiwTqcHKVeoRy2fMmiCeBd1Ir6
8cr6WdqSlEFDakaUo9QLLi9aNAG8i0pRP+0mtNkQeB0rRf2yRRPAu6gT9Wgh
Y6lav0Z/ehg7n+bR+jRClD5IdCNdmnA2Edbxh2ONqC13FDPUZjZv6quDpmDn
1Iia3BYbqmZvzUtL97JDIXU9KxnCz9bxR2RlT81t4rwlDLxsdrPkwZGpEDXz
HlSqJq/N1/hGCi/LefkG04QS4/7vDURthNrNZjdLHhyZvKitAVnGmjt2eA7b
RMkQ/pg0FfWI56UdGbBjAL5T0qImyxg9MXvNsu904CUv9ikbwh+TxqIOljAw
S+tkyYMjkxW10rTnuk7ay9PAu8a2/TnqSxvCH5OWoo6WMLCy2c+SB0cmJ2rb
OF2brguFXtTaecLieRjEzXNlBV99NKPvJqKeFk1wQ+1ks58lD45MQtTUIV+u
0TF9cTXuuPk06fDJTYza84bwB/UZVHiijsz8KWzRhGKoRZHdLHlwZBKiBvsC
OQIxEHV3IEcgBqLuDuQIxEDU3YEcgRiIujuQIxADUXcHcgRiIOruQI5ADETd
HcgRiIGouwM5AjFa1ACA3gk0DnYIcgRiIOruQI5ADETdHW/Jke85s+DNObxs
ty0JUbP3saxXr+inYHOKora9TdbhiHpsBBUKXbALqCPbU0dJRXpeSkHUr14J
BT317kgPv23vIZhIv55Q1Hd3yAVrLawAot4dEHV3BKJ+eMe82HIVot4d7UQ9
3itV+PbTu3VqW0aO5NmdEDdLZlF9AKJbpMkP0BZ1IUdjNo3kyfss4Y0iNlSf
hrs4CzocOMUrqRK1jWndfUf69nO7ItqwhIUlMcES6p4XibDKPQZOjqa4FXpq
J0fT5fQ8Bn3a0BX/+G+2eIdt9e/u4jWMQ6d4JVWiLg6/C8ah5sVAeVjS3Euv
UmvVn6Ndxs0czZfChaIev5pD7vm4SpdRspln9e/v4jWMY6d4JS8Sdejbzxff
sVuY+GQaNxzwEm7kiK0pulzU/FmYI2qZF8/qnfTtwS5+wzhyilfyQlH7yZk2
pIushqKe/9b3bp+OzpF3a2TGZVtRm1b/BVEHqj1oilfyyuE3293qXK4XNXsi
x99DU5idpo/3pNzP0ZONe2pZvKfQIPuZhnHoFK8kK+rcj0/Kvv1zKo2pUVG+
XiyA3G7TGbRjDdBWijrIUUrU407sNun5Qbw0gLmL2zAOneKVJERd9TPRpG+/
vu6Su2nn2HTgfSN+80e7hq8UtZcjnh32lOnGtc/TQn/rElj9e7vwCpFx/JFT
vJKEqMG+QI5ADETdHcgRiIGouwM5AjEQdXcgRyAGou4O5AjEQNTdgRyBGIi6
O5AjEANRdwdyBGIg6u5AjkCMFjUAoHcCjYMdghyBGIi6O5AjEANRd8d+cvTC
dyLhVVhBpaj5G1vP1/UueCvupaRztKkGXnOUJ/D/r6NC1M/Q0nf69Cdge8o5
elXjf2H3iZ66gqyotQ/J/Dli/VK8HL3Y7/sbot4rOVFHS7ncLoj1S7Fz9I5W
D1Hvk5So88szed77nmF7tItvC39szBw97cFmi5IwWSoXCxZimD6kNinK0Vml
b5hbY/5GC/z/nV3g//8gJercnZrvvS9MgE/M48a163ds4Q+PlaOhNbPFUpyI
ebko+IF76eNXBpoylb5J++fz5fo12Egu8P/3doH//0A7Ucfe+6blqL+LawsP
bN/vsxtJvaVt/xo6wdq78MNmXP31jX+9/7+3C/z/R1Kizgy/A5tuz7C97OwN
42eDjKhdP+3YPL9yIQZf1LRQlj73Ap33//cLh///k5So3blvQkHUXgPzRW3a
woMGovYXz6tciCEStZM+I5e1/v9+4eS7Q3cDOVFHI/Dh1yeB977+6ut6vYW7
eLbwILBxFpE0hejlorQQg7mLK2o/fbKiC/z/3cLh/z+QFfU0zSFWUziL+Jre
+2Ie54uta2nu4trCg+gWyVtbkBLmQpt0j0Ot0i5uP8vTZ4na3HLBkgHw/x/I
i/qO8PVXcXO89+94T66cXQJb+KPj5khI0cfJRXIhBsu4/8tY60OnzzruAv9/
bxf4/w+cqkQNdgByBGIg6u5AjkAMRN0dyBGIgai7AzkCMRB1dyBHIAai7g7k
CMRA1N2BHIEYiLo7kCMQA1F3B3IEYrSoAQC9E2gc7BDkCMRA1N2BHIGYd4l6
S+vLTV7VfL1XpwdEHRIbrRyChKjFq1ncNkp+mmWzaG9l/L6f5hGJ+tjvEevs
7ydrryTbUzvR2WUjWtZTd7PUiJOj+dpbdojs5EwXAUuN/PDbNrXxrW7eyLK0
3i67OxGbqKdOnXo3Z7oIiBqiHtjlidisFHVHZ7oIiLq5qLMW7tJi8F5IhSe8
U8GTua27joC562OTuMLRWNdfzqAVa0Stz9SJsIgm/bKYESPe3BBJV+lCVgTg
6wvwQ2SWhKA7aSfxsOYfwqlG1DZzdJMW7g9rmhNP5f2zpCe8VzvT+J2ZVQXT
JsQfLa7weARixjUFIVjOoCF+jlLdFLfxdo3xqW224w4eZET7jhOnfVHdIf1E
y5fLhcTX9B1Tlmw6+6KPSLel/qkSdamnzlu4K3N222nWLTCsm3LC9C5CBOFY
H1aYHo7uJ+3+dMtuQnNRGxEe/UJVkcmMqJz49/Ei1G5jcFPpZ9+1L//wIXpT
UdNP2RhHB1F6VzoLvngF6m9tj+jIVpNhidqrsBS1YaFpV6wNTUU94kU49GwP
hyKiL3UvbqLKof24dbDQIdy1GUdPfScn6rSFe1bUkW07O6gv6lRfWSNq5wCd
ijqIsFlaJiNky2FDf7MaUWeWhPAbXr7mndNS1OyPFqL2C2TIsbIcs4lhtPmQ
tkrUbIZBTJ7J8Xf7ptNS1FGE5bD2dvvKZoQXcbVup70qu6L2Uhlkn/5RWfOu
yYo68+MT+sfUwk0L9wpR2wUalZNX5BOZtaYNw87ldNRH2y1U2BtMPuthLmfQ
kAains7UjbDRa98VlM0IO1gchayo3VRG2eeirql5zyRELWYogp+JsgcOgYU7
2e4+0Un6PPHIwi7QOg9aSWr8LmpaGAU+DxtX+GY8CJiLpfXYqCuwcnTHelxl
Qc40kTJRZD4jc61K3fRUvAgej7o8R3WfoLLP96+ueb+cssNvMKPb/Ct/zdFV
jsLbabANEHU9+rb8pYsh95Sjz/6Z+V6BqGvRM4bkoe4r6ChHtwu66TcAUdcj
fwbx4l9S7z9HU4Ag6bcAUXcHcgRiIOruQI5ADETdHcgRiIGouwM5AjEQdXcg
RyBGixoA0DuBxsEOQY5ADETdHcgRiGkoaudFrh0U9llA1CAmIWrLR+aB0Fw7
HY4vTEDUFpGoHVsG430n8Llke2ql2KGdbKa7tGfJejp768DJ0Sxc7VVyEMM9
8CQ9/DZEtplfpnO8rejM3D7qqQ2TBPa6yYdbfoAHEPULrx5tqBQ1g7rsgk9l
uaifkpYGI6YHiPa5k+PEYV/iTDMcbyrFvKCYpdesC2C7hTiF74TFok5Yptlj
eJ2dQh6/RdocB08vzmTzl76p/ilUiVogLRyFWJgVkHYSpF6TQ2JH83ziLUad
Ok3zL23eXrkugGE5uL0h/xqWiHrOXnSVmlU/bX++XIzslPKYcOb340wMkDCw
WESVqI2JMtMkTuhk3tU1VNcz55b5sC5k/Ma26eVmgcGhbXN7WfhOWNxTlyY3
pZ85N9+UycjkMZeOacvZWWyWO3rqehaLevzMs2MtWsee7H29401bhPbarjFp
fGjeZXiF74Tlov6OT0eKOsgOLS3IY2ji7cZ5HiZA0ItYJWquasdj2duj0Gza
izo49HFEHV5wheoim+xcHpeJmhxgb7HvgwY9tb6409vo7+G76y1qKWVRT41R
F07aaWgh7h+af+MVvhNWizroAG0LXllqOo+uqKM4EzPu/V1RuyAran3TO95U
u7dMs95Hn1iaI26oXhA1/zrwzA9FXTg0sfHf3JB/DXWiFreoBUkHixTIXjST
R1fUUZxpHTFTtoSEqN2fiToPsPTTItERDp8Fbv/quDKzpmc+72bEIzXfy11N
+ZmF7wdP1PbjOf5xbqaDbZ7PY60zvxPnn6vDfMwdxn//nLLDb7AXtsuRVjW6
yR6BqLtjsxy9eZEC0AqIujs2ypGeCX3xIgWgFRB1d2zYU791kQLQCoi6O5Aj
EANRdwdyBGIg6u5AjkAMRN0dyBGIgai7AzkCMVrUAIDeCTQOdghyBGIg6u5A
jkDMC0S98ftzSwwyu36lD6IGMRlRG/ZkdzI/ODINABsyVq2i+K2rtDmOqON3
y+A5cCDSPbXxpmyNsPfVU3dtf23l6OeEArdEYvSwP88H0Jylop56hnILgajb
YuRIvE3FjREMG8heTx2kWC5q4V3hA1G3JXFP7Xkj3+n63EGGFaJWw7zIwYR7
X3ieI3kXfXGfLw21CmWoKlmueqqIm/K0HwVjl+PUhFZd3M8Iw3ybnKhNW9Dp
SF5k5irL4busW3gWczkw838DS0UtLaS1J6dlRmc5Ep4tz8DYRV95yU9bUk8r
bavGT4Y1udKJzK109LS/rxnw/MBaO8Criaq6Xfg6URM7/CpRE/O/yaUXZv79
USdqjuik1bWdLtHh2k3StuGVwBGNUl0zOGYRhpGhM5GkTkR3KVY5bk1o+Tow
qRZcEvV8ndSnOla6GFjtsQoz/25Y2lNzil7ctsMkaX55w235ubAMTd0tuqKu
OZHvgnlpzuTPudoFxKKWjqArRF2uW+kslvl+z8MECHoRrxf1/Ddtf81EnWoI
LxH12uUMPAJR8056Pl5yosw7AWOX3FksEzU5gN0EQEwbUet7ZdJV2Q/D7tay
anrLKUEfKxh+C3Nycz15V9R1J+KL2quJr5X1oqbPqumpC1WHgwjuskxPUwoO
Zv77pU7UfjfIn2/pOzLjOi8KC0qwDkUnU+ZWeJOG3sUuSf5VdSKuqL2a0FY6
NWxnOQMPM0fGTTwfBjn3sgyY+X8GGVHLn4k6jYK2Ky4YvZs1TnRKKB3qMQst
eqKwDP6kyaigWQ39+IUfiJfq1oRtVlrOwEbnSCZIFzQfNoirLoZcJ1mR9lm4
gRXxCeP8DTP/1ZyyPTXYC9vlSKsa3WSPQNTdsVmOYOb/IUDU3bFRjvSEPcz8
OwWi7o4Ne+ozxt6fAETdHcgRiIGouwM5AjEQdXcgRyAGou4O5AjEQNTdgRyB
GC1qAEDvBBoHOwQ5AjEQdXcgRyAGou4O5AjEQNTdEefIf98UHAWIujuCHIlX
zcExgai7Az01iIGouwOiBjGdiDpv9rMDNnbW2kzUXQUZ+KRFzV0xXvpW3njo
Xtpbl6LuLcjAp66nTnvwtgadyMzOemrHsBW8D4i6O3Ymas+CFLwNiLo7ohyt
ssBfEuS3tQjgs1TUY+t5/jUZ4cxNwjelzfvhCndL5f0flzFW1qgcL5r7VJ/S
yzt6hZs22SvEJmg8mbkiyGxXbZxs+ivLLxsHB3yv66kDq3Zr/cRx9bNXLG05
tkd7ScrSoo3J5R3NwuWEk1nCKlqKelWQx6/sFkFPlrmSimC1DQ743krU3vqJ
/lqH8ZH0ii0ctwh7GQ5aDb1sRGp5R79w9/LW6iYiyJHuD8OSGgRZi9o4WWJL
ykPQPjjg+1Wipr02y9vCVfBSuQ/WxKFHod2T27DMLb3CzVLaLfgW5Ojviqig
9kFmJRsn692BYzW8pmw0/Bbtgw5NW4g6vbSlp7vcoo2FLZOidkpYTLPhd/sg
hycbXOvaBQd8LxF1avmzaCEpOf62EinHwXJkmF3asrzObCjqeMuMqP0SFtNM
1M2DHJ2sHOrfbtEaoGANGVHPWvzJgjPLK9Y/C9dPfOHSlsXFkcNFGwtbZkVt
l7CYZqJuFeRnR/ujUvdkjV57XNi3cXDAd7Kndm955u74fL2Ri7u9fuITZ61D
Dd2wemnLcElKe9HG/PKOYeFW569KCE67SFHU/NIbsyrItIDp4UYYrplg+2TV
gcepavid5tDrJ248kCzkCMPYw7ONqI+9fmJwV9GCOEc/gb5W9NTgA9lC1Mdc
P5HNPGw5LolydLs8fzEDUR+ZrXrqA66fOP8kbduz9XM0XDsh6oOz0T012A43
R+MtDkR9cCDq7vByJCYnDzE6AhYQdXc0faQFPhCIujsgahADUXcHcgRiIOru
QI5ADETdHcgRiIGouwM5AjEQdXcgRyAGou4O5AjEaFEDAHon0DjYIcgRiIGo
uwM5AjEQdXcgRyAGou6OOEcr1tICHwJE3R1BjoSTIDgmEHV3oKcGMRB1d0DU
IOZdosZyaIvZTNTwIf0QEqJubjhmri0LsmwjarlaJ+iXbE8drGa6CPQKi9lZ
T+2sxwPeR3r4nV4yLQdEvZididpbYQm8DYi6OyJRr1oTdklOGjcL0IKGolZr
SkWfjw3Ivr/2igLfzSczhQmpXAAxygLb1VhGTawczKErCK64EgFNK1HTVSno
/TfZjS1ky9ZV44V7RYEnLUVNAz8vFT38lckCX2JIFTcqly66JBYst7YHq2gj
ajlBPspVrColFW4t/uoVBUYCUev+MCxJrhm9IAta1MZa32TVJZ53Z3uwjjai
9taO9z4PRO3vAp4EUv27IipI9o1LsmAvBujd2nuNaNVUAJCsFPXwPCNKVrD6
vCdq9MwRzYbfBVGnsiBFPY/hjYXmja442B4sZZ2ox8cZ+qbrqXZ2Gz18fp3H
d+7w2ygKjDQTtQz1kiwwUbM2IkQqh/q321e4PVhOVtTWXAkdow0DqLlJ8MnN
+U6aTpRZovaLAk/aTZSJl7rYIDiZhSlzd5XSrn+6nt9uN6vXvl8i3O3BKhKi
tiZNTiT9I+ThBGsA5HM2Dz5+Qv5SzQvXbo0v6gWL6dLkns/8wp3KAnuMwRJ7
HS8L1gOtaPuaYACDhKjBvvByNA2QMS1xcCDq7ijnCPcsxwai7o6UqNFTHxiI
ujvKOcI7FscGou6OUo4g6aMDUXdHnKPbBXfTRwei7o4gR/R3APjFzmGBqLvD
yxF/HIwh+HGBqLsDOQIxEHV3IEcgBqLuDuQIxEDU3YEcgRiIujuQIxADUXcH
cgRitKgBAL3zrusJAGBT/h9TVKEj
                    "], {{0, 299}, {327, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {327, 299}, 
                    PlotRange -> {{0, 327}, {0, 299}}], TraditionalForm]], 
                 EdgeForm[{Thickness[Large], Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc2$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc2$$, 2]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{241.7606933090101, 
                   458.2393066909899}, {-202.2393066909899, \
-64.7606933090101}}]}, 
                {Texture[
                  FormBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
AIeGYgUAAACAH8z/A0BjzWY=
                    "], {{0, 290}, {357, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {357, 290}, 
                    PlotRange -> {{0, 357}, {0, 290}}], TraditionalForm]], 
                 EdgeForm[{Thickness[Large], Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{241.7606933090101, 
                   458.2393066909899}, {-71.2393066909899, 
                   66.2393066909899}}]}, 
                {Texture[
                  FormBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
nWWa8pbX5sq4KmkGejVbfVKdfjdy/ktRFsujCu+2dOs3+pmfWVj7pw50mV1g
scAVAvqQtlqI2LuSYoWaMIWi18nEQmdDWqhXaGBBly0A5lSnrpsfSKoAMXNF
WyHIwsKk4Jr7L6HzZ1DfW1MfPPfP53/w25/u+MG2kuOerM3l8T3mUK8prDs3
ptMU22NJ7TKnOrUpTaqklmyGQ8Nu0/JatdxmNcuenWZTMe3ZbIeG36YTUsSk
8ORpOwsM3kKztyC3qzC3p9jSU5rfXWzpLjF7i0wdhQZ3gc6Vr3ZaFI48cXNu
Zmu+uK1Q3GLJsBp4jdr0Zo3YaZB15Cp7CzWDZYaRipwtNeZtVstEvWm4XOkx
8cBp2BWJNmlSQ0aKXcxslXFcKn6HTujVZ3TlZG2ySAfzZaPFys1lqtFS+VCR
pN+S1Zcr32TRDVhyeowap1LUmMmvE3Dq0zm1fFZZanJ+Qqw5JtIcE5EXF22M
jdFGRWSHhyvCQuWhIZLgjcIN63jr1/CD1vI2ruMFr+eGbeCEb+CGb2RHb0iJ
WZUcu5IRt4YRt5YRu5YRs44Ruz4lZgMjJiglKiQ5MiQpEthQUEgMC4kP25gQ
FpIcHpoWFc6OiWBHRXBjIjISoiXJcarUJA2ToecyzemcEiGzTpDUmB7fkBHT
kBnTKI5vyk52GNI6izJGGnSArU5ucT263fvwRPfx8Y5ju1qO7mk8utv64O7G
Y7ubH9rVfHKn49hW+5Fh66G++v3e6sn2yl2tZdvsxZsbioeqiwcq8nsKczym
7DadtCU7s0nJd2RzHdnsFmVqszylSZpkk8Q1imIreOEVnPAqTni9ILoxM86a
EVufHtUgiASo44XX8sJqOSE17OAa5sYGfrBdGNaUHtokDAcFuzDUlh7cKAy2
Z4UCanNII9oUMe3q+A5NYoch0mta225c4Tat7i6O2O0SP3XA/o+fbjv74o9n
zz0P4zTIGZKcxZFLkLNgWhXAIAFKYSHLVBJKTVZeCr1AF4hseb/fdbQVuqSt
lphiUVjdQFthC2vZ4Fd4bTnFINcUPl2gN4h1v3X3eCdRFp8VR1xXW13Lhp8X
T93KW/+LtJX/ikUX34JURa3WQOcvR+mJukQAJqfG6Uxhfnp5IYRuF8FoX7j6
AwqzECDYLIpNY9RoNZzSC4+CL6z7AFOIonARK5igwofis37iko+4MI9fCGAX
MXwKpj/Cz5HoqcDUCxfe/PXrf3n090+MHZuoHnXIBsuZg/nJm/IS+vOT+y2M
jpxEmzzCkR3v1KW06ZguE8+Tl+GxiKD2yRU5zVmt5kyHKaPFmOHME7fny9sL
VR1FGm9pTne5uacir7cyr6fC0l1m6SzOdRfltFm0doOiXiOqVqVXKniVSk6F
glkmZ5TLU4EtliblZ8YVCeOrRUAECTxmSV+xeqBMO1Sh6y9RePPEHebMNh27
QQonTzVIYm2y5GYlq1XFdWkEHYbMLrOozyLtL1QMlapGyrNHKzVjVdrRKvVI
pWqkApTNW2qKJ2pLRysL+wpyPDnZTq3coRQ1SIQ16awSdkoJM6WEnVzBYZZx
0oqZyQWMhLyUeFNyrCExShsXkR0bJo8KlkQGZYWuSw9Zww9exd24ihV0f+L6
exI23JO08d6UkPvSwh5IhVjFjd7AjQ5iR2xgR2xkRwSxIoKY4RvY4cGciHB2
eBgrPIQdFsINDQasJ4gMzowJE8WEyuIjspNjjBxGsYRfp+A3SdJaZUyHIq1F
ldqiZjlyOG25/PairO6a7LHWgj09tUfHWh/b3fvkkeGH97c/dKDtOwfbHt7f
dmJv24ldrQ/tbju523Vyh+vBLc2Hhxr39tXv9lZvc1dsa6vY5qgab67YbC0a
qs7tK9V585UuY1ZTNtuuYtnkjEZpYoM4oU4UWwu4SZxcnh5Xxomu4EdXgzsi
TKgUxJRzIyt4UVXpMVXpUVW8iApueCU3rIwVXJ62sZIZUsUOreNG1PMjG/iR
jcIYe1ZcE4AotkWc4JAkArTKojr0IaAVNFAQN1CYBBM5VqdvaZDtchofG7f/
+Qfb3vrL4+ff+BUy9TcSfZPEz5I4XGcZaH8Mu0xgMzgc3vJRaZ8QjMR8mH8O
nUdoMsNgSncYOIQu5nPHcJLKPUguZskg4YTmeZSg+Q/OEEMXMmtQvQxUTnic
ADvMU6s5w5yHFKg89Tg9L3jJsXzBtdVSK/eu0VZLJEXLq+XOHP1chdW1imnp
5XXP6uaX6O4Od/djVCJZmBdiwdJbKAGF4fSsSmp0GaYeDSDkPAoz2/gwWPDT
Warh44RRTOejw3sJFHbfodhFlDiPkZdwYhauPAiPRmKBxecQ9pQEsMAsjs2g
xAU/8YGfeC9AvoeR72LYK75Lf51675dv/e2hvz619cf7Go/2GXY2Z4xVp/QX
JfQVcLtNwnYDt03LgrEQOnaLhuUy8jvyMryFkt4yZV+Fqqdc6S1TdJYq2kuV
7SUUSpWeUlVnWbYXMEudsa82p78WWGNPtaGrUuct13aU6l2F6hazvEGfWa0S
VMi5ZTJ2mZRdLmOVyVilUmaphFkiTi3OSikXJ9TLEtr0bK8lo6dQ1JmX4TZy
WzSpDbKEOklsjSi6VhzTqEhsVjNadZy2HIHTkO42ZnjyRF2F0r4y5UCFeqBK
M1ynH7WaRqzG4Yac0UbjlibLRHPp9pYKgImmsi2NxcO1eZsqTV1F2naL0mmU
Ogzi1hwJsA6dpEmTacsWNirS6+S8ajG7PCO1TMgoFSQX8hItrFhTamROSrgu
KTQ7bqMiaoMkfENG2HpB8Br+xtUA3A0PsNbcx9uwmrt+JXP1/QDstQ+w1q5I
W3U/Z90qwcYNgqB14F3ehlXpwWvEkevlsRuV8cGqhI3ZSRt1jDAzL7pMktKg
YLVmc51qvssgbDdnunIzHXmZTXlCuyXDU5097Cza2Ve7f8T+4Ljz5K7Ox/b3
PX6w//GDfY8d6Ht0X+8je7oe2tlxYofnxHbP8W2eo+Oug6Mtewdtu/sa9nTV
7vJUbXeWjbcUbrFZRupMvWXqriJFR77EZcx0aPlNalaDnFEjSqwQxleJkgsF
sbnM8Dx2WJEgplgQU8iLLOBFFqdHl2XEApvPDbdww4sEkSX8yBJeRCk3soQb
UQbojBsFCY4fUy+Ms2UlwalwYkabLK1dxe7UsLyGtF4za8jCHyvKnCiX765T
77VqxyvFYxXCsSr+tqbM44PGXx5veP7HPede/MHc6T+Ts6+Q+HskeQbHTyP+
9/3oWR9ycXp+agadnUHnZ7CAn6TYBTw7KHhSSAzOSiZpGUTC5Wz8JMy4C56C
aQIFlDcXIAkfCVMizpNkAIKg0j+hARI8fAHqsaOoiqQ4C4OWBlxKjLKUO6Jb
mPAPgf3qgE0ClL1aDV23+Y1/TlncUWoHGOZHZWu/KQIL9nqu+2NOBL4urqut
rnL7nwtbfUra6q4MyaCV1MIKhpRdyoiOUXP8YQcDSqWVwKicEgEqlfY8jtB9
hbDPjlqaCmwAjx6O+AnET8L0fjAnEniyArjfDyenw2U6AtTaVLCWzc/DASl8
hoRrFJ7DsXcJ7I3A3L+mp/5y9r1fv/Tcd371gy2P72s9OFiyzanuLWe358a7
c6I8xkhPTqxDndKiYrWo2U4932PK8OaJOnIze4vlm8pUgAt6y5WAqrrLFN5S
uadY5i6Rd5QqOspV3jJVR6nSXSTzlCi6KjWd5Sp3sawtX9SUm2HL4TcaBPac
TKs+o14jqFFxq5WcKgUAu1ySViZJLaOtNK1UwijJSq6QJNbJ4gFhNcgTrIrE
RlVyozLJpkqxZac0KpNBoVmb5szhdlqE3YWirgKJt0AMaNRbJO0ukfdAMs0e
rNUBkhpuNI3azACbm/LGHYW7nBV73FWTnto97dW7XVXbHWXjzcWbGwuH63I3
VeX0lut6y/V9FbqeMn1Pqa6nVNNdrPMWZnfkq9pz5QBOk6RFn2XXCK0qfoOS
VyfnVIuZgMjyWImmtPiclDh9cowuKUodF66IDpZHBkvDN2SFrMsKXp0VvDYz
eLVww6qMjaCwHiAreJ04bL0yJlifHJHHjisWJhelJxalxxdnxJVLEuuzmS16
fpdZ7DWJvHmSznypM09kMwqqdWy7JbOzTru5o2zPoPXAWPOhLY4j420nd3Y+
sqebxsO7AVV1Hgc8BbDDc2xbO2CrQ5tb9w037Rlo3NffeKi3Ya+3dndH1U5X
2bZW8PPzhmtz+srV3cWQs9zmLED9TWqOVZFWyIvJ50abWeEmZlhOWqg+ZaMm
ab0qbnV2wlpt8npdygYdY6ORFWrhReVzIyzs0AJ2aCErpJATVsINB+RVxgcS
LLo+K8EuSXbI0pwqVoeO583hdxo5vRb+QL5wuFC0pVi+o1K1u1Z90K490KSe
bJLtaEzf2sgZt7MmHJydneIHt+T/8jvuV/5n/8X3niaRf8FIQvIcgp2bC0z5
QYONJFGcnPNh87ClRs4j/hmfb9bnA46AWn+ZXgESPmNQZMFpx4CXIKfNw/xR
CNU8RAKgqUgHG1H9ifhixwRBd08spNRYrq0ClHtZtow1SvPFgmi6ikeu8kXo
x8jdhH1UrPtH+j10SVvdul/98J6fNlshy/I1ocu01ecYEHgtrSy9/JiDdF8c
tqIWgsLgzFxqRShqESHQMoTLz88icDX26cUZUjDsHJJUAD5YQH3B9BJwEVfY
fT9PUH0WKOGD68hCCoRvgE8FLuLIOYI4RxKnMP8bgam/X3ztZy/+9vBPT/Q9
tK1xZ1fhpnqFq5DXXsB35rEcxjSHgeHQpzSrE6yyGKeO7TYIOkzCLou4r1je
X6zoLZL1lcj7ShTdxbLOQrG7QOTOz2ovEDnzMh3mjLa8rDYLKItAucWY3pQj
sOn5Vi2nRsWsVjAq5cmVsuQKaUqljFEuZVRIGOWSFIBKaWoFeAkgY1TJ0ypl
qVWytEp5aqWUUSVJrJbEVWXFlmdGVWbF1Eji6uVJtuzUZi2rWcN0GNguo6Az
P7OnSNZfqhgESqoie1Ml1FPAbqrWDNRox6zGUatxqCEHYKTRtKXZsr2teLK9
cl9H9f7OWoiO2sn2qj2uiu2O0q32/DFr3nCdeaTePFJnHq4zAbu5IW+sIX+s
LnekNne4xjRUbRqsAl5d31Oi9haqOguUHflyd660zShqVGXWKzNqpPxKEbc8
k1XES8ljxZsY0YbkSG18mDouWB0XoooJVkQFqaJC1HERuoQIQ3KUOS2ugJNY
lgF+LKteyalXcOpVHKua3aTjuXKzOiySrjxJT768u0DWnicGl7Rex6nRczzV
6iFH/s7+OsBTRyecgKqAPb6j/cSOzod2dT682wuk1okdHRRbtQML2OrBCffh
LW0HRlsAYR0abjo6aD/U13igp35fd92kF7B2+Q5H8ZbGvJE646ZKbV+pqqdQ
7skVuYzCRhW7RppWLIgzMULU8WuVgKfi18qjV0qjVkooyGJWKxPWqZOC9Ckb
DCnrAXIYG8xpG/PZwQXc0AJOaBEnuCI9oiYrxipOsMuSW9Wpbbq0Vi3DZUjr
NLG6Tdw+c/pQQcZYUdZ4uXhHjXRPo3y/Q36wXXG4U3m0V7WvV7S7R7i7T7xv
WH1iZ8lT3/H8/Mfjb778NDr3OomeI/EZ3DeN+XwozJw7j8KuhmkkMB1AZqmM
hXDMhWoIwh5BKi/GQjIoahGTOZTKhAl7L3AqFSF+JVUUgZL0IltQo+FXgi4W
Ouuhq6ElDLrou+gQjsB1ewI/Qba64x7Cq77947jZj+zg+vhH/pKtPj/cqCdw
kbOoPm/qOSCorH2AjS5iOMzJhhJTOA7XPceRWbgMImwGonDZhgDME4pT3RZz
cHUHHK7EQM+mhFmSLgOSIrD3SfRN1PfChVO/ffUf3/+fn+z4/pb6/U5DTxHH
aUx2m5kduRxPLs9t4jr0bJuG1ahmN+v4rcYMpymzw5QFJBXQU515WV354k5L
Vrs5w5kjaDPwm/TcRjUT7G/XAr/KadJxG7VgC7shm1UPoGKCAo06JbNGzqiV
M+oUqfXKtAYVs06ZWqdIuwIlcwkNKvARtjWbXa9iWcFnZSnVooRqUXxVVhwo
1EqSGuQpNhWzWcNu0fJcxvSOPFFPkbS/VDVQoR6u1QOM1BlG63PGGoyAp8Ya
TZvtuYCneqvUPVXZA/X6LS2Wbc7i/d6qA13VB7w1+701+zqq9rjLd7vKdjlL
t7cWTTQXjNstwG5tsmyxWYDiAA58c4MFcBakrXrzWH3uKOCyWtNgtWFThRag
v0LTU5LtLVR6LNnuXJUzR9aqlzSps+qlvMpMZgkvqYAdl5cWbU6NAjClROqT
Qs0p0QWcpLL0tCoRu1bCqZUBCcO1KrlWFceu5jZpec06rsPAa8/L7MjNcunT
AWF15IrsWm61Ks1q5LeVyMZcxdv7ag5ubnlwm+vYdveJ7e2P7KS5qQNIKiCs
Tu7yggIgLFpVAaqitRVgq/0jzYdHmo8ONR3stx7obQCEtb+rbrKjand7xc62
0onmQvCrR+uMQ9X6vrLsniLFpjJ1T5GyzZBRJU62sCK0SRuy49ZLo1eJIldl
hK4QBN+XHnJ/RugDmeErxYDCYlfIYx9Qxq/WJK/Tp24ws4LN7CAzKyifG1zE
Dy0RhpdnRtRIYurkcdXymHpFnE2V2Jyd5MhOadcyvXpWj4G9KY8zUsTbWiEY
rxXsaMzc1ZxxuFv14IDuwSHTkWHTgQHT5IBp96BlcqT0xKTjD0/t+uC1Z8jZ
l2AnIfIuibxFkO8RcE20DwjiLI6eDSAXEWwGW1ilCzwpOKWLYG8hBvPswlW3
cLjwVoBaIpJKtLsYlAGzQaFwDWP4SFLjX9S6K9RiXlB6oeiV1ia6+PKz0FZ3
A1t9qqRwLVtd5ds/R7a63bc+cp+7kq2ur62o5llgsXlGpeejOQsyzwUM/wCH
a8JexLApAruMozMwpheoLvjUwS4NDK4QT84HSHrRICrrGg7X1MPPE3De5VuY
759Tp3754p+OP3HcO9Gb31eT2WNmdOkTO7Tx3TlpmwqEA8Wi/mJJb4Gsp0Dh
LQAuV+U0KRw58ma9xKZgNcpSGhUMmzK1KZtpz2Y2KlMBXzTIkmtkSdXSxFpZ
Ur0ipUHFsGnYwJfaVCzIR4rUBiXTls22azgtOl6Tlguh4dg1wMKyfaHMAS9B
GezZmA20EvTSLTp+s27RAvoD/CVPtSrSgK2XMeqkKbWSZFBuUnNa9QLQ8ge+
dLBCO1JtGK3NoUlqS6N5qy13vClvvNmytSlv1GYeqNN3V6gAWw025oy3Fe70
lB3srTvSV3uop+5gd/W+zso97aW73SW7XCU7nUXbWwu2OfK3txZua7WMN+dv
tedtseVutVkAIG1Zc2k71gDEl3GoxjBYrQd2oErXX67pK9b0FKq7C1Rei8Jj
ljq0QruKV52VUp6eUMKLLebGABRxogtYESW8uKrM1AYZtyk7vSlbYFPxAOzZ
HHARwK926LiAjpuAeNSzHVp2czbbbcxszRGCNkCdhu0pV461FU1uatg/1nx4
a+tRWlVtc39nlxdw00M7OwBP0T2BNGEBnjqy1QmoCligrQ6OOQBhAW11eNB+
oK9hX0/d3u7afV21ezqr93iqgOqkCWvcnk/rLPDTBsrUA2WavhKV25RVK03J
YYRIwh4AVAXoSbDxfl7QfXxgN67gBd3PD7k/Pfy+jLAVWZEPSGNXKxLWqpLW
Zyev0zDWG5hBOawgIzvIxA0qEIQUCkMKM0NLROGV4sgaUXSdJMYui3cokjq1
zG49lbjYnNaXlzZYxBouZW+tzdrVrD7SlXdyuPTh0bKjQ4UHBvIm+3J2eNXj
HsWOruwT48W//17X+3876D/1ND7zFyLwTxgMT7xF4O8SBHiCLqLYJQT1IXAZ
XMhMMH4CCigqRcZCUl1sKX6QXFjsmCTwhayGMCUvuiC4FhajhJnKcFpMYYt/
lLcJUHxx9VDUrbAV9lH9e7eO6/q95Rtvzla36HuvDai4aoDpzkjh2k5FdJm2
+gJFWdyEm+76KIvrzLdafhcoIBg9Ygs7FQD5TGP4JYy4RK0ZNI1iM1RC2oVZ
vTDQFqGSpCNwcIueRQkTVmMXicC7hP9VfO6fM6d+9cqfH/zJyY49vXneakFT
brJDn9iXyxrI5Qxa+AMWYY9Z2GUSdpoze/Ll/SXqgXJDb4kBCIRGtahGwq2X
pdYDShIn1EkSGxQMQFVWBQOwVb0s2Uq9tKnSmtQsSulwgI9tBdDzaAv0Fyi0
aIC/5cCNeh7YAZRbFnduo/eh9gcbXTkCoJUgYLAE3O7QAqfNBVrDpuHZ1IDX
eHaq0KwTtBkzPRYpUDQDlfrROqh3xqxmwFOAWQBJTTQDorGMt+Rvbsrrr9EC
YdVboxmxmbe7Sya7qvb11Bzurzu8qeZgX82Bnsp93RV7u8omvaW7PCU72wt3
uAEKdriLtrsKxtvyJxyW7Y6CbYC8HAUTLfkANAkC1TbSYByuzxlpgBiq0wOv
PliuHSyDGCjV9BWpvHlSp0HYpOJYZWn1EgZAgzQV2FpRcp041Spj2hQc8G6T
CvARp1XHdxp4bXp+uyndY05vNwlcORy3kes2UpfIkA4Y3G7gtxfLN7cW7huw
HtnsoLv+AE8d2+o8NuE6udMD2AoAkNSSsKL7AAHoAiAsIK8OArYC8mrIfqC/
YW9P7WR3zd4e2Bk46a2Z7Kze1V6x3Vm6o610u6N4vKkAcNZAuWpTqbK3EDRm
ZC06QakwUZ8coozbIIveIIpclxWxNityXWbEem7wKk7IKl7oKj6wISsFoSuF
4SszIh7IjHxAFLNKlrBGmbhWmbBGBcgrdb2OuV7PWW/kb7AINhbxQ0oFoTUZ
kdasGFtWTLMkzimLdyuTPJqkrhxGn5ndlcPrNqUPFIlGquTbbZr9HvOJwaKD
vYZJj3yfVzzZLtzl5OxpY+91so8OaJ464fz7r3ZefvvHyMxfcOQFMvAqXKqG
PEcSUwR+CUVnwUOEwAkdoG1HwpVLYBwhFFCQmwhqhAsmifdThOaDQbbkHGxF
ogsxS1TXB5VeHhwAWVBYi1EW8Cm+buDEtRTwGURZLPfzV7kj5HrZ2m+Rpz5Z
731df/6ltroLcGVS1dLE3g+fIQwWRVA/PccqgMMF4hG4XK8foWKQUBymTkIW
CtQyvqAMF1ikF0i8hOPnYZeI79/4xT+dfuGxPz459NB4ZV+toMkY32Zi9FeK
x+qy+4rE3ZbMNj3XpmBYZQzgKp06oUPDbwK8oOQ1yDj1sGNK0KTNAE4S8Ask
I4piaNKhc1BQLMOjWQn2Dep5gGIA0bSbhB5zBrAAYAv4OL3dbQQeWOimyMht
hC/Bbh25mQD0/vRbwFdTBT44PYcOUBuQYECd8R0GYZspsz1P0pEv6yyQA57q
K9MMVeeM1Jo21+cBtgJ6Z6sd8gggFJpZxuy5I40moKr6qjXDNtOO9tIDfXWH
B6wHN9VBnuqr2t9bsa+nfG83QNkkRVgAe7wlexYLuzxFO12FQHDtAGgrpGXX
RAugwrzNNvOoFfCUYbjeAOxQnW6gSgO8+mBZNlAig+XAqnqL5F6LqN2Y0Qav
A9eh4bRSE9NaNDxwzZuy2S1qbks2B2wHV68jV0ghvSs/q6dQ3Fcs7i0SAdtT
IGozprcYBK1GYWeZcrOjYN8m69EtrQ9ucwEZ9fAewEqe4xOuE9vaH4bCqhNg
OVsBYQV4anEAy0PrrCNb2o6MOY6MNB8caNzXVz/ZW7eXUliT3bV7vNW7PZU7
28t3uMsgYbWWAJ21zZa3udbQX5LdUyjvyJO26IX1Sm6+INGYFqtJiVQlhsvj
wyQxIemh6/khG/ihQbyQDbzg9ZyNa9kwsH9F2vr7WEH38UJX8sNXpgP+ilol
iVsnS14nT1mjZq/XsYOMrI35nOBSfnh1eoRdktgqT3YrGS5FslOW3CZPbFMk
edRpXh3bm8PuyeVuKhKM1YomrNKTAwXfGbJsaxQMlSVsrUrea+ced4n3NAv7
KtKGG9K3OmQHBiw/Pdbx2rPHLr71i8vn/uqffoFE36LDM0jYQz4FV8K5kgyD
gMQDvT0Mv0XxOZScRcgZPzEdgKuiBDB69UiMoJdBoeOgqBV20CV59TF7ArEv
lLb6+N77k2KKzxjLxdFtndgXasrwVdoKwbArPwR2pUPegWvEB5A5FJ2Hk/EW
lhEn/NRiVDCKFFtYZAohZgP4ZT8+FYBjWxdJmMrvfdL/Jul/GZl57uLrP/zH
M+Pf3V070SrrLE51mRO7CjhdeeluPduqSCvKSs4VxBtYEXpmRB4vpjQrpVrG
rJYwqkXJ9TKGTcVqUrGAX/XminqLZJvKVEOVmsEKdX+JsqdIBtBpEXXkZQG4
ActQHATohqaeJQKiynQha2nL0kavJbMzD1oanXkZwHrMAqApOvNopw2OCaSW
ANJljtBpygJKqqtI2Veq6Qf6pcoAB4+o+IctVsvWxoIJW8G4PX9rE5RU24D8
cRQAVTVYb+itVg9YDZtbLJPeysOD1iMj9sNDjQc21R7orznYX72/r3IfIKze
ir2As3rKd3tLdnYWA7uLIqzdXSW7O0smO8smPaV72ot3u4t2u4t3OgvHm4CC
M4435262GTfbckat+uF67WCtZqA6u6dY0lMo6S4QA/QWSfpL5IPlyr5iaXe+
yJuX5TEDBk+npFMG4Gtw3brzYchKP4QM2KEK1ViNeqQK2s21mtFqwHcit0lg
V7MBU/dWane0lz842vIQ5Cb3CaCkdnmAtgKq6ti486Ft7kd2dn5nsufRvb3A
LvUE0mrrKoV1bJvn2IT76GbH4ZHm/QONe/sbAGEB2trbW7e7q3p3ZxX4ou3u
sm3O0m1QZJUAthpvzB2rNWwqVbXnikDjoU7Btuoya1XCokymkZ2gSYoChCWK
DBGGhwpCw9JDwzPCwjMiwtPDQ7gb1zPWPJD4wL3Jq76duOpbCSvvSVz9TdbG
FbyIVfyo+2SMdQrGuuykNWZmcFl6dKUwqiEzvlma5FSkOhUMhzTJIUlyyJPa
lLHO7EinOsqliXbr47zmlN4C9qYS/h675tGe0kNNBq86yZEZPmLmHm3Wn+g0
7G9Vbq3LGChl95WyBmrStzQrjgyV/fio5x+/3n/6hR9cPvUbZOZvJPEmnGaI
X8ZhB/sUjkyh6KUAcglOWiTnAviMH85MnJ0n5ucJ0FZEMKqLHqPjBHFqGTiE
ntFIb8EpxsGpOI071Ero7SywdV1g11sCD7v1sPY7UkZ37L1vcsCbhGr879NW
S/cOvbtY7EMyipro64f5JdB5f2AW8BS97BRFWLM+/9zcPD4Pp5ETCOAssB9c
WGEGzpnCLyJwMOsDjDhNkKdI4j18+l+BC3+afuuZ13938BcnPMdHirc5FZv+
P/beO7qx6773/eetddd61y+JLU1lbwB77733AoIEQZAgCBCd6IUkCJAEGwCi
ESRBsHdyOJId23Hs2IpjJ44dJ7Hj2ImVyI6tuEmWZGlURjNDouP99jkkNZJl
RbZz73Xiq/XTXhsHhwDOAWZ/9nfvX+GXTtBzNT3ZanKWtDFzqCiBmh7ZmhpV
kRJdlZXQlJ9CLsvsw4po8JqLZZ0VgoYcbnWqoC5d0pSpIRfNM+qM7FaLgLwk
7V0GEEh6rEKymUeaY15gC3mM02rApmi1E4hfgJ7qCVo13l76ZsAJqMUNndxX
A9oBxnOsNEYdbpcjfD3Y9EAdtLOMhhkwVussu32O3WHkkU38LjNy0qNgSoqG
eztAuyjtW1EyVlQDoKdW1PRFBc0o7JzhtoGkMom6lkYHVrWs7VnBwYL00CLb
X5DuGYd3ZwWgrXbmOACsx5m1ASJLz1qfYm7omQhYgK0p1ubE0LqWtTbO3NCy
XJrBZXW/Q9mLFJayF0QW2KKcapcBwiiLoi77cKdNQLLwOxa4bQvcViO7GTpm
Xht05llNc8yGOWbjPKtxhlEPV2cYQs9a+O12YeeKjOqUU5dBA8qpqwrqkrhr
gduip1ePU8u1/XWm4W6XlrM7D8BVIDYhVOkQsFa1xysa0FZ3V8afcuk+vjaF
OIWh6nFHCxxYIKxwX4uDRbSHdbCoPrCiJcEdk2zLIN6aE20CsEBqTQvXgVmT
XNcExzkBOou9oqKvwBxA0mMSkOEbGe+vV1Oqld21cnKNqKWS01gyWJlPKUxr
zUxEWevj4spj4iti4qoSiDVJSQ3JyVXEBGBWcXRkbtiNtGt/lPyxP0h54g9S
rv3PtLCPFMZ/rJxwrTrxyfas8IESIrsiWVqXrWrMH2suGGnKV9TlSKsyxNVp
vJI4TmkkrzxaUBknqiFIG1OVrRkjHbnjnQXzvZVL7NZNAXl5oFHXkKOuJuo7
06wDRRvChh1564as0SGstvDLjNxii6RqaaRhU0/6uJP9N5+a/N7fuH7xoz+7
/9rXgu5/DgWfD4V+Fgq9HAj+AjnQ+u/7gw/dKP+z1xP0udFYH8QSX/jQzpcb
RnJvKBQKBgNYXJX/sf8CWEKn9/cJfF97X6z8NqPWB/yt7/201W889v72o/fv
m/2urvj9KnNfLhp4cYdALFocQSqAOSbh5g888njfdnseweTN48US+KEAq0dB
/yP07yjwetD3csj3s5DvR77z799/7R/u/eyv/+Urm189nTi1MM2S2ilmvm4g
d5SWoyBniJqT2VXE3rzoZuKN6siP1kVfb84gdlQUUpqq2N0t0oFONbNrZLBj
jNE2zSYpyCXc2hR2JYFXRVA0p2spRfNDjQtC8pKc5lTRlxR9djHFJiADvxa4
HQucdgOrZXawCXm20xun++v09BoMQBem76/BVrQAQKjFDe/Pob8CNdGEG7zC
lSEPeXhBZrNxCIb6tgV+p0lINgm7Foa7zcMUi4hiHu62SagORT/msEe1SYAX
/SsqhnOEsYipKrOEApya4bThG1U7M4Ld+WGQVEcW+ZFZvm+W7S1IdudAXnF3
53lXLYLXLBfBa4aDYWsIMWuKtaZjrmoGnWODK6MMvF3EtsMcgEVln11Bw1ub
gob8OqQUsGVZD5hD0m0XgQbsBLMISQu8NhPAi9MCZuA0G7mtC/w2i6ADnsJb
O2hAOF9IgnaB3z7LapjorwJUTfTXWKS9W3rBXfvoXcfYkU0NYuoUUOXSnWLA
Qg7qGK2eXtU95ZrAHQIft6uoK3zf6mBxZN8+smdX7wGt7OoDm2rPotg2Sbfm
xSCyQGpBZxvTWRvTgg1sV2tDx97QDq1pmCtwk+X95uEeI797htWuH2ybHGjT
9reOUJpEreXs2gJaUU5nVmZbalpjUmJ9IrEhKbEhObE+KbGWSKgBqRUbnR9+
M+vmk1nXn0DYevIjWeEfK4x8oiTmyYak2z25scziRH5FurgmS16fJ63N5pYm
92dFdyXf6kqOoKRG9qRH03LiGYXJ7LIUXlUqvzqdV5kiqEpSN2cbe6ts/XUL
1Kqp1mx1dbymnqhrSp4mZZr68m2sUge3dElYbheUGDm5M4Npc+z0RWnh2kTN
U+u9X/iE6LtfN//se4evvvj58/vfxLD1UiD0Bvq35jkPeHyY80UIyaegJxRE
McT42gi2GIL3sSrJCDd+vAIy1v9N3Pz+E2n1m0HQ94HLg//Xfs9ohX9I30X/
IoMfXsb3zOsDSD1woziRt72+Bz484t77ZsB7z+97PeB/LeR/JeR5MeT+sff1
777+/F/+8Jsf//vPOz+1rdkxDFlljXpm4Qg1XdWdMUEvnWRUSkkFg1Wp5Ly4
usSbJZEfKwp/oooQQS3JY7fWDZEahb0dKmaPhtOrY/doGKSRviYVpYbfmMus
SGRXEAU1KC54srfMxGu3irtBszjR7Lp/RdHnlPehdSERxS7ssgCzhtqMrBbj
YIsBcadhjgWgacRaJCKgnUUdvI8MfzjPap5jts6zWuZZ0LbOMVFnltE0PdA4
TQdgNc0ymw3s9gVOh4nbYeC3GQWdJgEJ7RCJyWZRtw2ggPwokMMD7vmwpOxf
lPeCkjIIO+f4HdDalbRNPe/QJD3GIHVolqFlQBBWC5IdMINodx5RbGdOgLax
oG8Afgl35vk7c/ytGe7GNG9Dz16f4q5PsNfGh1Y1LECVc4wFnZXRweURBtiS
emBRCczqt8lpVjnNgvwuSFZxl13SvShFq4U2cZdF1AmtVUy2ijrNw6QFQYeJ
32bgtpoFJJukawmgJqcCngw8kJBNs0NN08ymKUa9hlY1Qikb7682cNscctqW
Xni0oHh6SXMKtLIjD8Bj5/gJJqzQSuAy0lany+NPuybuXnpZXGkrkFpX64H4
phVClU29Z1Pt2JR7dtW+XbVrVW4tyDbnRRtzw4CtTQPC1ga+n4Vhy6llro4z
nUArzSBctR2uV0IFZi0gr8guE6fLwO6cHmjV9TaOkOtlrTX8uvLB8gJqfiYp
M6k5OR5lA06MrSPE1hBiqxJiKuKjy2Mji6PCM25eywq/nh8G9rHSiCcaCDc7
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
+CgIcxo3KCx30ONGmS3PUd6wAEo6gVUcOPP5H/lQSd+HAf/D4NlbwfM3g543
Qu7Xgm+/cP7q9x699J3Xvv+VH/7tU1/7Y+snnPLN6T6rolk/VDLNyDcOFsz1
505Rc6Z6842s2lVpz7py0MTuHums51QX9xfmdaSnNhITaxOTSgiJRYTE4qTE
stS0ioyssoyMkrS0gtTU3JSUzERiSkJcYlx8Unx8SkJ8ZkJcVnREevittNs3
MsJuZIXfyr59Mzf8Zkl0RFVCbAMQKpnQmkJoT01sS0loS4ml5KZQC9J68lL6
SjIELeVj9NZFFXt7VnqyOHpgVaHaSSbpiWNsa16I6QKua5J94QKnG1rTDQGw
1kFeYbRaHUOBw6sahnN8YHWcgdXaoIMtj/bjnSvDj0C7rKS9ZzEQR5UF8/QD
Q7HAMsqSEuVWsopReiWjkGIUdtuUA5vTw4dWUA2a/cVRkFQHy9qDlYn9Fd2B
YwTzN+Bu6FmuCYYLy08L/e1ZNp4GENksG88KCMJqG9AzzX3cueLqIeYiyMbX
7kBb7eALoZeousLTLkaQfZMEa8V7oIDmZXsG6Y5BDCP5zrxoB+FMgOkvIB0X
gLWBAQtscYQG2gpf+sMN30G7+hiX6ARiggl2ZpAH455BuGsSodW/BeHmPLCY
sznNWtcNuDR9W5qBnUnm9jRcGn/POHxolh7blCc25ZFdcbI4crqkubM0dgeA
BaoKUOUYwzatRrHk7Wgx8PH1QGhxu+qfgECzqXFm4cDCDZdaQC7ogNoCbKHU
gnhGXGwnaxGXWoo+/Eu0oagEmkPWtyTvX4RWTd9FlyZwgVrXstYn0KIr/NLg
vh2aZXtmyRaQ2iQ5tCsOFhU7dum2VXzoUJwuj+0tSJ1a1gy3fWKgaZ4L0pvm
VAyuyhkOUZ+F12Ngksa7a4fri4bKs+jF6bTCdGpBekdGUkt6YmMKsS6ZUJ6A
EkClPfGHmRHXS4jRtZnE+sz41uz4rvzErry4wbIkdkUSt4IgqCBKqpPUDama
1qwRVHesUtxYNFic2JcXy6lKkjWlyxqT5Y0EbUfKdHfaLCV1nppuGciysgps
oupDQ/8fLwv3DIw1Pe2OQ/rZuws/ffYZzxvfC4XuhYL3gu5Xgr43gqge0NlV
/W9/wIMFXXqwwsR+vNwjBiq8++sVP7pCyQcomt+SVt5fp+bIr+Vl8R+uAb5H
Qz3uKPi7qa3QHfBdCKuQD/cAxIrEY6rK70VVqgPwO4DPffbQ6z0PIIw98gGq
fC97vK8EAveCgTdDvrdCwQdAp4D34aNHbz56dB/z3vE89MJrYd6lyNkCbsTZ
mecRtm/1EEUF+lHac1/gNS8qlfhqKPRK0PPT0KMf+F9/9tGL33z5X5755y/t
//XH7U87FLt65oqKbOLVTDNKJ/sKpqj5GlKOujVL1ZI92pqno5SbhtqcMsaG
RrA2Ipzn0BVdrZyGmv6K0t6S4u6iopac3IacrNqM9Mq01LLk5NKkxJKkxJzY
mPToiJSIsMTwW0nht5OjwlNjIjKib+XFRpQSY0vjY4piwouiwirjY6rjo6vj
ouoJsc2J8a3JBHJaIiUrhZaf0VeY0ZWT2JVNpJdly7vqDQLayhhn36g6NCsP
LCoQVjsL0i2zZMcs3TEibXWhEaa4FyuBACwtMgAWUliaQVxnLQOSMFRBB5jl
BHJh8LpqMS84uhNOu1wwvFJVuM7Cd69cYyDW6E5Qaup+h7zfKuk3i2iLioE1
LRdwcGRRw5B7By9+4RjbXxrbdYxsAaqsCpRACVSVfgjV+5gYXANg6RjQ39QD
FDhYiRBgAWCI9W5vigs/PVxevXMcRxjwC2hlGEY2LwTbNgzDbdldkOwCoRYk
MHLCiIpyD5okm3OS7XlQBMi25+Gh0AVvhP3t5hxvY5a7Ns1Z1bNXp1ir2sE1
HXrHx3ap+FeUvAQWD+/szwsPDKIjk/gQMVGwNcdZn2G59IOuCbiroGd7XWrK
2kjP+kjvpnZwc3poZ467b0TuGUcWGQz7J1blyaLqjmPs7vL4Kcgrx9ixfQRX
T/heFd7ikupdwFocPcJaOB+AdQzAsiHBdQA6C2TXgnzPJNsBYBkkKLvgnAhs
fVqwNslbn+KDrU1xQW2t4T6EYywwVDZrjLWuYW/reDsTgvUJ9ia2/bc2BRAH
7cldhykBur3oxu6YUY6sPYt03yLft8v3HLJdu3TXLtuzyg8soByVMA1AuTWU
dMswxcAlzbLaZhgts4zWuYFWfV/TOEqmUcatzaOXpPXkJ5OyiG0ZxPbMlI7s
tLastPpEQkl0dMr1J9LDr+XHhlemxjflJrfnJrVmxPYWJtFLiIyiBE4ZUVST
rGxIUzWkq1sLx7vrJnobVe3lnIq0wRKioCZ9uD6dX50obUxTtWWpSJkjnVma
7uyJ3vxpepFhqGJF0XYwwzi1CA+M3LUpxo5Z8JnD2Wf/9qn7v/hWKPBTtDvg
+WnAfw8Fv8Ck1/e2x/O214Nc4PHIYp8X5W4KBkMALDeMvp53Cr7/52qrX/dF
3heI7yMlfgtt9eG9Ka6k1uPK63cKUu9DKySs3JgTIIioi2Lx8PFRTB7KCPvQ
73k74HvL637N734pGHg5FHo16P/Fg1e//9Lz33rpR985f/OFUOABirHy3A8i
9fQI1NZFuXgs/Rf6dpB3Bvyo3gr4XgsGXgkF4XVe9Hn//dGj5x6+9Z37L/zV
S89+4p++6PyLo8m7dsHqeJdBWG/g1s4xK6d6C7WdOZr2zPG2TE1rpropV9ZY
KKkrktQWSuqL5K0Vio4aZVeDoqt5uL2O1VDRX11GrSwmF+d3FOQ0ZqTUpSZW
JyWUJcQWx0YWxUSA5UXcygq/kRl2HQw62VG3sqJvFcaGlxGjq5LiKgnR5TER
ZdFhtQkxDYSYJkIsKS2pOyuNmpPWm53am4sW8yn5KdTC9KHaAhW1ySTu35gc
PjQqTqxqoBUaGcyyXeCUWbJ9maToIjfRNB/3JcD3rda1QxuXwFpDThcAIzru
54ZoNc5Y1TFhTH7cELDguGZgdQSHUd+VwUP8CN5esqzXIqGaxDS7nOHS8vcN
shPb6B2HBuxkSXO8NH4I02zH6LZVuWWTbxlF6xOsjYnBdS1jXQtoQ61rfGBz
grk5ydyaZKF2irU9NQTtFkaEX/JXvyDFFcXW4K8AYXAHFsQXWZswTuEhxsig
A4OqSYK32yCsjLJdGMNNMuhvzAnXQDcZRWAb8/y1Wa5rmg22qh/amuHuzuKb
U8NXa4AXau6SVrjtgE1xdvXcXSSy0Lrf6gRjWdfv0tFXAVVjNKe6Z1XZ5VJ1
g61p+gHTwGsELGActud1ZJYd2xR3FkfvLo0jkYXR5wpJOKquaHXFL3QC2hZE
O18ola4d62B9QNXRJbb2zYq9Bfkuji0jSo2L72ptzQ0jmxUil4xp+PEIQR7u
zoj2ZsV7M6KDGTE8xBeWXXCf4cKngeb8jXkhzAS2sB8eTJnQ7cUDuq2yHZt0
xw7AQl6Re1bZvkV2ZFceoSmKeGOCtzoyCHptWda/JKZZ+N0WLtnA6tDTm0c6
q/j1+YNlGd05xI6MhNaUuJaUhObUpIZEYjUhvjAuMiv6dnrYtezIG8WEyLr0
+LYc5HREySPSCgmsskRBdaq0IUPdlK1uKVC3lmg6K3XdNaMd5bLmQkFNzlBF
2lBlKrc2S9icN9ySP9yeL+4sVHUXT1JLpqjFs/QKq6B5fZR6OMe5axOtTtHt
4z2Oqb7DVenXn1l+/YW/CPm/F/S+EEIp398IBN9ClcEDMHN+EPQCth543A+9
SC+4sTTvaBj6kLT6AL/096izD3/mb6Dp3ncJ7golv8p8l5k0/vtpq3dWAn1n
WKiUB0tkgq//BoC3aFU44A5474dAdwdeC3pfDHl+4n3jX37x/Fe/+/VP/vnH
V5/eNOwu6r7+uTu+e8+HfPeC3jcCnnues1fPz171u+/7zlA8X8BzHkIrjfeD
7nsB98sh70v+s+cfvvXPr7/8tz/5t89/55vHf/Ml56d35Hdsg6vj7Qvi6jle
+Sy7dJZVpu8vmewpQKhqzda05Giac0Ybskeay0baG9Rt9YrWWklLtaChnFdX
OlRbOlhdTK8soFXm95TnkIozmnOT6jLia4iRNQSwiOqE8Mq4sPKYW2XRN0oi
rxVFXiuOul4cdaMk+npp9M2S6JtVhOgaYlRVQmR1fHh9QlQTMaY9hdCeHE9K
SejNSRsozB4oyqUjy+krzuwvz5KQqme4PU4Nf3deccemeQoQYIPJs2rPIsPG
ZJADwm3ciQ7l0LvwCbxw2NaxAVibE5xNHfsyOzcLubVrQUMhAYVQpR10gemY
SLbosHhYlBn1glmgnnABBYb31zToIEAK913H47Bssh6rnLY4MrgxKdg3yk+s
I4hWS2MnMIraVMeoejsKmN02SzdMMKtnr4z0ukZpq6MolHhd078xTt/UMbZB
W+kG4CGM5BtatFy2B4M5gOCxMCucDjih8EU5XOmA4IKBdBtoZRLjeILOAQgW
qxyGUBgwL8wMJsWyu1+O3qCtDGAiUArbSFsJN2Z5IKzWZjjrs9z1OR5arDOK
rzj1S6oKq2uMGUBqZ5KzAzJkkgksdukYTi19VUdHlSI1/auj1FUVxanodgGw
lF1OVc+KundNQ9/AVgV3MU+SfYP4cEF2bJGf2FSnoLAcY3dQpBVKhIvvWOGG
w+sKVUcYpw4vsPWOHVnVV+0JDj6MXIcWBC/c4CYgfhmkcCuudruOLapTq/oO
TIqM8p3p4U3kAD+0hqL5OOvTPLTKCvfKJMLhju3QIXUPtAJm7cMNtyn2FtX7
jpH9RfXeomrPhnwXj4Cz8PowQ5gR7UwKQLJtjnNcI0ynYmBJAtjqArWloVTJ
W4uHyjOo+cS2lOgmQlQzIbaFGF9PjG/MSK5ITSiIDcsMv5YR9kRh3O2a5Nim
9Lj2bGJPUXJfSRKzLEVQm6lsK1S1FMrqcxWN+YCqyZ46XU+9vLmMV5PPri1g
1xcO1RcMNRRwWgoFnaXyrgpdd8U0tXKmv2qaXmVk1y8runb0g3ftwo+viA9t
bJuuY17VsGGj/+mp5pXnv+R/8HwIZr+hVwNnL/jOfo7I5Xsz6H8QDLqDAeRF
htzAsCkzNuh9WF78h09djaKPH/e9Wy797mur96XV7xSkHjO3F/eyQHFzWNaI
i7wTAczD3O3zPPQ8uud79FLQ+3LA93P/29/3v/nsj7/16T/ZmtpCPmPIr2lB
0bc5J/nul5/yvApTnZ8Hfa+EAr8Iofb1kP9ByP8QFeQ9e9X91k8e/OK511/8
x3/7zp995+t3//qZ9Wc+afnk0eSuU+w0DKzP9q5PdC2PtjkUzRZxg4lfO8us
NLBqTUN1hsE6Q3/tLK1qsrN0pKlAWl8kbqhUtNSrSc0j5BZlZ7Oso07UVs1v
quA0lDJrC+hVuV0laS25hPq0qMaUqObU6Ja0GGibUmIakqLqiBG1cbfq4m7X
J4Q3ECIaEsLr4yNq4yPqiJG1hLC6+IiW5OjurKS+3DSw/tz0gbzMPtBTuamU
7FRaYdZAWT6/pWJiqMsiH9ydVd6xj99d1N51jKMRDA1BchglNuf5+Ii6Ncvb
nkNrgJuzgi20y4O0FTIsrwXy2sKAhZilxYOSAFhMJ/AI4xRoK9cEax0pFCyB
wwQLjjgxkbUGhuEJlBS+6Ie3oKdw93WgFfJsV/W5Jjm7Bilw6tQ+dmzFhiZs
GerAoji0KY7s8kOrdNsoWJthuyYGXKOIVi6MWe8ASzsALW7Q354Y3JmCkZx7
5WVxAQVsLe7Km/2CI7Mw4eetw02AgRQbRWHOv4cRau8KVWBWmP+j9tA6cmBR
IT9z0FZG2TamueBvN+YE63PcNeyuwu2FacCuUYgzEQiFr0Pi+u6dz3MJ0x34
qJND2zrmhoYOGEKEGu9f1fa7oEXCClDV5ZSRXfJOl4LsQCmqugFYrrG+NR0D
RBa60lnB3vzwARJZACw1fNF3bOrTReA+5nqx9C5gvYtWSGepsA7KQ3jRArMw
kJ1gyEPrhBjOgFlIgoFYc6DCxHsYsABbx5iTxqFFeWxRnlhUhyb57hxSQy4t
Fl6NLQBuzvBBv+/hC4AmMT432MGmB3tI5kv3LMhN8dA+gtIkOlBqRCDXjk25
a1XAG+2ZZPCa23ohvOz6ONs1ynKqGA5536KYusDrmGE06Gi1KlK5oDaXXpDU
k0HoTosnJxFaE+NbMhJasolNmYlVSTH5MWHZ4dezbj+BvC9S41uzEztyieQ8
Ir0sXVCfrwBaNWQLq9IF1RnypuLRzqqxTnjNWmVHjYxULWqrFLaViUgVcmqN
pq9urr/ewmxe5LTb+W1mXpNFCGNC87qWcmLmfGZL8dl91dNrgh1L37KevGFk
/cnB9A+/+Unv/X9FnhihV70PfuJ9+ELQ/ybansBKsPoDWG44LBuq90Mv0P2n
l836dbXVb8OL/+K0QqlrMZeYqw7mvo7yBJ57L87x4kn9kIcNlvvP5z3znb/p
ffQKisb1v+h+47svP/fM33166a5FZJa0m8VtMJqtawbski49s2FHz//WZzZ/
8NWnf/zNz/zsn77wwrNf/Pn3vvzCc1/+2bNffv7bn3/263/8d188+MtPr37+
ruV0dXzHKl2ZHVrSM1ammct6hgPGySnGhh7GwKGd6aHtKdAaIBN6l2SUZTnV
qehfltHsw5RZRvM4pUrcVCyoK5a0VqnJDWOUhtHuejW5VkGqFreUCRuL2LW5
rOpsRkVGf2lqTyGK1e3JS+zJR9adk0jOInRmETrS4jrS4klpCZ3pCaRUYkcK
oSM5oT05tjUlhpQWT8tJZpZkD5XkMArS6fnpA/kZ1Ozk7qxEakE6t6FMRW2d
Fw1szCn3FkZOHbq7yxN3HNqTxTE0SYbRwCxDGciR9xprYxpsCHeE20BOAjB4
CvDAoi09b3uKvz3F28aAtQ3kmuCiuFfMQ3t1gokb9JFHgf6d407d4DK2mbWG
ihsOAqHwRT8srfrFBhae9QL6cA+Bg/tGKYyH8PGObCNAARgAjywwXZceLIgP
zWAwCAu2pkG+DTg1fasgrEZ6V9TUZWXPspKyoupxqqmrWNamDYxToLO2dIwN
3cDm1BAuqa60zBWnHndr3zeCMhJuzAm38ak+ZjDPP4B5PoKU/Mp2sYcwnO5b
VZfpIMCkcP4WWgYUrht46/O8DQN/0yhAHn0GIe58eLUCibGJe7UGiD+LPqGe
jYCrobtG+5xwdaO9aPVP0+fS9DpH4TK7VuSkFVn7qhSsc0naaZd2OpTdy+oe
OH99HGTp0Ba8+DS8vhCGdMQs0Flm2ZFViUknNb4keNW+4xD42PIgvp+FQOZA
px3iq4hLmF09dODJdRHIsCKP8h0zci4FzXWhv8wK+Da35pAb4doEd32Si09+
YBa0MyvcNYj2TZIDVCtTfLHECn0Tvtwq219QHJhVxzbgo+Ziv9Ixurc0coB8
QUcP7NgMwSDemha4tBxUzEVJt8t7F2VUq5hs5rcZOc0z9PqxznJxfR63LIOR
n9KXQSQnxTYmRjSlxbRmxNenxZUSInOjbmVGXM+OupkfG1ZCjConoPQXTWmx
3fkprIp0flUqpzyFVZbELk8T1uRKm0pGSFU6apOup0HXg1J2TNHrjexWm7Bj
Rdy5JiVvq2h74/TDqcH9qcHdSfrOVP+6tmdH3/cpl/Sv7uq/dGfiU+vwz21g
dYKyOTPwuT3dD7/x1MN73wmFXgqFXgv47wUDb7ndb3o8D9HOVTCIDWjuy9IP
v4SJx/J14zkGsXy5OK28WMd7URXC/46M+g/tvyit/neuBF6kq0V7UniL5a29
4NQFqnByXcZbuVEOwAAe5YtV2kVfG/TPgoG3g4F7Ae+L56//8w+/9fEvf8K4
pO5c4NYuSVrW5J0rkg4js0ZHKRynFNnF7fvT7IN5/olVcmyXnTiUpy71kVNy
sia7s644XVMcO2X7Dsm+XXyyDCOVCMYcUGe7RnxdSHVgHjlYGD00jRyY1Aem
kcMF1bF5dFMvdk3wtyaHtyaF6zq+Q8UwiSiz7I65oVYjp8PEg09CMmB1nWYG
WmboLRM99WOkSnVrmaypSFyXx63OHqrOHarJYVZlMSqy+ksz+oqRgwStML2v
IAMUU29OOjU7nZqZ0ZOZRs1K6slJ7M9LYRZnsktz2EVZg/npvZmJPZnEgeJs
YWOFpp9kU3D3jbo7yzNHjomTZehM3IF26XLb3SxDiV7nhVuz3M1pGOKGNvXM
jWk27hO4gbIx8Lf0/K0ZwTYML3oB8H1Xz9+Z4u1McrcneZtTyOHtKqoI2RRr
TT/0OKpWtIzlcZRuyDXOcI0iYbVyGZyF27KSBgdBdm1PDO1Pcw/mhvdh2myF
wR8m6nI0fJml2OeUHKJEf8KDed7ODBvo44IBfKRnVd2zoqIsK7qW5GSHrHMR
Rm85eVnZ7VT1rI/RNsb7kWlQvkHQHZicQQkrrgDxuPs6pm6QG/muSYTe95JN
0Dm0wyRfiTPryvCHGKougpX2LIhWgLlNw/Dm/PCWSYjbplG4aeBvz1+910WM
1ZXUuvo8W1iuQgDr7iRrR8fc0g4Cc9d19A0dYx3oPNazMkJZUnQuyzqWpW1O
SbtT2r4sIy/KuhyK7mUVBS0JjtHXtYNoOw+E2yRyaUBcwPzhd42SbaMUNCBQ
FY+xunJfx0yN2z7QyvaO2rpKfHElx64eXnllHGH82rdfOsNb1TDZuOMYA3m1
e+n0jjIGTwu30W9JgBImwxdtQCQ9MEkPsBC/PYQqBKzdBZBa0kOT6sQ8dsc2
frqEAscOl8f3lzT7mDf+PpZMHmi1bZCiF5/ir2rZK6ODDlX/EswYFZRlaZd9
uMM41KCnVY93lKkbCyVVubz8tP5MQkdKRGNyWC0hrDzuZkl8WHF8VDEhJjs6
PCvydlZUWFbkzZzIGyWxYdWJUW2Z0b0FMQOlBGZF8mBJ4mBx0lBJsrAyS9VS
rGktmiCVzFCKTb1ldmbVEr9+Tdbhkndsqsl7OtrduaFPL4o/u6L48y3Nl/en
/vJw+gub2s+ujX7xYPobn7J957OWb/yx/k83xOv6boe2+9M7uh9++zMP33wu
4HslEHzL57vv9rztC7jdKGWc92JsfFdNB+9VuaJ36kGgcRIbCC/O9GEdPKW2
++IP8WH8lzz6rh76f9Otq9+AVr+8Zvhf0svCe9Vx4/xChMIy2Xofy2XhRbG4
XrQUCBbwYmlngVxwz98K+u/5z3781s/+/rmv3/n0rsaqalvg1yzyG5zDzc7h
lgVGta4zd6wtQ0vOm+6vmGNWmYTNLm3viqbHPkJZnuxZmmp3zpE3zf2HDtap
U/CUU/yJNeXnD/XPHMx94cDwZ7uGP92Y+9Sq/hNL+k+vWz+1Zv/EquWuw3Bk
nTkw6w7M2j3T2Pa8amNWuj4tXpsWOSd5y1r28ujAqrrXpaa6VD2rcsqShLyI
aqN32vhky1CHidFmpLfM9jZMkqtH2ivk5EpRR4WwtYTbWDhUmz9Ukz9UXciq
yB8szh0ozKLlZPZmZ9Cysvuys6g5KdQcIi0vaaAwjQXAKspk5KUMFqUP15VO
0TtXR4SHxvGnlmaedhnvuubvOFG1I2hPXZN3VyeOFkd3F3DNIjtE+/KCvTn+
zgzy9F4HcTTJxXMyAK1gbIERBlXjnRaiQUaPKawp3tYkb2sKGMcBuuGEAltH
xnZdrgEiVGnoS2P9jhEUeLWEorFoyygIq29ltB85Co70OUdhKGbtzvAO54dP
TOJjkwSGrE2jeMMg2jYO75klMP3enuPvGQRHJhFMLXZByU4yEIBGepBfnJri
UnWvKrucCvKKohPMqSQvy0nLcqyv6FpVda+PUNfH+lbH6c7xAZcWmMWEkfyx
DSPk9oASH4EZUO6jHaNw14x5plllmE+F9D2cOrQp923KAxTZpNxFCf2UV9G1
2yZsGRDkKkxszDCxAdqKQFhtziOH9gsldSHxLr079Gysj9w/1ibxXLjMrXHG
lpYBqMJoNQB0XtfSgc7Lqu5lOULVkqTVKWlbEbevyCkr7+jKXkxewcmDa7rB
dR0TsLWJ6MzbRqu7fNc0f21WsDE/jK1YygCv+1bFIaIMXI4K66jgCDyEXwi2
Qjh6CSwN3uLbXhcRW6iPtU4Nyp6BecWjwOQljGLAPrNizyC5qkq8BVpvdnhv
BgwD6LzowCA+RMBCDpYHWED0DgqIBqklPTQqTxbGTu26uyuTpyu6o2XtnmNs
DziF3GxGdmwqfD6zPS/dnhNvTgtduiH4h4ZC/FTUZcC3mGThNc8z6ia7K3Qd
5ePNJcrqfEFp5kABkZwZVU+4WRFzoywurCQ+qjAuqpiYkB8fnxUVmRl5Kyc6
DB2Jj6xPiyLlRnflRfcUxNEKE+gFCYx8AiMvgZkbIyyJl1cmjlYTNLXx2vp4
TXPCGCllsi9/brBkeqB4eqDEAgOOkryro+9NMk/m+H9slf/p8thnndrPrIx9
0sH97CrnS7vSP99VfHpdcsch2loQfHJ35gf/+IXAOYishz7vW77AI1/wHKbl
2Kogxibv5WrSFbmutBW2m/+htJUXzwCE8OT7z6OV9/3c2j/AoeI/S1v9n4oO
9vou2ITlmjj3+M69aGZxjlb2UDoj7CE6iH0qlCvQj3kCBj0oAcVDb/C+L/i6
P/hzj/vf3G999xc/+OLffmZpf55jHW5d4DTY+E0L7IY5etUEtXSEVCBvzpY2
ZkkbsxUteSPk4il6rYnfuiBsMwlb7QqSc4zs0nVt6mk7s/TducH9Odb+/NDJ
gvBpu/xPnJo/25j63Kb+c+tTn1mbenpRe9c+cWrTnlg1oLD2jIpdg2JnHiZ7
4jW90DkpWJ3iOye5rkneyjgL/h2tjDFWsCwQqO6tvG9J2msTUezDFKuw2yIg
///UvYd3Y/l1Jvgv7Nk9s5qx1DlXV1cmWSwWizknACQIkiAAIhM5Z4AAiEDk
nAESDFWsqq5O6pactE7rcVh7PfZ6pJGTZEm2rNBSd6u7i8XMvff3QHbLlpOs
0din73nnAcUmgYeH+/2++/vudyMiWnBh3Msbcsz3W+Z6DcwOzUSbYrhVNtiy
2N8i7W2R9VyXdrUI25v4rZc5TZc4zRdmWy7Mt1/ldbbM37w223qR39WiHu8K
SGbLduW6z/gg6Xk973uQX76bXbqdspM8Y9vO2u/m7Hczlq0ELIABF2B9u1j3
S9dw7Luw5uWvevilJUJAXKRaRVzKSZsSaQJCudoiCtuW0SMIjlVyUvMt4uzd
JSHkxiJJtnkHL2cDLgCQNJuzoso9bZ5PW9iUrSslyYAourA6t+YDJFJuhVSb
mLKAAqBuvOyTVP2S1RX5WhA7f+EVrgel6z5hzQ10g50zM9N6ACN6QT+Z0zGy
WnpOw8jpUHWQ009lgF5pGEk1LaUG5IJnpvOmWXglGetc3jafdxDRIGKEsLYs
XvVLAa3gT2+GVWhpjhOHlfWwYiOq3Iyq18NYmKo36JUBUno9AYnduBbH2fH1
mLEGCTlKSmfASrARQFXBtix42Yq1gKzug2WAZNUrqrr5AFW1ZREuCVBvDxeK
C9BZdPLKbgAUQXkJMHShtLQAV6/oAKjiVFAxwinb2UUbcM854JJ503RWP5XW
0JLK8YRyLK0YyygAuRgpLdr/ZnRTFGDlzLN5LBtCEHTGv7KA4cItxSK6c+Du
ZC0ggxcJpGYjosbm4qh2K6bFXi1s19JvYQHQdDsFCGW+k7YQvyYqGufo8kSC
Qi7AqXuolidNXikLQNUakbsTYT8OJi4vy6s+xVpQtRZQrmG7lqoeUNVx6Ji6
cSSB9GoFB6ZsrGhvh/W43ZY0b6NhFNy6ji1sczbVE6bVuHE1gkuF1ZCuFlBX
PbKSS5yzLiBgGWaSWmZCPRldnIhIxoOCUT932M3qs9E6DEM3xO0X55tepJ1/
cuiFx/uef7z3hac6nn+y/fln2l58tu2FZ64/91TLM082P/N087NPtp97ovfi
UwOXnhy9+iyt+YWp5heYTS8yrz07fempuStPcq4+wbv2hKDpCXHzE6Ibj4s7
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
AsCsEm7HNJQYZzh1J66DLAToABgBzxAfWjH8iZoPk2cV+ZS47pPC68HSmRNy
+CxAVUJHj6lHI8rhqHIkrhhJyIZSsuHk4lBicTghHyN0YyJFsndGOwU4RUVa
x4QEnrMAvTqtktnm4RPEHSKvgDhaIGdEekVAc31FthlVbsaUCKOn3Ioo5Qxr
SQMBLPMa6gooBR1uY9Wjujpcasi0vkW4H8oOftnOLds4NQg7t+bgkU2oeVQn
OrkATFXALIJQSPScXGpnqgBUyDoHzIgIRaYApzKGqTTglI5BQVVcORaXj0ak
Q1HyflNYEpxIUPQKGKUWuSQwrKwB6WTWxIJflYVfiAwLBfB5CztnwSNgFlyB
LGrj5wuAkkDugPF5BWVYwPhE1YBkNfyJzmSd2A9uNIxzG2zrFLyQbd0DqgXk
K2OBFdE66YloiP9JEx9E2b9YghWOT1qFO8TXsFsk1otSytiKPIRViow0UOCT
RA8DbBTrtIRhaXE2dAyblHFzLUagKqStrmiBka0HlGvLSK8AsIqOhkUYDgvQ
zaW0s0CvYipmXMFMyJhh0WSAN+GaGTLTe9Qj7aKu5vmblyabzk9cfXHwlWe7
Xni89cn/0vL4f256/D83P/kLzU9/FqcYPP25m8891nXu6f4Lz45cfYnRfJ7R
fG6y5Tyz5fx0yyus66/Mtp5b6HhZ0H1e3HdJNnhVNQwr4SbtaLN2pFk7dE03
cNkwfM0yft1Ou2Gn37BNXHfQry8xb7qm2zzsWzHpcMnEuhuQ1L1Ae2dfTyvf
LupXfdy8Y7oaEv3fb+ce/vD/O9n9+t77f3548L2jw/eOHr13tPfxwe7HaJd6
eHB0crR3fLyHnoPEoptsVFFzRogsjeztk0ogIVO7pwqN/Z+hU+5PgWs/80rg
zxGtyAYcdlHhYCmKVe0R+9ndg12Mw0ePyD/vkq0s3CA8BAj74ODoh0eH3z3a
+dr73/qd3/9ifissWRa2B8WdcdlATDrgmW03jFyFtY16+Ipi8KJs4JJ84LJy
qFk3ftNE67Ix++GOdc0NOmf7bNPdlqlb1ul281SbngY/0KKbaDYx2lxz3T7h
aGgRcIoaOMhK6Gbi+tkEhGE2Y4F0B2jFQ2m0V4wjXyFTURZqKG3SroVwF7gW
1FQDEHCig2PFry4vKxCzPLISkBEU3Uko81j4lgFsxc3cuIkTNbLDurmgeiag
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
KGxVF4W0o57226/A08FBPEmrx5703tNeFEwwFuebk1aYISQHY0CfVu96q27V
YliUZEHQ2taDWcRW8atGMkJF4oKKZax5nMMqWAV5glYF0tyeM00BJJ1N0DcB
a8MjXXNLALDgZ1JadlQxEZZhMjAimwDAKhh4Od1UUs1GwJICwxqNKkcBsICq
l10CYJdrPsluXPNKzfmFF5J/+furX/3ile98/fff/fHfvXfyk3v33j0+eofY
4CK9OuNWd0/gkWYm8P32IlQC978RrQ5/hbrVfxqtWj9Df4wA03FLVr3pYHXm
BkKePtqA4VDwu6fvvfXeez863P/7d37ype//w6e/8KlkNSDwKzt9osth4eWI
sCMkmYhp53I2Zd6uKLhkKAwekFWWxcVFPnwuykvw/uJbXHPL0BIUrdZIGyrA
FlqoozE63MwpzRiW44mIXEKKdCAlH0lhDpCML2mYae1E0/lIywRuBVtokRxE
sfN2SdZY1qwQU+CNiHErbt5OWXYzlit5217eule0Xi3bYd1I6VcjspILPmsD
4bnL3unzy5PnApPnw1PP+yfOBybOB9nPLzOfXRq74J644GE95+Fc8nDbPVOX
FzmX3JMXl9jPL01edLMvLkw8u8R63su+6ONcDky3h4B/8bsSUqxb0Z7ArI5s
yDgwRT6VJChaUdnPvJ1dck5XFvkVIhqPwzI4W4SNcHXstIcd27oVc24nHQSq
3DcrgZvV6M168nYj/eJ67tXtwu9upl5dDd8pL1yLa9c9gqqDSVr+hpJoHTWU
UTAyyuEs/D1yRloGaMXIyIazstG0dDglHY7LsA8wRopW8LJTeKLzwvehyswh
PiBTWcsUnRTIY3VmGrduFBWk7dnDcRXsSAMJ5QAgQoLYKaZoFUxFThqaseZK
GjayOibCoglxvOSYLc9j3aHuka361VtR407CuhW3bCRsm2k7QNVObn4nv3Cl
sHg9t3Q9u3QlPQ8kC9AKzSVz9p2MZTOuawTlKM6wIIDzf8EyAYwvr2VmNeMZ
1XhGPZJWMVJqEhpGWjOU0TIyekbOiICFwvhWmnzjALWhsPU+hnXmDDJNM34V
0vhHAatgbyJXC7/yyK3ggoNoBTwFggKWHqUCgVLhdLBiqGhg1q1TdSunbpuu
WHl4e1AVxEVRwz2H+TpszJOsLcvW/WQgGoXCtFsxwwYgeIxYQQHlTJg3IJLA
p6wQ67jaNrL29Yx9A1hnwbadtW4m4Kijxg4EtxgHxFC4Y7ZM2jbQgXqBn5tH
Uxh0S8ESHgeVHslagb/cwsKUKanulTF3irLM9LWim3ALtlokq8mwNASt4O1W
jcbljPhZYRTffQJteTO2+54RUuLXjD6b00UXmtQU0WGEj2ZwLh65wC8r8OaS
tUR76Uk5r4KkDGgXmeGiK4AUkYjB7OIi5Vai1rAVhRvYgmhDYBOtfCS3Q4OM
dNHGjGpzSJOanMrux9kvgV8OsIgHLQAgG/++CIaZmzchZhHFSHyh4MNSc84A
YK0vyVbhOG2fyeg5cSULiBVOmIoYAFgZDSevm87rp5MqZmhuOCgeCs0xMlp4
qblwgEEVF8/cVkB6K2349Lr7c7eif/Kpwpf/aOdbX33tzR/+38cHb5wCmTq8
e0h9RI6ocxPqi5Ntv+ne2LIXIS3vZ/hFceGXo9W/Uzx6P7eCP+BgH9ez3vJf
v251dP9fPONW6F91eIbLxK8KzT7QrB6tP+B1OPjZ0cEb945/eLz/7R/+65/8
/dduf+raciXM92u7vXOXQtLOhKwnA3ujVpB36Fe89uqSsewGXqCo+ubyi/zs
/FTRzS+5Z9CIB7amBWl9SV5blq2gWbYMjkYANLgJ2LgoqgCHMdlQEvZ86WBi
rj8s6I7PATtAIaOMlpWjvud6+IBwckQpJUs0Isp4FhWt4L2nwX0+qFsL6zei
RtR5SGL9fSdj3M0YdjL69biq4J1J2MaD0nb/7LOeqXNLrCe8rKd8zKcDzKd9
4+cArUKIVs8tjV9wj1/wsC8uTV5a5FxcgJh8HlbALA8HMK5tebrdT+hViN8V
memJCfsSksEsBSkjKUMYYQ+cLiGxaiomUUHvClnhAAmf0BKxFyxjQ68EcKoB
UEuYxUbcjlLqGfdubnkv7wZacaO8fLsRudNI3lnPvrxZQKjazr6yGrldWNiO
qOFgnNEDhenMqIYAoVDSR4rCPkBOs6pRVO2b64c1LRvJKEazyjGIjKrZRIEi
Err7hSqAqiZaEVZVQtLBK9ipSuEMBLbyOnhoDmhCCdy0fjypHUkiHAyntSMZ
okkFgdo7ZOImZ57MGvGCivrCq1GD3cbBr7pmGnDg9Ks2w7rNsB5XnHc2badt
W2nbTsaOSb/iIpqblJeuAL3KuK5m5/fyris5OxxCdtPm9bC67hXDtpYDUDAC
PRzNaICMMzKqkSzGaE49mlUPp+E1UQNGjBX0owX9cMHIyBkYeYzRUlPcngMr
9Q5rOoDYqfYdEi58EczEY5EMumI3hZkDTw3YZZ60cMPzovyIXqCIohlzjDU0
UgG84+SN8JKOFZCosivwT8AmppuAqNm5qKOLooWiVaIrteFXbIfU2I3mV2wE
1Vth7SaqlOv24DZOW3Yyji3S17qVtm+k7Zsp23ratolS805U8cVwbeXntwvO
7Zx1M2VYDauqHkmZGCbCW0YhGGEC/qp5QWGen3MBOkzVndN1B/wl3BVU1OeS
a3gEOydJjY9Dynywcmi/X2u93wFoZGdagKWdSOkmEkq0lUThRyyMklMK/YHm
QWiy9VqVALKxNRFNwQr2Kcw2YNqBUyLOmEXXNAIWYhYXLU2dvBIpe53ZnMGn
nuQ2adkLS2CIawBn8KzLbjHVtW71cUE0h4IxPYhsi1IqODnTlniinStrDm0B
qJEBLgSsZSpr38wNltDrp8mtsLndLrgv0wQfFjNJCdJMIB5WBSvzwtVFMaDV
hke+5pYCC0vrpxOayaB0dFk0FJKNJxXskoFfs4rzel5UOhYSM2Ly8ZSandPD
/z7TWBTX5lEjZTuo2EuoPrVm//Jnyl///PZXPn/tH776+z/9wTeP775+iiro
+2TrPiDWGPsUp6gqO8EmotxO1uMWUTppWWUdHv48dtCGvV9Wt/rF3Orov5tb
NX/h/pnhLyY334V/7BD+MWpSBX/2u8eHb50e/ezeyc9O737vdP9f7t39p5M3
/ua7f/vaF18p3V5dTDo4ft1gUM0Ia4dTxgm462rzM2iU5tXUltTlRXlhXpRz
zmQc3IyTm3MS4SCXoDiP9u7VxWZtdBUT5sL6PFoNwhYHp68IsCrJAKwx1OoZ
gIiKBlBODV3RGRnNeA675qZyBtgneTkLP2/D6cjiPPWOn0WpNB+wEuVKUIVy
LkHlRli1E9ddT+mvxNXbYfnKkiBrHg3Iu5YEz7k557ycZzzscx7mU17WOR/r
vI91wTP2tGf83DLz/DLrwjL7gn/yeT/nkm/68hK3zQ3rdBtcQHi5bcuCDjpP
1JSwwDIQSohjTU0/kYI9nJg7YAINrRO4dMyEpuWLTj4wFHJ7CysuOPTK6h5l
3ateWdY2fMZGEA7Prs3U4lYG9Wlv1GI367Fr9cCLG7Hba0CsQnfWo5/aSry6
EX+54b+asdQ9c8DR0oaRuKY3JG2PK/ox5H0xWV9c3o+iqcpBFEwAZqFkJOVD
8Hom5IR/YU1wmFDX0ZSKNKuTJpYskYqi1ZMyYYIllEoTF62iolVctIlKzrma
c25lXlKzz5bMXEBnOE7Du5PVTmCpwsBKmNlJy2TKyklZp1K2qaSVkwVoJiq+
qNZIPH9rXtRsXI+oN2Pa7YR+J2nYTGID9lrCsJkxb2UsW1nrdt62k3dsFxxb
BftuyXy1rL9aMu4V9FsZ1XpEsuYX1Re5VeCnxvG8mpFXDBTk/UV5f145iJil
Hkqq+lPK/qx6IK8dLGiHynpGxTBchdAzyrqhkqYvq+4rWMbzZtRjLJhZOOVk
nazaOGjUZZ8C4rNi46xYp+sWXMtoLoakqeLkAsoQPy/s34A9vGSeLBpZRC8L
mB0TzlQ5HfzOyQp8Lmy8mh0tsdClEUdrsb0QtcrJa1t1oYsW7Hu1JckKLfoH
VesATzHM/W4lTVspC+rqA99MYe8ETpllbZs5+1bevgUvS86+nXfsFFxbOQAs
G/3Wdta+nbFcyZh2k5q1kKy6NAvbft4ymTExKQ3EIp2NeE+TtFsZUQyOELwq
YKuTjz0VTuB63KKFWHCijySaleSMBJhabeo0+0fqm60HW4KTGKqRtHoY1Tma
Y9GjEFntWE4/gRIoZgDBKWIHNgWA3nDN1oFBoPS9sOrgNY9JKO1ObkLSyV/B
5CEPVd+p8LtDQMSjyFgB0TGrL+C36sAf4eC6QFOdovKSuOJBL7OqF0BnDla8
93A8jQjL430IDAtb5RvLslXgWTgsLMU+QDSUEdeB53qwEREb6fFaQqAKmy6I
zCCqNpWcswWbAOfZbUS+CQELSBYP2DqeT7DCO0n7TACwNoDnEqmQvGMmYZwM
qMYCqtGIhp3WcMvG2ZpNUrXOZXW8uIIVko5FlBOomWCcIqeLmdoSKtivB+V7
MfUrK/N/eif7pd9rfPVzu9/66qs/+d6XT/e/e+/k9ZPDnx4evH2KXe2nSEeO
cPwIBVyJ7G0zjgmQnewTP+JDmkD7NbnVAaAVoXJHxwcP/szRz4ta/CfRiiT3
DmlWk3SpHxHPqsPTd49O909PkGudwHffPj386XvHP7l3/IP3Tv75vbe+/u4/
ff5bf3r1D67GN6OahJUT0o5FDBMpCyfn4AFYUNdR6i4KqFF0zcDjEFk7N4cW
PIAp/HzTmJt4OS3Ori7OrC3yV1zweefkDGNx5WBYSjqcaTuZZCAOdEAyBGtK
PphSDmSw+jCBKgpGbsEyk7cKCxAOURHOTig1Iyq5Z8seUdUvrSzPlYk5yIpP
shmU74TkO2HZpldYc05mdIyQuM3De2aR9fTC+FPusacXx55yjz+9NHEOwsN8
BoJeIFRxngtOXwxOXQwANvE7vfx2L6/Dy+9YFsB1B/rhzvW3mtwApzIoC89M
GVno5mNmZzHRN03rxXQ9y8zz4PGcdSpj4mfNs4AC1Xl5za1ZWdYDVK1HgDV4
rheD1yuhq+Xw1XL0ei12fSVyvRF+cTN+ZyP60lb01a3Iiw3vtbx1PawsLwpS
pomEnpGCMAwmNf0xBWkCVJAmQEV/giToqFZqBo4WuIcPJlQDSeVgUgl/9lhO
NY58UNvUViI4hYIbpM0eP/Kk2wqOkfKKS152ysoOadUlq8/LVxflawtYOC5Z
+SWU3SBz3JbprHUqbZ/KwjkZTrlk6g0NE0OKzah6I6KCdSumgdiENa7dTRkg
9tKmK2nTHmywGdNe1nS1YMUo2q4UbXt5y07esp0zbueVW1nZRkqyHhc1QoK6
d7q+CKf90aKBUdQyCqqhomKoJBssy4ayqqG4ejCm7I/IeiLSrpisO6XsSSm6
Y3PtSVlnVtFdVPVXtEM1PaNqGgG0KiBaTRRNzJKZWbKwyhZW1cquWyZXLJMN
C2fNPLlm4TQsk3WAMBefOHkJ6k5AnylAKPT/NbOxx083ntdhm19Oi5ZVGeVo
XjNR0k9WzE3AqjkEROVJQDptBKS1QAivMLZPkFa0ptNTwrSbsu0kCUilAHfs
O6QN8kpufrfg2i45d0qu3fL8XmVhrzS/V3TtFJwA6DtZ+w72uzr28s5duE6b
dmKqrZC04QWuAcA0mbeycxaMPGDrWcITQLPiEFTs/LNr0g/pJMz3LAV6f/iX
kCnSWsPKEfbd6iClfJwiV6unlGp0NAeiMTXNaEl25HTjBQOzZGKXzZOw1qzT
a/aZVbtgb0l6LaDe8crWXMIacEATUtoCYbXl++PbaONSd85SXesysZKpod8N
rkRIn/wA3LRnPpVou0kDbYPodiGmdpywQtSxyXCOpl7XlrHda2VJDO8OtmKS
x1fJg6sIW0jNiiQNiGg1j2KkRcdM3sbPWoi1DU0G4umOj7lllCZjF7ArmF0i
/YFrpDmkvjRXWBBm7PyEZTpiZIf17KyeXzKKqlZp3SErW8UZAz+qYoeUExEN
M65npy3TeThXuIVVlBWVwl+yFVS+VHF+7nrkzz+V/8vX6n//pdv7b3z19PBf
7t376dH+T/fvvnN8dHp6cnp8uH/v4F0ArHsHd+8dvnvv8B1cAbBOMGmGgHWE
ukyHpye0HnR8/G9SfA+Azr+DL78JbkW78Ylb/cERXh4g/YNHT+8dnp6iIODh
20eHP713/MZ7Rz88vfuvxz/9u599+4//+X/d+OMbSdhMCu7ZmJkd1I7GTSxA
Iji6rPrlm34lnEngnS3De+cSFOYF8MLmXQJKpoj4OXFFRFmJWfgSHqwAVLln
AKrK8CEyAKtiAFQF53qAWMWkQzEZzpDG5agQiId/uMlRm3oMjiiwK1bss1Wn
uOKcqzgl5XkykE7QquIVVryzgFlZFzdrny66+PUlYcMrWnHD0YtbNDNhA/fP
tLk55xeYTy1MPOVkPOYcesw1/Pj8yBOLY08uAniNA8k67+c8CwE4FeJeCvMu
hXiXwgIUEQoIuojUUjcVZMDKmnQwIQOSMpxRjeY0sFlhN3LWxCY+JlOl1lzJ
mWr3g/o86F7nAFiX1BYUjWXtesCwGTZvR21bCcdexn2z5L+9EnlhNX57JfHC
mevHS5thwKnP7MReXQ/A9l5YmIkbJsLqoZC8L6rsS2kH0rqhtJaAkWIojvWR
QRRQVeELmNGiSAINNPjTAgccSeFxl8wyA1TpWAUjB8OCqUs6xUxN1Yv4Pgrr
HhUa4aEXnmJlSd7wyFc9chRVc1PPI9Hqogj1zOcFtUVe3c2tLU6vuLlrXsFm
QLQdFN9Iql7MG26m1HtR2YZfWF+cLjnZJQdnZUGAszzz9MXBrub60uyKFz6S
osby3MqyGFusvXDEFdU9M/Cby/NwAJjMWiYyxrGMYZToFI1ltHhoz6qxiTSp
YCTUwwndWFw9HFUNhRWDEcVgDPALQjkQQ+I5AC9RRj9SNjErVthGJgooG8uE
tQDsgyjQlk3sinmyZp6sWwGnOA3rVMM6XbVwKtapFRd/wy3c9Ig3lkRb8Nzt
XOQL2jFUqZUNJiT9MXEv8UDpTyBujub1ZFvGBkjcrFYW0KmkDitVjfBKGrhb
zq0uo8Treki5EdFQI/htNO0y76Qsu2nbbsZ+JeMA0oRKU1nzZtaCkTZRaV+I
nbR5L2u7VnBeKziuZKzbcV1tUVCZ5xTsExnzWMY8nrOwCjhLRYynKTad7f+k
XR8bPDDOFKjeJ/PbGgpuToSd1TfPnGWaExBndUkEr5QSVXwhYrIBekFrdgmC
XABbWeI7CWvRwCobJnPqcVhXnbPri+KtJQlEzUFsmpumzFw6/taCJwiUtrZy
Cdrymhaldlpt5GMLh4uKhZLECwmgS+jNepbkQU1+QvNXiH4vTqKdrbSLgyr9
NgiKNVsQl7FoVSZlr6aWu2uWjl9lrby8tSnKlDPz8xYuWkXgjcQpA2yRjDr8
YfVFEfy2GvzvpDu64pHk5mcTZm7GOJM3CEsW8YoTDoGqikOSNQmiKlZENRHT
wHEUDsCTOaTDTU3syvwM8KxbJetnr4Zeux5+7Xbyr//8xuv/8pf3jn/43umb
7779+t133iZoRQFo/+TwLmEod2ln+yl6OCJaHdGSVrNutf9vcepX5FaH/y63
+i9mAjHLt08qU0fY7ngI8ASgdXgC2HpyeHDw5sHB6yf7P7h38L2DN//hx//0
Z//4lVf/4FridtlZ8ohC+jG/bjQB9zy2BAhRJjSg2AypNtF5VoJevbCzAYEC
GuVAwfA8MRwsEtgCGosOuQtNM98qfFphg7JNElY1FJb2A1T5Rd2YAyRlWZLx
xvQUtqlrx1L6kRzsKpYp4mMIJ9I5iMq8uIzpaDHh+7OlJUHJzS/Mc7M24DXs
iotbW0Bx0byJCbtTRNLj5V9aYD3jGHvSOfqEa/RJwCnX8BMLowBSQKbOe1kX
AKoCU88jn5q+GOZdjvDbovy2iKA9SmWCzgTuEKckg0RXfCAB1E/GyChGsqqx
vHo8p2NmSA4wS9SnW1oH1ZZGNxFko3oIjWUFdoMEjVsRy07Mupuw7sTtuymU
2rhRdN+sLt+uB26vhG7XAi+uBj+zFf3Uuv+lFc/tomM7poGXN6wdCSmHgrL+
kKQ3KutLKIFGIbEiXZTDCTnu2ynlCAQmYUiPVhYldrHMnTaMJ3GfwRJbTodC
tXiOJRIira5Fak2L9Q78aAN1hVMlWo3XPIoV+Mv9inW/ciesgYBj3nZQuRWQ
r+G43GzVxiobGQXdYBoYjbwrpehKyTvhy6p5tKgbzCiB47QFBM96uec8U+cC
05eWpy56p5730nkBQXtgtjMo7AzhzdCXIKbwKTVQwuE8alKx81pWRjuRUo8l
VKMROQOfhY6V0jKTmvGEZjyqHYtpx2NA/DVjYfVoUMUIKoYCcoZfPhSEzVM3
FlaNwCMQEc1oGi0ysaBGRM7ZmPgyswuY8mIW4SQM+4xpsgqYZeHU4VQMIG4C
aGPCD5SBZzm4DZdgc1FE0SqrHknIBiLC7qCgw4cdpJcDMx3B2c6IuDuK8lZA
Y4eS6uEisQMr2SbREczFqy8KGkuzG8tzmz7pll8Or+FOWLUb0e5EtXtxw5Wk
aS9pupKy7KWsV5JmWHdT5u2sGTv2c5a9nHUvY97LWODcspsyXcmYr2Us1zLW
vaRxI6QG+EsaRhK6wZi6P6ruT2oZWeM4dSIj0ojcqoP3gMwUFUW831jSArIW
WpWI1h+adZIcIK1sPghYrXFyon+CyJVQMNAe5YFoIRcAVoocotAKDUV9R5My
RnC2e5nb7p6+7Jvpgs/R+oJoA3aYRRFBKG7LQqtomaYdKRAUp2i00Aq+W7WT
5lu4dV0zcHim2EThqUROyy0Iq6DTCvqtUGBqrTRoezyFKqpIT2yUm90XFLCw
lX1eVCKGjwWi3A5oRTou0CQCyCMwxyrKx02T+i8XoZaI5+OEKek/rHpRkjdr
ns3o+XnjTM0hXV9SNRYVJbs4rpmMqphR1UQUbm+grkS6DZ5aDbv0Z4rzgo2o
4qW1xVe2vVfqzr364h9/duON7/3Ve6dvnB7/5Gj/JydHD+bfDpus53j/mFAq
JFbHpJLVrFsRIvNvuNWvGL8JtCJ/7QHCVLPz7/CAyHTg4PPxW0CpTg6+d/TO
P779w6/+8zc+8+efWXllK7AaVgI8xUyskHYU1iJiOvBlOX0TV7DXSAi7XM46
jW1jZIVXtbUSF56mLjrORJBABQDrJGFVw8CqUDVC1BsQ90XJPM59AXNsq8B8
eNrERKt3+zRmUeaFtcW5WlNaWYx34KKw6J4pLPKKePBm561MiIp9smRlASkL
zXW5py+6Oc/OM887x552DAOrehLCPfaMl/msj/18gHMpOHU5NNWG63RbmNsO
EeF1RPmdMX5XTNAVRYcLdGWCiAr7qL0gjZSUkZYNZxWjOeVYXjWe1zKx1kzo
VYF0O5dbgNV0lECPpFXP3Br6fajXI8aNCByhYSOyXcnY4RR9szj/Qs1zu+p+
obZ0Z8X7YmP5Tt3zcmPp1ZWlFwq27ai6siCAXTcoHwjJ+2PKIXT3Iz3qSVhh
K5AM0D4KNIiUj6SbNanxJG34p4a8BmZSPwE3fxpL5GSEykz0GJt9IML74tvw
2WxaJsmIILZyPaTeiuh2Y/q9hH4vqb9TsN/OWa8m9DshxbpHXHJMZ03jcXF7
eOqcn/3U4vDDzoGHbH0ftvZ+yNb7ISvGh+19H3b0f9Qx8FHX0EPOwY87+j7h
6H8Ewjn46DzjcffoU0vj57zM88tsoLeXwvy28GxHTNgVE/akJMMZKSsvY+UV
7KySlVIy48oxlFxTMyOaiTCAlJGVsHLSDl7azk2ZORAJEzthYMf07KieFTOw
40ZORM8OaMb9aghmSMuO6FgJPdYZIeBlyeqbbQN0E84CmmMxjomsGVZsGhmH
w1UITlYznQFhF0RM2o/KtApGUgovfpNYRUXdgZm2oLAjJOyIiDojc10RaU9E
1htXDSbVQynADsNYwcKkzeGNBR5mxd2z64BcS6J1z9y6V7KGCai5Na90wyff
CKo2w9huASi2m9STxKnxasZ0LQ1YZoT1TsFxM2O5njDshlQNj7hg4yZ143FU
Le6LKXsT6n4g3XnjWBnHoqdISQ57KlacKKfcIKKIpKvkPlS1JNZ/bgrYMkX1
lFpNOC3AasEW1ZxMwMEAAmgUgadWIOUnUNUU9CCKvtRPOSnHeQo/r8My8rRu
4FEX+zk4r9bJH0bzkLQLkcgSYoct5VYUrchffv8Cv+VAMZwyugXNFBbQjPV9
DItGU7ueAFn9fg+8sNUhjz2ZPtzoKFTVsbNitrqEXYLVM8AqL4gqLpy9QiM2
+wxVtyDeWPyylVsyT1ZJ7RJn+iyk6dSGDcyrHulGULPmV9WpQoJXlrPMpo3o
e152wpFPubKoKDvEaSMXACumZsbIrZ7Woc5A0TxddWJ7CQBW3Se+XjC/srFw
c9W1ljNeXfX82eev/PSHf33v5Af3TgCzfnZ4vE8rQIRBNfvojk5ono1otiPE
HJyewLpP+u7+i1JIv2Ym8EFoe+DHSOnq6HD/4IS0qhN52qM3D+7+6PDu94/e
+ee3f/S1737zD7/2xd3XrkW20trcIg8QCvYBWDOY+hOuoBu7gvJluB/yNtig
JlELHYKo9iWbH39miqghwXcLdqL7d9a/DdcFKyelG0mqGBEZsqqAuCc41xeC
DzuwKmwiIj5WOAwONyoRB3Bw805uCRuBcF6y5sYZPVIpQ2efsnu2uMgrLACh
myxaxgumkawBDmxDMVmPb+by4uQF++iTjmEM1/BTLsa5+WGIZ3ws7KAIATDx
O6OCzgi/I8RtC/M64EsSHVFBV2ymOzrTGZ3pjsz0hmd60F5wtjchHkgBTkmG
0gBVUuwJzylG88ox1LVA+y0WHtfhHG6ebLWZlWzY/gRn2ppLsLoo3PDObS5L
14OaDSymW65kbNfzrlulhRcqC7dKrut5262y46WVxVfXPb+77nl1benFkm07
KG24+TnzWFTRvyzsCAg74/IBxCn5UEYxnFEOZ+SMrGw4IxtJSYfTstGUbCQJ
IR9NopcxnArgbh+Pq+GExkzoWXE9K2lkx3UTQENSsM/APmyezFN9BicfmGDd
LcIJOMQpMuzjl9/ImG+kTTfSsBquJ/TXEvqrMfWWXwZkquyYSuuB6fR5BJcc
rKcWRh/1MB52D37c2fMRW9eHLB0fMLd/wNz2W8bL/9N0+bdMbfdX82V4/EPW
jo86uh6a73l4YeCTbsbjnuEng6wLwclnw1MXY7zLcX57XNCegDeC1xflDcUF
Q/FZRlIMp/EJeF5p7SQavFq5eZTbElWILOp6SLkH9CSs2QsTP/ewZhNANqTd
ihjXQ9q6T1F0SzMOYdzCixo4UfVoVDUSVjLCsqEIhJwRVaC0SJzo0sdlDOzB
hgdlmFyFzTY017s80+HlX14WtPsE7WFRTwLeCGl/SjqYlg1m5UM51UgO3UCG
suqhjGoQ1pyGkdcN53WjOTSvHy0Y0GOxZGNVHZy6g7O2wNtc4K8v8DcW+VtL
s1tLog337JZXsutT7AWVVyOaG3HjraTphYzldsZyK2u8kTXfzJluZ0230oZb
8I4kdbshxaZ3rjHPh70xrRuNygcCku6Eui+p7ksTqMoZR3Aa2sIiVTl22cYh
sIX9ijWkVDxSFbqf7nufD0hTX532UZxNN7Rw6sECVkvMH19DRKuhBzOB6EFJ
ylitAhYFLOBW8MEp6lkFDTMw222fOG8dO+fhtTddQUkzIZbMmoA1RWkUjlGT
YeoWTiGrIlEjbZbl+VmIVlango1Ywgo5iVWJ0wr5Eruzymc49eCUMc0K3s8B
EhkQ+N9rHgmVz22aj6BYHMoxVRaaBli0boXeWLDpWTgVyxRwK7Q9NU+ipQL8
nQvCNa9sK4CdnysoIYUKG6WFuZITdlRJdVHeWFLUF2W1+bm8mZfScwCnovLR
mByOnRM5HTun55QsvJoLR6erntmNmPJWzfbKtufO1tJuzfHCXuSv/uzmT3/4
1XtH/3rv9HVgIoRHHQKDIjWqZlM4BawT2mtxhA4kyGJ+BW71y9jQb6LLgv49
h4cHdw8OqQfl8fFbhwc/PLr73YO3vvmDf/7Tb3/llS9+qni9Yil6uFEzI6Tt
DwOlMjDTwBSwKQXVTmpoIT1TtPOycILVYxImRfzcU7rxpBZn2IlbLmlXtmK7
ctM/iNgGAeOA2z6tG4fPFGrxzXVTqEJtVflQVAG7xCgRrWXlTNN5wqmx64ZU
vmA7gqM+Ws550GWg4ZOgeswymuZUFgXlBWAHcD+MFfWMhKLHL7i4wHrKMfq4
ffhx19jTTqBUQ0+5hp52j1xYnrjkn2zzc9qCAE+ASjNdEUEnXASmL4f57RFB
B4lOCPhWbBa+2xXmd0UgBN2x2d6kqD8NUAUMS9QUDMxIESly8hEgWSgHp8MV
baH0YxmsExFnPSOzSLqaV+b5Gx7R1rJ0O6LbwpK65WrWej1nv1Gw3chbb+TM
N/Pm22XbKyvOV1ddL5SMOzH5ipub1Q+Gxe3+mUthcSdEbK47hd3pQxkcoUJn
eWB5WQmZpZKNJiUjScloXDoSk43G5SiwCTc8+rBoAJ5YwDXixsmkmZMEMmKY
QKFF0hOCHfWkFaTqFjaWJZsh5W5UsxvX7SEwaXeDil2/dHtpruHiFjG5OhSV
9AZmO5Z5F92T550TT9lGHjMNfELb9RFz14ftEJ0ftnb8jrntg6bLHzBc/J8P
hv65/0N74X9oLvwPWHUX/k/jxQ9Y2z/k7H5oYeAR99Anl4YfC7MvRKaei/Mv
p2c7snPdeUlvXjYYFfQFuN0+Tpef2xMRDWZU40XTVGNetLksvxrT3c6abxcs
N+B4mdRejWpuxrQvxPW3E/qbCf2NOIThetx0M2W5nXPcKbpeKM7fyDm246b1
oBqYSM7ATqjHAKcoVMVUo7BGFMNhGSMiZUQkQ+E51OUIiLuDwu6wuCcq7YcA
VhUngQoehFKhqtUc3BtAbwcyysG0si+jAuY1VDKMVM0TdQtrxc6u29g1K7MK
3J+sNTt7zc5Zt3PWHJx1x9S6k7Nmn15zchv26QbQHwePBB/Djq0dZIB3Gmd1
LeycAe4x2M/hz+v2z7Z7uReXeZeCswCgXRExHGZ6UqrerLovpx3M6Yaz+pGs
bhRQsmiaKBhZcCuWLNiaDr+nQmYKKvb7/r8P6qvfHwSmrYBn8iYUsOhKQYpK
IreEkWlzBeVTrbrVg2hFA66zmjHAqYxqFNacdgLOBqh8gg4ydJCcSVnVmcw7
NgJBoL0daV59P2DZSdMFJmFm76MPQaI6Tkg1HyFfipqmkyimhI/D8btMBkxo
SpCSLApbFLkaPqLo7iUy7yQlWCUqgnW3pOaWUMdGJFYAVY5ZTKJaAaqmKxYc
giBtgXA8EJBhFmHDLd0KaPaiBoitkGbVp1z1qVYDmoYPCDKWhtc8irJdkNVP
JpTjEelwWDKckI1llMyikYsqT+YpOFXWPMK6T3Qlq315feGVXc8Lm4vX19yf
fSn37W98+uDNrx8f/MvRydvASw5O9u+eHNw9PrxLxJj2T2hrO+lIxwLW/j3k
Vgck5fYrZQL/bevFrzkdfP/3PPiTVAX3aP8ABQDh979zevrm8f73fvajr/8/
//jH3/zSrc+/lN7NanPzrKC2x69o88u7EkZmxsJBm3XXTBOkLFM5lDXgZA2T
GR2O66ZQB2mCeL/iLp0zMAsmdhneKVRm42Krqh1bVYuWSfhWSjMah6OspC8s
6Q+JmzLgUYSqYVSowGENoGlwZubm4aDiQMuP0pK44j1zE/BJAapWfZI1/1zD
J24sCxseuLsE1UX4J5hpVV9M3OblnJsff8Ix8qhjCOKxxbFzmPebeM7Huhzi
dES5PVFeT5Db7p9uI6pKHUES8GWQ3xnkdYaAW810hwhIhQVdIXgEHySYRTQr
WhEhHiJUlT0h6o+LByLwvKS9EWlfRIbaDhhyrOwnVIMZLRxxmTXH1BocpFH9
TIpDZ8TNZyOk3o5pd2KaWznTyzXbS2XLrbxuJzJXdE74ZR1Lggte3nnP5NM+
7oWYuCMj680rB/NKAClGVjFCJQpj4qGYaDAmGoqJh2NzjJh0JC4bTciBVUFg
DiGpY8c0zCgAlo6VMk9liB9xycWrLPBXPKI1n2QnotyLqa/ENdcAoaKanZBy
O6RY98PnVLyyMFPUjxc0wN36Y6IOP/f5Jda5xbEn50eecDIedw0+6hz4pK33
E+buh0ydHzO2fdjY9hFT+8fMHR8ztX3UcOnD2ud/R/vcb+tgff634UID8ewH
VRc+oHn2twwXP2hs+21r90ed/Q/PDz7iGnxknvHoMvOcj/VMYOrZqOByRtJT
VjPqhvG6bapmny4Y2Sn1cFo7uuLgbnnFd1L6V3LmT+VMnylaYb0VVe75RZvz
3Kp+pKgeKupGVizsFetk2cQqmwAaJusuHhDb3aB8L6K8lTG/WnYBbbmdMN6I
6rd98tUFIcTGkgSVKrFYw0XJVj0rTaszNHNFSQFcKBlpBSMBt664JybsiczC
rdIBZ54Qrz3EI8Pys200IsL2iKg9Ku5ISLvjc12xua6ouDMi6gjPtoWF7WHe
84HpC/6p84GpC4HpZ30Yz3knLyxxnl3iPLfIPu8cP2cfg3PX07axJy2jj5pG
P2kcfsQw9LBh8OP6gY8bBj5uHvqElfGIY/hRuOe9nAsh/qWYsD0+15GQdabl
3Wllb0rZm1YP5rSMDEp5MHL6sbxxPG9g5o3MEhbs7ot4tOgVDYoRFLwAmFJn
klyt9j9qLd2y76S2nhS84g/gVMsqpRVNwFKNwLsJ3CqrGkuT4m8OG34wMprx
5kDx2UgXtSCh9qYAVbC2kAtIVotnlc+6LOhgY5noB1IMauER/ZJiFhXHePBn
HkwGUjhrCT2tEDX4+gNKF5RbkdqEpOIUAqXCcMxWALCAACKf4mDRCmfPp+AR
iKIZxS4KFl7dKVz3KnZCut2Ifidm2InqdyL6zYBqFdBqYQ4ib5xOqiai0pGg
aDAkHIxLhlOyMaRXmHSaqrgEK0vitYBkN6m+WbHcWXPd2Zy/tbHwqavBv/yj
1R986/ff/ek3jo5+cnf/Zzi6ew8Z1jtAgk5p7zcAFVW9QAS7d/zuCRloOvyv
cqtfczr4QY/F+85ZlJTBn3QKaAWs6vXj/e+/9eO/+fbffOarX9j+01fSN8qG
3AIrousLKDpDivaIoidpINU9UnuCgyjyKdgxzkCKKI3DLToSl1O5uVHq0ZNH
KsGC8xsNrF+b4TwGd3jT66epyD030JTlUSKrotoUwKdQi9sOp5252hLcGDiy
Vw/IG0H5Ku7tMniD1nziVe/simdmxS1YmefBabNgZiaVfX7ec27W43bGJxxD
j7hGHoXtdGH0Cc/4+WXmc8HJNhRR5/XEeL0QYT7aVAX5XQFeV4i4VoVneuAR
HxdVAdGrnZhYobwS1angdtDVP9Xm41yGFR4PPHAd4nYEBZ1AN3zCNr+wHSIg
gujwkzUs6Y7Ke1PqQTziGscAtrImdtrKyTmmywv8uke8HpBuheRXooq9sHTV
w8tZRkKKzgXBM3bO40724x7OOd/U+SDvuehsW2quJyPtT8uwcJaWD6flwKRG
omJGRMyIikci4qGQeCgsYcBNTllVWsNMalkp3WTKwMlZeSXnbMMjW/MptsLq
3Zh6L6a6mtBeT+khbqQM1xO6vbByfXmuOs8v2jgZ43hCMxyV90UF7VHuxRDn
WT/rnHfsSQ+8qiOPLQ0/6YEYetwz+Ji779H57odd3Q9bOh42dX7S0v2Yuesx
uDC0f0Jz8SHtpYf0bZ/QXX5Ye/nj8KX6+Y+pnvuI+uKHDZ0fNnZ92Nr7kGPg
E45BEoxH5sced44+5hp7HDDRz38eNvm0amDdw9+Ly64lFLshgBvxjajsdkxx
J6a46hdtOac2rKyGcaysHqpoBsqKvqTgYpDzTHj62dRsW1LYFpu5lBC15xR9
aXkP8J2koiciaU8p+6oW1rZXej2suR033ooZrke0N2P6Oykz4BdcXItor4TU
O37Flk++vSxbXxQ2HLyabbpsmizqJ9CgipSrIqLuKEAVvwOoun/q0vLk8yjY
Nf2sl3MeYmnyGTfraTf7HA5NsJ6GFb/ErtQnF8aemB99bGH4UefQw7aBj9kH
HnIMPmIH6Bn4uLX/YSscAAY/aRl4xNDzsKbnIX3vx3U9Dyk7f1vR8UFF+wcg
VB0f1Hb9jq77Q4bej8D/4hz+5PwIHMye8LLOAfCFBRcjs5cSwra4GJCrPSXr
yakHk/LetLI/qxsGXpbVT8DnsWBiFS2IR2UCWC2nKkpnqE4FhbMcpkQmWsr8
D0r0N8tVrTTgmb82Nsk8wKdoQyC9uA9YpG6VUY7m1JhIz2K1GiuGaVRXG04R
vcEHZHInKEiRwVsOXWkUmr3uXOx4pK0XtKOVtLYWz66x9eLsApsGyfogC3sQ
xVpQ1Wq0QMFGNNi6L81UIUaNNBNIp4MJYJGUoGUaDu1FM86OoXwZvM4meIST
wfMPQD8ro2eXrPzGomQThd8Va/Cbab4R9a4FZZsgpWHFZCNhMSMw2x+a6Y8i
YI0kFeMZLQsbDh3w/wo3/dKdmPJ6zvDS2vydVdftNeet9YXfuxn56z/Z/v63
Pn+0//2jo5+e3nvn+OSdg5O7B2j/1DS+OiTjwEeYIHz3FIWbqFLEf9Sk90tG
hn8D3AqA7+CAOGedHL91fPTG4bvfffOHX/v21z/956/VX7seul7UV5Y4EU2P
T9bhl3aFFb0JDQMHXalyLKYF8KVOasZjipEosaEHkMIuPlhljCTcddgRhHkw
MgPIhMCBFHjLjDg4iVptSkZMjgSEmh8BYMH/iJJ6JJcIOAVUurogWVmS1Zfk
jWXVql+zFtKuhnWrYc0a7KIh5XoYmIh0KyjZ8AnXlvgr89Nly0RK1R8Stns4
5xdgo2N80jEEn9wn3ONPe5jPeFnnQ9O0g+JyaKojPN0Z4XbF+D3BaQAjDEAr
iCAfAKuHwhOsy1PtEF5Om2fyMpUEpI/7ptq8k5c87IsQXs5lCHiEKlrAdwP8
9pCwE/6S4CxcdIREcN0RJBfRue6YpCcu7UXbDmlvFPiXfCCmHEpqRnKkX6tk
Y1cdUznjWFjWtSR43jLxqG74Y4aRh8wTj8yznwxxnw9wLwa5l8KCtvBMZ1RI
DYuHsLAiGwFgQm0x2XhcyUqqmUk47iLPZWaNkwUrKseW7HxS25XshIE6GW4k
TdcTppspMyl86K/GNDvw2vokq0tCoFElGydrnECQUgyEJL0+YaePfynAfjbI
fMY/cc439pRv5Enf8JNeBq7+4ad8jHP+oad9A095+x5f6nvC0fuEufcpS9/T
sBq7n9B1PKq69LCm7RFD1+P6zsfoCg/qOx7VdX5C3/UxY89Dpr6HbYOPWIc+
iTHyKMbwJy2wjj3hhB1++oJn5qJfcilh7Cs7Rquuifo8s+4Yr5hHipqBhPhy
cPKZZaAVI48tjzwaGH8yyn4mwn4mxHwaLzjnQ5PPxLjPpoVtGeHl3Fx7Qd6V
El1e5gBYfGJx4jHv9PNhUU9WM1q3Ta8vzG65RVueObhYnZ+BaJCLxrxgdWGm
DlBlxZ7kPOzViqHYXF8E3oXZrshME6oCnEvLLJSXdDPPu8afmp94aoF5boEJ
IHXOzXzGPXHOOfrEPCGkpB/1cSdy0kfs/Q/bAaz7Pg7s0jnwCVvfw+aejxu6
PqLrBCj/mK7zY+rLH1Jd/pC67aOa9g+r2n9Hefm3lZc+KL/4AeWlD2guf1Db
/juGro8Cq7X2Pmzr+4QDa39PLI0+ucx+2j/1TGj6Qoj3bETwfFzUlpR1pRCt
BoDjZ3UjGe3/y9p7QDeWnWeCLalTReacI8CcAwgSOeeciEgSDCDBHJATkUEw
hypWdVR3K1ij9UjjWXu83jnjcMbj3fWM03jsmXWSZFuSJVlSV7GKFXr/+x6r
3JKTxrPn/Oeei8dHEg947373u/f/v4+fdQh250WHL9jTS3jCXYBfmoB82rvq
pzIAcXqFu3l+OgCwcDzC4yVm4Qc/3eL7VsCqELGaEQO32n2BVlfrijMoQQiX
H8S5FbLgecGtkNjyi/gJkrWiPVzBZZ1QdisuKP1CTRSXlUY5RSefIlk4sfrH
uNVVUhnayb3yz8IZ1qnHiqBqC3MQALRawUQtVrF0C2CmyMlU/jLnf9eB/GRx
OyE0k5yW7DoUR0vasw0jvNu9ZeXuErY/6ISJPbJk3ZmVwOi6beYE9Yygnh4Z
Z0fN/OQEypvadcA0Q3W6obvnM70dmfggM/fV0/WfP3d95XzjCycrX763+Stf
zfznX/38977528+ffOfZs+9//PFfPbr84dNPnjx4cvEAI1SXT69k91A11uOP
n2LZd//0SuDlP2QjcvXyf03V9h9CK8TUHl8Cyfrh5cW3n1x86+Pv/eFf/Ldf
+c1fPv/au94P92ZOfcrUAguGhaCZHLYwYjB7nxXj/rwoEBNHUJXCyFRqSogn
mePe7ljlDto23UUFkqiSYt8hxv0RoIXj+E0bt7G2zXQsmPjqdMoODw4SKkee
GitwC8GUZgrhVACt4t6PON6KLdyPO9+Kzb8Vm0XlpTEgBbaP4hMfRa1veTQn
y6KdSWZYO+QSt69xAadaN3gww+wKyPvDqqFtDSmmIyf01Jh2LArjiWrkKvEP
eJMagAmhUhDr4BFQj/mxI3AccMorJ3lkw9D6FCQETIBKLzgXtMDFEtjqH54l
CG0SRjAz9SUwpZCHFCuD9M9ZmUnWzhQb2jSGVnBCzEKDQPgF4GWhAcBBuOQ9
y3ziEp/o5DUv8JudQuKiqGVd0hFCefVkZFWsp2ECGqy4lRO38eITgoRdHLdL
49PStEO9u6i940ZGe28FJt4JAw2Z/SjuAHj6KAGQ5PhS2vmV9OKXk05gDZ+P
TL8btN33m+Buv+OCh1eDS7ACL87MCYH8Ri2MsIkaNIz5tQDKA2F5X1Tevy3r
A8yKSHoi4t6IqC8kAKjqDvN7w7y+ELcvxOkNcno2Wb3LEGzULjK65mkdcwBP
1HYnvXOB1rEALYou+NECo22e3rzAaHKymhfZhEUOcYnbssRvXRG2LQlal4Rt
y6L2VUnnurxnU9W7rmzd0rR5tR1eTZtP2xnUdgeVXUBJ5kfKHKSKpdGa5ZEq
R1/5dGeRc7ByndKwOlrvZRFDgs6wsHNb0pVQ9KW0g0e2sfNZ1r051qFtNKXr
jaq6N/ltLlF3UDUcM1JTNmbKxoqZgX/xd9GQDrexcA8VqYn2Yc5m5yVtrISV
GTXBl0UJ68dCWnJYi7Y+tzVAwEeQ7Il8KCAf8sn63ZLuLYAqCRaAVhJAq95N
fscWv2NT0A7tFq99k9sGgLXOIKwxAKoIm2zCFpuwBmhFa5obrZkl186PNThG
66dHajGoapgbawDAmiFXT49UTZMqZ0aq4DTHaO38aJ2T0gC/tUJrXmcQXew2
D7/dK2rzSztCiq4wYJamP2EYTqHiaDrchHBpCKpmeTsYYCH/xxcStTiTwtcD
ccxCshIYkAFYxKd4n14JxNcAk3gGIMaqXrZJPDV9VpCZFrwEJrzzkmG9PLgz
LcChCiUpIXNwjGFhNqDo72MZLyks3QIL6Uvr8JeYhR+5olpo9RJZHuwvYRsW
mFv3p11QP41cOGCd/j1uhaPVy32rK8DyT6JS7iBmB4lpcSN65bWdYfQKibEj
PnVVIIyqrhYV+zBLd2K6H3giygxckQiGTZjewwwTX/3IziLLGLTgjNSAhekZ
bP1zTnLgVMD5wFIjJnZAR/fpqAEDMzzOiVmAsQLKI4ngo2XVHZiFol3mqY92
nF89W//q3c2PjpY/PFr6+nv+f//ze7/761/+wTd/+9nFN55c/OXTy+8/++Th
wycPHz59hMwKn+I6exfPLh88f/zg6c/Grf6plcB/EVpd6ahjHawAGC0APsbU
lvBNq8vHP3jy8JsXP/jjv/7T3/idX/vg6x+E3klZT7yK5AI9NEEKGElhQBPr
lTUVkrjHNjRRHsWMOHVl3iHKoOmQGHM8l+7PSg/mZDDn3JvlYyHYneFjaVE8
aGGshnEbBuQoxjVCelSNEjez4jC8T/KRUPk8PCNA4fXH64ZTl+me334vOHMv
5LiHQdXb8aV3EsvvJZfeQ0u7c+9Hpz4ftb0bMNzdlB842HETKajudUtwStW2
ye/yivtg0ABUiqrRSIIlS2C2tqrhkHIoqBgIqQZDahIiSlpKQDPmV49C+FRk
r3IEAjqfPuIBJqUaCcBwpKdGjYyEhX0lsoT5BaMyq1nJwRxcvhTZ3MMTOsUB
9MxOsTITjLSNDi0eeB/alBXbvDBTYvqRqHY4piNF1IMBea9L2L7OJy6ymhYY
jUtANARt65KuTUUvhFsxCBwwoqdHDYyInhEaZ8ANHLXywlZudEqccqgyi/q9
NdOxB/kffbCz+MX9xZ/bX/nK4crP7a18MbPwUXLug9jMB1H7+6HJd3yW+y7T
nU0dti+j2F+S7i9J9hbFu06YJ/PTmNJF0g7klwYkETHEccDlEcD9kKI3jKSo
+lAr6fWLenwCFH5+n1/YFxD0h3gDIf6Anzewyelb5XSvcXtQcHpW2d0Qy8zO
RUYHtBBLTNRZYUG/3ckgLjKal5hEiGVO6zK3bUXQvirshFgTd68BH5H1bsr7
3Ypel4ToFjZtchtWmbVrrLpVVoOTUmPpLNA1XR9vybV1lU50lo4T8lW1N9V1
N1W1NxTV18ytRYsjjWtUwvJY/SqlMSjqzGiH70wy7s+w706zjq3kHcNQXDeM
asA1w1HdSGJ8NDk+FhsfRd+RjZaG72uSkUIaVnSUgm6hA05tm6jbRuq2gbJt
QLfWthbhFEwkYAoEmIVYvJoMR/yKQa9y0CMHntXvkfS5Rb1uYY9b0O3id7mF
3R5Bt5fX7eF3u3kdm8yWdSZhk9WyxW51s1s3WC3LdIKT0rhIAdgiOqmE+bEm
x2jzPLXZSSM4qU3zY/WO0bo5ci20TmrjIrURoGqZ1rRGJwJUbbJaPRygmV1+
fltQ3BGSdoYVPdvq3rhuKGUcTdso2Sm0JLiL1H0FiGTNC5FhDaaajpMXPPsO
Z1t4Ph7Sn19Shi3MLTUJSBPwnV3MsgoGYUATXMP/pZUnzrnSmM4Scp/E6rVf
0ijoYNVnvJeLgelpVB6YnRbuzoj2rtBKii8G7i6gbMNPvzeM8aHyusycBAcs
HLw+zbPwVUFgWGhjHdgiVkTzErA+HZ/GrJ8BrSbu+yfOAxNo3wozj7iLp1t4
kVnqlUUj4lPI62pvWZN1Iqw8XFIAt0K0FMucRG5H02hun54SJmzCmJWXmBCg
1FYYSB0izKOTn8SXT9E6FRpsE5P8bQsnOM706SFYCLBMTDTJn+JjmvYy+KbO
XIa7Pss7kekvw1N/svHR3tJ72YUvnax+7W3/v/9Xu3/4H7/y8Du/88mzb6MU
wcffe/Tk40dPkQnUI+QmcomUYC8fPkMpGI8wmaN/Nknvp/PMrwJDq8c/sxsj
dibK98OV1a/OhOOPEOThfwdVAz++ePr4+08//rO/+eZv/eFv/atf/nLq3ezU
7pYo7hjzm/u8ht7A+EgU5u0T4uSkKuvQ7S2osTsEKZ/Dp4ebDEKbxCt6poQQ
WUwldXdaCNi0g9S/OUAiUkAuXrCGsIEMIBXUkQLaYb9mKKAdQYoQQBBsXPhr
WUC6RRVK/1sHJm5Ge1WB6TvB2buROVSRFF9+N7HyXnL584mFdyP2ez7juVuT
dbCQJq2ic4PfvMZtcvGJXmGHR9jtEvT5pTC0jkCEFaSQihTRkLe1IxEtKawZ
BoYSUg+GNf1BzZBPRfIpyTg2AWbhsBVGzIUBETUyIaATMSAigysB7tjRM4XD
0+6MGF5mp0XwoO3YBZkpVDOSmeTsYmgFw13cNLZtGAlphwLqgbBuOKInvWxD
yOFxMCzrDYu7Q5LugKjTC/Ntbssau3mFTVhhtaywiSvc9nVxt1c1HDbAn2Il
TIKMVZKxiaNmQdjIjZj52zYhgqp51d6G+cQ3dR6Zfze18v7u+gcHKx/tOz/c
nX8/M/tWdOLUN364pdlbke0tSfeQHRXwXwHiv8jNVpCc4SCRoml2YpIZBYRC
CYdU4H1RI3IB3jaMIjtgHTmiIQF7DWuHwzq0IBlUDvpkAx5xv1c84BMN+sXD
AQjhoF845BUOb/F61nlYsQCK7i0YogU9G7yuVU77Gqdjld2+ym6DWIMOq32F
2QqxyoKXHfBbW4LeLVHvhrBnU9SzJelzyQfcsgGXbNAr7fdziUF2U4DTHGAT
AtyWTXrjdE+ptaNknFiobsrTEIq1hFJVc7GGWKZoKGIVvM7I+5yw4oahtczW
U23tLLN0lEz1lq5S6wLCtpSq/8BEPraM7RvJSd1QXDsUVQ9E1P0x3VDaNLo7
QU8YyVETKWEejVvHYpbRqGkkNE6KWiioosrCjJvoCK1e5FSgG0yDyvRimjGs
Ug9hll8+5JEPuaUDbsmAW9znEvbBh7DJ7dridrl4PW6AKm6Pm9vl4XZtsto2
mMR1OgFga4vVssZsWaYRAKeWaS0rjNYlessChTBPISxQAbmITkrzAqURONfc
KGAW4HXTIrUZ0G2VAVDVukZvWWe0uFjtXk67j98aELWFJB1hWVdY0b2tGUgY
SEkTOWWj7NhZO5h5SmYOuJJgZ0GUmcfdqa6MeFJYJh6MsfgSHO4OHDDS1uQD
YRM9amMDC0BWg1j51UuppZfLg3i6BcIp+1XaP45Nu3MihFY/KWqRsnN3pvgw
euwhY1Mxtm+Fytyys1cZHTilwjuYKYkEKwmX4oFj1sudrJdQhTJkALBW1C+h
Cvc3xCvffwqwMLQa/8l9K9NPEyu0EmhFEoI+2+lLV2Kf7cxjRSkWSKzAhHMr
rEBYm11U7SK1QwytXkp/zEp2ZjDMsouSEyKUCmUTpidFO1Mi5M4JM3yE43hq
CvLXxg3TozZeyMwOjLN9BpZvnBUyYRsok8BPkQkLfAsn6/ozt/Gt4ORHqcUv
7q58kFl4JzH7dmLmgx3H//5u4Nd/fu8bv/sLj3/w3549/OajB3998egHj548
vHiCcsIfX175cTx/9BBPb3/899Dq02TqZe7ET+RC4C8vP758/OBncbp/mdCO
/fGLF8rq2H9/wa0wqHqInfbwycV3f/zt3/3T3//F//D1oy+erBz7VfFFRtg+
HLT0B0xDESstZRen7YqkXZedM2bnlDAZSE0J4xM8CLTNhO1SAdAkbbyUlZcE
xLHyMhZuCikRYZsyMNyZqJHxMcApQCifesirGvAoYYbcB+FRDnjVQyEdJaij
hjCnXaDDmTlZZl6xt6w7WBvf3zDuw0TFZT32Td0Jz94Lz78VWXgnuvBWZPrM
M77jFEQnKR5195qwaYldt0CrXqLXubgEtO8v7PWKB4MKmOiOBZUjfjkppAQO
BSg5EgIKYxgO60kRPfxrQKsBn3okoAWiB1Nl4H0ARvzMFICR5MAhO3TIj53K
k0X16aL6xKk6XdacrKBA7n6YaxKSU5gWwu0Ut7K3TcyIkR4ap4UM1IgBEIoM
IBXWkYLaIWyrvd+v7AuoUKIXBHTgiFfR55P3+EUdIX5rkN/m47Z4uEQ3jMCc
lg0OkMTOTUE3jHKAnlETMz0J97Bkb0Z9PG84do7vzmngq8nMwszNcLBqOvFM
AgMF7vl2auXdnbX3d1fPE9Nn2+bDgH7Prcqsy9Irkp1lSXqen57lIupkR6uR
eKSmkPYFrisI3AGgCidTMSMMxTACjwBOoeQK/ei2jhwyYKkj5rGwCU4bC2iR
hYpXSfIpYGQeRSEje6Vkr3gE067v8giBRHS4BZ0uQYcLa7f47Wj5CyUVQLSs
seBi2zY53ZvsLmhdvF6PqN8vHQ7JRgKy4aB8BL7HoGosoCR75CSfdDAp6Nrh
tqe57RlB9558OC0ZdtPaZ3tq9cRSZWORoqlU3lwhba5QttYoWqoFlYWsopvs
khuCitvSmlx1U6G+pVhHzLd1l9j7Sp0jVR5ey7a0MyRs8wtbgYP4xe0eYYtb
2BJUdCcMw1kbNTtF27XT96YZezPM7DQ9PUnFqDE7ZWUlsfpfLAkQlTkkDNS4
jhLFQAoYfQRuOcWwVzbswcIrHfLhIRncgIvldLs5gFM9Xk6vh93thuB0YoDV
CrHFbttgta8x21aYbQDl65zOVVaHk9YyTyUuUFsX6S2LdMS2EGaNNUNnmUZc
obWsMtrW4WRG2wqVuDTWvDJGWKU2+eCJ4DfD1aEQtwfl3QDHEe1AdHw4aaUC
bUxOMTLTrJ05zi6qs5BgOicy3KMKuAyGWYKMQ4yJn8BBUWKaj2pMUP0+78q+
cw4vs/q7zMA0vtlkxzyt0HjLitmYeL0V0Kg9hxiY1As5ixd7WNP8jF3wE9wK
aSNLdl5mccxjIOUQY7uxohSyI3nhx4oXzsxJ9nDnZSQeizkvo0ox9SEmIIa2
rjC0OsTbF/ETsLWBCjmxdAu8Hf8pqAJi9TLLAldewuXcT7yWU8xK+MpOFN+3
WtEdLgPJUmOl9zK00IobVqKVQCBWEmBS2GKgMGUVQKRtwsyk8HBOfOgQHswK
9tHCFBAufnKShwtNx6eEYSsvaOL4jGy/kR02MmNmRgLtDAoyqMBTcbyiO900
3g9MvR+b/yiz9GFm8b2E463taZisfuVg/uv3Nn/1q7v/729/7REA1uV3Ly6+
9/jJA5TWjiqF8aLhR88eP3hyxYMuPp2X/g+mWPyDaPU/y63gnyJ6hykpYRYg
SK8QM/+4fPD44uLRA2TRhSnWXv7oz7//J7/6+7/6/r95N3Q/Zk+vSoN2ps9K
CdpoSCFhFm5RVXZBk3Zodhza9KwsaRfEJnhAuBDnsnETNm7MyoHAVWcTVg6g
Fe5JETcxYkaYeVLDurGgBmgLCSiMVznkVaDwQKsc9mH+hiEdIAUlbKTFLKzk
BBc9GrPC7IJkdxFYgOJgVXW4oTt1GxHDDU6/G5i+57YA54UvMaAnbci7VgTE
RW7TIrsRYpXX4gJiJe7ySvrd8hEYP32KUY+C7FGQ/KpRgCSflhzQjYaNFKxY
hpGAJ8jGStkFuAXV4aLqeFmDdEchVvXIxGFde3dDf3dTf75pQO2G4c6a/hQm
bPBEwNOBmUXC244D+TLQwzpqUDOG7Bp1lJB2NKAaCqqHIQLKIT/0FUNBmJGq
hiNqErYOOeiX9XslfR5xt1+I0hX8/E43r93Na3PDeC7o2hT0uEQ98CkBpYrZ
OBnMZhf5kC7C42Y83bSi2LKe+ybeDs+8H3V8mFz8Ynb1i7trn085347N3due
OnJpDjYUu6vSzKIo7RRCu7csyS4gSdtdfLfCzklPspI2Jsr3QGrtrNQkksBN
2OjAqoALA1oBt4oZx+LjFIgEgJdhNAQ8cXwsPE6DrywyDt8vXOwY5pmC8lKC
qtGQYswvG4Fh2S8Z8El7vOIejwgAqwtaj6jbK+52i+FlJ3xTAF4Iubgdm7yO
LV6Xi9/jRtOMfr8MSDE5oga2guoIIij1hRLE1mODsqEorzPOIEQZTSlOW1bQ
Hed2e6ltkx2VyvoicX2RpKlc1FTBbygRNpUoieWqpjJxVT6v7Aa79A126ZuC
qhuyxhx9W7Gpq8zcWWLrLJ7uLZ0fqFgYKt9iNQNy+QRtLg4QnMY1asMmvSki
7k5phneNoweWsT3LyJ6FtGcdAQhLW+mZCVZmArgzI2lhJq3MBHANAyVqoG7D
zayBz2EE4DUAhF056pOTEM7Kh/3yEb8CIJiEKtNRcXqvi9fn5va6edDpcfG7
tnht+B7WFsxVgFNz2iCgA5/POqd9mdWyBIQLgtW6xCIuMgGzsFVBWvMyg7AK
dIwNdKxxidKwSK6dG6ycGyhfHKneotf5OI1+QYufT/DziUFRW1Dctq3oiqv7
UrrBnXHSrpl8YB07mKAdznKOHKKTRdmdZcXZsgxJ+y5J95HfMW8Xbp5F4Y6T
n3byd1dEByuyzIulObR5PY2VUaOtK0ECY2RxOyAaJzbJS6ANLE4K01UGzIpP
wNSIuzOHEDBh52HBh5MT04IYtEjNEhmQ7aD9GuBNoh1sbAc8AhqVQlWckuSc
JDEjTk4jwMLt0hAFw0uV52X783Jke7qoPEJajuqTVfXpKqYetqFDsY5cD/D8
ihOsBgfw62RDf7YFD5ThbAvZiiGBHczC+GXSxSnmQHTPP/VWcPo+jD9++7lv
6txvP/NhmRVe1KKEQJfldNOMAGvTfLw2Djh1iOxCNHsLqt15BVK2WcA+NIck
jSyVxekZtHuF5v92QWpSkEbLU6KsXXQ0LztCkl+yvXm0AJKeFaYArOdhDi+D
C9+eEgRtfL+F5zNzAkZW2MLanuDEgYjNCbJOCTIR2FTe9Rnuh8zvx+2o5DDj
eD8588725HtR21cOFn/+fP0XvxT5iz/82ifP//Ty0TcuL/8GAOvJU8wS/uIR
0l/HLQ4RJP1T3OofrorC0ecpANbFo59Eq5dFwX8/oQLQ8tnFw6cYkQLgvHj8
7MHjZw+fPL94Ap3HH1/8+PLJw2fPH14++v7Fd3//O7/3r3/zq5kvZBcPtgzR
WVnAKgnYpNvApxya7IrxYMMIX3F2WZVehI9LCjck3IFRGKIBp2zcbYAtCxsi
bmYnLJyrsHLjJlZUT9/WY3ng6lG/EmUpwDPrlQ/7FCMouU5JRsOaGqUobI/T
gH/B2Ah0DHkEz3Czs5zdOVT1f+gUnixL7qzJztcV9zfU9zd050uqvUl+WDu6
KeldFXSs8NqcHCLEsqBjTdK9Je/zqAY9qiG3mrSpGtlQkNcVI5uqUbeW4tPT
goApVi6w6dikIDUj2QPStKq/s2G6s2W667bcc9vOPdZzjxkp+G0ZkPr0phaZ
+q3K95alO04RPKpw86Dt0Qlu0sJOWNkxI2NbTwvhCIW215HLVQhLwNjWUre1
Y1cBB2GYhcFKOhiUAWUYDkmHAuIBn7APcUABDFbdMMd2IWGNHpewF60XSfq3
pINu5bBfPxa2MKNT3My8BHkqbRl2XYZDr/luZOrtxNz7qYXPpxc+TC/83O7i
z2UXv7zj/EJy9t2w9Y5bf7yqRE7u8yKIwwXR/rxwzyHYdwh3prnpKRbg1O40
F1+thTYziezp4fNH2QUYKcb7cSz3I431k1Z6Am04UqNGegxVFTGiEHp6FKsy
Q7VpaPmLAmQ2ohoNykh+QCvpgA8QWYpAGVofEmAcQJlykl6XsBsQGeDYLUII
tSXo3uR1bgm7XXAmcmoeCqhIMJOBqU5INxqEOYZmxAdfq2LQI+sPi3si3JYo
l5AStsXZBNdw9XxPhbW9XNlUwq8v4dWXceqKWLW50pYifVeVob1CRyyR1N7m
Vr7BLH+NUfYqvfxz/Lob8uZcbUuhrrlA15hvJhZPdZXPDlQ4ybVrNOImkBRS
03xX5SQhf7q1cH2oJsptzyp6d1W9e9ruI/PAjnE4aSJnbNSdCVrKQk2YKHEz
qsPdNlJjJvq2kRaC+039YmFZPepTkDzSIbd00CUZhA4K8YAb+pJBl3gAD/gQ
XEL4QNpdKPWibYPXusFvXee2QGeT3wadVQ5hld0MscYhrLCal1iEZTYAVpOT
0bRAq1+kNSzR61fo9Qvk6nlS+dxg2XRfkb07d6orx9p+c7Y/3zFYsDBUuE6t
8nGb/ZwmP7sxxCVEBYSkpG1P2X2o7TsZJ+0byXtW2uks79wpurcourskurcq
vbsiPloS7C9ydxZY6QVGyslML7Eyy7zsonTXKdtZkKDdLgcW8+IYoM8MPzUr
QPzrhYxwYpKRRhXKmILlFMAWM2HnYADHj8Np04JtOz9iF0RQITYSHMaCk8R/
F/7atDDjkCYdEhRzsuScHNrUrGwH6J5DtOsQ42UyKOnOKcNqx5ALyQkqykNm
LndQKqAmu6FFCtsb+n2cQGGkCaXIrmruAhlxW+5sjJ9vjr+FCoHHzzzjd7zG
u14z5lwJ+GW647aceyfv+6fv+abPvTP3vLP3/XP3ArPIRtY3hTzQ3RNnLuvZ
luVsy3q6bj5ZNR4t6/ed2l2HCiK7oMg4lRmnAqnHYBeSwpggqk5FBugCBFh2
YWYK7acg2HWijTk4AeYAcZgDALrNy1Lz8vicNDotDk0KfTaex8L1W7khGyc8
wY5MsuMz7NQCJ7PIya7yTrbEpy7JvYDq8zHTF9OTEJ+PTrzlt36UmvnKoePd
XeMvf9Xzt3/9754//oOnj7/55PKHnzz/5PLx0wcfXz579skTLOMCpaNf/vNW
Vv9ElsXPwq2whb5HGFpdPEWFv/BLwKoA7VA8egb/GAjbjx49/P7Fw+98/MO/
+Js//49/8H+ef/1849Clj89LI7PymEO7s2w52Jw+2rIfe+zHbuvepi61LE+g
4VoOH2DCLojDlGmCH0cF/gizYhhmxQChXuzvANEAqIqgOiZqUD3mU5K9ihGP
bBieVogteDwlg254ZmUAXiSYmYf1o9swezfTEhZ62saAKWvWztqdZmWnGTt2
OoopWnaKsa0b8Svhqe9b43cscVohFrmty4J2tAsv7d1SDno0JJ+e7DeM+gwU
3zjNb6SHzMywlR2d4CFxjBnRwZIaX80+XtXhJp7A1O55rIBWd12WOy6kIo5s
VbfG77hhrqU7WVfurwBUCROz8OgxYpOsmI0dNTO3TUh9PTpOj+ipQS3OKcgh
LIkdr7qKwNCNFRFH8MosQGcFABbJKx70iQb8WEDHJ+gPCAfcvJ5NbjdMtjeg
A0O3sHdT3O9SDPl0oyETPTbJTcwKd5cUyETPazoLTdyLTb+Xnv8QqZg6343P
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
vj3A1DMHqOoOAkgtt5Uut/hX2spW28s32su320u3O8qvdVZcT4XujdTsnGrb
v9C9N9f99GLv/jxjj786+Gx56PnK8IvjTOD+BxvKPgTWowtM8UPYHbLjwWkI
qTuTTTCmmpg1KXDmyduTyVsTIGpujsdBAG11d/pnlqsApE6YxQILJjOHq68N
Vt/oDd3urrydqnw4EAPyarO5ZC5gPVtkmvDqUwZwP0lW0pICUuwkhKVqusqg
qlSSEZ0ibtbETOoQU4o2pKWCSokfUImHFPKQsAxvMIH7VX1MLgvLiJiSCsmJ
EjG/QMTxYUBwITa2egOYjqRorhQtEnP9QqRECIv7VZCCMpmgiOAXklgBjefS
EhclMeKolPVvcxGcC7NnCg640yaqDJqkTt2gVjRplC16Vb1WWUkKwfwGgBUx
yevM8hpwtyzkBLicEAepwbAGtTKklLklfCDToAUCJgIRgC0eB2beTBK8yKCN
OIxRk6KCFpaJwATIjVNoyqWd9ueMF7gyLmOX2xg00T61qEgrDtlUQZM8qCOT
VnVCR9bIsWopUitGOpX8ASM+oBFO0qIrOnLBoprUkh0yLE4IKsSCfCHfweUC
DahHEAcHLcJkFbgqLKYbNcpOu6ndYUqa1NVGZUwnDymJWr2iwaRu0itq5UQY
R0M4Py7lN4uRQTn/tFV52qYa0RJpuTBFCzNaMmvXDlk0nSqiV6/Ieq0Zm7Ea
vFmRgOZAMkpFmFpBq+VypVSqE5NGjLALCScmMnO5GkZRGlDEJEA8UsyvVviV
yiKJvIRQFOJkWKWrMujzCdTBR7wEkq9AchSYVUoahLhOIFJy+NJjc6COz7OJ
BE6MX0yAPwB9j9PaadY0ayV1KmGtEqumBGGCF6WE9QZ5Qkkk5JKkXNQox1rk
ghYKSUqQejVZZ9LFtaqgjCgQ8XMF3Dxc4MF4AFU2lKNllvkMPE6OQhYxaFvM
ph67td2kq6ckNRJ4qxAjuLUKcVQpLpcT+aTEjuM6TKTj8cBdR6WIWyMXVssE
EYIfxJECDlIq4gdoLKSTxmyaCpPcLUOBYKTh8iKHYpYp9RzEKeJ4cH6OGCum
ZAGlIqHXdFp1Q07djFd9Lk8xX6G9EtQvRBxXojkXI3nnKnOnKzzTFe7hEsNE
pXUsbH0633v45//i7z/53jeH3wckevsOwOj1O4ikw/dHwHoPZdTbw+8cFwzO
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
bjGTuJKunu+rWkhXXx2ILw8lVoYT69nkxljd5njd1mT99lTD9enGG9NNsLL3
GdizCdz2P7ncBxv2LTMLRutjcN1ncwpWotic3Nuc2mfMCfvHrRg/7Mn4oUUQ
Lg8BNjFrRkeLR4yq+s/U1gmthl+uD7xYG3hypefObOvd821PrqR2FzM7C2kw
wv1Hi/1wFWkhA0aorZiRORhkx+NewCmGMhAoQO/sXAJT7tCzxZHny1mgs16s
TbxkOQXGYwf7Uakl6FQfONpCdVSDIs2Io15YVHYu9eRC75Pz/x9d7wHdWJrd
dz689/ByRM4AQYA5BzCTABhBEgTAnFMxZ7JyTsyZrNBhJB9Z0hnv2quVLNmW
vWtJPtJK8mqt9XitLI9Gsmd6pmd6ZjTTXbmqtd/3Hqu6p3V8+p7vPIIJQLG/
3/vf797/7Xmw2g3idLX7BE6f7zpe7lQDXq8o1yvqNfgUnKJ4qBZIAGBBMdIB
xxMvtZ+CgEN4oefe/mIcvP9XB6qWorlr0dybPSXgVmRnAuzw9Tvn6rbHa0GA
CxBfPHIuDMTUzmj9DoAUiJHaneHw7nDt9kBwqw/SCtrutZfejpfcjgdux/Jv
R3PvgmjLvRvL3+gq2eurOhqtO51qfgwU1lrne+e737sA3qieR5d/xjnqXdX6
l6/PFBZALSwChLQ6AqpcoZV6bgU4paCqQUXV5nhwczz0LuP3Tkl9BVVKJrB2
e7R2fyB80BMEz/BgoPygt3QrlnuvPvVCoXkuRZ5Pt8xlJ8XtxhxMA/7v9iHw
7DugxYOyELGZm+0WcFHOkdUCXarVFCBIhRbrtFmGkjxgbZXlMhTNUM7Ky0k6
YrPHff5Gq71clHK1uE/Z3DIwpNokJpJdbU5LSOICJJqtQTI0SBFLlslCkcAW
CGw+zxXwHFjzOT6LYXwsmSXzZTZz0GGpMYjVIl0rMz0+10hWSrvXXsGRxTRa
KlD5POFUKvGcOJIvkPU2E9hFA5S2mMJqTGJTkr0uyVpm4IrAViwyhVadxyhK
JCpoYNGIqGzURgQel3hRBAi9UgFrsDNRtxC3C4Nm44TdPeX1zaZnzmblDvnT
ms3mWlmoEegqBguxWKuB6EsS57IdM27DhIEdlOkoi9ULeL2JDNuYCjNZYsCC
FrLVI3Z65A4rFdfhMSPV7DRXSUwRhuQhSBF8J5FqDm80s/Umqh581sTFTGK7
nmsVhTxG8NKiR8t4NNokBFZOZmPwFqKWx+JGpsOoHbRRsz7pnJMctNCDdlOn
1dBiEUMGulRAC0gEAK6CRCI6Bmz1oymO8UzPbGHaYnn2eJa/35/UaNVlEZjx
rVuFl8NKXHJblqs32zmcaprwGSaTJfDSZguShzOdCb8x4tU1eHW1DqGMx0pJ
pMsunPNZASVHXWKnrI3QaBOLhnCkCkFqMKSZI1oFqpFEOnRcl47t1XPDZmnM
rh8zS31msUTEXQRixRAfo8nWMXl6LlfkCkBwTB5JFdJMEcUUEVQpzdfwXA1D
BEk8TOJNHN5upge98ni6dSLfM5DjiXhM+TKTylM+WfDLsgfFgYosZLlqo7HW
Zqk2yaUy69PA2WeSUpmp1ZAoziFaDiFYlBc5vazTCwBYIoHIWkQmgdTSMAg0
83cxaJ6ZaEzXDxW7F8p856tSr9RkXK5KXSv1rZT5liozp8vSx0pSxstShosc
w0XGpbDjt07nf/o//uOzlx8/f/HJsxc//Pwfnr9+DWD1TC1mVwoFFTYBWr18
8o+PrhRt9eOnz3742bOPn778wZPnAFgfv3j60dOf/PWPvvdHf/sn//sf/ruD
f/HB/M9t9T64nthfbQbaanO6HsTGZO36RO3GJLiA9RJbk01bU83bUy07M1EQ
2zOtuzPRjcnordGmqwPhiz01gFk3huEE4TvjEcCp+6ox+0zz5mzL5lzrFjwW
iR0sxA+UIYMn57segt3p6hAcQH9nHJY3wDrwSaUafOZ9tSzhZyF11m/7pSYs
GHcnv5IAfLeqCksJ6McOvS/ujvyTe4M/f3voEXQmj+4vtz242P3oSu+jKz2P
r8IOJmiXB1CljH96/60KeO9yv3K2om6naol1j1q3ptTRJY6Wu0/X+h5fGvrg
6igA1s8BkaWsHyqNzB8q/ktnxkpXYUEFQNUD6E0BBIXSM6UOz7rY/96FvscX
+h6d71XX0xV19Hzn8VLH0UICrF++Pl4EGIKjhw8XYSHf4WrHAVjhTCiYPTtR
9ch8/HAe1qKDANr2ymD1YmvOSnPm1UThvYHKnfHavYn6XUAowKmx2t3xOvVD
8Pj2WHhrNLQ5HNocDK0PBjcGYF8VUFXbg6Gd/tB2X3Cjt/peV8W99tI7idK7
7SW3Y4U323JuxXJutmXfbMu7lyjc6i7dHaw+Gq8/nW55tNT+eKXj0VrHwwvg
LqXny668/zi+rK0ArZRSwA6AqnfaCjZVKdpKpdXWudDGWM3GWPArqPpKQFsV
JTZHwgeDdYe9IUCr/d6yve7i9daMOyHPWq5u1stOevhBl9jAE0BSZRN4icCX
CVKlLDc6He3pae1pqQ0OW9AsN9ottUapCEcLEaRJ4tuM+hBN1LJMAEVyELA9
oiUkU8Lw+QSZAu51NZoUBMnE0Gwtnk9ra4xC1ONotFvLBC5Xi6bBZmFNqSw0
JLujab56p73abKwyGGoM+qDRWKXX57FUPkuXSEKNUaqQmWIKLdJqanVMi8NQ
b5IKCUyVZl7NmQeFh8HL7cYmrztsMRZo0WwUKZWYFq+jIz25zWNvNMoteqlE
5i0kKgNNodW4OcLDat0M6iEQ9XTJiyA5WqAakHIRCQpIQmQHzOYei6VJFCto
JsCyhQKfwzOphEb11nBrkExSUwEYZOO6bFKjjgiQiloE2x0GraJ8HJIlIyVm
vNyIFrNIMYGUkEgZrwW6r1Zi6jmqiadiZqE7yRSxcmWCpgCQS8BhDs1qilvM
xXqLVzQ6AbAIxotr/TiaRWhyUNhWFpG1zQIS5ZEuHZpgkTYaHTBJAw5Ln9sc
s0t18PAIb9RpuxziZJp9Nd+/VuhbKfAtFfmXSlLHU10DSQ7AtQCjSUERP45k
0EiFlY5n2qcq0hdLU+ez7fOp5tVM20qacS5VN5Gi6/GyMS+T8PHtyVzMpu0y
a+f9xosZtlWfbtykaaeRBgyp1SINrDam5/scxhGvbdBp7jQIDVqkSYvEWHzQ
JE0nWaddlkG7rkrCU2jEjSGpJFIgU2VGoVQvgH+sAE+W8kxQloKSWEZSRSgK
/q4CGijzM5Xbp2oSaZTRVvBUvbp6Ox+QtH6txkthGUax2OUImC1ZFAXujjJQ
tBTcWenAX46QQ+JJGGpBURZasmgRgCNcQDAG0ZKkwOp0glHH6jiMJxAG01AY
iiMICf6iCMQlokVuvjXbOpLnng/4LlSmX61Ov1ieslLqm4XTstInq7LHy9Mm
Kvzz1Z7zNbY/+mDt+Uf/8emL7zx7+f2nz3/w+efP3rx++UK1tnj15q3BhVpi
8T/TVn//5PknP33+vScvv//kxQ+eP/vB6+ffffb3f/Wj7/zhX//x//If/uX9
rz849+FG5+m1tt3lyOZMPZRXIKbq7k/WrQNUTTduzUaAPgKxM9e2Ox/fW0js
LcT3FxPb84k74y1XemvXOqov9YZujjTen2zZgEOEoxvTrZszLdC4aS66DXbL
+ej+fNs+WBfbDpZiQAicXOg+udT7ECgaWEM+BmeCqF7r92Bm72sqiZSyOnXo
sDpx+MvAgo/fmXpXCvjlNKA6TEQdd/X+HWWYyO1zH94Z/vl7QFv1P7zcsbfU
urvYcrQWf3gZAuvh5Z6Hl3sVWg1CnQWrHfrfVaypJdbvHGXfVX1DA72l+P5c
/HCh43Sl5+FFWJkPRNaH16HO+totWAD/wZemTz64OqR4KKntvYOqadLjt7QC
kHrvQv975/veUwYynrxDFRAXIKBi6oCp1LMPIZuOFuBzgGnAtU5VYZ0owz5g
9mw2djAdhf5+0y27M62b081XBqsWo9lLjamX23Lu9JRsDlXvjoVA7ACdBS7G
wyDAxfZocGukZnO4BpZV9Nfc762611O53lu12VcNVNV2fxDEZm81NImFlual
dztKb8ULbwBUxXPBer0t+1Y8915H8WZP2d5I+Gii8cF866Pl9oerHY8udD0C
tPpZMQXeWLUrWS2n/6KCfbnji0wgwC4UVrBb+RA63EIjC0Ve1anA2joX/koR
4Jex9Q5V6yOwymKvv/awN7jfX33QV77bVXS7wXe5xLiaKcx7mQknM2iDOahK
Vhs0yHVJnkqHq1BvDBjNpRZLviT7CTwZQ/M5usIolQhUMYnB5JLVWCsDoYQF
GC3YZ8plsVgUUjGNTdn81f0ffEulUVdh4MtktlTm83k2m6YyaCKV1qYxRI7I
AvUU8tgrjPoyia/SyfUWU8zjSnjcYUksIbAiQlPOU2WCNp+A5nvQhQ+WkMHt
K0txMvco4IAnHbimQBbL9foAUGe0NodEi0S63mVOpHq6kt3ddmuPxRTSyV4K
d5JoMktk6fgsiUml0DQKiDKigMPLdFTYyodNTI2eqAUbPo81G/gakfEpqSRw
fy5qEB2J8uiZLz2j5JfAry6SsIiNjzilKhOTxSJuAnZLGTSIBWx6DJIioak8
tIf1KGyFaTQKj1oNPQ5rv83U5zL1+yy1BhK8KLvSrVZO4c06KW6zlOj1yQyT
RJJpDJ0LXpTAVBiEcp4o1SJhRhMR8WYWCWuQagSp1SCtDJHQy3GrrtHIhA3a
iI3t8MiDXtNslmst37tWlLxWnDyX7xpKNXUnGRJ2XYuJbtQTER0IvElGuh3s
TJbtSmXGtYr05VznQqb1UlHy1aLk83nOiTRD1IZXyUiFpCnjkRCPtBvwESs3
65Sm7OywERu0YL0Wuo7D2ixSX5JtwGvrcYJXp+t16ttNXFyi4jI56NBN+uwj
LkNMIuplbbmi/gpJpFLUNtqkWJK5xWlqsEgRuz7mtsTc1lrALwoDcC8lNHnK
vzVgVimFVAhomaQt4jVpBEwgG5T6f7/ElLjtzWmpFXoZvI25KBKUtBGLGLEK
YRNfbuCzJd5G0jRKwdpMrYRgNLQ4wREdS7kMksvA62mcwTFKS+CYliC0LKGR
KMSj15a4xGiyeSjdMV+cDFB1qTxltcQ/E0idrsxbqCufqs6bqclYDfnXyoy/
eX/gp9/8reevvv3i9cdPnn386s2nb94ox1WvXr98+VrpGn7+Uum6evnqiZIP
fPrlInZVWz159slPnn/86avvA231/Pn3Xz/76LNP/uzjb/3O//d//fxvfv3q
LxwMvH+v/eRKdG+paWc+sj0f2ZprWp+uvz9Vvz7duDkLHmnZW4rtLycOljsO
VzqPVrvguta1v9R5Z6z1YndoOV5xobsa6CyAqq25+OZMfHO2TeUUHG41H9sG
qFoE2iq6u9C6vwh0TTvYYI8udB1f7ju50v/g2vDDm2f+6g9vj71/Z+KLjuC3
F7DW7q1J7Jm2AuvdMyWlcgqEyinoMXjz7ZCsW2PKZOGx928Nfu12/9du9z64
lNhZaAavETDr5ELHg0vdDy4Brdf98DI8WHmkKKwPzg5WzlTVV+781e6k/cX4
3mIMaMz9WQisk+Xuh+cBfYbevzLy4Y1xACx1eohq4gS9aq/APt/Hl7849nqk
FP6drHU/WFMSgNCxAU66P13uOlbxBKTTQuLdqsbZp6DCgtrqGDyZVfh81LlU
YG8/nYsfAVRNtuxNtWxPRgCwAK2uDdcsx3IXG1IutGTe6Cha7y/fHq7eHqnZ
Gq6GwBoN7sK1ZnukGjy+OVS5NRzaGAgCTt3vqQSx3lOpDosHsdlTdb+zXKEV
nMFxs73oWkfe9Y68G4nca7HsG7Hs20C+dQa2+qv2R8LHU5EHC20PlhNnwLoM
vQG/pKcArfqA1oZV62AFfxXgtawAFifUCvaThcThXJtaZbE3HQHa6nAO0ko5
uqrfU46udibr9ibhrBAVWO+wpWb/3qHqvkKr3b7wQU/oYKDmqL9ip7PwVq3n
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
dRs81fZisEJm9VTc6am6D4RkT/leV8lJT9levOBmOH0+39XlFBoFbZhAGrXI
iIlbTTGv+o1zyfpeB1chICk04uJw8D+yhaL9olxoNFbopRqBjhipDhvd6WDb
3Lo6ixA28xGnMZbibPE5ww5jndeeJZAuHEnmMS+vNUDja41bi6aTmgwOy2Cx
VEqTrIXQSaOwoF2qdejqrHyzXezxGrrcunojVypyWeCGXwObasH+49DAdFCB
gSnQ0/mCNo/FC1myiMFzgQzBNdkcXWU1NbjsYbOpkuMrWbaEJAsxbT5BZROE
H0XtGo1Jo7ECuaRFinREuVmoNIBNjw4QmkIECdFoRM81m6SgQSrV64qM5hyD
JcNgdLOkOs8rjdMGTHzAxAJw+DF4tuVGEXUosA4oGgypZTX1BipkpAMiXiig
xTzaZJMH0zyDybYBNxBiQr9LHE+3DBb6S7weI0GICCAvUcyLlZIckqRqlmk0
yg1mqVpP5zFoqhYpNdPVDqZUpwXyNpfHAiahymaqsVmDJkOdTtdmkIZsukW3
8YpHf80lzrnEFj0VAHoTQcoxTZDBQgxWy6JNojYioq0S2mMmx5OkcTfXayKa
WDrIMKUsncczGSLjFWk7p3WwWg9L+Fkmi+fyRbGAFwo5Po+lc1k8nycqjGKd
y1LrMhfxZBqGpGs1WRwRsOrKXeY8s+CiNCLEEQoL7tTRLCqcNF8gi8IQidZw
GDwwYpQ+KTOs/9SWmWxhj6/QYHaQlIzBXCL4ZkqDCzhrICSO5BBCA79HA38i
+EYThngpWIBRLJEV4EZFYMo4qpylwbN1UpQOR9WfnKlF6nVEr41bSLMv+qzD
Ri7G41ED155k70jx9iQ7R/zO0VRPwmMLWfVFFjnTIrtl1kDjekIraVBl3ijq
QMgUFC8hkToJG0q3zxal9PvNzTYxlmSP+r2N4JYgxTGY510sT74VTrlVn/zL
G6Mff/PfP/nkv7x5+u3PXz15+eLZs+fPXn7+BqLqzZNnr58+h1a3L8B/r6C2
+iIT+PLlc5VWTz77+Mmn33nyk7/7wUf/9b/96X/4xh/+yu//n1/77V87+I1f
vP3Lx3MPbnbtrbVsztbenagCtNqYCG9O1e8uRI4ArS52AzFyeL59byUBabUY
2wOP3Bg8vN6/tdpxe7z1fDw0EQz0leVM1JVd6o9uzAzsrY4eXhjfvzi8u9a/
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
afd8nW7AJesxE3kLWbTJihbpoFkyYiJGwIyhJqMYv0aI1Eh5dRivnuBFaGFU
IYkqsKhSFtUwtRTpkggrKNorxatRSUKt7Hc5Jss8Ux7HlMs2ZNLmlUw3Q7XJ
ZSkCS5BkiKF8WkWjVlHDkF6ZxEMK3XKRV0WU6mgTTVAiAVwVFIhRES4QShAB
TyyCS4VaHhLVKjsNuiYeUsdDynmIiy3dUqMCOSaUCXl+lbJgMXdrVV0aesxl
GHOoc4xk2CibcWtmPYZxuy6rICMiQTMqzqlUwybDoJoeVuGDSkmPnB9GkVIR
zyQSyfgCKU+AwSx9gBVxzKrMWqmsiUjpJH4F4kWheNFxu2Mkki7RpBzqaoJf
IkLCWrzToGqnsQwhaaEkrZSoVYZ0K4V5taSLlnSpJElKVIcJXGLELkXcOHTh
8LJu7UEeksPRBb3+qtOzUVo5q1L3ytCcGm1WAHGKOARwAZCDjl7Is8hETiVW
pqcdClwt4lHsHYKKJzRKiFKFNqjXp4CGUtOtFn27wxLSKb0S2PALBKBVQKNO
Wy1Jg74RlVpZOYaye092Hq9eJG2WqzrMtrBa7RAJuEZmah7fiZP1KkN7iaO/
zpkrN7VZqC6bYqLattjgnKswT3rU86WwJcdSuW61xnih3rZYYXihybvaWLrc
6Jmpd4xWmgpeZdYl63CRWa88X67orQAqTJEvpYpe+ZBJMKpGhiikD0cG5bwR
ButjiLRUGJXw21TyQY9txGvrt2hGHbqZMst4qX6oRNvnUPXYVDmHbqDUUaws
6XZZgebK6HWtZlObydRuNLXZLKkye6ba3VlR0ulx5VzeLocnbrKV0rSZxJWo
SC5E9GKBUyK2s7uTJA9Ri/lmQqITClUw6Z1XKydbrYYuqyZvlY+46fONhhth
y5WA/kWf+VKT+XqTeSvsPElWnWTqdxK1m/G6lwYyW60NV6LOS2Hd9SjzR79w
/qf//nsPH/3Dkw9+9OjJ2+8/egd2twe0gr0XHwJaPX369uOn7z6C7e1/Co3Z
HwFC/SdaPXznn97+yXd/8C+/99d/8rXf+c2P/8YXPvSVT7/y1bde/fVPv/q1
T7305Y/f/vyHNz9269yrN4dOVmGuxe5c8/5C6mgxc7iQ3p1uBjPbha7qpUzJ
XNw5FbKO+0zgJmEmYJ+PuBairsVm52pL+aWO2ms5MCtGD6baby/l7p7vf3Bl
/I2N2V/YXfrw3iKUWjvzL10ZgdYTq/nDxezebNvOZGp7HNar7ozFt+DeShgw
a6sYWO9vWusDYwTuBBUj28MxMDPDWXo8vTOa2AW/MpHam0zvT2VAwAR4WLeV
Oc0tBE9OszHTwtUdH8Jq2Xa2QKkTiCxAq8Nz2aMVqLOOYVPIrvsX8i+9WAAK
C+is28vZk8V2mI0G0xfbjjhJNQMXJFlhBUAJUAW0VWZ/Ir0HVOFI885wdLsY
3YYNdoHiCIJgGxeGuSZQ24XAVi8M+CPw/HD8YCJ9NNlyPN16C2ILUgm8xa25
DhaIMMP/kK1Bg1c3ntobS+yONoMRZuWNxE/HkfjecGx3CNA8ujcY2R2M7LP5
e9y4C38U3QVnNQg+vRCMgeA6GMHDwcjmUHj9Z9qq9lK25lpPw2Z/cAucZ94P
YhP2AvaD04bNFvuCW+BCBiJ7xShXhLUP3mUwBh7usp3uN/P+9Z6mte7G9a4G
EEBSXW8/1Vbg4Fpb9bU2IK8As6qutAB5BY6rwHg1VX6FjWvpCvDTta76Dbbs
63AofmsidW+m9d5s+735jvuwcLgLul3Nd8IduokMZDSUeDFwY7AFPm3wsQ8C
VRvdHo6DJ3fAJw8CfNQFNgB/wSef98FrYavJwLhVANfYtJkHPw3uFvxHff47
g8HjfMNaqnS5wTjmURTM0pwJ7bfLBuxUzgTEC94gl7pFfBMPlhdxTSi07HIT
7J0kETYq6Tql0omRFr4oqddnLaaczdxjNhSMqqJZPWJRj5lVY2DCseoH9Jqs
gkoTWAwVNzNEUk9nwA2zTRXXEk0yfhMlDGtlEYOiTknYhLB61yrFXEDmEIRA
jGASPsbOq1VSPEIzdRhmZ3vwcSs/Uh7XuZznEIt9chKwMq1mWhVUliLzcmLK
pLtYVXqtvnLWYcpI+U0I9DhKCJFWlNdFCPIyUUEhzSrJJkJs5EEtx/3jSlCN
QkktSWXVum6lMgUIKwP35IiLNYCFly9GmrWyjFnTpMDKSFHYou4y6zswrEUs
GtRrZktdRYc+wUj9cn4DBftMlcHexPxGSuSXSRplkkpM4GC7aZSLYD/coJif
V8nOV7guVTqvVNperDAtlatHXXi3XhgnpFWsZb1SiJgppEYrjWvJDp28RS4N
iGCBmF8mTiipPot5rtR2sdp6tc5+ucp2sdy64rUO6BVxVFAH3kXA8zN0xu2M
W601pMzOF+Kn6knAnObDCzxisgyTGdkME4CzkAwvOCxzdRVjda5cha7Do2gx
Y902OaDGsANWOhfNsgm3aq7MMFdumK0wzFZZ5mts5xq8k2WmPgeTNROtZkm7
i+itVmU9ZM5L9XqogpUoWshhMzVmlmdpXppEEigS5iFxAdIh5w2YiAETmdei
eS3Wb5JNluiWq2wLZeYZj2Glxv2Cr3yhyp0HfzYaIm/TjpY7h8vswx7TqMs0
XepYqHAvVbjnKl2FakufzzVa7xqrAE96V+trln31o3VlrW5jg5aoVogbFJIA
+Bak/FKp0EqgNjlmISUGicAg4JsFghJU5FdRHU5Db4lxuFS32GC94LetNBqW
grY5v3nOZzsX9l6KV19PN6yn6i8FPddj3tU6/cWQ5WrCvuhX/1+/sv0fP/6r
h+9+79HjtwGhHj1+B8irR4+4TsHvPnn6ztMn78DkQLZRyPMLgM/i7Yd/95Mf
/fn3/+G3//IPv/jbv/7LX/vMK1/85Mtf/uTrX3vrja9+8pUvfezur725+6v3
Xnxja+LWi927C8nd+cTeQhIorL35xPZ07Pqg78XuqnPtZYtpz0zUNhkwT/ot
00HbTMg+E7TPBWxLYfdqvPRCsuJKW91aLrQzmDya7ry9XHhwafSVG5Mvr089
2Jh9eXPmwbWR+5eLt1+AlhR7822705mdidTORGJnvHlzNLI1DDetNgeDN3sb
1wr+jd7wRm9osy+8BeZGeIef2B9LbY/A7EHAuJ2J5O7kKbMgsCYz+zBtIwWE
GHyGzTY8YOuOwfx/PAuNEY4BEZY6Dlc6DlY7wQh0FgAWoNW9CzkOVbC74mI7
LF4Gcmy2lcMTOwJBBwMQ6lnsjqcAOsH5bMNshAhM6u5jJ8PeMzz1BjYLfjCf
b+R9GwUfPC74oYXCaPIIAitzAnMn4FvAgqlZmHAIUQUNKFqgAy18l9OOt3vj
sDHT7mhsbywO10gHIyB2i5HdgRDb2DcIy6OKLESKsW02HQIc7AzGtgajW8UI
iA0QQ9HNofjGcHRjJLo+HL7eD1cCX+ysvtJTv9bnX+/1r7MlVOs9jYAdkFkg
2Mvh+AvX66DTBVc7DN46vA0tmHzruaab0He9cQPSqhZA6no7GGtZSEFOsZA6
BdYVbkyVX06WXUqWgQMgsmARVrYevB1QcyfDzXcnMvenWl+aaXtpvuOl5Ry0
n1ruubvYfWe28/Zk2/F4y+FIaq8Y3ynGwZVuDsY2huNbo0nwF7LbF97phan1
LHYBsMCtQpCD7zNabecD7DPgR3Alc783dHswetIb3MhUnvdZp8tU/VYsZ5T0
2mT9TrrbLIvp5RUq0iSF2+vE2RYJ58hqRhAnHwGSysgXKhGhARFUCHhhXNws
w6KYICpBUhjSLuPlVdKCGu9R4d1KWZaRt9GylBzPqMisWZE10XG5sEmE+MF8
hSNRmSipxGNKsh4Xlwl5pRJRBY47KZySCeVixCTmV5GyIM34ZYpqnNTz4Uwr
Ogsu2UDBnphDxK+UiupRcZOAX4cgrTLZjMf5YkP1UpWn36xqV2HtGgwInzSK
FGjxqIkZseg7tcpaXGoS8zABwm2b8biWsoiwhEekJMpWjGkmFT45Xk2LqyhB
rVxQiyIhXNiuVrTplA2E2ClEKmkCwDpLUzG+oFNBD7udA15XtsQSd2hq9NJy
pbCSFgTVeJteUdAquzSqZo2mXi6vkeOVcolHAGuyGgRAi0knzfQ5u+q8Q3ne
xcyb0V4K6VHI4zK5WwQ3kowoUkvzWlSSohIfpSVDNFpU470arIdBc5R4VIte
LFVt1Jg2KszrXuNNr3nRpOqlpBkZ6sfFITUTt5rqVIyVz+fEmoLd8VEgPBUi
NgN1JlNVU6pyMVrJR2IEOmBgZlz6Ra9hpso0XKXPu6islehzK4ZL1H1WKqMQ
xjAkQ/O79PiAUz1aahyrtIyXmwYcqoKF7rbIOq1E2iRKW0TtDqzbTeZd8j67
fMRKz9g0cyb1CEN2qfGMRtrMCOIUL6MU9BjRUZdi3E1PuOUTdpjnU9RL50o0
L9a7X6jzrNaWXPJXn2soH/eYCxZl3qLsdWiHPPoRl27cpZ92Gxc8xiWXfsql
LZRrB+rNkzWWqRLDgst0zmtf9FoXajwjFZYul6bLqcq71AWrokcjS+sUYYve
b9LVaZXljLxEjpfJiTIZXkPjSZsuV2YdrLZO1NrHq43FMmXOK+8qo7orNL01
1uFGz7TPO+/zLNaZl2rU5+rU89X0+bDlZKz5T7/4oac/+rt33/3J+48ePn36
3uMn74KD9x8DVQUJxTa0eu+0wf3Tn29zz8VP3v7bn/zgz//1b//7d373c7/5
xQ994RP3Pv/x+1/+xGtffeuNr3zilS/9yp3PvbnziZcufXh3+u6VwsFK6/5i
CsTeXPPOTPPGRPRaEdLqfEfFudbyxYR7LuaYCztmQ47pgG2yyTzRaJpussz4
bHMBx1LEcy5ZebG94UZfdGskfTTfc7zad+vF4u3Lo3eujT24Ogxodedi/8lq
7mCpY38WGoMDVG2NxjaGwIwKhdXGgB/SCty0F4IgILDAbTy7e7IL0ABitHlr
LLE9BhiX5GjFlmvBRUWAMO4YChMwAh3EsoxlFsTWwULb/lLb/ko7HBdaD+AK
IawOvsuWWd1e7jxaaD9kaQWowa46nhJqbzy1OwZkYJIVd6ec2hqOAwRsDEQ3
AadYNkEwscEdg5kcxFpPIxg5EGz3hXaHmg9GEkdjaZgsMdXC7oK1sP3o2w5Y
VO2zZun7k6nDqdTBZGp/Irl/1kkQVj+NxDhtBcXUYHQPWk9wqIpD1TN4mry3
MwCgFt8Zim/DLHQoQDZADMU2R2JbY7BA+GYxeLmn/kIHTGK/UWhaK/jW8k1r
uUZwkuvdjZs9LK3yp7Q6FYwslLnaYUgrTluxFwgA94xWYOQOOFRBPLVUXs5U
XE6XX0qXg/FquoIDFghwfI3FGQDWdt6/PxA5Hm6+PZa6O5m5C0TWUvalle6X
z+VfO59/ZSUPK7PmsnfB5wa09nACSEuAY1YwApkZ2XtOz3J66oxc/lO1dfYQ
CMmdfGg7B/Sj/7g/dNwb2u2ouxR2zldrB+1k3oj2WsheuzxvpVqMVFArq6Yx
Dy4xCmDrWNhfQyKsp3CfggwoZRVsYRHNLlXV4ZKQDA0R4gYh4hchKZLfoZTk
tGRWhbXKxK2UtE1JdWphm4+0Ul5w6Mer3d1WoFnQtFIawfm1PKRegPhwQVCO
1WOol4d4BXyvDLXIhBo+UilHOx3Wbos5DGZ4VOQQQYmn4CFqIaIXQjsm6Lgu
Ot1tV7ON/LwS1gFDzItpyLzX2ldl7y4ztbnVGZsirZO0KQS9evmYQz9oNiRl
ZLmQbxHyNKiIJlA5ieICvpSdzF08SRRXxAl5kJY1MHgtg9Yr0YAKzWjIFgZv
p8kMLfNJRF4E8Yp5QRXZgAudbAPEajafsJYUVVMSL84rQYEw5McpoqBRj2n1
wxpjVmVIM9qYXBGSkSFSGsHEMRG/XSzoJyXTSvmyUbVq184bqQEF2k6SSbki
TJNNFFZHi5sYYZQRttDCAQ0+a9XMWDWDeqpTiUYIJIQhbUpxTifLq4heGh9S
0wNaRVYFYIc2kuI6WlopkwBVqGfXBq3sCFSzUyKpkNN1jLqBUfmV4H4Aj8rQ
rFpWNClGTfS4WT5lZ8Ztin49VjBgRadysETTbsJCcqRJigRJJKmRFJxqwILx
KttwibHPqiw6NBOV1tlGz1iNpeBRdtllY9XGoTJNn5UesihnHPops6ZHhraq
iGYNEVOI0ho0Z1MMudUjTtWQTT4OMF2uH7NTvRp0xEJdqC+5FqlbbSybrXKM
eI2Dbl2/W9vvMQyUmuCbVlonK6wTpaZRh3bUqhq0KTN2eWeperDcNFlimnWb
Zl3mMZtuvNQ+Vu0crHEOVTuGq+wjZZYhoJ6c5i63rc1uSRh1Ia3Kp1b6dBqf
Tl2vlvt18oRd3VlqyJZoutzKrJsCzG11ER0lTHe5oa/GPlTrGK+2LNSZp8sV
F0PmsTLiWnv573/86J3vfPPJD/72vffeBqrqyRNOWz18/PgdgK2nH7zPjTCD
HZALJl289+Txoyf/Ocvixz/5mx//4M/+5a++/cf/461v/Nprn//4nc//6v2v
fOr1r336Q1/51Ze/9NHbv/YLu5965epHjhZevlk8eaHzcDkDtNXOTHxzMnJz
LHylv/FCV/W5tvLlTOlyqmQp4V6KlyxE3afAClgn/NZJn3XCZ5mGy4MlS/Gy
F1rrLnUH1oZSW1Mde4s9R+cHbr3IuaMX717sv3U+f7SUPZhr359u2RlPbI5E
14qhtf7Aer9/rc93o7fhBrxj99/M+dfygfU+CKwtNpsaAGJzGEy54Ha6mQMW
hNRzIxf/aZ3wFFhAtrQfzAMQt+0vt+8vtu7Nt+wDMC203WGrg++e64Yp06zV
HojDaSjWDiYy++PpgzNg7QFgjSW5EQBraygOKQDOjRNWnJhiAxxz0/jN7oaf
RVf9Bpgw+6ECOhhJnmX6pWE2xXQrpwc5+MLOiVPps+TD1AHMlj8F1tF48ngi
BcajscTJWPJ4NHE82nw4nDgYShwONx+cpUMAbAEswr2t4eYdeJ4xMKVvQhkS
3x6PA2CtDYau5Bpe7Ky53FV7Pd/IaisWtbmm08VAdpIH18LRigMWGAGnWEEH
jzk0QxYDOdbVeLOzDnAKjNwBYNAzVAFOXUqVXQTBEgrQ6lKiFARkFkBYpgLQ
bZ3LEhyIHA3Gbo0mb09mbsPUi7aXljpfP5d741zu9eXu1xayL8+035vI3BpL
AWrvDkW22aXOLZhZEeG8OOCK3xmhuGvhHp6iCt5LAJEVBDjezvmO+oInfaHD
rsZrzd7lev2IU543SWFOoE3ea4MdGdJaMqaWhbWMX62qlsurCKwR6COjps2q
73CYmg3aKoJwiHEvJg9omLBaXouJPKyragBDmuXCDh3ZoQZTOhbFRUGJMIKj
SYUso2YKDuOQ156zazsMiqyR7jRQcZkY2h+JeVGaiCvpBkxaIxU3KIgaWlIh
5UVVxGCJY7Lc02PSRiksqMQa1dJGPRG1MBmbrs2iaTGoA1q6nEKBtrIK2Laz
pKieRitwQSUuaGSkTSCUmE8lradETTJeBsyQZkW7koiI+A08uIUEpm4bjprl
hJEm1BIhzBhBeGUo3ohhtdBEQlQhE1bKBU1KUcoIZIKuR0VlpOKUVByTiv1S
USOJ1tIijxQmMDjYRIsStu+Gi3XEtbIPQ6goq2CGNfpBlSFLKlsJJiyS+sXi
FEPnDMY+vSFPKfopeoxRzur1MxbjpNkwaNR0qFRphbqFVrapmDa9MqmnwnqJ
X4akFaIRAzOqoQsM3sagIZW4Wi6owITVqKCULUP2CQXgVzr06npMUC2FmZkO
Pjy3KgkvqiQaZeKgkozq6LhRnbEYM2ZDTM20mnWtenALIW1RSDppUTcjKuqk
cxbFObNqwcwsuHUrtc6FJneuRBnVCYMaQbMZ63CrijW28Xr3aIV9wGPM2bR9
Nt1IqXWq1j1eaRtwa/M2ps+mzBmpNgXaRku61bK8hmoDNzyooFIEa6X9GL9d
SxUsTJ+JyjLinEoyYVdNA9FkV4OY8RjnKx3jlZYuMwW0WKuB6HEqh6vtk03e
sXrneJ1zqNxccKg6dURWg3cYyEaFIKhD2y1M0QE0l2XWY59y2ybKHGNV7mKF
rcdtyLkMg14reGa81DHktOQshlatMqGiYzomYdInrAa/nqqQC6uVkoBZFjQT
Ubu8o1TVXcr0lKnylYb+WvtwQ+lYvWeizrHUZJ+v054PmZaCxk+ujb3/F9/8
jx/9+ZO3//H9999+BJ3X3wHCigXWO0BVcXGmrd5/+r80DuYC0OpH3//OP/+/
3/qj3/rk1z/7MqDVFz7x4Kuf+dDXP/sm0FZf/JU7n//FvU+/fuNjd1ff2B67
eyV3uJLZnU9sTsZujoauDDZdLNS/0Fmz3FK6kHQvJkqWmr0rydLlZu9S3DMb
d01GnRMh23gA0moqYJsJumZD7uVExfm2+iv58M2h1M5U++Fi761VaJZ+58WB
2xcKQFsdLmb3Z9u4jksbw7Gb/cEbvb61PiCsfDcK9Td6Gm90+653N93o8d3M
+9d6gxt9YcAFViBEN86A9YxZ22dq6xmqnoms57XV4XwbzA9c6jhYaIWNg+db
AL8ArR5Az6WuW8vQcO9otgUG+K2JNJcofjgG6JA+PEvDOxgFkdxnQQBlC7tp
tXMGrGe7VM9QdT1bd62z9lq27kZn7c2epvVCCG4GDcYBsA65lx1Ps2SE2Nqb
zOxOnZ750XSaq+0CtDo8A9bJZOrWJDix1MlE6tZ46mQMRPLWePrWeOZkNH08
yp7eSHIf8OtZMsZwMwArAP3WCJSxAFXb47H1ofDVfOPFrtor3VBbbQ6ENvvY
ky+wm1a9MNcCTvvs5YCr4y6QO+COQXBohloy59vohpmBHKfOlgR/Jq84YEFa
pUq5TStOW11JAorB58H/Ab8FZV3OB3tEFiPHI7D/7/FE4u5M5tWFjteXu95Y
yr6x0PnabPsr060vTbfcAR/FGBCq0d1B8HmG9geiQF49k1TPOMUdc3H2TABm
v+T9OznfIaRV8Kin4Wai9Fy9cdxD95mxXjPRb6f6we20le7SYHFSGCbRkIIO
KtVBpTKkVARpMiDHAhTuV1D1tKJWpWsymJp0qoCBqSQkNh70Ow3QaJSRthsV
OYcxZzcklfJ6Eb9ewA+TeEarjCtkTaioUcQLorykXNJr0RbthhYGS1Boq1bR
ZTG0GDTNakVSQ7ebFN0WRbeR6rcop72WEY+hTUskNNK0mex0MUPlxrla53K1
Y85rzhu1XRYTiKSaacLRRgzalTdRgHqCCnapDczhtaxzOBA+URWac+lTShJM
6TGSDBCkh8+383gWsdAiFekEPBVMpePVyPEylO8WsX0JxdAXvRbjt2iJglFR
1DP9KroVFfsgF/hpAHQV5sGQMglSJUIaJEijBGlAkUZcUIcLy0S8MiHPh4tT
KiarAaTTZklFWoI3IbwaBAlI0Q6drs9i69UaexSaTpLKYGQcI2IEGaOpjE6f
oJXNQmkGxTsYuhkmmQsBjqvESLtMPECTeQpPKSQNWtSrxKwkYZdiFh7fjvCq
xJK4Upkx6sIqWQMtqpAiFUKkCed1majJaudEpWOipmSwzJ61qNv1ik6jqk1H
dZmV7VpZihanZPwUAdMpexjhrI560aBcMagWrdqFUvOQVxfXSMoxxIsjtYww
bqO6yg2FMmuPXZfRKcJyLIiLI6Q4LkebSTRBCFMycSMPiYiRGPhGpPwgyodw
R0VcFy1wb1PLR5plWFYDm0X2KLGsTJBTSIaNimmHbtyq7lMR7Qq0WSlJqCQw
zcOt7nQquz3q/kpTscqWL9G3mORBStCEIj4MCcj44MQqCSRIizr19LBZN24z
Tjotoy7LoBv8bShjjDSpwvqc+tmqktky16TNWDSoO1XyjIJMqeQJrQIwq56R
lskE1Wqp36rw2Si/k06UKNvddNajzFcYi4DLTZUTjWVT9a5lv3MlYJ+t09zo
rv3zL736H9/7v3/63t88ffS9x0BPnS0DPvrPwuo0YEL7f02rH/34r3/w73/y
99/59T/49se++pkH/+1X737pU6987bMfBvGlT7z8hV+5/Wsf2f/ch9c/+fKL
bx5MvXSzb/9cy/ZsAqKq2PRib/357przHZVLmdL5Zvd83LMQ96wkys4ly1aS
ZQBeUzHnWNA24reM+61TQfuUHwgu51Jz+Wqm5lJX4HofIEvmcKbnZLn3ZBVW
XR2v5o9Weg4WOvdmWncmUoA460PR633+64WmG/kmMHNezzdc72m81tV4NdsA
xms94Hn/zXxgrS+0XoysFSPrZ8B6JrJAcPDa+V9yME63rthcC7jQt9R+uNxx
sNgGtdVcy9FC2222a/Cd5c6ThTboWD6d3p9JHU7BKqdnSePPZ+I9QwDQLEDx
AYZugwn8f6OtbnTVg+CAdR1EV8PNHt9GIbgDptahZg58XALJ/jg3QlTtsXXT
p6iaTB1OQtPyo8kUiOPJ9Amg1UTq+Dla3Z7I3JlsvT3RcjIG8JcGtDqAtDo9
7edptTkS22SBBWh1rdB0qbvuak89uEPY+hmtTpfROJ/bZ3jigt2uCu4+R2dO
W0EidDdxtHqmrc4SLaqfB9YlAClWUkGFlS6/mqq4nK64xP7oSmsVazlYD80u
Cn6Y3QGT1SPHo7E744l7k8mXJpL3xxJ3R+L3RpvvjyfvT6XvT6fvTMKy36Ph
OPTigMmKwZ8D1jNUnQILfEE5/24vTNrfLfgBrY57A4BWN5pLVhtMU6VM0UoM
WMlBOz1kZ0acyl49GRLD1LVSAa9SLGmgqIBKWUdIS3hQRFhghrPAJMbsOOkk
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
opkZkCADMvGEjh63GfuMdIqUhXBxhETDuDiogI0Qk5Qob1PnWTTBDUNMC5Ah
tbxpMYzZjFWHuWzURmRioHJBkXCQUFw2q29YVZtmxQwrnjbKF93MatA4a2eb
Fu2IjsjhsqhM6JcLAypRBBVGxLBTn02OJHXKht+5k4ivB/0jBhamT1BAJYTD
asWqWrNOKLesihtuzb6X2QObs5246WJueLSrVnxOL9/06K8HbLte2y2Xdceo
B7/pMEMNEuphUtlgsTGtqkeODBDSfq26T0f2mPRZgzGoJmhEKBYgAjEiFiKw
G5UY6UBFA3LFJMksaA3TDDtjMoxZ9AVaHkTh7QrOlZA7ZaKAUprQKIosmdEo
A0LosHxPP9jSEEWslDyJSYZJ6YJDt+UxLenxSbVgSoGss4orZmLTpN5yUNfb
zDfj9o02Yx3QyqCNapQxFZrF5WVCMUSrGgZi2kJXNPJhtXzcoJ33upba2paj
oYbPVvUYh21kxaqecpFLbmrOgM7gyAotvGzFbgYN12KW1ZB+3Ed1mlRWtUAr
QVgRYpYgDlTglQqCckFMKSgb8EbAPh8LTLd5x732hs8+EbY3Y47JmLcZdU+G
7XMR61LMtNVuuJozr3QwBxMdv/Hzr/7T9373h2/88Q9/+De8WwF7+sli9S+6
1V/+1e//2R//yrf/87/55W9+4ptfef+//cL7fuq1lz7/iXd+5qNPX/v40y98
8umXP/34S5+8/6VPHH/65esffrr8wq3a6XIJiNXOcNt6P7An71avf7s3uNUN
OBXYLgTBdacYBNja6Q7u9LcBkG11+7dgWrt3OwsXoNWVYtvNvsTt4fRhI39v
duDR8uj52sj9jdH7GyN3V4aOF/qOZssnM0CsOFo1s/tjnQBJEEy1jr3R5F4l
Adbt4fit4djtkQRg1l41ud9IH012tc6teEi1aPXP5QRytIIjSIBMPdkeeLIJ
h78/2YRT4Plhu0CsABSAWHH9aXPns4X7MzyY8hBV0K3yfB3T87TiDQsw64w7
8fnxlPVWlsXFSkBlqLTDxnpVaFgwHjiZhzOw+MxzAKlZWCT1gCuVOl8sPViA
TRQfLJQeLZYfA2wBeM0VwXq8UH5hqeddy33vXh14aW0QWNW7VsDisiy4YOBD
Lmh52sze5Zh1Mpk9nswegTXVdTyTPZkFDzKHE+mDRgqI1V2YAc5NPYbY7bzH
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
nWpZQS3tJ9UVPTVi0A6z1IRJP2szzTht4xbjIEsXCU1eQ6SUqjxJDFmMo3bT
sJkZNpI1m27cYRwyaIoaSTfc4rBBFliVJKsQdkihJkTEgggqjshlSUwNwFch
0DGjesiMJ9QiWGMrERUY7aTbP2P3Nk3Wqk43ZKCKelWSEPcwihEWHzMQTT3Z
pFRNTDZHqDZ05CUjvWOkLluZ2z7zXpt5206uaNXLFNGkiCEaK7JYmlYmNbKk
UtIhRjICZFAuGQe/F4YO4qK6XjVhwsZY5RirHqGxjFTsFSBepUQrFqi5UUpa
6ImCokg+KFL2M0SnQe0TwRlVsNJZJCiqpHWbsWYz5NWyjESQFwkGJJIxmWqO
pLYclmWbfspMDxDyjBTJgy1aRzWM7JTVPGEyljBlVAD2cyFAUkWvXvca9+OB
vZBvy2ZqUBrwtCEp3LfBzuyVIh0YMmrGZx3aCZOmQstKKNKFIH1iZJJRrbr1
W1H7Zty53GZcbTNOW9RjGmSRQVf1mqIEnkAVUKRBya4GdMft9sOY4aoHv+zT
rjipCintUojaZWhYLLMiYhIR4M8WAAeikwvdlDzMKts0Ap8EimRajMw5mDul
9JVcZsLtHNazRVyRUYpKuKwAbkhwaUYh7KZVozZDv47uUKBJOZpUolFUACw7
ys24HySUJamoAyBehGSUkrhc7LwYSaaC3ebhpEU5f4cA6Maopv2mMQvRi4vS
4Pulgm5KUQD3M2IBJRAqEQGfpwperVEAG+aXMGmFBOZIT9hMRR3llMGhnyh8
StjJXsidwILfy6WRtZuJnJPp9ulGIpZawjYatYzGLGPtjmbSPpf2LHYFl7oC
y2nPesq+3WG63KE96DbfLpn2q8Gf+fDB//rL//yPf/+HP3zzu2+88Xevv/k9
cOVzAl9/4+/eOrH6/zu3+s5f/t6f/Ldf/J1f/uov/tzHYJbFlz/w9ddeeu2j
L3z8g+cvv3T4ysvHr374+FOvHH76I7c//J6td9+fOdvp35vuulSJbA+FNgaC
6z2+zW7/etG3lvdt5P2bOS+0qmLb5VLoSnfb9b7Qjb7IrYHo7YHYrf7ord7o
ze7I9XL4enf4Sjl8qRy+NpDcG8sdzfSer1fvb9TurVVPeLeaLB00SweTAFi5
w/HcQb1rv566U20HtLoFY4DP3IpH1a1KfHcktjua2BvruDPRCQzrzngaYAt4
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
A3SzScF9PlZ2W7rMrFssprgdFeX8kZEgDhUa1MjaKWmPSVWza8btykmLdNEu
3fGqr4eoNQdb1Wj7MCYlU/kkYpNYSKCIXApbjQjFcAlgIhwELrhnCAmRkkJQ
1TPjTlvV4SyYzFFWr5fJKRQ1YWovTcA6X6kwrZJ2s8qSTlymRaN65bxNe8lr
2w/7ThNhcL3sNl0Kmm90eq7mPWudloWYdt5HrIf0N7PeW+XwBtj8g4aFiOVS
V9tswFhSidoFALKiphWbttFVHTVC0zUKn9aTG27DTsC86NCOGYh+GutSydLc
cM9uUl4z4TNu82KbbyUa2khEl8PBptM6bjc33daaw1hx6POsKokL06woZ1Hk
DbIxk2bGQE6ZmaYFINI8HfKu5VJjsXBvyJf1uduMrAFTaqRiUirGOU22iZAo
JimZ8DGfbjZqWYybF5OWpXb7XNLejNnqUXs94RtPe6c6nbNx97w3MO+2zPmo
+XZyKcve6IvfLMb2c4Fbecv7d3J/8euff/N7v/X97//562++5VatNuytxxeL
Y9mbb7z5o7T6nxe0+oWfe/UbX3v5Z7740k9/9p2f/+i9j77n9stPLgFaffDh
5ocern34fPVdt5sHS+XL4+mtRnq70bUznt2ZyO7UuzZH02tD7SsDieX+6GJv
eK4cmAO0KnoX8t6VLvdSxgXWcpdrPe/d7g7udLcBpbraByQrdKUneKno28p7
NvPuraIffOk61KvC/YW+h8uD50sDxzOl/WbuDtCrsc6btRRYt+oAWwBY8Zsj
iRuV+G4lcWs4ztULR28MtO0OhG71hW5xbrU/HN6vxPZGkndGkvsjsAkG2I0P
YGvc9sPxzpOpzN257P2FAnCr8+XC/aXcw+XC4+Xio8X8g/ncvZmu44mOg1r8
EHY24DP3IEoOuUjdQQU8YYJHDM8g3qSeD/q1lKrlU28D1o9HAoFb8ZACtNob
iLZoxXsWTGi/0CtIK44+fECvFdN7Xqb4BR63aMVDqvUi3zpHq6V4Yt4Zbb/9
zK069mqx/WrspBa/N9EO9OrBeBq41Rk35piPBPJu1TIsHkzwhV24Ff8Z8NV7
4xmeVjDz/2KMyGm9oxV/O7yYJsyPCX5bb/aWZLVCguA732ZVrQ/5z7Qe8MCC
k4svpo2ccI8vEgvjzwPrcCR+VEkcVKLHVfCD8OiKp9WDSui45L7ZYQC0WnZj
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
bKrNytvMrN1EW/W0flIy65MEOieKK6I8Jwh5hgzANtY84dCfx4zDKmaOktao
ZTwyNlQxDu+yyB2VnUeNRdtEA7esiGQTt2d0o4nxi2W7oWwFhjUyZ5u8LGJ3
PMxVGbB1UraMkvpRaHLSPD41cXF47MyQ7swQP3WuLJq3IvjVKHo5ZN/0WbZ8
1ssRdDvgWPej6wFqJ+y8OR28l09sB9QaZssYRssO3ZqMXw8IV4PsVhDbjOFr
YbzlctQle4E0TVvHkoaLWcPFqnlsFTXeEtAjlTxU0JMI/yCjHqSkO3HpRlS4
GhYAqrbCwlqAW/Yxy156NcCthriVALvkw5eiyJKHWBOENoOU0JFp7Ow0c77M
WRc55JqMHoSR0wr5H3728X//2h++89Zfv/vuW+91fWrQrb41rd7/EK1euNWf
/mbfrX7pZ773zR//yE986tHnPvHgsx8/+Mz33/uRj974+JON1+/Uj9ZTN5v+
3Xp0t5m6OT99p529t5y520nfbkWv1gM7BfdGTl3NaKhaS7pW4upKXFlNqasJ
ZSUmrkS5lQi3FtHWsLbj3KWEliJ4MytptJpV7ms7p9TbOfVGStqN8zfiwp20
fC+nHlaCD5qxx53pZxv5Z9vFpzuFR9uzp2uZB+340XzkfhNYQHC/Htirevcq
7oOa56Dq0ZhVVvZLzh6tgGrtFcFNMPe6DgGG5v2AVk9WIs/WupDajD3biD5Z
Cz9ZCT9qB07n/Q/nPMc19aisHmqBRC0l/iAva7G4Wc8R4JR27GpO+cW6VR9Y
Pb0aXAwalJdXxjej6rDkOdHmTF8/y6LnU3149fIuenr14OWL9jH0Cp76i2L9
99CPSfag9soWsMe9X2zFurQK7dfB56kA6B+WnMcl50nReVyUT0rqSdkNJvYu
pCKa39UCPVr1gNVPsB9MvQBu9bydAG4FaPVaJ/FaO/baywK/PWQMdhM+/VYh
wf5WrEG96hnWYHvH3spXn3d9kL14zMB24N7x29HqqKQeg39pSe7vDn69oj7L
i6dp5ihG7wXx237iToC8E2IOYtK1AFtCTX79mGIwyDZIMFvoqUlJNzVNozUn
U2TQJGxJO6AsjYcxuw+xyOYp2TARcljSJJrCHfNAuxRnliYSmAPMe2mGSNN4
ikIyJDRNwYBWCRqKM3CEhFICXnQLBTc34ySjqMVvngzZplK4pSjhMzwaRyx+
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
IBHPKVFQSpVVpZJxp9gIouJNkUL6VMuEZQxoUCpwcyf8Qk7bQawlIxvZ9Fwo
1HV7m053wQzbJOUIvOIgGy57yUpMG7GmjagS+pxOXtKrZqyGAWXqWg0jB9E1
G3MiRUgkc0qlRrlUJeJrBHxCIgnKFGG+KMrjpQHgKH3OqfWaBB4NN4bLU2ZN
yqjN4vqC0QgQmdLrUgaNTyUy8yeNfMQqn7SpJh2iiQyqm/G48laTXysLGVQR
kyZu0SXMmqwFGwZcQ6e1iWkaakVepfRoVEYhxyae9ClYLhHiECIBOSeBKZwC
nhVukQEkiRt81UChK2rFLYd6NWJdseMzUkERQfIIUuFMDTTaJRs5tpJ9A95B
DU2VriRX5uWyjFRSVMmrGmVJJpwW8cDICjhVtbiOypoGZdusLqj5ITaSZyFL
RtWNMHk1hI+csgbOnlYgdRXSVXPmdZIlg3YJx8cG0xxuaWrUFYW4qZZ11dJF
o/aa3bhD4qu4etth2g3YZ03qGiYpoLKEWphR8WYJ1c2A9Tqp38ZUNwzabb1m
w4QVBOyUiBUVsaNCoEv8plQKQHbNojmwq29Ryk2D4ArK2zJKtiyqJb2soxKW
FeK4iE+xJ7V0KXUDgoQRpCZnzxglVb0ki4pKFl3TQ9QpvGJBq0ZtG9f29bpZ
nW4W0/VNxr7RMNYrFzWCVcXklmbiBsY9sCqvosJZycQSgBGhvEVpDp2aPQ96
1aFZxEWLWv5VTHTLJDs0K3cx0bps8oqat21Rbdi0HZ0gLZoIcieB8wYEANBI
VcEbksbZgLHt0zVs6JzLdD1EbAQ4P3w39s0//8X3v/5Xf/cRs9f3Pg0pgCea
UPT86hU8q7qcb/XpCPav/vUf/un/+qt/+D9/6d//+o/81i9CWv3cP3n+499/
/Pm3rr1zd/HFyfjp7eGjW737Nzv3rrfubtXPr1RPl4u3x7m9Yep6N7HZDF+p
BlcKMNt3Nu0cJgCqHLNJ9zjtXch5GFrNAVqlHeOsazEPgOVdzPvns57ZlLMf
ozohsh2wNP3mWoCoh8hGmGyGaU4BbAXJlp9s+awzfrIbpEYR5zjhXUr5rsKT
RO/uNJAs727Ju1vwXJ927pZc+2DVbQZPOtG7AyBZSTCfjRJ3ATWWig9Xi0+u
VJ5v1t/aar6103p3t/POze47Nztv7bae79SfbJYfXik8WSk8Wyo8Wcg/HGce
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
1Vf/+o/+/I9//T/93pe/8q9/jHErhlbf93zrsw9W3723/PbpAgDWs8PR41u9
hzfad6/WTlfgTuCtUXq3n9qZiW82ImtluvRfzgukCYpVLrBSCK+VQqsl/3IB
tggBnBolYcv72RQgFxSrbgRuADa8ZogqvxmYFBArOJg9QJpWDb+l4SNqHnPd
A55JtHyWtt86iJLjpG0x7Viddm8UvVenvVdyrqsAWDn7WtK6EjGthPHVCL6R
sGxnyBtFuEm4V4FZVHsVWLNit+i8VXHeKjv3ys6bJepmidwtgKfZbkzbr+eo
63k46KaQsGAgsI/jZuiYLv5wtxt/MEg9ms08mcs9Wyw8Xyq+WK28tVF/Z6v1
mZ2Zz97ofvbW4D0wDkafPZz97O3RZw6G7+4P3rreebHdfLpZe3ql8mS98mS1
DJh1HwAL3NvPpu8Ok+fdOFCt05noSTty3IZRGeAaXABgwf3ABtwVpFn2+jAL
hmGUfZ8IYmcGAymGU5+OEnydt1WGbrVPF+6AdTwqgE3eg4aPjn70A06BsV91
3a7C3sGQWTW6ogXdTOrTbnWBKmbQgRapjw3r9cZg6jEdhgFDBPvxR7AWU/xB
L3a/GwEy9bAfYx4B8wNa0BjwwfC8i1aVNShZZ8y5FW1bpxDZ7jsVFxNo8Yl6
7BeNGulzK5gddhGpznS3B1R9REsWPGWjB2QWbdb3R4n7Q/CLRB/1I48BpHqh
twah5zP+JzXX3QJ1lCYOEqZbMeNuFN8Nam+GtDejphsp+5WYq0mZfXIpxp4S
0S3FRRMc8cQkWJyFwFbkIptUEDeinWhgkIzkbWaHRICzEILHDmOaqtdZ8bqi
OOaQic2CKZdW6cMxp1ZJiHnYBFx2gGXEFLKq1dT3OepOc8GKRdQSkjehAc4D
wDghZLEEHDaP4aOcvtu3iSaDGn5Yy0/pxQkd3w6WUykvJeGHphA3EAcOkpaL
Cqgqo5X5BWwPfyqNaaZNWFQti+uUCYfZ6zQY1QLVJALExMxhUWIhLuCD30UA
tE7EtqukIa0yq9XWUV1LKe6h8o5BWdRKYwqhS8gxsgHUWEYhl1IpQyZj2IDb
JQr9JEtIbwkCvXLIeBmNoiSXNaTyjlTelytWrdY1j7PnNM/4rFU/kSA0KRwN
SYQNo+6K3zZrUhYFSIE/mRdNZSX8tEwUF/Oiwom8iju26xZMillgVUrhAqpc
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
pUSaVs2607zrJXc99BShHTMrFuzGS376NIifuDTX/fpTN37kFU7Cnm23fVWi
NoP8ZlhYCXILfnuLswyaVP16VZMmFjzuuYC37KSrTmzahS8FhKWobzblnM5J
y93RjWzotDtwtUj/q8/O/JcPfhtoq7+DGPo49XfBox+prT4Br3Nt9ZXf+MMv
/fLv/cYXOv1Wv/iFh59/9+ynXjv4safb7z7aePve6gttNfnoqPVwr3lvs35j
GZauzmaHTqcBsAYujQF51b1Zz6+W0wBVQFitV/IbNei+WC3HAa0WBs8zgZNd
vnbeP5H1jqakkbgTCCsQIwkX7LGCrnUv1FYAVZBKEkAV0FaVuKucdFeA1EpI
pTjgl1SJSuWIsxQWymFHJeyohoRGTBxLecaS7lZSmkjCCRhtILtS4njMMRax
N8O2ZpAeDVLjIXoiDMjFzkbt81F2Mc4tJ/nVFL+edqznnCBWQQBIZWHNazkt
LKUdSyl+EUSSA7EkX6ymHdt55263q1PVOgEUgEtG4kD7wG4vcPudH3q8Unpl
s/7azsgb+y0ApjePJgCqALY6F+AET3aA9WqnpAViq/5kvdqRWgBbgFlAZ92Z
7Yf2+5m+jo0QMmsMZghvwFEPn9yE9QlOdcYSdiyC0CsIvlQIgfO4GDyR96Rc
aKvLQF7VEye1yFE5AKMSOC1DYF2RbYG3RoASid9+udlqNHPeHQwzad0XqPr/
0lb3p/thpW8G0koG1gCIx7ND4ATPP5oZBOf9KTh68e50772pnnNj+QvTBUwJ
Nj/e6wFdgo3EdWgaCV9/AalPbA8551c12tFW10vRa6UIRBV0v0eulaNX5dlW
nSkfN0dS8obKDIzx7O3xzN2x1L2x1MOx5JPx1POJ5CtjqWcjsYe1yJ1i4Fq/
5yjr2I7Z1gOWdZ9lyYdNuq1Njy1FmGT6KExKaAjUIgpMreItqJvEvARqU8IE
naBReo3aCIYmSNyt1RAIYnlBK4AqxXmvltqgNhrVRkxjYlGrn2aSDkfcRoXM
xrBR49fA2k1Mi8Q1SAJB8gqkYTYsuoRFiV9wifNeqcnQVcqW1RsjGmPMRMYs
TMTCx61sFrfWneA+T/jAbQ1BMkZNUKnwyvdDTu4wBRcZrTpvNET16pTNPOik
RzyOcYmf4JkZBzPL0y0KneGpeR6oCWaTF4+dvisez2mAPQoQOy5sTTBuuC37
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
bjfKXIryGzFhKuSoBBweGlVDziBKnVKlU2rlcRMEuFOZNDk7EactPrMGnFmW
SpNEjrFlGcZjMvE6PaFW6xQf00qp1ikVWiWi1Sn1amgYh8OLcJXKi2ER3OrT
aRzyjSVl0g9Q5ABpT+tN3UZLH2quUeSM1zXvc025uCkX25bsk26u7ebqrLXb
rPWo5VSkAsnAVcJMjsBKHFO0Eb1GbdlqBrpsnCZn7MyCg5+y2UbN+KBB32VS
9VD6kog2nei007znYy4HHAcSvcxZJgV0yK7xGWAaUwd96QpBTvfl1No6hs07
hRGrpUsBHiKDVmMByEDKlKIMPhO8dYeUyACqG2eoPa93W3SOajQ1pbIXQbII
UiGNE152zGGdJvVts2LeppvjjW0erbNwNhT4XodCJSp1AY0xZzIXrdYGYa1x
5DD8Y9kZzrZqtx04+TOX40iyH3roS15qy4mu8doNTrtuV4wRqj6zZtBqAm+p
R6/OqpT9BkOdIhskXSWoXgOaUqiBdiuQthrr6LPQvRay22zMGKF1pMooZj2m
OadpM2A/TASWA/4KI6ZRPqBnBQ0AlgJ86vAbFd2EoQ/TVkkU7n+nrENaVQqS
UdlvMg7ilopJu2xV7XC6TTe64jGvh6jdGHsYYg8lcs2sWdIiuzR26nMeR9z7
Udd2kF93k5su4iBgOw3aT9zkiRM74AzblHIJRab1yIZNdxZk913kLme943He
djsvOx0nknQWCh1Ho1sBf9NGDloMUTVUdl4FEjIgXbC/GDlj1Dcl9JYLu+Ol
boTEs6h/nLb3GPGoxuxSaN2I2qtSB9VIWInk9eoabWmS6AiqbpvVyyS6QYMw
HrrIawnpNCEtSJYGrRoiVCmLqpdUjwvm5aC4GPFNxvjRBDud8s6GnHsp59kg
8T9/bvY/v/+/fvjNv/rW+3/7wQfvf/e7H8ry6t+/AJNsVv/B9y9QdeG4+ITg
+vrX/s1f/tlv/ckf/JM/+M2f+1hbvQu11U+9AeXVpx5tvn1v9bWbC08vTz08
aN2DDvb6taXSlXk5Ezg7BGk12X80OXgw3rc32r3VyG/W8xv13GY9C2i1Wuk0
CENtNdnlBbQCwgpqq7Q0mnKPJs8nLwFUjaZgm1UD0ApIqohQCDnKQBnBipWr
koJnMSEBWlUiUh2gKuSqhKVy0FnwOYa87JCPHfQBJHGDfnYowA0F+UKQHwzy
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
mdKqIc9wzBxHL4kcWMxK3KJPnVD4dsxVxh0jprzWFN0M+rZ0ZcerAuE2wZGD
FDpIo6M8sWRIQMSdingPDfmcJt4KmLcafIch7WRY3zX5JQGf48kVn7TVGKhR
jowDycBZYO5enqgPtd8OiidjyqnWwLGW8ErYN+01F0LR6UisphtNDBElXQnK
mcbsZZd9yuU6R3OXVOOk17egGd0834I6YE835WhjnN2sc5T3LMr0mgx+KT/K
UF2op93phKrWZRumPQsqOy+TswI6giMDuG2cpwYZqp8mTzf6XssFbzZoF4Lm
lir34e6U3ZajnL0GWxOJboXNsrTsdDgdLpKio5pQCBm1qFlV6S7GPq6T603m
eqv/TFfzQYd/vyQedspvnR75yp984SdP/vqHH3z98Xtfffvtrz599ujps6fv
PXn38bN3nn7/O0/e/9aTZ9968uQ7zx698+y9Z+8/fVa3EAQBFj/44MkHP3z2
3Xe/+t3v/t3X/v7P/ua/fvHPfv8Lv/vrb/3GZ+792qeufeGTl375E+cBrT7/
8TP/60OLVve2Pnxn40NXl9+4vPjK+Zn7Z6buHU7cPD5yZWfw4nrPheWaVVzR
fnq2/exc7dx81+mZ6vGx0v5IcWcQAmurP7vek17pTFqbgc1zbc2zpcRsqQkG
wFYpPlkA2io8koaoGkr6h5K+Qcs/sLfJ98LAVu9sMNqjgEdiMSrXtVVbAxBT
BohCCFzXCkEAKcgp8Onlg3rGL6dhSCmfmALk8stZEBBPItBZeTgrBI4LyRli
VpMyqpRVxbQCCMWlZD6jCCmZS4oAVWyLwLRwVDNHJhiLVpJFK56IcjjM1jrM
YiAi4ApHhDlrwePNApOUeYC/kqF0+NXusNYbVkbixmTCmGnRF5P6yvMKQG0j
ra2n1Y0UzPVYswr/Nqy6CwgsoLOSMBaS+kI2sJgLLuZDC7nAXBoAC2AruJwP
r+Sex3IuvJoFixCA12ohuFYMrpdCG22h9ZK1LvrXSt71Esj+9ZJ3rQ0EJNdq
ybta9sEAV4DgKkHnw7WsvpEztgrevZIfVmtYFfKHHeFT1dCZzui57til/sTV
odYbo+mbY9lb49nbE/m7U/n7M6UHs6UHc+V7i5XbK+23VztAvrNavbvWcW+9
dneteg8irFpfgIt3VjvuLlfvLXbene+8M1e7OdN+c7J8Y7x4bSx/Y7RwY/SF
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
EhFU8bajWmikKPIwC1Rk8xSRRsM9JNES+DrLlCisLJIVmc6zaBUM1x2tJrN5
EklGQrbP10OhA6YyaIBQO4aWYcgETcbgghGihcMGCn6hlIUhNoEmOAp8gKME
IgVgaXeNInkcQ/2BiM8nRCIWy5oEYaCIi2MpgswB1aKpJB6BtRfCIQ0npDCi
I4SNUw5KJFAyi1EZhMiEsFwYK2FklebrnNgnCHmGTpN4jsUrEluTqDKL9tKR
CoOkA+DeGxqJmgNRKwfYF8HqBDkt8POiMkZxAwQ7wAOn0+IkCQCqYAj4c8sL
XImimzQ3IAsVkSiySJFCqiwN7qIZBNUBYkCHIhJw53W4At4HnhqX2LVUfNGK
TonsksJuRrldWziWsXaT1qKpTyniGEfDtSpbWteoMQFvSHyfxBUwJB0M9ITD
DQrvp8lpXV7POMsJs81HioivSvuGdKYNXpeme3k2xzMaGuG86da4L1BFyUlJ
W1DNUZavY0gfhVUFtgSUmaaKJFFhiAZPtOAWbGJQoToCVqGDPWyoLpM1lcpz
hBYMSt5Twcq0QX8UCcZp1EYCLuLLs0hVJisCXmIifQIyGRUXAGKiwrDGDhv8
gM5WwJAy6MuFfQ2aGBK4AZJqIsggTkwSyJqAnMtFj6WtWZ7qxyItAmsQWJui
ZnV9TlNmRXpV4dYVdoLGKhyZlfgoSZIBfwie/+n3+wJhv1/EiJQs58CYXADq
GsmggSLuG5ADcy4977D9nD/nnUBtedOD0Qgih1EqEMT8QSSMEMGQGvDneabA
M3YkbEbCWZGvwcGSUouqJRm4vz+B+ApgGEz5ZjjfpuQ7YPreN568NeZ8+HD7
6//hn/7dw9+6/9ZXHz392qN3v/3W/Tce3n/87sO/fXr/ydNHDx49uvd4//6T
R/cf79978vj+vfvfenD/W/v3v/H2G3/2ja//xz/6nS/+m1/56Jd/5pWv/NQr
v/zjr/7vn7/zpR+99TOfvPETr5///AdPfBq41at7r9/d+9jdAx+9vfuhm1sg
PuyhqitZsM7theX3nQG0mn71+NQrxyZvHx7rAgvEncOTd45M3jo0fm135OLG
wOnFBqDV7mh+azC70cmtt/MgALBWm9mVBvCsDMBWl1zdnHZAq8kCPJyxu4Y1
nNT742rLlZu2DGlli1WgVFFgVXLZUmpeDfaylxlYcWA2e83V+mJ6PW70xQyA
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
ljCuS7NZZ7lWnC7A95X6RXzGlXZVvD21/GxgdrF4KYaKz7disRGF3VPyT3SU
j7TkdhWt4aw2VLb7TGpCjp/Ks3f6yUdb2K/dN3fpi+/71d9+7t9+/Gf/+/Vv
v/XG9zev/XNYy+LSjWsAqcshszavX7uMtNXVize2fn718j9fev2b//JPX/ub
r3/ya19836svP/HqZ5748m8//gcfQ7T6nQ/c/fFnTr701OEXHtt4/uH9zz18
AFD1LNDqwX1Aq+fCva6eDWn1zD1r771rGeRVBKxHj4OSGou0FUAKtBXYI8dm
Hjw8dd++kdOrvcdn2w9PtoY12JuiGOBKowQ+YtY75NVcK8grVJh9ouqOle2h
gtmf0/uzWi8orKze2K5lAUQIo4K+1hYqrB1aRcBCwgpNaWk1UyqrXB46c55w
GPi/TNgsCdrKA0ZIwCaxrAkl/ZZy69tZ66HqQdE/+hY8/b8Y0KqoshWDq1lC
3ZVbfQXdkqu0OnKLJdY0rixRJZSXTgKziiFu8jdR9Q643GoIQ6FuegewbqXV
job6fwYDd9648xGhCou4RuR4LABgcekMmwrYlE8nM0zSB2wxSTgIBifkAGpc
usilSjxW5NMlAS8jwyocVgXjiZqAt4RzXnWUP0+0yHhdxlvlaEUY0aaSrQpZ
v+UlWiOmocIdKASk0u0K1SajNPuoEbXRRDNAMPR1EW+VoEHd9CBAyMjDh4I1
h3uyhDcQ3gaHtfLpVh5rE/B2EUfVyGWiUyG6VLxLJRoa0Y2qhRA9BghDoqGA
MGQGdGpIJydMesZiVj1hI68crxhn2vz7u7Lnu3IPAq06vfu63Ae6vPPtzkNt
wYNt2TNNzt5AGpDSrQKW5zCTTLHbZbETviCbJKvhlE7QFsM6HGezrMOyMKAF
YFUkOU+zWZIsMXyrblUVLYPTIJQCginQXJZgMhjpxNNoN/lEqsSIdcWo8kqB
5AMSFAodEFyOEjIk7xNcnpXyvOJgjJkkrTSpg6UIC64GiKRpNZ2KtkEUUyke
GJRKcWkMjMVwFicYnKCgkU4RcQQRkFc6Q5k0JSQSVCh/0JrfZJrDcIGkNEl0
dd1kWR0jDAz3aDrHcSVBaFHkLtvyUmjJlYr2W0zqsYSTxEEbQkc6Yml9itjO
czWe83FCTKKwZDqMStFhTrUVi5XSqV5d6TGUXkvvMbROVW5X5DZZbpekFpar
kWQby/RIYr8q9cnIj7n6jKdNGuy4jE/o9IQlTfj2SCbTqVtFmivgWIXAmtKJ
XCKWTeFlRsimSD1M3i5RfIts5inBw5gcrzbbmbLu+vD00LLrBCpdFYtV4/Fe
hkMl6yXZIlICGSNxdMNyMpZNovCsEYtr8bSRxDI4VWWlNlHpEiTgSDcv1HG0
+K4ZFFCuOFGqDBj6imuuB9aejLUe2BtFf8nW+4jUEEctudaeQm7Zc6Y0ecZQ
Fz1nVJMaPFXHU5VkrJyOt9B4n6n023pDk/sMfcA0G4pcp+kqhvWw5IIjzrvS
lKtM+OZ43m+Yap7AYcDgJ+LwrZvwVI/ITjnafC7TaQcuq4txmo8zYpoXMDBO
wBhfhLF9ts/PDMAtaXyfSPYS8SE8NsXEppHF1wz2VC3z0HDHexZHH5sZvKuv
vr8p2NuUOdJVO9FT25VVVnxxT0E/Ui8crhdWslZYqCrdDSKRSi6b0oGCdSBv
7AKRVcvOdNWWmrOrPn9XkTsbpO+zY1853v/dD5740/dsfPtLz/wfW3/7q198
7+LVf3jzVxe2rl0AWl0PaQUGtLqy+fPNrQs3ti5uXv6Xyxf+4Sf//Bd/91ef
/tMvPfvKy+965Xfe/eVPvesLH3vs5ZfO/fYHznzs6ZMvPXn4hUeRpHr+4Q2U
ExjS6gXA1gN7nr5vF9AKAeueXe87swLy6sk7FgBYIK8AWKCwHj468fDRyTAY
OP3IsdmHj86eOzhxZs/AycXG8dnO/SP1fUP1Pf21CE9RSDBSWNERUFjhnsJo
Q+Go2u14xR0umQMFoJXelwNaaY1fLxDWOtAElrqjrSK/EwmMtBWilcJmecJj
0w5LOBxlM5QTll3KCCCduKLCoQ1EbqWVQBZAyCBtRUXa6v/LIlqBdquZYout
tKHZNK3VVdFkmS5UQ72GLghEA2bBW0J1hqKIwnY4MXq5DT6BimbEfB5HpXEZ
LNJNt3JnR0zdiqrgFq5FjR3BdcuEF5rJCg3LMMApzN/xYSNAtQ3xgMWyqBFd
DQdmwUu0DYpA5AWiyKOc+RIHniixRIUjyuDBeLzMYRW0wDla4wxGVAUcvYS2
SES+JqEFYhWBqohMWaDBShwVJuETJY4s81QJXRy9LDB4iSFKNF6isDJ4Gi+H
Fr0s0wQ0imS6SGIlEiszBPoRmShTyQqdqjJRDglW49JgzXy6RUBWF7E6qhaC
N3F4DXoJkWoTiA4h3SviQyI+a9JrvniwoJxuce7rDM4hYAUPNFBh2/Od3rlW
+6F65qHW7N0172Ben8/IfTA4MYSyLnsCb9GsRXMmKxqMoJKshBFiGpdwUqco
OZ2WkymXpPOCmKFZO4mB5XghJ0hGmhJjcROD0YWkpwkx7BKVWEpLpB2cyTCc
QzBWmvJJXk9QepICL8UQiYRYyiY4JY6LMUxNUSYJNyC6nJgTpRzPWVg6Wrcb
FZ2gwmWbOJpnT6biqWQinUqmyWSCT8ZULBmIfF6VXI7WQWGlMbhVGcNkAlfg
zllW4liF4zSKEZIITDqGAQ2LotRmWj2ZTF03cjRtJ5NuIhlgRIATFQrrV/kp
zx7SlE6Waxf4Gi/6LK1gCSZcwGOlE3ki3cLQDZ7v5LlOke+QhLrIl0GyhQu+
qiQR1VyqJBO9kjjuu1P5YCLwJgJ7JqMv5fWNmr9eywyZQpcmdpl2WdJcgnbS
eIEiayxVwNK5RLyJIIppzI8lgmS6THJVTipQvI+DNpQrmhPwmsMqeVUvKPCn
mGpOxxqJxCQtzirmsGbkeFIVMYqNJ5MxORUrE3HQIHa4dkkPl4QXkkkgVK8g
DCtKH8s1J5MgMVpwoiEpDZTozk/L9C6T3+upB3P2sVp+b9YeYtIjPDWp8EMc
3ZaM15PxQZ6fse1J2xoxtGFd7wMqMVQrx4z67kjGrQssKu/P0gDxDlEA6ddC
JMd1filvT/rqoKNMlrNDOa/EM1mK8OCXiJbyYa0C1a/wg5bRpHsapdAxikkw
dIqjcU6gRR3EuKzl0f6hQqcujWaMmbw1Y3OLOr5mUQtKepiI9SVig3hsUkju
y2l39zSdH++6d7jljt7yqUbpto7csSbjcEE9UXPu6a7c1VU9XPV2Z9QVR55V
qGk+PSek5/j0PJ9aVqmpnDmUt/fWc+s+f8rFHq1QD/jxLx9tfOP5g+8/UH/3
0e7//NUPX7/yzUub37167Uc3rl+6flNbAaqiSODm1YvXty6HU1f/+NoP/9M3
/vNn//2XX/ijzz75yu8++aVPvfsLv/nY537j/Kc+ePdvPnMbigSG2grJK0AV
2jpkY0dbRfbsvWtP370K8iqiVaSwoqSLaN7qsRMgr4BWM+cPTd6zd+iO5Z4T
c41D4+0bw6CwmiM9BagCct0aFQTBtYBS2TMRrdDsVdUdKVuDRWMgb/Tn9d6c
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
3WigugpYnkhVebLLlIddo4umhnlhVjPnTHvMMHoUuV0RKzQqwFtOx7r4VI+Y
7uKSA6ZYZSn5ZoldMVwy4KeSNSo5wKYmVGbGkqdMcVjlBjS+VxM7RA7Ud4Wl
W2S5KggZjHAT8QIe62LjexzjuO0dErR1Xp1g+S5FqmeMrCsafCLPpQYVYUFX
BziyjUv3SESfQIzJ9LwuLOncosouafyCyq+51tHm8on2+q58dloXVzxuWkmN
crEhNtbPxLqJWGsq1k2ne3miX2FHbW0q484VcnOlwkpLbblWnSsWoD1fLs4U
cmO+O2BoParco8kNReiQ+YYm9tv6eMaazdlzeXe64AwHBrCmFZUbFWHQVZO5
msi0ynyfY4xmrF7XzGomRwupJB4akUjgySRG4ARDYBr851JY1HdxWKvOTgTK
ck5eK2r7mp1DbcGh9mB/3V5v0tdK4mJAT1mpUTU5ICR6QngtiLE9evx0i/nE
ROu7pjru76/e1VE83Z4/WrGPlazbqvbhnLhLT6/p6b0Od1c9d3vVOtMkP97v
PTqgfeRQ+0+++sz/9bOvvvkvf/zad7/y3W/8yY/+6e+vXXjt2uULm5dev3Ll
51c3L2xdvQi0An9168LVrctbVwFecPwHP/3RX3/r7/7gL7760qufe+orn33f
lz797i984rHPffT8p1+85+PPn/yN9x760LsPfeCxQ8899DZtBbR6LkwIDLUV
2C6QV1GuRRQMjJgV0erdty8+cXL+sRPzDx2ZfuDA+Jldg7cv9R2e6Ng/0raj
pyJC3UquW1PZw9krlM0OtBouW0Mlc7Bk9BfC6hZ5LdxNWO1EdS2UnUmrSFJF
2mpHWCFaQcfLImTYDIayLGgAFuEiKACh+AKIoHAL+6hsRY4nQikUrgWWqCh3
fSdkFzUii7QVvBfw1GIprY7e6mjNllLVRbQxsUTntifL0jadAu/CPQAUbhYS
DFlARC/fZtyOtvr11NUOfW4lVwSpiFM7qIrgFXEKGrfQKrwgi66fCa980/Co
AcCKiBm9RDJQoH0h3AiMZzJgAh3wABGEKsAWNEBZIBEUSiH0oeGQYFuIhUSO
dFx4HA+PgwckMRkgEcdEhvDEMR5LewAs5GmfQx/n82E5RwAi4hod7LSBaHTI
OzAAHA2kIzMUDpalsIDC8miDCaLAkkjlIa2Ho3JVElkWiZKIKlwVRKYkilWR
rwpsjWfaBKpHpIZVZt4V9xaNYzXvTHv2XG/pwZ7i2UZwX8O/v8M93+E+0p59
pC33QEfhdGtuveTAKLddQ4XWrTTuYPAtRF/WTEFGwgqUUQq3SSYQgBoAEaWq
6iVZzgsiAMsmCD4RZ/GUSBBUEuXLMXhSoimOSBOpOJWG0XCCxJIkliBSCSoZ
ExMJMR4Py57HTZp0Bd7mWIOmdJIU4eSQVlQ8pmCpDE01S1KLopZYDvhSM/Sa
YfkMq6cJKZkG4SakCDaByqUD+/xEokMURz1/KshO+kG/qnfQbCfL98lKtyzV
SDJAgiJRwLFWRW7T1RZJqgp8leOyGKaimBgqQugDlVhqyjOnHL2DSHRhsUEi
NYynJwh8DMcG0ul+jBxk+W6ObWepAUWatqxF01rVjFWQV5Y9qhtdElwTK9Lx
KpNsZ9IjErdsmRuZYNE0e2i6CU9VaKwZ/vBSySARGzaFI70th7prQ44aYCkt
kVSSSTmRBGzZqWSrLIwYwpSYnpaxRZtbL5rrFX/e11GqdmANuepIxhrP+n2m
3szQRSxWS8XG+dSpUvahlvoD+eodmcIuy+kVhWaND2TCpeN1iZzzrY1cZs5U
BmVyUMIG2cSMQuz1lENZ/VBW2/CUFWCWzu/N2vvL2V1Zd95RVnxhwWMWfG4p
EGYz4qhO9wqpIZ0fNIV+UxiwtUHXHA3c8UIwHLhDnj3kWiOuNeY7E4E/W8jO
5oLJjDvmWyOeNmRrw646mtEnMuaUr89kzcnAHPb1flfrddRuR28z5C5L7bbU
ftCz+WC6GAwGXsGwJEEicZIkkGFYmiBwhiZYCpMYzGBxh01D59NiCqM5fbGk
L5fRBkDLTcbedv+20ZY7JluPDRRvGyge688d7w2O9jiHu6yjde1Ajrq9SX54
qPzMct97F3oeGKmdbuSP171THdnb2zO3tdin29072uwjRWFNSRwLxDvKyv1d
9rPLrR882P3Zd+35/n/82JsXv/6La99849r3rl/50a+ubf0K1bW9vLWJcioi
VIGwAtu6dnFz69Lm5pWtqxeuXvnn13/yX7/7zS99/Wsf/urvv+/Vl98L2uoP
Pvn4yx87/6kX7/34c7f9xnsOfejJw0CrKBj4PNryfv/zD6KVVs9H2ursrufu
+zWtnrxjYWf2KpRX4OefvGMJ5NXjty08cgzt3njv+vCdq4NHp7oOjLZHkcCd
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
Pp7uYbABDp+UqHmNXTEAUuyGJxwIlIMF/UjOPORp+3R5lySsiOI0z/QRqR4i
2Uelp0Vut6UecqyDtrUkK3OmNmrJDYPuNIlhj1/J6Yfzzl2Vwtla04lCbtE2
hk15MKO3qVK3pfVb8oDOzeb0jY7Kwd7W+eZSj+8263qTorZpSp9jzJb8/bXc
4aK1L6OgYrAFY71kLQTKuMUNmeyYK0HPv1B0F4v+NIDAAajxG7ZwomAfz9p7
LW2PZ6+41qAsdPF0K4vXOaJf5SdMdUTmRmV6TMGHucSEkFz3pDvqwZn20qmq
v5FRFw12SqamDGHW1ecCe8bXp1xxPpBWS9be1tyBjvJGR2m9vbRY9qfy9pCj
dWtCm8TVRaYuMe0612lLfa7WZ6v9pjwCPPL0xZyzlPfmM9acb8wHxgIQNm8v
5qxVOJ61FrLmfGDOZq3ZgjNbsCcDYybvzsL5+WCxmJ3xnX5Nrht6VhI9VAOB
QUllPOXJnC3QNvQ5IplFG0MIzbbW5dvTlWB3PQe22uzNV8zJvDLocaM5YaXd
29dbODHafPtY/dRYy+1D1TuHKo/Mtj8+1/HYfMcDky239xcOdri7W/RDDe/0
WOXhtZ6nDgy99+DQ88dGXjw1+fIjh/7sxfPf+tyLm3/9pf/ztb/9317/xpuX
vn3l6vdev/aDS798/cIbCEZvbb3xr5tv/fLKja0rF1DK+pULUTAQaStUif3S
lStXr25eunblJ1cufPuH3//3/+Xrn/7TL73wx7//7Csvv/ff/fa7fu83H/rM
S/d9/IXbPvS+A6CtXnziCNBq2x7e/8JDG8+f34fCgPejLIvn7l+P5FU0dRXR
KgLWDqoev22bVg8dmT67b/TMruE7lgaPz/SCvIqAFYX+dmi1Ewxc7iqtNFDx
W1BYC+3BdN2fCIE1WgVmOUNVe6Bi9SNmmb0FoztvNvJWd94FSIEH+//XVhRh
M0SYwc6VFLGsiygnMJRXUSQwolU2LK+UvamnokBZ5uYUDzSQtpLZksqjGoOa
UlVRjUH4S4Che4BCZ7SL8g8Jg07rgCrQ4GgpByDpZkgQhFWIKrCbsmvnJfIe
9MN06G+J+N1KrghSt05U7QQMd4TVrQorzKzAs2ieiMyyURwPzT2hUB7aDAKY
hTIcto2lfI6I7hMFLYFW0nZBD7RGLFodxpE5Niypgfi1PecVPajoKe1AKiKX
TSXBh9yEr7PDUxhLYJFK8tkoShlN2FHh/advoRUWeR++MrMNLD+M8aJEkZC8
aIIMJBVLhrVB8Pz2LzS9DSwBL4p4iYPOnG4S6BpHtrBEO4d3C8SgBH0Ot5ZR
9xfNky3Bvd1lANbd3bm7etwzDee+Duv+Vu++mnNX1TmQU0cFbEjjezSxlRdL
JJtL0V4S19KYThAuTQcUk6fZZlHqNuwORW9muCpFtfBsuya360qnrrUpUo1n
yyxdYqkCyhXBynA/ElfgKHie5bA8F3x3h0wWaKyDJ6Hb7Ff4Tg5vo1ItZLIJ
izUTiYZMd6tMnU4100mwMpHIpBJeKp1LEyWaaeK5KsPkMLQU1A233C0mEjUC
q2HJPBAqlWjiuGaRL1NEEEMLdjrSyV4iPUimFxR+1RB3WeLBrHG0YO/P6gsW
P2Xws5a8nDEXUAaFOMxTIyw+xqSn+fSaTh3NSKfyyvEMf6Kkn2rNnGr2byvY
R339iGcezDhrpjohMmMKM67Qi6a44elHfPOAqS/J0pwmjeh8t0H2+tR8WTvS
GpxpLZ1rLp2rFk+X8hv5YDZrDvnaaCGYKheni5mprLFQtNbr+X2dTYvNpT7P
rslisyR2m9qIZ8xmjdWsvstXVixxzmCndWbSZMdtYdwRR21pPNBBqszk7IWC
v1gMlrP20aJzomjByORIxV1ylTlHHdPEAYkdkPlBVQBQjrn6sKP1KHS/SAKw
JhVqweQPwGCmvXS6vXyk6sPYZt6Wx3RhSBf6dKFbk3o1YcKWphx+2pNnA30+
Z83n7LmcPeYoQ5bUpwkNheuSUQ3/hia1G3yHKw1kjJHAGMvoIKDmAhPAtATP
2dEWPHU1Z64VLRCMu4rO/mp2veTvKfnrZX93JVgr+yslb7ngrBS8xZy7mHWX
c/4c0FYRu3WtRRZrEleT+arCV1W+bqntjtHhmR2u0WqqbZbR6dqdljEeuEtF
dwaEmy+P+eKQK3QbVKeBD7jsTEnf3RZsdOYOdBWOdBVP9JYfmGp7CFA12356
rOn20eodU7U7Z1pPTTXdtdj6nhMTHzu/+2MPrn3q8fVXfuOub33t4z/9b1/9
xY/+5t8ufOetn/3D1de+e/Xiv1zZ+tnFGxcu/WLz0i+2rt/Y+uX16/+6deOt
zas7nEIzVpsXNq/8fOvahatXL1++vLV55dK1zdeuXvrOj3/wH/7uL3/3z/7o
A3/yB8995fee/sNPPfn5Tzz8Ox8++4n3n3zp6YMvPXUEaPX+Rw8iYRWWt33/
w/ueOxfOW51FWRbPn90D9tzNYCBYxKxwDguYtRgCC0UCI2CdOzBx7/rYXauj
pxYGQV5tDLcCsHb3Nd0SCbxVXsFBpK2Wu3KLHdmZtsxU3Zts8cab3dEmd7jJ
GUTAshGwimZPweou2D0FL7JGDmiF5NX/fN7q5upgHq0ONsC2CwmG2YCofwsr
rqMFxShTTkCTO1Hfu52NwGGRtsorTEnjwkK4YlkWShJfkLgcqp3L+AIDQHRY
wmTSACwjjBhDG4CFpBOP9m10OJBRmMWA7EqBj8xk4WUa8QtEExn6W6J80VTU
Tshup/GOVcARp96WaMGEiRzQpdMojy7LkDmGRMkJoc+QeJYiwALw6AQELBRz
4zFPQEOyICzcEab0b69uDi16XGHyYQT3WzMbbzILgBUxy2HQ/B3oXD/Sg2ED
tSnw2LZiilI1wgIdAQcwSme4VMCBB1GWirzHJMHftKQHx9l0QIO8wgKkrbAg
TMsPWCzMwN9eXJbjUwURK0l4mcerLFnjqWaOqDN4B4s1eHwApQWyK568UTCO
t2TuaVTua1Tu6c2f6c+AvLqnwzrb5t3X7N5d8w7n9WEuNaSwvZrUJWsdgtrO
GXVBQyl/aK6NyTFssyB369aInxmy3YYkdQpCr6EPOlavrXcZykTgz2T8Ucca
MNROjm2h8U6JH7D0XkNt6PKgbw9k7GZ4vGS6hcGHBXpaEaY1cVIRJhR+VGT6
GaybTE6b0oJnTBriuC5Ch9kj0CUShQELBFWmmQrLVmm6SuA1nGjC8RqWaiPw
Bk03KLw1hYq+elgKbUlAptwwY7yWjPVRqRmFWTOFVYMBBh3IyEeyyh6LXTW5
ZUvYl3OOt5SO1sv78t6qqx4suHtseZaJL9GxAxp2u8/cHrBHs9yhqn60ou/3
pQ2T37DENUNcMoQFW1zy1OWMsrdon6wFpyqZ41n3ZCG/EXjTrjzo0IM+PZMT
9hSVw55yylbvdPQTnrU/6yyVvMmyN91UHivmxwNnHjrnsrtUsmdy1lwpO5YL
ugytS1f7TGVQF4Z1dtrkFix5RuPHVGZU5UZNYcxVhl15yFXGs+ZEYI75xlTW
ngm8WVvb8OWDvnC05uypmKMeN2jzXTIFA4NRQ5m2jDnfmcq5Q77R48l9Oj+m
CTO2uuQbe4veoVr+YDW7BgLHUsZNpV8TuhShDmgQ+BbgsilOmPy4IY3pfLhZ
JOCP7Zc5GG8MqMKAJg6Z8qijj/p2r681AqUv0Eby5nTBWSr7qyVvd8nblbNX
MtpaTt9XcQ40efsq7nrR3puz0TKunL236O4DYMGjyBrLOXMJHoWnzTnGsm8v
edaErgwbGiisPk3ut0C1af2OPpL1JyuF6abSaD7odaxu2x7MBP22N+17a1lv
wbdnfWPSVycz+nhOnywYC1VvV1tho1He317c35Y/2FY82lU82V8+M9Vy12Tr
yZGmU1PN9670nN839MBG/2PHRj/wwOpnnj76pY/c9R8/99i3v/bBf/nBH3//
x3/5Lz/5r5cu/uONK6/925vX37rx5pXNrctXr12+cWPrzTfefAuObL61eeGN
zQvXQj0Vpa9f3bx4+dLPbmqrzc0rF7Y2f3z18vd+8sOv//1ff+7PXnnxT774
wlc//8yXPvPk73/ykd/9yNlPfuD2jzxz5KUnj3zoXUeBVi88sj8sGHgg1FZ7
b2qrXc89sOf5UF5FwUCwCFihvAK/FM5bLT5xcumJk4sArAcPT92/MX73rvE7
loaOTjUOjLZtDDevD9RupgUi+3X9wLBy4HIjHwYDs7PtwUxrZro1M1n3x2re
aM0daXKGq85g2R4MN23sKdi9Bbe34IDvyTvdObuRQ5mBra4aLg1m89vLlECw
hJWXGMrl6IzI5aNdfU21GmbxlVS2gGouRdtzRB1v2PdykZ7Cw4gWDrrAQyEv
oBhVkLkS6KmwZntR4sNdsdhsuOdjRgRg0Q5HWoBIBtNZ3OIIi8UsLm3zACzM
EQiEKmATkzKYJHiTTQG2DPQSZGAK2BSZR0c+DYPtHUi9I7MdbninmtP2qqu3
C66dsrfAKZAhoLCgEWX0gfdJDCxDhZM+dPhTGj0xl8cyAp4RiCyayCOzEgkK
FBWZl+iSHJWoChPaby6U3slIuZVZOyIrMm8bUjs+5VOpDMglOkQMElDhmq9o
Qo1DhHqHB0Jl2Ft8yCafwuA66Fsg+ZaEy8LBPNw5j4XASgGwQF6VJLLC400c
0YyE1a+1Vb9ITOrssiftzevHm717uoqgre7rL947lANa3dlu39li3V6xTpTt
jaw2ptAjmtCnip2i3CaonZLRqVoBQ/vhYKDEMi2C0C5KHaLYoyhdotglS70w
oAUBztNFhmimyU6WHdTUcd8dsa1eTRlDfWPQb2jtEt+lyQ1NbubhIkyfLk1o
wrypzIHp8rwpz+vCpEANkckVR9vIe+tZa0/e3pODnlPuNxT4iDZJbBX4VpTY
wDQ4dlAShiRhRGDGZX5WV+ZUeUJgRlShz9GaRapMJjoEctSSp2x5XKamZHI3
PIGMvD+rHK9YRwr6mkFuBNqqJa464t6cuQs6RpWdFqk1W1x3pX02v99iD5r0
UZs8kWEO5Lh9Zflg1djli4saNa8x4yLRx6T6QJuY/LSr7C66x+rFE7X8kbx3
KOevuQZ07IMWPYSqi3BLLrfXFo458knPPJ6x9uestaq/3JKfr5UncsFU1lks
uQuBMWmjTcFm8+6oZw27ABpr0jOmXHUxo67lLBCAs7Y6Cd/IBbVijgfGoKsO
OupU3gP6TGSs6awzEzjTlrJqCWsmu5ZTZwK5z2IGHbHPEoYNccpWFxxzMXBm
Mtawrw5klAETxgPirKPPewZcfy1nL2esOVudAlrZyoitDFhKj6V1O0afrQ+p
Aowfxk15RBeBU30C1c0RQyoPL0cBYaYyATcD9wb3XHRHi+ZgRhvN6nNFZ63i
A6o2qsGBqr+vYB0oWcea/eP1zOFmb3/R2hNo61l9X946VPEOwglF+KUbe0v2
7ry17GsrvrFeyOwtBqtZ+GrahCFPmeqMb0775kzWWa0WVmvF5abCTM4fAh1q
WbO53Hw2t5YLDtcKx1qrR1or67XccslbqvqrLdm9XZVD/fXjQ+3HB9pO9Nfv
GO48M9F192zXQ+vDD64P37PUffdq94MHxh49PgUs+PDjh37r2ZO//7Gzf/PV
F1//1hcu/dNXfvSzv/rnze9e/uXPtn5x8ecXXgOddH3zxrWtX9y48cvNrRvX
4N+bW2/euPTWjYu/uH7xxtbFN9/YfPPNzTfe2Ly2dfHSpZ9uRXsyXrt47cbP
N6/9+MqV7//0tb/79jdf/Ys//eSrX3jh1c8/88rL7/nibz/2ex994FMfuPMT
z578MNDqiUMvPnbgQ48ffPHxgx98dD9oq2fP7X767NrT969B45lzu599YPdz
5/Y8c9/u9921+t67QGGtPHV6+R0W5Vo8enzmwSMT5w6On10fPbM6eHKucXSy
7fB4/cBI877B2t6BpvX+6p4+0FaVtW5AVXm1qwQ+rHaL/GJnEe3YWA/QeuGa
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
r0/pC2gwaVXoOIc1Mc4kEBD0rACUxxp5JspRNQxeTbtqWSdQu1EkYiLeoXND
AWUUPl34xDE3N+nhxwBebhY+LfQo8IGBBk4NGMywhxv18hAjPmHEww25uWGD
7dOplOzqlPAu+CdTyWGDnvIJ0wFxwuCmvfysX5wJStNBYTLATQTYKR83olN9
Cg4vNR0xTFr5+z3coI+fLXbvrQ4eqcs/FA0dqPLsLTeO1PhPxIqOxgqWasLz
lYH5aP6uWOme1qrFRDlwaiZWOBsvBFrtaC85OFh1bKrxtl3tdx3qe/j0BOia
F588/cvXH//zv7186b1fL1/8/crFP60v/+3a6vvrax+vrV+22tZbhPr0s1UY
0w8Rsz4FYbXyCcoHXvnsM4DUpfX1i599dhUeokvB65dXr11eu3ZxeRVlApev
vvn+337+h9++9LM3nvjnlx967bnzQMnvPX3Lc48e/vq9e75ydu6RM1PAKXRu
dWLEOrcCeQXMsrBlKSzQVnfu7z63tw9oZckrKwcIkErnBmFuXrxCPUSOjMQO
DDTs6a4BYM23lk/Fi0BejdbnQwzXgbzKG6zOQ8CqCPVWhnogKkKWvErTykoJ
WlnBtM6KBQUAVqOfawoJDUGx3i8CsCo0tlSmTVo5vViu26xNpzlyNYdDczp1
F2wp8HkYB20VZMkwOrciQjweAFqhmoF2gwBa2f9bWlmQugFYN6DKevIXQIYM
7ZxtuxVsNgBrO5OFRj4nY+uIiu7aM9NVbdPtQiDSMEItHU0eWesQHmwTWAQK
lAyEdasjyda2I5vtutI0SXv2tmYCeRs6tJLNfKB5d3h7mlkmH20ATSsZCAG0
ikh0nkhZwEI3AigH/Igb7BbWodXWuwBpSKUdGhs1GM0C+IbZW9ntMEezyTKM
KLFp3fy1Zxl2dCKp5ZiXsEwPydbLaP/9/egcdOCl51h9vhCwkLzKzSp2ZlUR
OU2sHbaFYTeNqgWWGkcq9cNV8v4KZalMXSzRJ/P1/qDe6pYrWLKAxDyoaZRT
JXCNImQCY3JtotOhEbibIrwkCWAKYUQeQYUxPGR35bmwAooooukIiUeQnnIF
XXa/IyeE2dFZFfIb24OuXHhLhi0j4LDlEc48a92ZC2TMxx0lmCPKEDGBSXBU
kiWTQC7SGcNzm1y2Jld2vTO7Afni7I2Mq0WkujWxWxU6RLKdxdsYrIV2tAFK
RBAOWJLNTTK5LayjXQCJxKDUlsG1K0yzRMR5PMYT9ayrUSBbdbHDp7a6BZBX
7TrXrrPNEtmhssC1Lo3rVNhule8E3LBYiid7Qc2xeJ9EDWlst0y2I/3CxEWm
TmRqeLqCocoovBTHynBXJYFXEa5ayhnnyXaN7/LIoATh1wEcgHgBWqG8oqmt
+j2sSSu5z40SgBBWAtBCVSuHwwQgNehVIDa/yoC2Ahh1uoWUV27R+aTKtehC
UmETMpM0bzClDK7bzfd4gDtKlxv99ARHxhi8hSc7Fb4VXlkgLL0GxOxSIdAx
GToIUzl4wx26kDJEK2CeEEhLISZMa0cd46plXFEerwc+Ksgw3+oW2z1Sh872
gXr1K2M+aUznRxV6VCFHAU8a2YPkEjak0xMAnYg6FVbHg+pEWJvM02Ey5BX7
daZTBsmJpRQStNgQfLtHmPKJ015xys3NeLm5oLAQFOF/7HyYnwtxMyEeZNew
mxn1CZMhbTJiwP9b+DOaOVVqNMjNFyj7q32nk0VnWkrPtJad664721t3vLVy
V33+fF3+znjprpaK2VjRVENkojE8kyhYbAZaFe3rKz85F7/nSP9Xbp955oED
rz177hevP/7mr1/68K8/Xf7w91c/+uOVj/+8duXdaysfraNW9VfWrl3ZSiuY
mMnAFTNQPnAdKSzA01XU4uqTKxCffbYMsbp6aWX98sq1y6vrHwOtVlf+trry
54/f/81f/vMHv/qXr//La4/84IXz33/m7CtfP/PCYzd/8769Xzu/+OjtM0Cr
e44NWQHAsgLm14G1H51bXdg3cIO8Sp9eWSunF9pvmW1Bp1ej8UNDTXt7o7u7
qhfbq2abSyeaEKpG6j5Pq8pQX2W4F6ICAcuSV22FbissbFnAMkMxywmKwKxY
GHkwGgJS1MtX6hzQKt+she7F7GiXc8HG7nBjLvgw7CEwE1VEgCFCLBniAFhA
KyLAYmY99lyTVrk34MZyEqaBtZVZ1pEWZ8sEYG0VX+nvNSOLs2VYkIJxa9yA
MD43E51w5dwkWVdf0aEb6tWom222UNKPcvhAYZkNkRF3nOhemG7qJkCtG8/d
yGc6s7caHjZex8wBptudpBVW+m5U+txK3ASWJa+2Mss6wLJSgshxATpLIEPm
3zBNK0tebRyQbbkCkM4Q3lAYJI1RK1dpNRdzu8wA8Wja5mE0UAswq7guctFb
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
NAYyKqxNhPUxs+hfv44uW414hVGfACSCNwMUmwiA1JIXCo35Eu9IRB6AhwX6
Yrl/B0Spd09F8FBd4bF4+cnWmmMtVfsaCuYrvVNF2t4q38Fq78Fo6Oam4uPJ
8kNNJUvRyGyJe7bE2FnlWar1HYwGDkZ9B2vde+v9hztKT4/EbptsOTWWPDYa
PzoaOzIaOzTScGA4esscoKr38TMT37531yuPHXn9iVvf+Mb5n7305f/4yfNv
/ec/v/e337z//h/e++jNDy7++aPLf7185e2ry++srLy7svzu6iqqTGuKo+tx
o7YyM4EwrllpQHNcRxZB0FYoE3h15QpKBq5dWl394Nrqe2tX/3T5g3/73b++
+IsfPvHjlx7+p3984I3n7v7+03e88uSt33ns2LMPHXjq7l1fvXP+sdtnUGkL
hKrR9JXh9A2sCweRtrqwv/+8qa0AWGkr+2YJpg1U3bqj49TMxtHV4eH4oaG4
SavoUk/97q5609BePhUrm2gsmWwqGW8qHWuEQMCy8oFp00Xad2GVuego9qRK
3B1mD8fWIneiQI+FkLyqBm0FuknlUD9fBg8DsBjMRzlBWwXQ/SAqX2FMYSWY
tJLLvWKZRyg22AKFzJNAYeFehvRQhGFe+dRwp0Y4LXJZ9SvSVSy2XiKWHCaY
LGPz5z0Yot08zLLnirkWsGwmp2BEc4CUGYhfCFgZAK/NrGDmNto85LICmAWx
eea1jcneztq2MxsttL7Eoxrv2wT7ps5yZlrkgpX0feSN0rL/R8cF7P+S1Qj4
8z5ACOQANDl1A60U1HryehOrtKnDjM8dlm2tyGQVtJdvKHHvyNjqY7yhnPvn
ajRtLdP0+W6SaWbdCCzUChPksE1C/zQ21Z6r2XP03CyvLSuYs60A0Sozwef2
GuRokJ8tAlrJO8skoNVsHjsdoGYCzLyf3Rnk94SFA/nikQL5SKF0tIA/EuGX
AtzOgDim0ymRjAl0BUcHCcxP016a8ZnaqpBni3m6nKOrGbKOJusZuoFjGzjG
RBVZS5E1wCkCswIeRhmygSMTEhFDbS+cDZKrUSFjOhM3uCaZSKgmcRgsJXED
hjro1VtVEZRaHUs2sFScoxMM1YS7YhTWwlFtIqrImkSeCqpZYSBgkpSoFnMb
73RzKYNuU3GAVJcXVshWydGhOXu8dE+Ab3ML7W651RCTCofc4Ah5qOYejKiW
kcolzL6BTTLdoAkNHqkJhdAe1obL/RPV4bFy70Ch2h9RekNyl19qd4txQBWH
3ICtCpsyxD6/BupvrMA3Xujr84qoqJEA79nRJjg7ZQK5LDRkq+hG9XvFQbOu
BSgskD8mrfgejevR+V7NvCMMPNLwLlT2gUipwEGmE/XUEJolsk2h2zXKtPkB
qvAeBZsI8FOw/wcE0DhjXn7Eyw8hHYcu8AIWER+98oBPHfIbI355yMsCTfp1
atDDWtGnkV2Sq1vGezViwM0OeblBN0hvZjYkLuRJswFQUsycl1vwibNuNM77
xDm/tJin7Sj2LBZ7Z9Fxkm86Hx1RjQbhp0ijQXk6T5+J6FN56nRImQnJM3ny
YqGxq9S3VBlarA5MFRtzZd7FSv98mWdnReBAtOBQfdHNifITbTVHWyr3NBbO
VgUmS4w9ld59Fe591f6jTQUnWytPtFYfb61eiubtrgkuRYP76gKH6vyHo95D
UffhZP6J/prbJpK3z7TdMpY4OFC/rz96cLjh2FT89HzrPYf7H7916uvn5p+/
b9crjx750dfP/fS5B3792pNv/urlt9/86fvv/vb9D9987+Kf37v8l4+uvHVp
+W9XV95ZXX1ndQXRanXVNLFv2gJhYiUDP3eMZWUCTWCZ8mrF1FYrpra6dPkq
fAvw68ra2ofX1t5ZufSfH73zq3/98TM/fuXRN75z/4++c/8bz9/9/a/f/vJT
tz7/2NFvPbT/yXt2ffXC4mNn5x65bfqBU+P3nxx76PTEQ6fHH0JSa4NW5w/1
XTgwmNZWML9zqff23V237+o8s9MsvrSj4/Riu5kM7Dw9n7pluvXm8eSREaBV
bF9f/Z7u2r29DQAskFdAq+l4GcirqXjZRKx0zATWaEMxAMtC1WBtvpUVNJ3t
wa4yv3mM5e20araXeEBqJQu0WFhtDMk1HnTlqlhh8kUqjyUQsBgcJQNpJ5Ao
T6QKFbZY48vcUqlbgCj3ShU+sdwLaovMVzBkDuRIP0N5acJD4cAsgzCxhTk0
DGUIEb8g4CHuVBGtEKREq+AtoGrD3G5WtQXBZVosOFummJtjAitHyAFOgbDK
hgkEl40qw6PRhkY2M5POymBMWsGIJNVmAKrwbf9AALMAWFkWrTJp2zY6+x8Y
GyrkzuVu41EjkgweiOPKQpXeUcn3DNYs9s5lg/a5ySpdi05t0J5/Xezoro0T
IrPaLerW8UWXhW7eDrbcgCanUMcQy2Wx1QO/MdrQSZm4WbVeMX8W0nGmntoo
br/Ro8okkXm/zKp4v1l/yWzyiFi2UVpw4/m51rhREh+N2Rt9VZQttW2t+9Fp
bJlF3YHgWegfBT5L2G1Kbo6aa9NyMj2orsW2iGNbBZ4Z53N6LFoVSzsrNADW
Yok8F+Zm/PRCgN0VYpdC3OGIcKJIPlUknSoSby0STheJx/KEowXq7qA05uG7
3WKTKhSiypOEhyS9JBk0aVUmsBU8UycwjTwDtIrSBICpEnOUO+2VLgdIqmrC
BcwCeNWxVB0LuzqVEPCEgMUkPKbgTQreIOP1kivKOep5Z1wkkYOCcbWysGdK
bbqcUIEFfANDNVCuJhpvZqgOiesQ2RaebEd3mqROQ2qV2WaJalWoVpkC3QHC
qsvDpTS6QyU6DbpDwzp1rEvDOzVnt4H3B/iUR2zXxSSoJw6PMq56Dkcud2QX
pGMKE4fQuITOx3W+VmWqFKZKpioELKpRbWGpM0/pzpP6C9S+iDIQ0YcKfEMF
/p6AkXKj60s9XqXPr0MMBtzjhf7ZsrzposBQQO6UkV+iW6V60RES3WtcP6sa
8GxUtNg0BArdKvJgIM+5Atii+wxUMa9TxVMq2aHRXR6gFZ8UcaBVJ7waEMdN
Qwy6qRE3NeahJ0ARm3dpB3WmT4N1ftAjDLhFQNWgXxkNuyciABRjIiiP+0H4
8ON+HmTRmB/QxvSpeL9GDBn0iJeFFXiRIYMCSTUbZKe85KROLnj5XUF5Z0Da
FVQXAvJCUNlRYCyWeOfN7NxERJ/MR2WRAFtT+d6pfPdsoWcu35gCbPnF+bCy
VOI5XBM63lBwqC5vocq3uz5yS6r6dGft3mjejnLf7uow6KzdNXm76/IXasNT
Fb6REmO0UN1Rqu8pM5YqvEvVgaWa0P76gkOxkkPxokOJoqPJwuOtJbd2lJ3r
rbxnKHphtOnMaOzUSOzkSNOxkabDw41HRpqOTyVh937g5tFv3b37Hx869MKD
+7775f2vfe3EG0+d+9kLj/z7G8/+6devv/Onn3/w7u8+uvjnD6789aOrb11c
eWd57d3V9ffW19+9du39tbWPVlYurqxdSvvYLW219crVNSsTeA1lAleBUJ+u
WhMYQVitrC0vX/vs8vLy1asffLL6t7+v/ufK+79474+vvf7CfS9+49yrz933
oxcffP35C68+e+a7Tx9//vEjzzxy8Kn79jx+147Hzs8/cnbmwdsnHzgNwBq5
7+Tw/adGIO49MXT3zf1m/cD+O/f1nd3fe+5A/52grfb13bbUc9vu7lt3dZ1a
7Dy1mDq50HFyIXV6HuYdt8y3HQNgTSQPjjTtH6jb2xvd21sHCmtnZ818W8V0
c8lEomQiXjrehCyC400lY42FI/WFw3X5Q9GCoWhkoCbSXw3yKmi2HkZ9G1Ol
3u5SX3ept6sUiay2Ii0ZkZvyxHo/6idSodFFMpnP4REAFuqZ6AKFFWaJiAjr
DCivMkOqcPNVXq7GL0YDYq2frzCoEgUrFIk8gQ6ylA+1AwZRhnkp3EO4rHDj
Tjfm0DHkIddcdt2Vo5nl+FR0hpKjOHJVZ85GjUHzYIsHWpl1cQU7TLJ41Lgk
g8vNhLnoyObtWWjRXEcdRlBLLKSYTAxlUtmZqCV6VgaRud2MbXjGTTCixczt
VFYGDTjLRvIKOTdsoLC2c+a3m6+Waf44WMk0b3XBunnVK3s7b9vG2zIEVOsp
U8jJUFGjkxwNM+9EO21SbhYsmmhAd4S3hmLP0MyDKsMyrltpQEe2CaNsOQcV
urdsDDCa3nsgkXlUhMYsmIu5WWJupjlmoHL05pcEWwYP34XekrliPgfeBnpB
67tsmUK29bIZ1kOr17Dl6rdYZlHPBJnFODOZifiIOpSZoITIEO2ZPGpVbFNQ
J0pztGUY9gyvMzPkyighM+rZnJSGjfm5+Yi4p1TZW6buKuQXQuRikNwTovaF
qEMh5kQBd6ZEvqNUvqOEP1vCw3hHoXBbsXQwxE3qsM2yzZpQKbAFNB0mIah8
kiihiSqOigpUI9BKoBp4qpbBKnFHmctW4sgux3KqaVcN7YLFKEvUAhpgZLB6
xtnE4zGZjCtUg4hHOWcNY69lXHUshnpPoAMgIg5SRaDjPOgmzuo8m+AQyNoV
rkuXOlS2WSBaJaoLdniv3OOVO3SuWSaTMtJW7QaX8vCoU5JB9/qFHh/f5+N7
vVyn6QYf8Es9PrnTEFpEChX0I1HnpqRIdOhCl1fu9iqdbrFV5VoUeB0xprKW
D6SCcdWIeNxg231Sm1dsNrikxiZ1tt0jpXxayqu2oRp9HECw0yv3B42RPN9o
vm8i37ejPH+2KDgeMsZ88ghKrIlDbmAHOkga8EjDfmUkqA0H1AGv1O9BtnMA
WY/OoQu8ADiR6FTIXh3kGN6pYCgfqAC2qE6V7pBQpdwUqlzk6lOJQTc97GVH
/cIIoCcgTIRliGEfUI/o0cg+g0Xh5ga8wmhYmy7yzRR6pyPGZFgd9YvDZk2k
sYAE8yEPZz0cD8qT8MyIPleg7yjQFyLyLHzU8XHzAXFHSIbYGdF25sO6OhdG
cmlHiWe+0JjJN2aLPLPFvpkC73SeZzJkgLaaDqqovrqXmQpwS2X6iabw7W3F
t7aXHk4WHWkuPdFWfqyl7HBjwcH6yNFYyc2J0kONhbuqQ/PlnqlifbhAHomI
0/nqjmL3rjLvzjLPfKmxuyZ0OFF8PFV5vLPiRFfF7YN1d0/G719ofWhnxwPz
qfOT7aeGmo73RY8P1R8fbbx5tP74ZNP5fd2PnZl67qH9Lz9x4tWnT73y9MmX
nzz9+jfv+vGLj/7mn7795m9efefPP7/0wR9Wrr599erbV66+s7z63sr6h2vr
H69f+3gdnTRdXDY5dYO2QrertnraN7XVuimp0IhiGWkr1EX4/766dm3l6nv/
e+XN/2ftt6tv/+A/f/LkM1+++amHjn33W/e+/uLD33/+/KvPn/neN48+/7Wj
zz52+KkH9j5+z86v3LXwyLnZh++cvv/M2D2nhu49PXjf6YH7zgzdf3rw3hP9
dx3tP3+4/+yB3jv2d9+xH5g1cMf+3tv39p7Z3Xt6V8/JHV0nF7tOLKSOz3ec
WEBxbK715pnmo5OJQ6ONB4bqAFj7+hGzdndXL6YqZtrLJ5pLxpqLxuNFE42F
gKrRhgKIEVSaKTKMygnmDdaG+6uDfVWBngpfV5kHINVT6u8p83WXeTpLjfZi
pSVfTEaE+gBT66WrDKpMJgt5vIDB82iUDwSFFWHJAoECWpVpfKXBgwqLelGB
QdSIxM/VGGSF7CqW8AKJCbFkgMb9FBaEkcZgAtjykU4v4fTgqPGiGzW0spme
6hw3huSGjqOiGbozB2HLhQSXkGsDWqFTEleO6MzmHZmCAzVhNHsyZorOLMFc
gdHURGidQ32vtjM5WVRONmXLIrMziexMPCsDy9iGZW7HMzOIrAx4CCOsU1nI
m4H8hOgMK4PbdBhafvi0Z54zD7k4G/JmwJMRvzbudsFipoLZIdKXmoGq8FUB
cJO7XTBPu9IV2q3rvZZf/brlD0Rljg2kigS/aQ7MAVhZJmWyrLmIerVkidlo
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
KHpdqn6fDlDV41KNFdrmKn1TpU6Y93m1vW5Vp03WDcByKbtssk4j02UQ9Vqk
8MU+HbZOBEzgQd1GpkMnbFERMIK1Dbu1oHIDTtVI0Ah3hT99tAC+5434DuGe
MWQBZAPwXRc0jwbhTmyDXnOvQ9tlZqvuQeIcACwV4GlHqXN7sW0iqEfnbhQY
J+Ct/HqkOU70AhjjXrhuAlTBxR6LpAv+TqzSQadywKMe8Kj63Yp4QDtRaB4p
0EbtogGvvM8taTfxR0KqlbbQUrN/rsIyHtLHfbq4Xz8RMs+VOLeXOWeKLXG/
ZsCtGHQrRwLaqULjbLF1rsw6Xmjs96kGfOp+r2rIqxzxqycKdBMh7VhQvaPa
vrc1uNJdeHSwfC1efXS4crkjdKi76Ghf6ZH+stVY6Upf6Up/6aHR2lM7uy4c
iJ9ZHgSTWhqvX5psPDTfdXRX39riwBMHxi6u7/jGU0svnDvw0oVDr79w8off
ufQf//rCr//jW3/6/Q8+eu8//vrhr6998qdr1/58/fpfbt788LPPrmJgYVQh
vbp388G9zx/c//zvKAfIpgH//r+51T9awGJ3B9+8c++TO3c/vH/vvU+u/vy5
p/d1VJvCpuyIIaPCyql1Cpp88g5Q2vbaJ/bs+Na5x1977tQrV46+9vyR164c
RktXZ3ZePjUFYnVmJYa2WR0aPHt49OljE0+vz5xbnzx3bOzpo6NPHRp+YnXw
9HLfyaXYCQDWrk4ErO2tB2eaD6ODGpuPzDavzSG3OjzVvDJavzSMgLXYX7nQ
U7Gzu2y+qxgMa76rHIA1214811EEwQIrPNkcGW8sAMMaqw8OVvr6K8CwPAlg
gVv1FFkBVd1Ir6zdEUtbQI/6sTtUVWZpqU4MerUJLB7GUwJSrEaxnFJQeF4A
c3hKQaF1KAXB5vf4CTY9giocHoCUPNmtSCcLKSdI1ia2QLWAWXYxKn13iAin
kO9E32ZsCEkHg46GBBiZWJNKAAsIBWETk3YJBSN+iF+AX5NglkmwUaeBe+0m
iuEBWHhE8MpFp5nI8tOZ/DTUWTc/nR3xPI3JTRXmpkBsnLGVuYU9qBGNwswt
NBpTBeAv6UhM2EWlFGLbNhSp23BK8JGmGXgb8hdi46yQ1MQm4kQX3ORetYkC
eFAw4UPoPLrH+R+143ika0ci2bixqytRc8j2y0VulZouSksXpqejI13ys6Sc
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
pMC21Dt6BVzA2gWMAM+qAeURkp0CEryxUkCqkyKyuJVZGIvtegF0+ot1o46c
vmKt1yR2A5W07EYNq0YGfz6lVk53KTPrVUyIJsCNnufR8TBV4bvgo7DKQQAl
d68KfQUcurWsFj23ScdugPeq2fB3wRW2avkQHiWnVc3z6iQBgzxgkLRpeWBe
gKduiwzANFys6zJLfAZ+l1kKAZwaKFT3F6jg1YBJ3Gbk1ysZThEClktObcnO
as/h9BRIp2tyD/ntKy35/SXSgVL5Vlf5xRnPEwc7nz3U/+TB7iuL3u0x90Jb
8UxTwbynZLKhgIii0dq83nJjb7kBOpP1BWM15p5ijd8qBVQNlekHyw1T9XlL
Xvui1z7bXjLrLZoLlBwcrT0y03xstu3Egvfiob4nT009dnLyHNBqrfv0eu+V
Y+NPnJl96vzis5fXfv/Y4VefOvnW7869+9LF91++8v6r1957/doHbz35yfvP
/eGDFz795OXPP33t66/e/f4fn9z46YsbN5FY3b6NJ61+2NWrXzKB/9fc6t7N
+/dv3bn/06273969+7dbP/7xh2/e+PSdC49vD4/58+qLeM1lsskux8GxlrUJ
73i36/Cc9/R615nN3lOb/dub/WeODF88OXH19My109OPnRy7fHzw1EpgdaRq
rM3S06DrbcqZ6CxZGa09PNuM8oGgVxMN66N1gKrlASdw6uBg9dpgNejVwQGI
yrX+CgDWYlfpXKB41ofcaqzZNtxoJoCVN9aMgWXFAYO7koWygn21CFjdTgPo
lbdUC8DyFCpb8uSNZnGdkSi+RExa2eWMEmnmXrfCYUGBxCqPT8OBgQWBDQtN
XRHzVmpqItBKTf8nYP0aVSgTyIAzk9XUZDU9WUVDpZygVVHRHiIKMkQ8DllG
nJyEijjJUsGtEn9Nq71u9e9oFZy32juTJUhLeAhPWKYeCrQMg2iBRKj95+AB
p1CBehTCNLgM9DSrOCNJkI6AxUsFxUNPdeE9kRmxaDEGJRw4tS8jFNzq0TTQ
mQO7GT+ism7QsPYmA3EEfQrwhCN4uHf2ChQM0Aa0QuWbQv9FBD8w+C17cYbr
9z60pfIvboW2Pw5mAtHzVkCrhNBHwK0yQv+DceA/+CH/kR0TZk+LbaAmtGSl
eNjJbma8ixbZQAlrpka2MeJa6PGNjMQKRlIePTGbmqChJBhpqbqMBFVqrI6c
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
fhpALQ5F6i9utYutneCiGas4TjLhVviZrN3aF1kJUczdkhcQqAgGkCs5hgXc
BGYBJdG3oN3BUK34xChefCQnJowTHcaOCmFFhAC5qKgaYSg1OpQRi3bdYsSg
gvB0oqVGh1GiQtFOxxEhlPD9lIgQoj58CCViP7FUI4Qougud/SRwq9BH00P2
QZsW8giQKC1yfypCz760iP0Q6ZEHIFKhH4leAirttOH7ITLC9qWHPZoRhgpx
oBb6xCBqYYQYTEcd+CIQOlCwkIzwMEzA9Igw9N7Q32SGPcIPe0QWtT8nKaqI
FFNJj3Gzkzyc5DZ2go+T5OWmtLCTapnxjsz4AlqciZaYk5lm4tJtwCB2Bvwi
yudRbVyKlYM66NeRmAkuD22ZHJSfa5exS6QsC5tkZBBPpjPQjiG5tOQcakIu
NdFKT0ZzVey0CgHdKWIAXOyc9GJWcjEnpYSTYuemlQvI1TKUMXOpMhu1rBYD
z5MjQI+O5vD9VqnHKKxXs6tkDIgaeWaNnOlSsmoVTBSAMCmwiVKBprcygWUO
Mb1CnOkQMZxiOuCsTsF0qbMatKxGXVaLgdOWK2jN4bYZOT6LoN0EcGG7dSyP
kRvIk/aWaPpLtT3F6u5CZWeBorNA3pmv6CI6faXqEXSXzhmu0PcWqzrAPqwS
v03qt8n8VnnApgjYlH6roi1X0mIEuPBbjNwmAwewBZ1Wk7DdIkR/Tg7XZxV3
Fiq8FrFbz67XMN3ZnCY9F/7YJj2nKTvLaxGOVhnGqgxeq6BGQa6SkVr0cGFy
hEKLxGsCiZOACrUaeGgRBfxFaqZbkwUjwJS2HAGMe4jxOjm1TkFza9FLgJ7e
QjW0yI8KNT15yg6zrN0gbM0WtBn4fou4t1QJf9pknWkGdMZlG6kwdBcpOvNl
cKntZhH8jfBP0Vui7S1W9xSp+u3o32HaZZ5158035c23FEzW547UZA/XZI+h
Z3gNi+0FZyYbLy22nV9oOTZaN9Nq63Iouh3KiSbrfHvpjKdkuql0utk+XFvQ
UaL3Fmk7y/T91bkDNeY+Z05/lWmsMX/SUzTWVDCKJvoLht35k+0lm2NNJxb8
h6ZaTix0nFzuPL3Wc3lr9PHtqcdPTV89Pnlpa/z8oZGzm8PgVs9fXX/lqa2X
njzy2nMn33zp3Bsvnnn9xbOvvnj29ZcuAK3ef/upTz584U+fvvr1V+9+9+0f
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
ylMQ81aXBLNlZdk1hGxhWZaQkC0qQ5XbxaVZcEUCzCoGPGVJizJBwWqKMwFY
stKsWkJWLTyhKENYkM7PS+XlpXNQb+JEhKHcNGZuOj03tRrLBmRiB4pZfy2R
8TywMpNQxgU6sZVCy0lG6e45KFcQpQuuPEzGKzthtXMTK1FdQSBUYrxYLj6W
pa4npifEixBiFXQBQ3g+RjIWKwmBKIk9HfCUuJqJgREtfaXT8VqgxMVnrbit
5l08v2YYn6xd7ltLK/x94t63tufXCgdxUOKQwqptVGRgfS1X6vpiPZTx35ic
QEjCgJWSUJaMfinQqjxlAzllHT11HTf1X9LNL+q2JtpKM1orMtspGYhWldl2
UnYjuFVFjrGysJFBNNBQEoWJXmplE5s45Y3MsgZqEQBLQ85HtW0peXpKvola
CG5lrMxrBMPiVwQUzD69aNBUE4P7rZYba+CHwSAUdLzoa0jDhtssVnUW5WPg
xcDDWtZ0q2y+q26HX7vUDbdiaUhDbxOXO/kEp4Dg4BHtrLJmFqGVV+mpqfbX
VQcVqGlvoL46qmVj1ZDoeKIFTqvOWopXWe1V0rrrq7sVjPaaSjuX0MIngmcB
qgattb0mCQDLW88E4fLWswBYPQZhVMN1S8kAKZ+ChtLjxeX4eaiwhgXoxFtc
DTaK94ZtJ8Y8hwc7ptq1XUo6KFUXln3nlJI7sXNMHTUUj4wKqOpVcYP1DJ+a
4W9gR8yCAbsUxKS3UQjgC2Cl3cHj4I/graWGFLQeLa9fL+rTS3p04lgDqiTf
YxD1GMU9RtGwrW6b17AjZJnp0g7aZYCSIbts0qWebKnvM4rwhPyojocHmJpf
yewxCQFA/ZaaoI4LYtWFfTDAVgStzdaNu1SArYEmGdgWRL9VCqgad6omW1VI
dTu12/ymXTH7jphtxm+Y7NZN+/TjXZohl7zfVjNgq4GvHJOt6oEmRahB7Fay
vRqUxz7kUI60qYfbNQNtqkizLGiTDHq0833N24dbQZH2TnUfXYwCg44vRc7s
7j2/v//srtjJ7eEzu3suHh558/Qclv43fnbvwKkdvWd2D5zfP3xsKQovHA83
Tfe07J32HdvRj4nV9NkDU2cOTp0/MvvK8W2XTi29dmb3Wy/tA1S9c/HwWxcP
w/g2BLjVO+e++ezytW/e/em793+++uGvP35246cvbv/y9d2bVx/e/XH53s+P
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
pLD+Sqt4aXe8ai52+ngLrzCDU7CZlZfGwM4aA7AYq4eO8ajOxg5nZaNGWtTM
ZHI27laJeACY4g9JGYCDBBjJmXi3YrxtcdJqJK40LM5I+ouwrALl73r1f+9W
8df+PT1j7cvj1FuhFbbQB2McVfgIAVfiF/GHZOxKRWoCOTUBI9dGFOkw30hJ
TaClb2CnrRemrZNvWW/ITWop3dxRkemuzPJU5XZV5Tkrc5tIW03lOQZyvpFa
3IAa/hZoKfmIVtQCI62oiVVhri4zUIuBVmgNkAqcKjBQco3krSZKnoWab6su
dDBLXWxCu4DUJqxw8gjN7JImJmpb38IptWOtrBxcgreuGu9gC0SbbFHsDRr2
R4yHe5uO9DXvh+/kLkVEx8X7gKCmiuJKl4DsElDAszpEJLeEBG6FbvhYgXQI
VLlCQfPW03pMgtGWupHm2n6LeNguG7LJfCqGV0kPNwCheDDxKGgBDQvlYGg5
MPGrmRAwWXDrIaZalT0GvkdO9WD12FdQaJEAFvuNgtEm6bhNNtOmGXXU95rF
010NJyZ85+YjBwfbB1vk7bVUlHQhIXmkVFTgXUxuRfV7CZ11lKCW2WsW9MN9
HmRNyw7UIzHs1XF6URYiE6JHw+k3iAaM0l69BGiF2h+jVUqUjBE1CMacCuDU
7qhtR7Bxyq0ZcdWPOJXT7doxp7LHJALuhDQc+OsCVrprq0CvwLMGGmtGmmon
nMo+Sw2uV3i+OvjUSIsiahRC9JjFQKs5t+HIUOeZSf+OoAX+6oaaZYOOuvEO
9aRbO9xeP9gqB2aNdarHOlRAq0G7FPSq3yrttypijfKgocanE3obxOFGWbRF
PuE1T8Gb+Ix9gDafYWHQtWfSvX/Gc3TJDxoFnHrj9NxbZ7ddPDZ1Zv/QGVSZ
duLi0anLJ0CsFj+6sPvTV/d98NLON09te/3k7KvHps/vHz21a+jEzkEA1tEd
g8d2Dp/cM3Z2//QrxxYundr+6pntl8/teuOlfW++vP+tSwffu3zso7dOg1hd
+eiVq1+99e2VN7798s1r373367VPfrt25cZPX96+/vX9G1cf3LmGlgEf/PLo
4W+PHyJaPXkCsLj/7Bmg6sEzTKz+B90qnv3+9xLuT7CEQGwF8jbmVvdWaYXG
x8toMRDp1YObDwFYD6/fu/vj3Xvf3vz1w2tXL/xw5dg7L08sDVtbdVTQK3sd
tdtaM+wzjEUa+/3qWGdtX5d8xKueCOmnIkZ80Q/YBLTq71LgwIpL1rBPNeSr
H/LWDwHjIDz1o576Ca8KaDXaUTfoqulrFsUs3KiRFTFzoxZ+pJEXNnODBhYC
lo7uxTjVDValrvKgoHWpqZ3q6g4No0PL6mpge03ccCM/YuPHmgVRGz/UyO7W
0jvqqS4ZuUlIMHGKAFJ6epGBXmQEWrELzZxiC6+0SVBmE+KGBbSCKMdGlHFh
ExIBZwAsE6tUTy/Ay7mrKHmKily0/QT2VIYwhFYCiZmicrQSKC3LkiC3ypQR
AWQQmTiqasvQjlUdIUtOzJYTcuqwrEI8YxDPuOCCIuWkc7diMNqKWg9jqHo+
vwJvUhxHFSr3VJCJTnsVbeEUpDPzUD48PScJAibxOWpTkg2xiYZ1fvyzKO5q
UXesxjuaV2wBVCVg40asZzHepiQRjz9bQK65gi0hJmKJ8ckVf91Oeo5l/86t
nktHjENqrXA9R8a/LwbinIIAHqHlvtSN2FpfAkzAodB1+ClgC+CVvomSvpGc
vpGUllCeBpK1oTx1AyVtPT19PTf9RXH6v+oz1pvykhzELZ1kcKtsLy2/m17Y
XlXQQs5rrMg1kwut1QQzrdRYBVFkxNqCNDJKm7kUK7O8kVZqohaZgF+UfAMp
rwGlEW5tohXZ6cVN9MJmepGDUdLMLLZWF5grtxopOY1VuTZ6oYNT5uQSHOxS
iDZ+OQQ87JbR+vTCaYdsp1e3O2DcEzAditl2+RtHbbU9BmGsASSI3VWLqgu2
SigdNVScVj55FdCqB+uWiC/W+eur/So6QGrcqQBORQ08IFdfowgmMSMvagCl
YuGpHXARzAsCnjxglfRbRPBMeNVcl26bRw+v9aFG8zTwLLT6Z68dAb0yCgA0
IxbJeJNs2FIzjEBQP9GqnukEGbEeGu48MupeDFiH7HVBVPaW4aultQsrWthF
Dl6JS1TqVVTG9OwBM79Xzw6r6X4FNaikRVT0Hi0zpmX26Fi9DSglI6YFnNVE
NAKs+QjVI6/GUwdjRsGIA9u9CluXQpZpd8NIq2qiQzPiqA8bBCCMbSCJeEhI
AKywGtnWUKMU5As+JMAFBxa++ge0wlMBAWS4YcGVcZdqyF4LfzOhBk5Qz5lo
V+0ZcOwZdM4GjKOdKvCsMeBXh3rcpYC/sahR1NuoCJvq/Loat1rg1vD9JmnE
Lh/u1I93m4e79f1dmiGvfra3eWnIdWJ75KV9fS8dHLh4dOKdl7d/cnn/J68f
euPc9osn5i6dnL94bO7V43Nvnl748OWdn1zc+/55oNXC6ye3XT4x98qhiTP7
Rs7sHTu1e/To9sFDi33Hdo6cOzD7yrHFCyeWLp3Z/tp5ZFWvv7zvrQv730HV
lk5+/O6Zrz679OM371z98q1vvnrrh6vv/3zt419//vzmT1/f+eXb+ze+f3jn
GnKr+789fnDjyfLtp4/vorW4Jw9/f/roj98f/Y6VtP3v0Oq5Yhdxq1rbjBh/
n8cgVs/gVwOtbqGmIX+uBD5AevUI3Oru8sM7yw9vP3h4A4B19/7P9x/8dOvm
59d/uHT9uzNfvb/rzL5AxCk0S4oMgmKHihFrVw4HjQOBhh63ItYm6+9U4LtU
eKY6THBOwRhHFVwc8iqHvIrBbsUganwvH+qqG+6Sj3kUY27FaEftUKu0v0Xc
Y+XFTOxoIy9mFeDACpk4AQML9Kob+RStG2NWl4oKzIKxQ0lrVzHa1AhYHj07
YOKEm7hROz9mR7QCHetUVrpkJLuI2MgtMTIAWMVGJohVkYldZOaUWHglwCMM
WGV2EaFFQnTUlGNjBZbNjvIDm1B+IACrWE9H1XEBWOBWdQhGmTJQJ5RTkSku
R4uBYsKWGkKGhJgBo5SYKSNkyEpBrDbLytBiIDyEV9VClGXLSrNrSlGWOwIW
VvWCD7q0FcbNgrwtMLJXCIVajazNsoiP8W7FEKisbuEWXsFmTh7YWQoTrSIm
MrKTWFtTUGXC7CR4SM9OomdtqkZbWsmVfwVWfILDCw/sYSKW4v7X/o8YpNY+
xID1/Ergf02rNbL2D7EWXs8p21rh+nMhERwQ9ya0yreRmJxQhkrXrivduA4m
hKQNcJGUhp4AqKrckkLdnEjdvIkCCEtHYlWRCrR6sTJ9PWPzBl76esnmF1VZ
CY2FKa3lWZ7KHB8t108v9DKK2qoK7eRcc/lWE6nAxiBa6IRGOtHKJOA9QZp5
pFYhzcGrbGaT7KhcbZmVVtII2CKDVRXY6SUOVpmTVdrGIXYJyU42oam6sLGq
wEzNb6IXNaNMiVIXv6JdSGnlV0A4uUQ7s7RNQOqWVUVUjHFbzahVMmgWTjnk
ky3yngZun1HQizLAuVhvC5ZHQYcbeJeE3CWuQA0+6qhhbGtpwCwatckghptr
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
VMi0MBlrJpLSkpeCDCsHM6wslPIH8+0OIwk7bkWHOe5WWQfw2MEWoKomPQ6C
lhYLAZyC8c/M2rEtnFk4tjCHQlkZACYy6pAVjUPqd7EfHd2qOIAVu8DcqhTb
w8I5hVVnisRphao2IZBFViREVCbsrjwQScTmKKUwfnfp/t3FB3ZjboX1L0bA
gojCDuFuHcVFk/1oLIqLwkY8oorgEbgVUCY2ojQOZTsQoncXYydzS2IjS+Oi
8BEL7DIuEu6UYCl8cAcuS+OjyuJ/e60EH+EFGOPB6cCqgE27YILP8/a9gl2i
O4VoiyoCfQ1Qqn17iyCi9xXG7kOQjUZuVQluFQu02sNNi1bmJRqLUYqFmXxQ
T0xRlSdJS5IEhGReYRKHkLpDq568xO7cAz15B4BWHZn7WYWp/JJMXnE6C14r
ShGCXlVkCMvTNLRCVxfVy6qxtpP6Wom9DSX66jx5ZbqoNFlcmgzk0tHyeuuL
eusJproifU0+XEIYawt0NfkKSpa+vtBIL9IByOiFYEAAFw+bBn/wF23CzQEt
jCNqVMt9TMMYUjQPypogAmK6i0Pt6yI62RQvrwaEK6xomdR3TRuZM70seB98
x8Opgc8J8OoAf3bsWBaMA4KGSX3PokN0yCVdcEvmXeJZlwT+CC945Qse+aJL
DqoFAUYDauPEaj4MytqGFIxBWXtI0RZSteHVekOK1pCsJSgE52oOy1pRXiKv
zsepcTOpXjbNw6FZWZRRQ8+xIcOFacfpMcuSWzoO383CDWsYflGDG0ued7Kq
3RxUK2lA2uqXtvgkzcCpoJoBMjXWyxk1sUP6bgiAKXzDMRvfq2qxiWvdisZ+
TduggTlsFoz1Scf6ZD4l0yZss/CabOJmp7TZLW/1KtsmLJwJCyuk7fBKmz3i
Zreo2calGzopZmYNXAbVHSFtZ1DT3q9o6lc0BtVNYU3biLFr0sKasfFmHaCc
4mkHf8TMHjVzYAT8hY3MaZdkZdSwNKJfCGknvPKQTRgwcfuNnKBFMGgRjrqk
c4PaQ2HDQkgzP6SeHpCGHCyvsaPf3D3k4E8FFOtTjgvrwxc3Rs+shCFOL49s
zgYXh+wzAePcAHym/vCkDSB1+ej4uY2RU6shbBlw8sKxiQubKHf94rGZiydm
r5ydf/3CoXdeW/3w7c1PPzz75ScXrn55+duv3vjum7eufffe9WsfQNy68fHd
n7+8d+/bu/e+v3fv2sOHPz5+fAto9QyVB7yHVef7/9etXnrzZVShwN3qF4xN
L8df0Qq51bPHPz9/dOvpox+fPfr+6cOrj+59fPfWu7e+v/j9Z0f//trkxoTO
JqLwalL41cnwh13bUeYUN5g5NFlrCas6m1ubq+2pMgvqzcJaq6zeqW50axsc
qjqborpPWm2T1jjktW5lvVdFR8ACydLQ/co6DwBLUeOX07xyqlNMsvHRvpWp
p9TQWQwB2AK3AlTBCLQC1QJgAcUMnQAsAhBKhekVBEw0baBdxUbQK/xAMaNE
2VQgrs3kUQ4yiQe7y9J6IMoPsohbiRZCGjAoR0jLFlSnA4kEtAyYAJVkyK0K
5Q0QBSgAWHSU3A6PeJRMZkUadvYqFVUOzIdI/Q1YyKoSkW39donTCrkVjiqc
UMitsg7sXAKwdpgFgUsWTi6cWTitdpiFqxYlZQ/IFCU5FlOqGJxNuEzB5ZZb
YdoFUZGAaLVVlAkr04SPYEkleCfi/ZG4apUnocwNclIkOXEPKSmKmBiJ0uDh
Ndyt0MsovRB1Lsb0ioAiihAXgcb4SHzECBVVFBcJzAIXI+xHY2lsREns7pLY
iOKYXRAwJ0S/CjAqi4/Ax7J4fEQkKovfAyMQ7SWQbUXZb2MkoArRKhY76rsN
JpxZeGCcQltURUBPtHi4lxANAghutRfEkBATURYbQYzbXRMT0Zawh5cWrcpN
6CWk2CszbLQsc1WGnpymJKaJSw8KilO5hIPAKXwlEGjFzE9kFyahTaiCVFFp
lrQil09IY+YlgHNJKrIU5FwVJc9EL3EyqlydFGsrsa+FaG4sBQwpq7IkFQch
FFWZ2po8Q10BhLG+yFBXqK8tgOhtIJiaUDElc3OpGaupbmgkWNrKHV3kACgG
AAvbYBpStA1Im6Z72ete+ZyFE5Q2evk1PkEtBKDK2l0JYWeSHawquA8UG1a1
BmVNdmABu9rHqwOUjCkZwBRglo9bOygFEesGakxZuCPGniF9J2gLyMuohTvR
x5uxieacgDDptFU4BNYAvoPRKqRgoLrl0pYhJSodP67tHtN1oRry8rZheduI
oj0kbhoQ0AFYA/z6kKgpJG3ulzQ6+LV+WfOiS3Jmwnpx1nVqzLI5ZIDLIW2n
R0R3CWo9onqvmB6QtQwoGCA7QWCiugNQNdknmLaJph3iSZtw1MydsAkWfIql
Ae2MRzpsZgK/+tWdQR1zzCJZ8OqWA6Yxs9in6LLw6L1smoVXYxPWOUR1QKIx
M2saZRIKx3p5IU2PS9Tcy6yxsFEp2mEje84lXvRI55zwAnvWyVsfVJ+aMJ+Z
tmyOGFb6lXNu8ZRTBIiccAgnneJRu3DcIZz2yRaHtKtjpvUp28qoeSagGXcr
R53yIask1CcMO0RTftTyY2nEsBjWLYa1M0HlVEA2O6iaHdTMDmrBnk4cClw6
MnbxyMSVzek3js9dWJs8Ph9aGXXOD+oXw6bDk/YTi4Fzq+GTy4NHFwLHlwZP
r42c35y8dHz28sm5Kyfnr5xZfOPi8ttXDr/7+vrf3zn26Ydnvvj4/FefXvzu
6zevffsu0Ora9+8DrW7e/OTez1/dv/8diNX9+9cxt7oNYoW71R9WAnG3+kta
/QFbf5687FYvw+sf/7E1/vqP36HqP//rl3+NVk/uPX1499nDn548vPH00fUn
j757dP/zBz9/iPTqq5Nfv7986YhvyMIQN6YxSTFMcoKkodDMopmZNBWDyKLm
dpIyxU1lmi6Kjl1tFtfblQ1IrzT1DlV9n7gawiaptstqXHIELJ+2oV/T4FPR
PYhTNJAsj4zqlpIdgiq0RcUsA1TpGEUAJsATtpNVga8KwghzHFiadgJKDsSA
hfSqDe4gvTJ0lhs6y7SMEkVzobgui0dJYxHTeyoyusvTwLCw4ksZnKpMHkpi
z+ZSMjlV6WxyOpuUxqo8CCDDcgXRMWFMr2DMkzeAYRWAiAHgOKRMAB+DgAEL
FWY/uAMsrKVIUkvutnBlJzVmJTZkJtAzsA2sbbfC2bSDqh1s/bYqmBa7gy1c
uHZQ9TK5MGDFUJNjKWj1D8cT6udITojGL3c8C6s6uLccK82E6jJtl2mCEVyp
dH9UcXxk6YGosgN7sJJNe8nJe6qSo6qwCZCr4gBK5yhFqELnttAqIr5suLUe
uKsobvdOFOKTePQU+dp+fO0REBlVjjbC0KIiHiWxrxbHvIpvveFjxQHAYiQ2
Aq32ArC2zQvBC+fX1mT7sgRoiE4HR7wEpqjC2EhsElm0NYkqQhkdYGp7i2P2
EtDS5R60YokWJCNLY3aTYnbVxe5uT4zip8do8hIsxanOqixnXa69Js9Sk2us
ztWgvaRcCTGHV5opKMtiF6WxCpJ5xQeFZWn8klRxaYasIk9WkS0gHGTnJvIK
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
GVj/6//69c9bVP9NsYstWr28Hgjjv+xWj+88e4iJFaDq0Q/37n97584XN29+
+OP1169dPff1pxtff7L6ydvwv6p13M1UtBX2kJO7KlPETQRpSxm3prCDmEXL
iafAX+aiZAY5h1VXxGssEbaUqLsrDZwqs4AGYeJWQfQJq61CVCUJH+2CKoeQ
YhdWOYUUh4Bi56Pdq5189Z31QHxJ0NBZbGZizOosMXcCmIBZxSYGWvozthfB
pBddFhvbCZqmXHldhrg6lU9K5VUe5FSkcisO8iszhORMASmTR0yHEJJyRFV5
Emq+hFIgphQIqvI5lblAK3ZlBpuUgQErnU9NF9ZkiOuyJXWoUhO4FZN4sLMk
paM4BSCF4wlfGARIYfxKAmw15e5vzEEVLeoyousy4+q2wfRyvvrLblX/+72t
HZbt5AfuJF3s5LrvHNF6ObN953DWTsY7PhKBBRgU8MBdBukMlkqBr8IhfKC1
uAhyYsTvcgLjI4BT2D4XJlYvndIq2U6ALznwWyY8rl14SvzOa0SUPoESNsri
8a0rtI2FnUHejeEpCh+JCZj3bcf2TTTBIgrtasEI9DyALWMCIhNhRHtkJdsj
xs3IrcC6J5egLbPIiviICuxUNZbv8WpZ3KsVsUCrf6uP+5+dSa9Ks/aZixM8
5HRfTbarLtdVX2CvL7DUFRpqCjWUfDk5X1SRIyXly6uKlGgZMF9amSUqT5eW
ZyhJOfCCuipXXpkJoSRnq6uyNdRsHS0HQludravOUVIytHX5ju6qkKR5RNE+
JG0BEsElakSICZS9iwwBl6gqIJMa4NMHpc2DshZQKp+gfkDaDGYUlDX7RHQ7
D/VedwvrPSI6BDo3JKgfVHUseuRHh0yr/ZopK3/Who73zjsl807pnEM8buYi
61G2B+QtYFvY2ahGdFKYXwcfjvpMCerg0bgZZcTN98uXgqp5t3TaJgRUDagY
LlHDgKZj0adYHzYtB7UzwCmHaNIpnnSKJh1CtAFkFUy7pDMOyYiJM2bmHQ33
np92rw8aF13yGatoyiIAcoW1PWE9M6TvCag7BrRdYRN72MwZsfJG7cIpv2LC
J5vsV0CM++Vzw4aj8663Tky+dXTs2KQTAcsmApMCToVtomEHoE0x5VfBOOKU
hGyiMYd8xqsdsUidsg4Tt84sqHPKWtyKVq+qLWjsGunjDls4A4Yej7LdLmly
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
gzWjlAZuXwWzt1RAqVOy20c5HTJGs4rVJR1uZnWXc3ortby+dR33vF46p6Aq
OV2ykVY+pYFDquWSa3nD9dAKybUKVsvoSJOUXidn1qq4jUpOo4rTpOF36MS9
OuGAYqST1VMz0JDfV58x1JxNbsmltOax+6pltA4lq4c3ACwrI7cU0TuKaZ2F
gDN2f6mYUgPaSGvPHW7N4Q9WzEj7z8+Lbm6N3dwaP6cXLajpWvHAuLB/Ukaa
UlC00v5ZNVU/RtePsVcmhZuzss1Z+ZyKPSlnjItI46LBKTl1aYK1qRedW1Kd
X9HsLI+vz8r1Gu6UgjGpoM+oWXotd0HHX5uTnltWbi8p1ufEqzOijVkZCNf6
jHR1VroyB8ySrszKVvWjC1PipRkZKNX64tj64vjWim53c/L6hcW7t87e//z8
g88vPrp3GWj15MHNR/dvAK3Arb79+otXL756+/rR2zePcbfC9Orrt2+BVk/f
v3/2n9AKj4+OpvrXS1S/2o31IbAFr5++++mn9z/9hMPrgFvtvUTAwuoEvt97
hbfIrdDxwS/foSPvX7x9jWYC3799/G7v/rs39/fefvX6zYOXr4BWnwGtvvzy
/BefbXx2e+HWtamrF1WXdyXXt3mXFgc07MLOkpNZYWYJfsfTAq2yQh2zQl1T
Apxjve2DHc1RWW/LI0CueD+btCC7nAjn3CiX/Cjnoli30kTv2jS/unS/+gxg
FgJWGwasjrygzrzATixNvf3MqTYsm6I58yQEVr/C+wOzPOtSPJpTPZrTvJpQ
69mS7gUt9NszfTuyAFg+LWlejcnudQkuNXFOFVH2GK1si8NsSyPsyyMcAVjl
Ec4VkS5lES6lYa4loS4lIYAtl+JQ98Jgz/wQj4IQ1/xgl4JQlyIEJmfkVuFI
rFCZpmg3fAErL8gxOwBohbsVjiqbdF98PcsG9OoDsE7EOp+IcTKPAXY7A4zM
MXLhYRH5ezOBHwHLMDF4YK8W6kc6mkU5mUY6mkYQAUPAHSDOsXD743AZhrXh
WAdv4SW4AR/H70Qj9gAs6BjhlyG2R0NsjYJtwa2OhqCJRJMQAp4MD9gyDrIz
CbJFG43BrbDNVuBWxn6WZhC+5kArVMMWVQs8geoEepoYuR07DJxyPvI3F6NP
gFZuh/7qfvRvgCRDuT8UZqjon7fxEe/jhyHgJaAVylq3OORveQjN11kdxvIG
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
nVlor21PXT07CSO7QKVl9c6yagcItYTKU2wuqrZW1GjP7+YEtJtLquVZqX5C
AO3GovLcmubi2akbFxfu3Fj79Ob6F59vA6GePLn+5PH1x4+gvQluBfH44a1v
nn724tm9t2ga8BGa/XuPIwBRAKU04NUqsJWj7zGa/J9zq++xT/7H99/9HdWy
2Pv7z8it/v7P1wdPaYQOohX+kAdaHLJv3j6HALfaQ4tuT9+8efLq9cOXL798
9eLut1/ffvzV5ft3dzBaLdy6Onft4uTlHeXVbcmnF0Zvn5eem6MqGeXNZ/yy
gszSA8yyAi3ywxwKItwyAx2jXM1PE457mf7V2+xvJy0PB9oZhTmZxnpaJfsR
kv1skvxtAFiZwYTsUGJ+tHNJgkdFimdVmlc1eFOmb0O2X1M2QOpkc/bJxkzf
RiRW3o0ZXg0oPMCk6jI8atM9ELBS3KpTXKuSXSDqUt3qUz0aUtzrklxBrMqi
CMXhtiVhdiXAoGD7omACBCCmJBStXlVGuUBURbtCWxEJwHIqi3AsjXAoCScW
A7CCifmBhNwA+9wA6DhCm+NvdybALu80AYhWGu4AygYELAp2yDtFyPG1zfQh
pHsTMn3ss30cMnxRqXY87yLFxyLN2yrd0yrVwxIDlnmis3mC84kEZ/N4NDEI
qEK1BAE3MdjsH44kQ367wa3w/gdaWUThbuX4sVshR3Mwx5mFAwjHDT54EFUG
Eh1EFf4uHEyG9iDO9i9t0eRhCDrU+HgQOtQYbdrFt/TifazWH15f/RBWen3f
nvZ3V1kasv6O7ZfR2McTvqkK8eiUlZGBTR/FB0jtF5XCE93R9+Kp7/BeiyO/
fsuHS6AY/HdocSTI8kiY9dEIq8OxNuBWJjitOgPt+oLsev0te7wte92sO1wt
+wIc6Qn+vDPRvOIEdlniSFkirSR+MC+qLTmwLtKzMdKrJd6vMyOkC9WaiAFC
0SpSoAVm4diilidTyhIHi2J7cyO7c8K6c0I6sgLaMk8NFEUJWnOUQ+Xy/nJQ
FSW1ZozROM5qGWM2q1nNGl77hLBrStQLYALLoLfn09ryuH1l0J+R9C8qKQCm
zQk2sGl1nA4BtwGhAGFbk+xF1fAYu0050gwt8A7GAVVzskFoYQQQAKhSYyAD
nI3Rm0YpdbKBKnFPubirlN9ayKjJpJQlM6syhO0lMlqLgFzP6a/g9JZxe4o5
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
FZPV/P4xQd+MknpuSXbr/MTtC9PXz+mubKJJvO1FxaZevjotXsA2Us2B0+n4
G3MyzKF0l7CJvu0F1fby2IWNiSvbs9fP66+fn7+2MwedG7sL0OL9K9sz58Ha
lscMhDLQCpTq6vk5UCrg1GfX1yDArb64vfnl3V2g1ZNHt75BBWxvf4Nx6tk3
XxhQ9e7tk+/ff/PD98+/+x5NA77dQy2uLTikvvtQbv0/d6uDp4f8p26F1sXA
rd7/BG6FA+vntz//c+//nVu9eQO0wvTq1QOstu29Z1/ffoLSS3bufrr+6fWl
6xdnruxMX9maubA6fnZReGGNd22bdW6xd0peNtgUWJxkkXjyUJKPcZKnVZKH
fYqXS6wnIdzN8rSDyUmbI16Wf3U3+6Oryf9yN/uDj9VfAolHQl2MIzzMor0s
Y8Gz/C1Tg6wyQwm5UY6Fsc4lAKwk16pUNN0HPAK3qgOrSndryHQFyapOc6/9
ACwDraoSnWuSXJBbpXzICYyxL4sglH4AVkmYbXGoDURpOAALDAuQRKyMdqyO
daqOgdahJt62Os62KhaYZVcZY18V4wivloQRi0OI+YF2Z/xtAVUQWb5WBafR
EhieVVgc4pQXSMjyAzABrSzQDqyTACzrVB/rZG+rNC+rdC/r/ZlAt4/dCji1
70cuyKoAUjinEtxtDcD677rV75qUQbLwFEQD3T6yrY/u/2iq8JebQa+IxyOI
RhHEY9CGY4E69kahhCNh9kfxyzDC0VC7w2BYoR84FYbCNNTWJATwZ2cKlyE2
2FFcKHPDGC4PEuqj+b2Dc4n/yq0+UrNfzT1iKY7hVseQWFkbxdkYJdkY5Thi
OYF+Nu1Bdn0RxIEoh8FIR0qMGyXGozvUsSmY0B7l3JvsO5AVSC4Io5VGUYqj
yEUR1NJoanH0QH7YYEn8UEUSpSpluBodcTvSkIXS2xqzIUYaILIY9VmMhixm
4xkA1lBpDLk0jl6dwqhJI5UnDpUn9ZfEDVYkCTtLNMONk8z2SVbHFLtzWtA7
IyVNSQa1IC9coFXfjIw0N0pZGR+BWFIzFtX0WTkJYKFkwe9/GwBLPFzL7ivl
D1WOjjQpWS0KZjOMcPrLeIMV0J8U9c6rKMtaxtL4yJyKOiknTcmGZhWUJQ1z
VceeUwzrwLnEAwsK6pycMgOqJRrASNQL9qTh9YxxOlWMdhm9RUptlNOagWJj
nC64H55qSjyI5gN5PVohAJG+PsnfmhHtzMs2p4XLGvb5BTn09UqalN7K7q9m
9VaKhxsBPcqRNslQHbujBJ1K314i6CpXUJomuD2z4kH4QJ2gFz5fze5TcQbG
eYMaAbTdo8xWAaVWNtKo5nSAyqk4XfCNU5JhnZAyzidpEEQGx4UkAMrmrAxN
uK1pAVvQgtTgs3MQKAsC9Gp0ZJw7IKG2c/rrmT1gbbWAKnZfHYwA/oBoWzNS
vYKp4pIElK6Rnkb2YJOaT5of4y5qUKXZSdnwmLBPJx1am+Je2VTfOKe7sTN5
fWd6d12zoZevTIuXp4SLk4LFCRRweXZReXFDd2V76vLW5O6GFhi0s6a5fHb6
2nn9zQsL13fnryFUzd++vPTplZXPrq1+enn52vm58+s6HE8XtiYhcL2CDtDq
5qXFT6+uAKTwALdCtPpi9+FX4Fa3vnn66bdff/bsm89fPLuHxZf4puD3b7/+
7t0333/37P13z/9/4FaAKnwmcN+tDkLqILbwwYP82let189fv3oGzHr9+utX
r568evkQ/syXz+6++PbO14+vg1599cX2F7fXbl5dvL6rv7g5swOWuizdXRdc
WGfsrg2dXeiSMrOaij1STh2N9TgS72aa6GKd4GqX4EOM9LQJcTE/7WjiTzjm
bfWJ+4k/OR3/ny6m/9PL+s/+xMMhriYRnuaR3pbRXubxvieSAqzTguyAWWci
HYrinUuTXEqSXKpSUQZgbbpbXZpbfQbQCrEJRtC61QdUVae41qa616WgRava
BJfqeCdwq8oYsCdieSShNNwWoiwCIAXYsioJsylH6YIALDvolEfaV0QRKmMJ
1fF2VXF21fH21SBZ8fY1cQ4Asooox7IIh+IQh4LT9mBYOX4gWdbZJ62AX2BY
5REuZWHOhcH2Z07ZZvhaIL3ytUqF8LFM9rZI8rJM8bRM90KJFphegVudiHcy
A8NKwtwKZ02Mg0WkA+KRQawMqPovafUL7zBmHSTXQQDh3DHQ6ndbvGOQLwO2
8BED47CPBdYYhQOY7A5DG0k8ChHlYAQtXOIjEfbQgVcPhdkdDbczxSPUxhjl
yePZ8lgbbHUMjxBrMLv9kvJ4e3AR6pf09QMaZbg03HzQtg7YmTFmdpgegj9a
Ho22NEqwMkq1Mcq2P17qYdkQYNceQuyPdiInuNFSvDlZp0UFEfyCCGrmqYFU
38HMQHpxlKgxjd+Yxq5PYdelcBrT6JWJ/YWRgJu+krj+0nhKdSpQiVaXQapM
HgZ7qkmDoNdnjgC5mtCxGpSq5IGyuMHSWHJlElwyG3PgBkDVcE06v70IxErL
aJtmd8/x++YlJP0oVcfvV7O70ISYcGBGStGP0haVDBiflQ3r5dCSxzk9Emqj
iFILbgVIUmLFHGT0BogxbruK3SqjNShGmuAl6E/LBpbG6XMq+tTosFYyqJEM
To1SFrWs1Wn+ioY9p6TpxADHfvguCJ2gf0rSPyMdmpVSpsVDIFDjPCBXn4rV
peZ0wyONc3vm5NTl8RF4DDTO6VawAB+DS+Psc3rZ+cVRaLfnpNDZXVRszYjn
FHS4R0JD2RFiapOI3ChGC1V1ot4aflflKLlZy+qeEQ4ujNJWNWx4nmk5RSui
gC7pxJQJKWVCMjQuAGFsGwPTBKMU9GoEfePwVAJ4YIpORNZJhmeVzCk5HWcW
yNTu8tidCwtfXF7+/NLSta2ps/pR0Cs8+WFhjDMhpSpYYE/N3IEG3mAjn9Qs
pXVoBaQFNWdFJ1zF8s/nVDyNYERC7+OR2iW0Ho1oGGgFb59VjgCw4F9vScfa
WZJe3Rq/dX769kX9hU3dml6mn+DP6bgrs5KNhdGtJeW51bGLWxNXdmau785d
Oz8LceXczOWdWfCja7v66xfmoYX+1V2kS3dvbX756VkAEIzvbk0AoS5tT+OB
M+vi2akrO7O3rywbaAWogrfc/2znq3sXHz24DlaFoQopFaDq5fP78Bv++iWi
1d7rp+/efL339hvsEKtXBzllgNRBVBlGfhu4f/37Guy/TVyHr/sBvghtttr7
xw9vfsYTAn96g2j1L9atPjIsg1uhWUF0gjDQ6jmWZfH161eP4M989fzeC5Ro
AbS69NUXOxitFq7tzl/emt0Bq12SbK/ydzfY26vks8sDenU9qSWyIMY6wcso
2sko1skkzsk81ts20ss2zN0qxNX8tJOpH8HI2+aQq9kfXEz/4Gb+Ry/rvwYQ
jwa7mIR5mEd5WcT4WIBkxfpaJKKJQUJupBNIVlGcU1mia2UyHk7Vac41aa7V
+/xCemVwqxpQKmzRCoBVk+AMboWAFUusiAZa2ZRF2pZH2UFbHGYFURZhWxph
A4GPQ1RGE2rj7Gti7aD90CHUxBArI+0rI4kV4Q6locSi0/b5AYQ8f7scP+u8
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
GUF2mSG22WE2uZH2BdH2hVG2hTF2xXH2ZQlOlYnOlUkoUJHbNI+mVFR8CQOW
O9CqPtmlPsmxOp5Qk0CsTXAAYKEE9Rhb3LPwfPUKsK0oa6AVqFNtpFNdtFNt
tEN9nH1DPKExwa4h3q4xgVAfR6iLJdbFONRGO9ZGO1dGuZWGuRQGEfIDbfID
rQtDbIojbMui7FH9wHD7vGBCTqBdpr8d0CrdxzbT2ybDywZtuXKzxGcCMcOy
inexRKKEpy6gfUym+In2kcQTUQeOG8YPFoly+PVMIFYLN9YRkAeoAmwh0IBe
4aoV44gVdMJK3WJ4+lXWBJ5xYZj6wyGFOh+KDaKbsWwK/C2GJS28Bi88XgTG
rCjQKzvjKAIIFIAJIGUGLbApCj4cXiWgfoQtEqtowokoOzNoI23NAFt44JIV
aYMohloQK6tjKD/QBtuThSo74cUAsSwLXJ3w4oEnUPib7TNrvwouVlEQRgIP
pFvsp2RYocMl0UygjXGk9fFoS0SrJMujOfamxa6W1b7IrXrj3amZJzlFwZyq
GEZ1Eq0qkVGbxm/NFXcXibtLBV3Fgp4S6VC1eLCK21fGHSjnk9AuJ34fmuLj
95QAmMQD5dDCpWSwEmRKMVynYaITpqZ4nRPc9nFum5rXNs5v16Bdrl1Yqnmf
TtgLFjMtHlxQ0Na1nLNTgg0dd3WctTzOmVeP6JUMiAU1EwgFSgX9pXE2kAUI
An2MX6RpGQgXCQcT+BQEsAngBe3SOHVZS9+YZm/NchfGqDph35SItDDKgJiV
UqeEpGkJZV7BWNVwl9Qs+Bb4itlRGhicmtOtZrVp+V0zUjLY3JyaDbQCx5nT
CCaVTJ1sGKAzLaXMyUlrGia4FcgUIAl+/OdGR4BWC0rWChBkUrymE67rhPAS
kAvaZQ1vRkGfkJABtUpWt5oJtOqb5g+uqlhbWv6GTrA0xoa/dEnDWQDLU/Mn
VcLpceGcTrg4KVqaEi7quCuTvC296PyibHtOvDLO0QPaFEyg1TqW8rc+LdmY
lgCndhZVO/jup2kJjAO8rm5OoqSLK8v3bm/e+3TzPrTXVq9tTq1q+BreINpo
zB2YklBBxyYVjOlx9sKUcF0/uqFXrM7KNuYV51c159e0W4uqzQXlzqoGYnt5
DC7PLqkvrE9e2Z4BNkHgkIIWOAXwgsCBBZKFAwufCQRgAYxwpYIO4Al8Cjo4
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
2JSxc2P6zo2p235I2rxmxoaVU39YPumHpZN+XD558+ppW1ZP27V2ZvaGlP1b
0o/snHdid8bRLeMOb0jIXhmzdVHoiiTv5HjVWD9uhNbGh/+dK+O/vNhmfnyb
QCEjTM6NchBFOguiXIXDvWUj/dUjfOXRroIIJ26EMzfEnumvsvWQmDtw/0tD
/79llP8ltB0msBnGsxoCxrUaAtjiWAOtzABbLOuhbNuhHMpQLtWMRzMXMCxF
LGspmyLn0DV8loOQ7SRieMjZ3kqWv5oeakePdmTGuzNHeLNH+fDH+ksmBCom
BinGB8jG+orG+YnGeAvGefEn+omBWTPClLMi1MlgkRpgU1oMhlSsJjVWmxqj
S4nWIouxS4tzSIlxSI1zSI1FPi3GIS3aMS3aISVSNytcMyNUPSNUNS1EOTVI
Pg3IhfkFMzNClbNCVamhyrQQRSoMQpRgKSGK5GD5rEDpDH/xdD/AkABgBGOY
SQ6WpoVJ0yNk4FNDJcnB4pQQSXoYasWFLoNgjWhmgHCmv2CGr3iGt3yGt3K6
l3yap3yKhxRsqrt0irt0gotogrNwkot4spt4kqtoootoupd6hq86KVCdFKyY
GSKeFsyfEsieHMCe4MMZ584e5cQZqRMMVwiixbxwETdEzA4Ssfx5dF8uxZtt
7cW09GRaeLEsfTiWgSLbUBk1Ss2K0/ES7HgjdIKxrpLJXoqpvgoUTOKPytFP
9ZNM8haOdxdN8JBO8lJMcJeNcRGNB1a6iaa6CKY7c2e6sFPdOHO8BPMDJCvj
HHfMjPhp8aRT6zPP7Vx6+cC6q0c33Tq5897ZnEdXDj27cfLp7VNPcMv457+D
vLqS9/hawbNbRS/vVeQ/qil5UV2eV1NZ2FBbiqMFcIJPS2074pQ+8MwYe4Z7
lFeR7+ctLTWNTZUkugltyzeQHj3l9XpfCtbQUFTfUAyG2/MhX1NTUF2dX1X1
Cr5GIl/1CjzazEc7JMWkCQV6QiM8EJ5chguu6uN+MacqjEUATOuykgo2xJr0
pWzQoKEBVQjHRcJhproRFQnXt1Y3lgGvq8NZMI1fag6QzhfGitkm2TEo3ri2
prKutqK+Dh5bVV9HqrOSx37pfqsv7AAGVKpH1lJf3VJX3VxbCYM2NIk8MKsN
XkJq6y/Jti2GyPB208Bvw6Yc4kIHusQDYk3tCEl4ABqnvRE4hay9sa2jCbfh
aGrDubfGZhz4Et+Lap43mxaSJUZyddtJLXTsibW/burATOlAAeethgGabyMV
1LF1GPxX1vb38kqdKEBd7w3B6qZKyhhn3mVIE27vamt909ba2d7e2dbxppX8
YK/fNHd2NXd1Aaeae3ua+3ub+7qb+nqa+/rbevraUCXAXsyp7o6O7tdv+ro7
+/rfvH3b9e5D9/uPPQOfegY+97///O7D5/cfPr8b+OMD4tSfHz7++XHwj8FP
nwY//fERYevjh8EP78EDqj68GxgATr17//4t2Lt3/d19jV09DZ2diFY43AIk
VUVzc/lX1tRkLLReWF2TV1b+rLDoUX7Bw4KCh4UFD8tLnqLk99LnVfAtruJV
XXledcmLytKnmFZ3C/Ju5T2/+vT3C/dvnbp19ci1S/uvnMu+cBpotfXMsU2n
ftpw/MC6Y/vXHt235qe9Kw9nLz+0d+nBPUsPZS89sHvRvp2AqgWIVtvm7t4y
Z9fmzB0b07ZvStm+IXnbD7M2rZn+48opPy6btH7pxLWLx/2wZPzGJZM2r5i6
c21S9oa0A5tTTuycfnzb5BNbJh/bNPnAuvHbFiWsSwtPitaN9uSFqqz8RMO8
uEO9uWZ+AssABSVISw91YEU4sSOdeXEewkQf2XBvabynOM5DFO3KD3dkBaop
3jJLF6GFim2mZJpJaEPFlG/5Nt/wbb7j2QzhArCsh7GthrGszdnW5hwbS66t
JQrGoFsLGTZCuq2YTpUxwGzteXRnEd1NQvFWUAM1tDBHRqQrM9aNE+8hHOkt
Ge0jHuElSnQXjPDgjfDgjnTnjPXWA2t6iGJmqHJmmCo5EnSWBssodUq0Ogmf
c82K0sJfDZtdcoxdcpx9cqx9aox9OmALKSy7ZFgQqQE/K0IzM1w1M1yNLEw9
KxxZUpgqBQgVrEjBqNIDK1iRHChPCpTN9JdM8xFN9xXN8JPM9Bej1pDhQCs5
WFq4LC1CBoPZ0crMKCVpeYy6HsNkuCw9VJkepM0I1mUE22WG2M8OdZgT5gge
xumBWmRB5CW79EBdSoBDSqB9cqA2Cek+2bRgAJZwRphkeohsip90ood4tIMo
XsGLFDADuAwfLt2bw/BgUt3oNi40c2eKmRNlmAvNzI1h7sVBxS5CZKwIFS9W
yx/hIBznJp3qq54ZqE0J02VE2WcCxCO0SSGqGYEqHMOvmeangQXTfVSzvGWz
vKTJHsI0D/5cb8F8f/H3oao1w112zIo8smza2c3zz+5cdnrX8jN7Vl0+8OO1
49vunN376Lcjj2+efHzr9OM7Z57/fjEX9fi4XZJ7vzz/UXXh09qSl9UV+TWV
RSQ/t7mBxFHX4hQelIuKTZ/X09ryJfKZ7MybbssbsvL1ufn4LKkY9evB/zb1
/0KxXCLMwlYAYwIj0+BeAiDT4qv/WATA9FzApJSQ/scgpYGMJemacfmFdrTZ
hYVDa2ObIZ6tEXHtS6FREopg+mTTv52x6FAjfvKX5zfVGgsQAX2aDEdRIJ0Q
j5DVNNdXfzm30r+qV1VfUGXIujUWhTC2eseoasJc0Jcrx+hBM8ZLjCp9l6i/
G3mJLIMbvxh5lImhMPX2f9BWHXox1aL3ePsOaStjpw8D7L4gr+MvPx556aua
FX/f/TON3DNe4g3A1vbu9tbOjrautraujo5ORDoS+t7V3drV3dLT09Lf09rf
09LX09TX29Tb19rd296DhVUncKrnDU4B7nnT//bN2/ed7waAVt0Dn7sH/uz/
8Aeg6gOgCvVY/OMjAGvgDxxZgYIr8InVxwHQVIMDA+j/338EamFgEWb19Ddh
bYWA9fp1LZFUBE9gBFV6frVgbDXDF7PiyqrcouLHr/Lv5+Xdy3t5tyj/YWnh
47KipxUlz2vLcsGqip9XoDpjD8uK7hXl3ynMvf7yyeXf7/5y6+rRqxf3Xj67
5/ypHWdPbPnl6EasrdYdP7D22P41R3JWHdqzbP/uxft2LsIGwgqhKmfHvOxt
c/dsnYPlVdq2jck7fkzZsSF5y7qZG1dNBVqtXTJ+xbyRK7NGrsoauXbBmA1L
JmxeMWXH6inZaybvXTvl0IYZx7emndo5+8T2jGObUnYuGbcqKSI1wXl8gDja
iRKoGOIr/saJ+x/O/P/ykpn5q62DdJRQe8AWJ9ZNmOAlAWYlestgEOMmiHDm
BNkzPZW2bjJrB6GFhj1EzvhWTP1WSBkipAwV2pjxrc25VhZcayuelQ3Xyppj
Y8WlWHKpFohcttYCG2u+taWUaqVgWKmZlvZ8axexjZeS4qOlBtgzwpy40a68
GA9+jCs/1oUX68KNd+UkuHFGefDGe4smAy8CpdOCZDNC5DPC5TMiFLMilbMi
VeBnRKpnAHciNQhVUdpkkFpAq1j7ZKSw7NNAcIHHlh7nAJYaY5cSDXJMB+RC
8IIbwcLUyYCqYCAUcArklSotVA0GA5hJCpTPCgBmSWf6I3IlhUjTIqQZUYrM
aCXxc2LV6ZGoKWQ6yvzCHUwigWLyjHD17HC7OWEOWREO8yKd50c7L4h2AZsf
5TwvwgkMBuRyToRLapBjcqADyKvJPvIJvtIJvhLwk1DvY/kEb9kET+kYZ1Gc
khMupPlwKe5smiuT5kSzdaBa2lPMdbbDtDZDdTZDYezMsHLnUH1FrEAZJ0zJ
jdPyxzghWiWHOGRGuS5I9Px+jM/iUZ4LEt3mxLlkRjtnRDqnR7ikR7imhzoC
N2cH6+YGKucFyBcHKZaGqVZG2/0w0m3rjPDDSyYDrc7tWnpy25KfNi44vGnR
6T2rfz229c6F/Y+un3iCO8g/f3Tp1YvrpfkPKgsfVxc/qy1+XleaW1OZX12h
rx1hBBYRVsCpzo5G8ARY+NRen1VKDkH+iRdkjCqeNTaWNDaWGg0XQCvVY6uu
yCRDqpwkS5pm+hvjrg1MrDBWVzOiyrTYNUEMHpOwYdLnrsa0eiqJWPvysY/y
hhpwcit6i+amatOMJPK+xsca0pTqjDKK1Mcj5PpKW6Exjosg0REtJnt9xkkS
4Ndq8KaoMo2yM0UVOeJBGuq1SVsNgzLCAGrWk+hvmPi7/V34/F1bEayYwsXY
xcMUNH83441fvdE/ourvvelNd/++zpbqauvobG1709aGgdWOtJX+hwEB1dPT
2tvb2t/b9ranHeRVL+lW39Pe2/cGH1q97uztfNPb3dXf1/n2bee7D13vB3o+
DHZ//KP34x9vBzCqPv4JqCL2cRDGnz9+/Dz4aRCfXOGtP8ysv9Oqt6+5p6+p
u1sPLCKvjLQCA1ThvcFKAFl7e3Vbe2VzS1lNbX5Z+fP8gt9fvrz78vnt3Od3
Xr24W5B7vzj/UVXJs5qyF9WlzytQocvfy4sflBbdK8m//er51ScPzt29ceLq
hQOXz2Sf+3n7meNbTh/ZdPLQeoKqo/tWH85ecWD30pydC/duX5C9DSBFUIVo
tXd7FgHWzs3p2zem7NyYuvPHlK0gr1ZP27Bs0rol41cvHLN6/iig1cq5I9bM
H/3DwnEbFk3ctGjS5sWTdy6fvv+H1BPb557JWXxh//cX9i08tT1t3+oJG+ZG
LpriPiNGPNKHEqAd5iH7zlX8X+6Sb70VZn4qK1+lVaCOGu7MjnLjxXmKEwBY
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
2GwEVAri5Qbz80IE+aHCvGBBThB/UyAvL5CbH8jLD+AVBPELgwWFwcLiEGFe
ADfPnwuuFIUIi0NtwFoYJCgK4heH8IqCuWAtCRWUhglBlEfaVq13qIiyA2t1
jCPYgA/l+XPiHIzC+QwvE5IDlcDD49ga2iYqAFiabG1NAVHbiaHjY46LsKUk
ubLSPQwz3I1ApLgw40XU9ULSeiElWkCJ4BBDzPF+RlreBhreBpp+htq+JrhA
C2I4lxYrMkp0Mk+VWGV68nL9wJfhVB3r2pzi25YR0JruV5/gXhXjUhHuVBHi
WBFkVxUgrPXn1/tzGwK5gFYtkXbbkj0PFcecbNx0Zlf52X21p/fXf7ir+oPd
VRdO7Qa0uvYLNF3/8/o3iNf6j/fvXH5w59d7f/4Kj3HvztcEAmAteLdCYKEO
dQqW4M9gPnCxtsKSb+gtHUugoRfBzR9LrKF7VMJgt/2FCorHC9rqca/ClHDM
FVxxsB2mrTDtg8JlcffrwvwmBc9VRaWjKHn6esH1DgRwz5bUjaDvolhugeY5
l4BpXqMtO3Xq7X2O2TXM13X0dQ32d/chzVBo723/YmPYJaMMwYr5SKBlIfPF
IQOLagJRHbQiQRTH7L6l8mFFPGEpPkVhhcmo4cWjexWZsiQTuPxLUnyR5Xbo
i6Z4jA0sO+oCD3uRUyrwCt2wwWq0ByqpkUUvgn49/UBFDnYNjA4NjI0OA1WF
GNVKp6ZkU9MTMy8mkYH1kzAH+GJi+gXcT79AhBNQUEjMzAAmARE1MzeFoGpq
clo+OSWdmAask01OAELJAKRQYQVWmXxMKhuRy/sQVEFgoahacoyFaiskH/gE
+al7inYTd3ffe/709uMH1+7eBsC68P23p7/5/PiFz97/6tOjX39+4ofvTl8B
wPr921tXv7v+61e//fzZz9+fuvT1hyC+/+o4ANbnUGHt+PjYluMH64/urTqw
o2xPexFMA25F5RWEFJoJxKosdm7N3rk1cwdAVROsDGxvSAG0AtoKtlxVxrVV
xgNUofnAhs2R1cWB1SX+VSX+cFMYVIVERY5/RXZA5abAmtywxqLo1vL49srE
Q63px3amv78r49jOjMNtabvr49urYmrzA3PjneMDOUEuBmKOLo+xDgCLrfeu
gKhiq6/uyNR2NSH4WBL9BfpBIlqkMzNKwox0ZUZIaCFORD+RjqcA52ihJzIi
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
310JVxiV+3dX7dtVuQ8QDQ7Ayt/VngMzgYi2am1I3gIHXSWiFeytCLBQZrVs
jgTaqq4gGMUTGlg+EIUXii0s9QfYBCQVprDABgALXAfAgrWCef61eb6NBb6N
hX5NRf5NhQEN+f61Ob6Vmd7l6Z6lKe4FCZKcGKfMCIeNYaLUUNu0SOHGGOGm
BPvSTI/6ouDWyqj2mpjtdXE76uLbq2MbSkKKM9xSonjRviY+dkRHtrqt0Tou
fTWXscbGUNXeVNPJAifhEF2tSW5WZDcrIGRIdkBn0bVguSBVi0fT4tG1+LAG
A29jqCs0JAJ8CEzIPGOKtYGeGRVnSNRi4NTp2hoULXWiurKuqhJu3Wrtdau0
lVfpqK7Cq68haCnp6qwj4pWJBFUyXoVOUGPqaYCgI64aLLyqga66KVnLlKRp
CjQXScOMrGlOAeJLEyYPqXhLOoHL0rMxpNgZUx1M9F3MGGJzhsSCIWYDSDHE
VgyxNVNsRQe0crKg2puR7UxBUOxM9O1MqPYmdBtDKpdBsiQTTPDaLE1VuqoS
Q02ZqaFsRtDk6OvyaUQhg+hoQHEyojgbklwMiGJDoqc5NZhvFO1gkerBz/YX
FYY5l633qNzgXR3vW5vgV5voX5cUAAJswJWKWK/N6z2Koz3yw91zQtyzAl3T
fSGtgLBK9XZMcLeLk9jEim1iXYQxzjYxTsL1jrw4e3ainWmKvUmWk3mRm1WZ
N6fCj1sZIKgOFW1N8f+gIefCkabvT+27/NWJ37//5A9Aq1/O3rjy6Y0r52/+
/iXMBN78/tGdK/Pa6uENKKwewoLA5wtnRl1d84k4VFv1ArgAbTXQOd/ruoAD
bI9qK/B3IFoHuFC7jpxedQFJ9XTBbBAAC4gsiC2UVoBQ4H1RVMGjq/kZCvd7
gfLqeYyeNWPeEbDJq797cKld0uscoCKqXqcrl9WNY6pn+Q12eXLs7TfqNzFo
+Z3538irJSLrLTJn5F/kA5fEm7QVxrIVn6n4pv/4sm+H8pKnKX469l0dHulF
3NS7AKfAimorIKxGoKVSLzKyanBcPiyfGJNPjk5OSmWTE4BTYyDks6MTc+MT
AFWAUy+kE68Ap2STr4DImph+NTnzamr21eSLl1Mg5kDMTc29gOM/ZmeQafVw
RhVSpg7ABASUDLrULvaqRdcVBRe2IjIKSfctQGoBW1KpVIZ+aHx8FKHVGFCE
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
RaUyKKC2SEwyGZjFoBgwyQZssgGHbMghGXDJhlwKmU0jsRlkLoMiYCDZJWVS
ZUy6EYtmzKCgzKYZc6jGPKoJny7jMaVspozDkrCYEhZDxmUa8VjGfDS6S8qh
SjhkKZdixKeYCKkyAV3AYbDpVDadzKGTmYa/o6/7P8x1/0dE+50Zx8BBzNhi
wnYz53ha8LwteYF2YmBW5GazWFereHebpG0OaX6b0vyd0/ycdwVtyQxxzQ5z
h8gKdc8JcSsMcikIdMnz35zp45jqYZPoYhW/ySLOCfBkEmZvFGInC0UtHLJg
K0m0tTTBTpax2QJoVRvl1rrDG1DVmR54pDj+8eacZ/dXv/rovg9feeLU3174
6r2XgFNfAq0+fOnkR38GefXjV4hWP5/5/PK5U1exq+1VvG914+oZfW1FdFng
M8IXb966vKSwsHTSjdvQteTpbPpWzOBAGQ1sAszdgJCjxTV8eU0B6mnkqnwY
MWsIM2ug/8Lg4OWhYWQ9jfetro0sbV3dXLMnEPvrYnjhwRxKOSaUAjlBEZAi
MkGr1V0W97NhtCbXVHeqsBU3702re6sSHSl0+2Kjyw3w+m0YqmXrcuVa7e6q
OytsawJI13mub8Z+t3b0f1NbEfJqdBT/nNE7HxkbQ6HS87JAkMKcQqeQtGMI
VXOziwvzi/gxD4SaBXG0OD1/e2bxNiisybkF9fRtpWZeMTGnmppVaadRDVA7
q0FImp/EPRUzQKjZ+Zm5+TkcM+j+jHZudhIJqyntLALFFEGrGYSqSVwDRKjS
jt1NW60ZK7QV7rIg9JRGp6r08rJB+zhxfHgS30XaaoJAJGIf4BL5345PjExM
DkNoJpBBk3q8f3TsplJxXQG/FITZxeA11NM+dH1g5MYgNvAfkl8fHrk2iOxw
L43c+n7o2snrFz46//2bJz985s2XD774+6ZHDxUeasvYVw9wST3cvPtI056j
bdkPdhcdP1D+0KHKhw9DVJw4WHp8f/HxA0XHkFtg3uF92Qe79uzvTN/XltbT
knKgKfVAI3HkKrmnfue+uqXA2grdwTeRvOomGtor41rKYvYWRzYUhNXlhddk
B9VkBeIcUJPtX5vlX5flV5fr25jv35jntzffv6kwoKUoqK00pKMstLMirKM8
lAhYd1VGdFeFdVVHdFZHdFWHd1VFdFRFdlREtJdFtBaHtRZBRDTnhdRnBVam
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
wlLfUqgIYF1BgXTWdQysvuWZlfBPxAH58HVcaT8vHzw33Pf9zSufXDz79zPf
vPzZe4+8+kzrY4cKDzan9zaknujOfXBf/qH2/OP7ih86UPrI4XIkrw6VPXiw
8PiB/GP7c4/2Zj8AwOrec7Br18HOjN69qQSPCEKBjCLYhGmVTARx2V2DioEd
Vdtby4EFsY1F0Y0FUY15kXvzwhvzQhpygxtzAxtyfOuzfRryfPYW+DfmA61A
ZPkBsOpzAVsBewuDGvOD9uaFNOYF780PaSoIbSoK31sc3lgc1lAS2lgcvLc4
uKU0pL0spLM8pKsitLcydH9leE9FSHd5YFdxQHN+YH1uWH1eeF1uWE12SOWe
gPJd/kUpXtnxW/OTPIpTveASnm0vj++tTzzYtP1wC4qe+pim0qDy3dvyd7ok
hVhGbTP2d+Z72jA9rJledlwfB6H/RomvHdCK42bGcrPgIgMlW4mnrcTNSupq
Kd1sIXFEk7M4lqhTgmbOp5vwaMY81PtnzKMY8ejoTDEXginlsIQshoBB59Kp
LBqFSyXz8H4WZEKIQWaTSRAcChkC7qAMa3TTkEMh6YK45FHJxJq4hG8IwaEa
sqgGbBqJSafQqRR4kABXhiQGyRCeFTPophy6FZ9uK2BaC9jWIjTPy0EqdJIJ
gV+OMr6zkWCzscDFWOBqJvQwE22zEHtbin0sJX7mMj8Lmb+lEWQ/SyNfc6mP
mWSbsRDC00jgIeND9jQWehkLvKScACNOjJVkzxbLqqAtQKu2ZL/u3PCjjenP
HKt5/ene91458fkbf/jqjee++ttzX7773Bf/eB4UFtZWb/z41d/OfPvez6c/
+wW0FZoYgrTV1Sunr2JOXdfzslj2PkKqamnI1GDfajvZu9r0AbaGsc2RgjDk
xPOh9MaswwuGlkz8+vQd0VeYft/NnOFXbYW8qQlthSt++v3qd/8mv0lb6dOK
uLyHtlqtUO5TW43e5VzSarDqv/l/R1ut3iz7rdrqzm81iOdzDWJ4DarwYlQ9
pBpDB3tBUhHaSgcsQBXaM5qZmJ6dnJ2fwg5/M3OLc1OLC9rbiygvLmoXb0/M
L2rmFsZnkRkFqK+J6bkJ7SzyrICvBE5Nzkxq0UwPEE7T03NoUhXOuphZvolg
Na0lRn7o/ChWOCktl/UQhlbvW/0ntNVKqbW8paXGJu1q5Ms0OTY+QSgs1bLI
UuJQjGuHx9FsLAJYN0YU14Zw3Q8Ncxy6oRuvjGiFBiXckg9fU8ivqBSXRuUX
5AM/Dtz44sblD385++a3nz3zzl+OPPd440P7C4+0Zh3pyD7SlXu0q+DB3sJH
DpVBnDhY8uCBwhMHCh48kHd8f86x3hwA1gM9mUeAWc3pB5vSD+xN02koBKba
pGV5lUxcdtUkdtUmdNcmdNZsb6tAxcDm0pimoujmoqjmwsimgrCmwpC9+YF7
gVB5vnvzfZsK/fcWIFo15PnW5fjWZPlA1OX41Wb71WTigiEIsRygW1B9XlBN
XmBVjn91TkBtbkBjQVBLcXBrMdrw6i4P7akAWoXvKw/ZVxbcURreWhrVUhrT
WhrdVBRZnx9SnRVUscevJM2rKNUzf6dbbqJrUYpHxW7/hoKQ3oa4Q83xxzpS
TnRnHG1P3d+Q2FW9vS4vGOiWErYxwsPYz4nnact0s6R5WNG3WTO8rNnALF8H
kbed2MNG5I7s1kFhydytjUGYOJmIHWRCOwnXRsKyEjHMhDQTPsVUQDUV0k1F
DHMxG8JUxDYWMmV8uoRLE3PpIhZNyIRMhyxg0CCETBqfTuXT0U4WXMKaR8MA
opBYZAMWyQCoBBkClxBRZpIMGIYbGIbrl+6TDejk9QzKeibVgE41pFFJVAqJ
QibRKWj7DL6hBO+ImXEp5jwa6uXgsix4bEvAloBty2fbCFg2AqYNn2HLZ9gL
GA5C1kYxy0nM2iRibxFzXCS8rVK+q0zgZgQhhIWLhA83t4i5m0UcyHDpKuV6
iJg+Yka4KT/N0aTU12lvjGdzknf7nuAjNcl/OFzx1z/2fPjaIyffegZo9eVb
z37+92c/e/e5k++/eOrjV7/7ElcCv3v/wpnPL549dennby7/8t3li2i4FXII
/LXL4gLh0Ye9j64NYeOjoaE7tqt+u7bq12mr5TkdfVhVLeUVwzh0Rao1P711
h3YJi1pipNT9NzOsiYA1Q3n3s70qPVPWFdrnHtrqbrRac9dMF2tWAldoqzU3
5nSX/2qJ716cWgU4WIwQBUCCWXjfaqnFQrlUBkSQAlU1jvwo1EAoglOgqgBV
C7dn5hfnpxGqgFOLk4uLCFWz8+qZOc3UrFo7g8qFU4CqmQnIGFtT2IRiCs36
nZ3BhuozM4St+nKemSNGgSA/QKSttCtOUemjSh9D/1ol8FdjwPtj1XJJkDgs
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
99Zt31cV21Ea3VEQ1VkY21Oa2FGyo708sasqubMysa0ioa0yoQtVCJO6qpF5
YEdtbGdt7L7G7fubEg61xB9ujjm4F4AF8iqkuzp4X00wXoDCCu6oCGwvD2gt
9cd9g/5tRT6t+V4ted7NudsasjzqdntUZbiXp7mVprgVJbqiFsEdrrnxW7Nj
twKkMiKd0iOdUsM3poY5JoduTApx2Bm6cWe4085w5+Qw550RzjsjN+0M35Qc
7ghaLC3SPiPKYVeM0+6YTXtiN4EEg++wJ9YlJ8EtL3FbfqJX/k7v4hS/0l3+
ZXsCICqyAquyg6tzgmtyQ2rRKa3wvUXRzSUxrWVxHVXx3TU79zcmHW7debwr
7aGeXSc60x9oSQQ099TGtJYGN+b71+zxKk9zzYt3TAs1jfeWRm2WBVgLXCVU
Z76hs4DkKCDZcknmIFUYG4wYG2QMMvJEYjOkLLoxi2nKYhozGdgiiW3CYxtz
8XxGAddEyDMV883EAnOpwEwqtJIJbSU8B7QphvbFHMRsRxHbScx0FDEcBVQn
HsmRa7iRY+DIMXCCBY9sx6fY8sg2XBKgyoJjYMkxsGCvt2BDNjBnboCAhSXH
0JJlaM2g2DJpdiyaDYtqzaZZs2hWbDqyFkQFTLY1hJBjLeLaCdkuPMMgGS3G
QphgLUuxMYOIN5HGSMXx5qYJNpa73Tc3JW9/uLr4jRMHPnrlyVMfvHju67eB
WT99+sa5z97+9p3Xvv7bq9++89dTb7/23Xtv/Xzqo+tnv+679OPgtXODAxcJ
Cwtirj3RuI7ng/TJhwFAgyOoEjiALkfuGHmvP0RYvjxTGI1EhP/nIxf0lYpJ
tXyUVX8fX9e1rv9RfJ8f9XdTRvfoHLhbKW/Fh79qlautTkbpayj9PazVL77/
N7bmW1XeaWmovLODXaXXdkL8NHS9/Us/WxXasRpVjaiV8Hk0MqaQq+SDo/Ih
lXx4FMXQqGJ4TDk0phpSw1fBtx0dUKr7leqBUc3g2Pjw2MSIelI+qhkaGx8Z
145qZzTYSQLNPAQBpV28Pbm4OLlwe2Ie2c9Ozt9WzyyotLPKyRnF+IxcQ+Rp
5fiMGnEKQQrZAs7e1s4sopmJeD0zs4CO+k7PT01BnsUNFUvbTDN6eXoGL9CE
eu3U9CTKS4d8cdcftqtF6gk+uifxB/jkcq1tXLPaUP3+d6zWPAi8Ziy/4Ldo
qztVlv6L9bTVuO5yXHdv2Q0DrrWYwXg/a+mBfyBE0+A40TQIzIIAZinRVIJ+
ufLWiOKGXHlToQIlNazA4kouB1rB7yYu/47eGpZfl6uuAbDkqotDivP9wz/1
DX574/onl3/52+nvXvrso8fefG3fs09UPPZAzrHutEPNib11CQdqEw5VJx2o
2NFZGNNRHA+06qhIai+PbymNay2Lba+I66za3lm9vb0mpq0qur06uqsutrsh
tqcx9mBTzMGGyP314bgkGEooLEBVZ2VQR0VAe7l/Wxmgyret1K+10Lst36s1
f4lWtXvccT3QvTTFFW1g7XAFWuUluObEuewB3EQ7g7YCkZUStnFniENisH1i
iMMOiOCNEAnBG7cHO8ajhX1ikG1SiG1ymF0KoC3CKS0SvhBJsF3RLnvi3DK3
u2Vv98xJ2Jaf5FOY4luU6gMBaqtsV2D57qCKPcFlu9GiOiesNi+iPj9qb1Fs
cykqinbWxPY2Jh1pTTvalv5AW8oDramQjzQlHmyI662O6aoIbysJbMj1rtnl
WRLnmhu2KWWbdewW47CNYl9LtqsRzUlMshOSrHmGZmxDU5aBCctQRl9vzKCY
MWlG6NATGTWN02kiGkVIJYvpVBEdTXIUA9Q4LCm2HDTjMsw5TNShwWNY8pjW
PLoNyjRrLsWaQ7Jmk2zYhjYcEFMAR4o1j2zNQ9mKR7HiorUVl2TBNjRnGeAw
BFRZwctYZBs6yY5BsWdS7JhkOybFhkGyYZBt2TQbNtWaQ7HmUm14NFsB3YFH
dReQQozp263FOx1M0+wtdlpbbDc2CuFyQ/mCEAE/yli6x92lOSn26Zbqt//w
wGfvPH3my9d/+PjVHz7489dvPv/Bs4+99eixPx8/+NZTj3z66vOnP3336plT
/Zd+HLixRCt80uoG1lZ9aArVMFHZ+3XE/AjqY7+DVnI8d17fkWmFtiLGUem3
+a04CKxcHpi4gk06vfNvaivdd9an1f1rq7t5sOtLqv8xWq14ezr1t7r2qL8J
OKaUEwHAUiFUIUipVSNjyuExxfAoZAhU8RtUa4ZHxwfHCFSNA6Tk6gnFuFY1
MTWGimyz2tn5aQSZxdmphQU0wgM01MwibqJAm1PKiVnA04h6anhMCwELCKAV
llR4AP3c4sz84gyCFLJcn8WzqGamCZckJKLw0SmtrtlvzdA3ptDvACQy0eaN
zytpUJVs4l6G6v+ege2aY0R+60OzYqHXE3inoFr10NFrcvlBwAp3lUziiugE
VpoaHOOEzhpTY7Om0T7F6C3Ux64YHBkZXgo58SsJ/8jpGxq5qlBdU45dVamv
qdRXlWOXlaM/Dw19NzjwVf/NT69c+PsP37zw4TsPvvVK99OPlD3Uk9lTn9BZ
EdVdEbsPqFQS3V0e31mF6oFt5bGtZTFt5XFAq47KuPaquLaKqLaKSMjtVdGd
NVH76qMONsbsrwdagbyKwPXAsO7qpT0s3CgY2FaG5BXyFSzybSvwackDeeXV
mO1Zt8ejdrdnZbpHWapbcRIAy61op0dhknv+jq1ZcVtAH4G2AgDtDLHfEWSX
EGiLwy4+0HZ7oE2cv22sn220n3W0r2Wcv+X2AMuEIJvEELvEYIfEEPukkI2A
tuQwp9SITWmRW9KiXDKi3TLjPLITPHJ2bIPIS/IuSCbg5QcLiOI0/9KMwLJd
QZWZoTU5EfUFkXuLw1vLY7uq4/fVJuyvTzq4F4CVdqJ914Ot6cfbYJH2YGvq
0aadDzQk9hZHd+WEN2UEViV6FUZvTfezi3c3DXMSB9jxt1kwXWQUR5GhHX+9
Ffu/LFkbLJgkUwrJhLzBmGJghK2QJBAk1JInphlKaBQpgyZl0mXISQmCZsSk
G6P6Ic2URTNj0VGfBtEdQSebMIjGP1TEs+RSLLk0Sy7Vmk+3FTJshEwbAcOK
RyNa6634dLi0E7EcBMyNbKoTh+bMpW3iUSE7c6mOHPJGDtmBTbLnGNixN0DY
cw0c2Bs8+AahJowddtJUR4sMR6tkG/NYqSSIzQnmcANYjAAuc7ulcYGP29HC
PS8fa/v7n098/cFzX7/z3Jev/f7txw891VpzrDyvJ3/XU11733n60W/ff/3K
mS/7r58ZWOpdv4y1FdG4fgu01TKtkLZa8lRHboF3GtguNwr+a9pKJ6/u1hC4
Zu3u/lmzJrx+k7a6R0OF/oGv1XtJ/6lKoP5PQHXndpv+vwF0kkr/jpIYOo+7
/kZHRwidRZQE1WPysdERIuAmGrU8NqQZBzE1pJkc0UzKNZNK0FPj2jEtHpU4
Oz87vzA/v4CsaOduL07NL4zPgphaHEWQmgMlBWAaGtMOjU5CDKomIGNaTasm
ZlHRb4ZA1e3Zhduzc7dn0UTghZmZ2zPTi4SNEjrzi2ClXdGIvjr029H1GypW
jAK5Tx79b9NqFb3um1b6thh3AouYNanBqEK0Qo4gsxNE3+ASs+CfJWMDyjHi
8MigXI4CDcZC808h+pC2Ul5XqK4rR2+oINQ3VGNXhod+Gh46PTT4Q3/fqetX
Pjx/+q/fn/rTe28/8JfnW588Wni4Jbm7Jq6rKnZfDbIE7KqM6wBIlUV3lMd0
VsTCZVdVTEdlTDueqNhWFgHM6qyM3FcdhRotEKd0tApf6rioDOkoD2ovC2wr
DWgt8Ue50Lc136ctH4DlszfHuyHLqz7Tq3rXtgoAVop7SbJ7cbIHAKsg0S0n
3iUzdvPuKKe0MIedwQApm4QA2x0YWJhWtnH+NrH+NlE+1tE+VjH+lhBxAbbx
Qbbbg+zQs4F2sf7wMruEoI3xwU4JwY5JYZtTI1x3xbjujt26J841K949K36J
XNkJnhD5O70JeJWkg9QKAWZV54bV5Yc3FEY0FkY2l0a1l8d1V+84UL/zUEPy
A82px1szTrTteqhj92MdmQ/XJ5+oSXqwJvFoRcKB4piWzODqZK+CmC2ZIfbJ
PhZxWyWhTjx/G7qXOdnViLpJSHfgkG0ZG2zoBha0Dea09abk9SbkdSaU9cZU
QBimGNVQis5DUcQ0pLkgg/iSMGgSOk1Mp4AcE1HRYGI0lZhBlwLC2HRzNtWC
TbPiMmz4LDshB4WIMNxAYS/mOkoFTkaiLUYCDynXQ8rzlPG2GfG2GfO9TPie
Rmx3McNVRNnMIzlx1zuyf7eR9TtH5v91464LNqYn2svSHS0znKyTrc1ipaIA
BoOIQDY9QipIdrBs2h7++/byN5499Ombj5/865MfPn302baq7vT4xriwzvQd
T3fWf/T8k6c/ffPauZN9N8/0DZzDR4MJP1vCcAlN+B3WaSs9WhFnhH/tpsDM
0ifXb6WVPrPWBNa/pq10hbLRO0/46pfO7k0rfUWjj6f7afzQ6a/Rf89k425/
WdWq0Y0rQkV0UKBRU0NjwCwVUk8ISarB0VF0R6ORq9UjGrVcox5RowH08G6H
1UhMjWi0SiymxvGMDu3swhxAan5hcWERu6XPL87O356cWdBML4xNzY1OzCg0
2pFRdPIKhJlcPTkyhkKu1irH0Rh6zdQ8rgESqEIZVBUaRg/CCkTazPyyAy2y
oFjBoDVDn0c6N3Xds3Dzf51W91H6u+vL/gVttQJYmFlEk4laD1hIYeGbo7h1
UIn+ZQL/xcaWemzw0RLs5ImPWI4oro8oUbVwOW4oRm8oVYAw5No0PHx2aODb
W9c/vXb5H2e+f/m7k898/M7xPz+z95FD2fubEztrorur47oBTKWRbaURHWWR
neVRSHmBmKqM7gBtVRbRWhLWXhbRUQ5PhXdXhWMxRXCKWIehLouqkPaKoLby
wNaygJZS/1bQVoV+bQW+7QU+rfm+Tbk+jdk+DVnetZne1bu9KtI9y1I9S1I8
AFggr/IStmbHbd4T5ZweujEpyGZHkE0SqvjZ7QjGOivIPh5Tabu/XZy/XWyg
TUyATWygLQQsooFifjaRvtaRviC+bKN87aJ9HWIDnBJCNieHb04NdwbBlR61
ZVfM1t2xrnvi3CBDALCAXLloh8unKNUfmFWyK6h8d3BlZkhVVmhtbgQaWFy2
vb08vrsq8WBdyqGG1Aea0h9s3fNYR9YTbbufat39h/Y9T7Xtfrwp7XjNjkNl
MV15oS2Z/vWp28oTNhdGO2QFW6T7Gid6mEY7mwTbirxN2e4S2mYByZGzwZ65
3oG1wY65wZq+3pKyzpz0/0wN/8uItE6KrGhJQip2+aOQBGQSn0wSoMohGi6M
BhDTqAIGXYhsbOnGdKopA4DFsOKyiBZ6OwHPXsS3RVmwUSJyNpJuMpFtNZV6
m0l9zSX+lrIgG+NgW+MQe+MQOyN/C5GvGWebjO4mMNzKW7+F9zsX7n958taF
mzCS7GVpTua7HG2SbcziZGJfKsmHYuhPp4ZwmZESfoK5tNzf45HG/LefO/TZ
6499+dqj7z/e82RFdmOET32o95Plue8/cvjcP1678v0HNy+dunHzx2u3ztzq
WxprBdqK2LpCJcFhLK9GloZVEZXA5cGLazdd3I1WKyqBa2qrNSl2N6GxWm7c
TVutxtAKiaSPgDULa6t5cW+a6F/e7Q38JjCtWOt+jKo7N+x05sDLIMMtK4hW
g6NoMQiQGhtDl2r18Pj4iEYzrNGMjI/LcR5BQ9Un5OMYVXj0PB7tgTB1e2Hh
Nsgq4NTc3OL09KJ2apE42wuhGtcq1JMQ8rEJpWZydGIK7hDnfzVTc8izYmZB
O4f8AAFVc4u3gXQgrPAYesAWGkM/PT0/PT2HbJOWbdL/BVqteamPm/sH0z0b
1P+tLot7MGuFqeAK6fSbgAX/i80uJvDoyQnUMzmla5JU44ZJjR6z5Lg2CP+3
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
yzJpZenU8nQaYFZZGrUyAyKsKCGyMC58TTy+JIm0JpFYpCDmy8IAqrKjg7JH
aJUdHZwZvSpNGpAq8U+V+KUAVEGpFZAshB1GYGw7spkFDRhMMPrFsfzkTJyM
gY2l+0bRMFIaBnrdKT4iireI7CMkI+t7ZHAFJ6X5R9ECJZQAERknIPpwIl3Z
+JXsCECrlYzwlSizGOBmuBsz3IMZ7g7HsOGRFebODvfkRHhxIjzBhBXmiW6K
8SIxnAgMNwJMcAKCP5/gzyX6cwl+HDyOjcdxwJzkzyH4sSKxPKK/kLpKTA8W
00NEtGARJUhCCRKRAgV4f14kFjwU+MGiaQEJvFDArIJ4WmkatzpXvLYwekNx
7PpS+cZyxeaqhC01CVtrk7Y3pOxqSt3TnH5gk/KlzTkvb85+qUW5f2MWGF/e
nPPSpryXN+W8tCFr37q03WuTd9YptlfHbK2QbikXvVjK3VjEaMol1WeE1yUH
Vcf41Eq9aqJ86mT+61OJu9aIX2lIe21j/t+2lvxjX/W7rzZ98reWr97fffyL
QyeO/u3EN+/8+O17Px//8NSJT3459eWV88dvXj5558a5tlvnO1ovdbRebr9z
ufXWxVvXz9+4cvrm1TO3b54DF3u7bvbBLlcAVTc7OwGtbnV2AWC1dve2wREA
q6+jp68dbgwhKeu9KvBE7byHmOHqhl1oka2rxzYEqsa1x0Jv/qa2GsOp8Xee
CInUf4Apved+MKkQkxWco4YrMKKGYb1eDe8MT+92wEIP8BogjAxQOt1Ldwew
g6oK3q1db+w0mHrAe13UygXDS2GAua2/H4BqwGEftNvvWu1DRvtdk+OuEULq
LtIJcVBnHdCY7GqTHW3qAWll7Nca+3UGq8FoM5r6zVCPDcAOi/a79oGhgUGY
DeiAIYEwOmkApicNIZm0g3YbPFFsswyAORgtZgcYkXJYzcgI96iGrRRwtMBe
i2C0mI3W3zpaZUayKR5GkEes5jnf4T9kVv8f0lbOV52+1/AFRGSNRbnz/4Xh
vi3I2qDVNhzZBJ51MGnQAP5MwJ9kO+w+3NcGqg/GNHWo1X0awCrwH/xDQ/+C
YCMStQ4JyNXfVGmvdKt+7eo93wWk1vV/3fz1k4s/v3362F+Pf77/i7c2f/CX
htf2FB1sSdtWLd2wmtWUTwPAasyjVStpgFOV2bAqlPSKTBri0KBUgnf18MgV
qSwJvyY+DFRJQuSa+MgiBex+mBMbnBsTAiovFua058SGZkXDXKZ0CRBW/qmi
gDQxDGxPEgYgme3YOA5GzvKVsXwRozsuju0Hje5IXlM0wzcKMstHSvWWUBGv
O9lbRPIWk3wkFIyUgo2i+UnIfiISVkj05hHceEQ3Lt6Vi3fjRrpxIlzZ4WgB
NnmwEELBArQKXckMdYMXIbncmKHuzGAPVqgnO8wLjKxQL064DyfClxsBycUK
x7LCMcwwX0aoD5iwI+BNMAcToLD4xAABKRCMoADgOOEYVqgPI9iTEezOCvHg
hHmISeCfBv7VodmxxKIkenkGt1YpbCiQNq6ObiqOWbcGkCu2pVKxrS55z7qM
A5uy9m+EnNrTnLarKWVPc+re9Rl7m5X7mjMPrM/Y35y+tyltb1Py7ob4XbWy
3bWxu2ujdlVLdlaItpXztpWwt+VRtueRt+bRt+Yzd5WIDzUkv74p7509VR8c
XPfpXzcfeWvn1+/vO/bpoR++AsLq7z98/fZP331w+vuPT//0z19OH7l07tj1
iz/eunbmzs1f2lovtrdevnPz4o2r565cPHXu1Le/nP7u1/M/3Lh6BiCsq/M6
6g/s6roDaNUNDwtDYTWsrRADw2h+wr1DqWonYfVY5gpnbTXex/4IbfUwGP13
tNXDiTYRbTXSXgSUsVtv7DIgo87YbTD2IK30Rh8KpZsGKilTr9HcY7KowHtd
q02PhGyb7XZoKIdBRjYgaiA7wGi0DAANBbv3mocb+I42mlcBYCEjuKizDhqg
mIIbT1bbgK1/sN+OCChUQzmcCr0JVBXs9DFsWR81rlugc6L//kJpNXYr6jfX
8X6vTeL/B201cWH1H9ZWE/n4DVqNnteGm1lwZdeIxF8A2aUbjRkEBfuPQGB1
jAKrB4Y1wTPFoNDdVQ2yZK3RtKs0rWptK+z2qL2t0t5Qa2/0dZ9vv3Gs7cY3
bdeOtl756vr5f1768e2zx/7v5JcHj7734nuHq17dqty1Vr6xTNBYxKrLY1Rk
08uzaOVKamU2tTqXXpvLqM4ig6pRUqqzCFXp+IrUiLKU8LKkCMCsorjQfNj3
KigvNjhfFlogCy+Qh+fHhGdHhyolwRniVRmiwHRxYIYkJFUUlCKEHUagsEIS
BVHHYAIPh7gHcUjMIC6WjsS5U32iad5RFC8JxVNCBuUtpXhLyeAKJoqChUeG
4VEsbyHJA5SA6C5ANqd4gFlw3c+NEwZGD3ao+0h5MEJXMEIgsEAxQlzpQa70
VW60Va7UwJW0VW70IHdmCGQWO8ybEeJFC/amBXtRgzxBgQk9BN4EtEKBxYnE
cfF+YAQ1QitvZogXE6LKixvuxY/0BFSN5wBSh+XIiKsBsFI51TmiunxxbZ6o
Nk/cUChdXyoDCmvn2rTd69L3NGfsXpe2Y23y1rr4bfUJ2+uTdjSk7mxIBapq
V0PyzvpEUDtq43ZUR++oitpZJd1RLd5VKd5ZKdpVIThQKX65RvpybezLdYrD
jamvb8p/c0f5+wfWfvLnTV+8sePr9/d/98nB7z975cSXr53419+BtgLC6syJ
T86e/Oz8mS8vnv32yoXvb149DWjVfudi251Lt69fuHrp9MXzP/14/IuTP3x5
+tTXl379CVxsb4MNRLq6bnV33+6GEUytKKfQckaVc86P6v6Oin9gjafVI843
/VGlGdcx5HGdfvdpK4Q+ztoK3EQUFvimeriLrYeQguPIGmCvbthEoTGatCMO
ZI3FqgGvG2gzCOSQLzzzBI15NihtrFDmQKWjNyHqyXivN6La1K8x27UWwCwH
MhkAqDL2D8LcCQiju4h3AmatI/52wKa7tn7Y5qMfKRjuBybIN3PmFNrXFzYD
hHiCx6hGRivyomd8DFqBV86Jbzz9Xnj9IWJqTP0/g4FyMQ==
                    "], {{0, 442}, {570, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {570, 442}, 
                    PlotRange -> {{0, 570}, {0, 442}}], TraditionalForm]], 
                 EdgeForm[{Thickness[Large], Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{241.7606933090101, 458.2393066909899}, {
                   58.760693309010094`, 196.2393066909899}}]}},
               ImageSize->{700, 490},
               PlotRange->{{0, 100}, {0, 70}}], " ", 
              RotationBox[
               ItemBox[
                StyleBox[
                 
                 TemplateBox[{
                  "\"\[DoubleLongLeftArrow]        ancho del pliego:        \
70 cm        \[DoubleLongRightArrow]\""},
                  "RowDefault"],
                 StripOnInput->False,
                 LineColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 FrontFaceColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 BackFaceColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 GraphicsColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 FontFamily->"Gabriola",
                 FontSize->25,
                 FontColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]]],
                StripOnInput->False],
               BoxRotation->1.5707963267948966`]}], ""},
            {
             ItemBox[
              StyleBox[
               
               TemplateBox[{
                "\"\[DoubleLongLeftArrow]        largo del pliego:        100 \
cm        \[DoubleLongRightArrow]\""},
                "RowDefault"],
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               FrontFaceColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               BackFaceColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               GraphicsColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               FontFamily->"Gabriola",
               FontSize->25,
               FontColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]]],
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]],
    DynamicModuleValues:>{}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Answer",ExpressionUUID->\
"3208113f-6768-42f0-a07f-03bd50fa097d"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Problema ",
 
 CounterBox["Section"],
 " (para realizar en la parte derecha)"
}], "Section",ExpressionUUID->"0779930c-f5d8-4834-bd7d-033f323dcae0"],

Cell["\<\
Sandra en el \[UAcute]ltimo espacio debe realizar las siguientes operaciones \
racionales, escribiendo el proceso paso a paso:\
\>", "Text",ExpressionUUID->"3d046369-e1a8-4ba7-869f-734b2a96d813"],

Cell[TextData[{
 "Resolver los siguientes ejercicios en la tercera parte de la cartelera:\na. \
",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox["2", "3"]}], "+", 
     RowBox[{
      FractionBox["2", "3"], 
      RowBox[{"{", 
       RowBox[{"1", "-", 
        RowBox[{
         FractionBox["1", "4"], 
         RowBox[{"(", 
          RowBox[{"2", "\[Divide]", 
           FractionBox["3", "2"]}], ")"}], "4"}], "-", "2"}], "}"}], 
      FractionBox["3", "2"]}]}],
    FontSlant->"Plain"], TraditionalForm]],ExpressionUUID->
  "7cde3570-86c0-49aa-8b5c-14b64fef0cb2"],
 " \nb. ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      StyleBox["3",
       FontSlant->"Plain"], 
      RowBox[{
       StyleBox["(",
        FontSlant->"Plain"], 
       RowBox[{
        FractionBox["2", "3"], "-", 
        FractionBox["1", "3"]}], 
       StyleBox[")",
        FontSlant->"Plain"]}], 
      StyleBox["4",
       FontSlant->"Plain"]}], "-", 
     RowBox[{
      StyleBox["2",
       FontSlant->"Plain"], 
      RowBox[{
       StyleBox["(",
        FontSlant->"Plain"], 
       RowBox[{
        FractionBox["1", "2"], "\[Divide]", 
        FractionBox["1", "3"]}], 
       StyleBox[")",
        FontSlant->"Plain"]}], 
      FractionBox[
       StyleBox["1",
        FontSlant->"Plain"], "2"]}]}],
    FontSlant->"Plain"], TraditionalForm]],ExpressionUUID->
  "c8a33104-dce0-452f-9d00-07612bf249ed"]
}], "Ejercicio",ExpressionUUID->"1263209f-5e95-4dce-b0b2-a304fb1fb7eb"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`framePane$$, $CellContext`textPane$$, \
$CellContext`tabImage$$, $CellContext`tabText$$, $CellContext`style1$$, \
$CellContext`style2$$, $CellContext`style3$$, $CellContext`color1$$ = 
    RGBColor[0, 0, 
     Rational[1, 2]], $CellContext`color2$$ = RGBColor[
    0.2, 0.08, 0.28], $CellContext`color3$$ = RGBColor[
    0.796078431372549, 0.07058823529411765, 0.], $CellContext`tama1$$ = 
    15, $CellContext`tama2$$ = 18, $CellContext`tama3$$ = 
    25, $CellContext`font1$$ = "Georgia", $CellContext`page1$$ = 
    1, $CellContext`page2$$ = 1, $CellContext`page3$$ = 
    1, $CellContext`page4$$ = 1, $CellContext`page5$$ = 
    1, $CellContext`titlePopUp$$, $CellContext`textPopUp$$, \
$CellContext`panelWidth$$ = 750, $CellContext`bodyWidth$$ = 700}, 
    InterpretationBox[Cell[BoxData[
      FormBox[
       TagBox[GridBox[{
          {"\<\"Fracciones equivalentes \[DoubleRightArrow]\"\>", "\<\"       \
  \"\>", 
           TagBox[
            ButtonBox[
             
             InterpretationBox[Cell[
              "  Enlace  ", "Text",ExpressionUUID->
               "ef1402d1-1d24-44a5-bf8e-e34dd69f8ca9"],
              TextCell["  Enlace  ", "Text"]],
             Appearance->Automatic,
             ButtonFunction:>CreateDialog[{
                Pane[
                 Column[{
                   $CellContext`titlePopUp$$[
                   "\!\(\*StyleBox[\"Fracciones\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"equivalentes\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                   $CellContext`textPopUp$$[
                   "Dos fracciones son equivalentes si representan la misma \
cantidad. Por ejemplo, la fracci\[OAcute]n  \
\!\(TraditionalForm\`\*FractionBox[\(1\), \(2\)]\) es equivalente a la fracci\
\[OAcute]n \!\(TraditionalForm\`\*FractionBox[\(2\), \(4\)]\), ya que ambas \
representan la misma cantidad (tomar \
\!\(TraditionalForm\`\*FractionBox[\(1\), \(2\)]\) de una unidad es lo mismo \
que tomar los \!\(TraditionalForm\`\*FractionBox[\(2\), \(4\)]\) de la misma \
unidad)."], 
                   $CellContext`textPopUp$$[
                   "Hay dos formas de obtener fracciones equivalentes, por \!\
\(\*StyleBox[\"simplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) y por \!\(\*StyleBox[\"amplificaci\[OAcute]n\",FontWeight->\"Bold\
\",FontSlant->\"Italic\"]\).\nLa \
\!\(\*StyleBox[\"simplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) consiste en dividir tanto el numerador como el denominador por un \
mismo n\[UAcute]mero. Cuando ya no se puede simplificar m\[AAcute]s, la \
fracci\[OAcute]n que se obtiene se llama fracci\[OAcute]n irreductible.  Por \
ejemplo, \!\(TraditionalForm\`\*FractionBox[\(12\), \(8\)] = \(\*FractionBox[\
\(6\), \(4\)] = \*FractionBox[\(3\), \(2\)]\)\). \nLa \
\!\(\*StyleBox[\"amplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) consiste en multiplicar tanto el numerador como el denominador \
por un mismo n\[UAcute]mero, de esta forma se obtienen infinitas fracciones \
equivalentes. Por ejemplo, \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)] = \
\(\*FractionBox[\(4\), \(6\)] = \(\*FractionBox[\(8\), \(12\)] = \\  ... \)\)\
\)"]}], ImageSize -> {$CellContext`panelWidth$$, $CellContext`bodyWidth$$}, 
                 Scrollbars -> {False, True}]}, Background -> White, Deployed -> 
               True],
             Evaluator->Automatic,
             ImageSize->All,
             Method->"Preemptive"],
            MouseAppearanceTag["LinkHand"]]},
          {"\<\"Operaciones con n\[UAcute]meros racionales \
\[DoubleRightArrow]\"\>", "\<\"         \"\>", 
           TemplateBox[{TagBox[
              ButtonBox[
               InterpretationBox[
                Cell["  Adici\[OAcute]n  ", "Text"], 
                TextCell["  Adici\[OAcute]n  ", "Text"]], ButtonFunction :> 
               CreateDialog[{
                  Pane[
                   Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Adici\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"en\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Una de las formas como se pueden sumar dos racionales es \
que sean \!\(\*StyleBox[\"homog\[EAcute]neas\",FontWeight->\"Bold\",FontSlant-\
>\"Italic\"]\), es decir, que \
\!\(\*StyleBox[\"tengan\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"el\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"mismo\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"denominador\",FontSlant->\"Italic\
\"]\). En este caso, se suman los numeradores y se deja el mismo denominador. \
En otras palabras, \!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)] + \
\*FractionBox[\(c\), \(b\)] = \*FractionBox[\((a + c)\), \(b\)]\). \nPor \
ejemplo, \!\(TraditionalForm\`\*FractionBox[\(3\), \(5\)] + \*FractionBox[\(6\
\), \(5\)] = \(\*FractionBox[\((3 + 6)\), \(5\)] = \*FractionBox[\(9\), \
\(5\)]\)\).\nEn el caso de tener denominadores diferentes,  las fracciones \
son \!\(\*StyleBox[\"heterog\[EAcute]neas\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\), es necesario encontrar fracciones equivalentes para convertirlas \
en fracciones homog\[EAcute]neas y as\[IAcute] poder sumarlas. Se explicar\
\[AAcute]n dos m\[EAcute]todos para realizar estas sumas."], 
                    $CellContext`textPopUp$$[
                    "\!\(\*StyleBox[\"M\[EAcute]todo\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"1\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\
\):\n\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"a\", \"b\
\"], \"+\", FractionBox[\"c\", \"d\"]}], \"=\", \
RowBox[{RowBox[{FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \
\", \"d\"}]], \"+\", FractionBox[RowBox[{\"b\", \" \", \"c\"}], \
RowBox[{\"b\", \" \", \"d\"}]]}], \"=\", FractionBox[RowBox[{RowBox[{\"a\", \
\" \", \"d\"}], \"+\", RowBox[{\"b\", \" \", \"c\"}]}], RowBox[{\"b\", \" \", \
\"d\"}]]}]}]}\n     },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
Observe que el com\[UAcute]n denominador se obtiene multiplicando los \
denominadores.\nEjemplo: \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \
\*FractionBox[\(5\), \(12\)] = \(\*FractionBox[\((36 + 20)\), \(48\)] = \
\*FractionBox[\(56\), \(48\)]\)\). Es necesario simplificar esta fracci\
\[OAcute]n, luego, \!\(TraditionalForm\`\*FractionBox[\(56\), \(48\)] = \
\*FractionBox[\(7\), \(6\)]\). Por lo que\n \
\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \*FractionBox[\(5\), \
\(12\)] = \*FractionBox[\(7\), \(6\)]\). \nEste m\[EAcute]todo es muy \
dispendioso, ya que los n\[UAcute]meros con los que se trabajan son muy \
grandes y exige el proceso de simplificaci\[OAcute]n. Adem\[AAcute]s, si son \
m\[AAcute]s de dos n\[UAcute]meros los que se van a sumar, implica la \
multiplicaci\[OAcute]n del numerador por todos los dem\[AAcute]s \
denominadores, tarea bastante pesada."], 
                    $CellContext`textPopUp$$[
                    "\!\(\*StyleBox[\"M\[EAcute]todo\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"2\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\
\):\nAntes de realizar la suma, se encuentra el \
\!\(\*StyleBox[\"m\[IAcute]nimo\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"com\[UAcute]n\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"m\
\[UAcute]ltiplo\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"denominadores\",FontSlant->\"\
Italic\"]\) (recuerden que el m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo \
entre dos o m\[AAcute]s n\[UAcute]meros, es el producto de los factores \
comunes con su mayor exponente por los no comunes), para amplificar cada \
fracci\[OAcute]n de tal forma que todas tengan como denominador el \
m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo y luego sumar como fracciones \
homog\[EAcute]neas. Observe la suma realizada con el m\[EAcute]todo 1, \
haciendo uso de este m\[EAcute]todo, \
\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \*FractionBox[\(5\), \
\(12\)]\).\nLa descomposici\[OAcute]n en factores de los denominadores es: \!\
\(TraditionalForm\`4 = \*SuperscriptBox[\(2\), \(2\)]\)  y \
\!\(TraditionalForm\`12 = 3 \*SuperscriptBox[\(\:22192\), \(2\)]\), por lo \
que el m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo de los denominadores es: \
\!\(TraditionalForm\`3 \*SuperscriptBox[\(\:22192\), \(2\)] = 12\) (observe \
que \!\(TraditionalForm\`\*SuperscriptBox[\(2\), \(2\)]\) es factor com\
\[UAcute]n en ambos n\[UAcute]meros y \!\(TraditionalForm\`3\) es no com\
\[UAcute]n). La tarea ahora es amplificar ambas fracciones de tal manera que \
el denominador sea \!\(TraditionalForm\`12\).\n \
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"3\", \"4\"], \
\"+\", FractionBox[\"5\", \"12\"]}], \"=\", \
RowBox[{RowBox[{FractionBox[RowBox[{\"(\", RowBox[{\"3\", \" \", \"3\"}], \")\
\"}], RowBox[{\"(\", RowBox[{\"4\", \" \", \"3\"}], \")\"}]], \"+\", \
FractionBox[\"5\", \"12\"]}], \"=\", RowBox[{RowBox[{FractionBox[\"9\", \
\"12\"], \"+\", FractionBox[\"5\", \"12\"]}], \"=\", RowBox[{FractionBox[\"14\
\", \"12\"], \"=\", FractionBox[\"7\", \"6\"]}]}]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
Este m\[EAcute]todo trabaja con n\[UAcute]meros m\[AAcute]s peque\[NTilde]os \
y eso evita que se cometan errores de c\[AAcute]lculo."], 
                    $CellContext`textPopUp$$[
                    "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\):"], 
                    $CellContext`textPopUp$$[
                    "1. \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] - \
\*FractionBox[\(2\), \(5\)] + \*FractionBox[\(5\), \(2\)] - 3\)\n\
\!\(TraditionalForm\`m . c . m\\ \((4, 5, 2)\) = 20\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`20\).\n\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] - \*FractionBox[\(2\
\), \(5\)] + \*FractionBox[\(5\), \(2\)] - 3 = \(\*FractionBox[\(3\\ 5\), \(4\
\\ 5\)] - \*FractionBox[\(2\\ 4\), \(5\\ 4\)] + \*FractionBox[\(5\\ 10\), \(2\
\\ 10\)] - \*FractionBox[\(3\\ 20\), \(1\\ 20\)] = \(\*FractionBox[\(15\), \
\(20\)] - \*FractionBox[\(8\), \(20\)] + \*FractionBox[\(50\), \(20\)] - \
\*FractionBox[\(60\), \(20\)] = \(-\*FractionBox[\(3\), \(20\)]\)\)\)\)."], 
                    $CellContext`textPopUp$$[
                    "2. \!\(TraditionalForm\`2 - \*FractionBox[\(1\), \(3\)] \
+ \*FractionBox[\(5\), \(6\)] - \*FractionBox[\(3\), \(4\)]\)\n\
\!\(TraditionalForm\`m . c . m\\ \((1, 3, 6, 4)\) = 12\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`12\).\n\!\(TraditionalForm\`2 - \*FractionBox[\(1\), \(3\)] + \
\*FractionBox[\(5\), \(6\)] - \*FractionBox[\(3\), \(4\)] = \
\(\*FractionBox[\(24\), \(12\)] - \*FractionBox[\(4\), \(12\)] + \
\*FractionBox[\(10\), \(12\)] - \*FractionBox[\(9\), \(12\)] = \
\(\*FractionBox[\(21\), \(12\)] = \*FractionBox[\(7\), \(4\)]\)\)\)."], 
                    $CellContext`textPopUp$$[
                    "3. \!\(TraditionalForm\`\*FractionBox[\(3\), \(20\)] - \
\*FractionBox[\(7\), \(10\)] + \*FractionBox[\(1\), \(4\)] - 1\)\n\
\!\(TraditionalForm\`m . c . m\\ \((20, 10, 4, 1)\) = 20\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`20\).\n\!\(TraditionalForm\`\*FractionBox[\(3\), \(20\)] - \
\*FractionBox[\(7\), \(10\)] + \*FractionBox[\(1\), \(4\)] - 1 = \
\(\*FractionBox[\(3\), \(20\)] - \*FractionBox[\(14\), \(20\)] + \
\*FractionBox[\(5\), \(20\)] - \*FractionBox[\(20\), \(20\)] = \
\(\*FractionBox[\(-26\), \(20\)] = \(-\*FractionBox[\(13\), \(10\)]\)\)\)\)"], 
                    $CellContext`textPopUp$$[
                    "4. \!\(TraditionalForm\`\(-\*FractionBox[\(1\), \(2\)]\) \
+ \*FractionBox[\(3\), \(5\)] - \*FractionBox[\(1\), \(6\)] + \
\*FractionBox[\(2\), \(3\)]\)\n\!\(TraditionalForm\`m . c . m\\ \((2, 5, 6, \
3)\) = 30\), luego se deben amplificar las fracciones para que queden con \
denominador \!\(TraditionalForm\`30\).\n\
\!\(TraditionalForm\`\(-\*FractionBox[\(1\), \(2\)]\) + \*FractionBox[\(3\), \
\(5\)] - \*FractionBox[\(1\), \(6\)] + \*FractionBox[\(2\), \(3\)] = \
\(\(-\*FractionBox[\(15\), \(30\)]\) + \*FractionBox[\(18\), \(30\)] - \
\*FractionBox[\(5\), \(30\)] + \*FractionBox[\(20\), \(30\)] = \
\(\*FractionBox[\(18\), \(30\)] = \*FractionBox[\(3\), \(5\)]\)\)\)."]}], 
                   ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                  Deployed -> True], ImageSize -> All, Appearance -> 
               Automatic, Evaluator -> Automatic, Method -> "Preemptive"], 
              MouseAppearanceTag["LinkHand"]],"",RowBox[{"\"     \"", " ", 
               TagBox[
                ButtonBox[
                 InterpretationBox[
                  Cell["  Multiplicaci\[OAcute]n  ", "Text"], 
                  TextCell["  Multiplicaci\[OAcute]n  ", "Text"]], 
                 ButtonFunction :> CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Multiplicaci\[OAcute]n\",FontSlant->\"\
Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"en\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Para multiplicar dos n\[UAcute]meros racionales, se \
multiplica el numerador con el numerador y el denominador con el denominador. \
Se aconseja simplificar antes de multiplicar, recuerden que la multiplicaci\
\[OAcute]n es conmutativa, por lo que el orden de los factores no afecta el \
producto. Es decir:\n\!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)] \:2219 \
\*FractionBox[\(c\), \(d\)] = \*FractionBox[\(a\[CenterDot]c\), \(d\
\[CenterDot]b\)]\)  con \!\(TraditionalForm\`b, d \[NotEqual] 0\)."], 
                    $CellContext`textPopUp$$[
                    "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\):"], 
                    $CellContext`textPopUp$$[
                    "1. \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)]\
\[CenterDot]\*FractionBox[\(4\), \(5\)] = \*FractionBox[\(8\), \(15\)]\)  \
fracci\[OAcute]n irreductible."], 
                    $CellContext`textPopUp$$[
                    "2. \!\(TraditionalForm\`\*FractionBox[\(12\), \(7\)]\
\[CenterDot]\*FractionBox[\(14\), \(9\)]\), para dar soluci\[OAcute]n a este \
ejercicio, se va a realizar de dos formas, una es m\[AAcute]s dispendiosa que \
la otra, as\[IAcute] que compare y elija la forma que permita menos errores.\n\
\!\(\*StyleBox[\"Forma\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"1\",FontSlant->\"Italic\"]\):\n\!\
\(TraditionalForm\`\*FractionBox[\(12\), \(7\)] \:2219 \*FractionBox[\(14\), \
\(9\)] = \*FractionBox[\(168\), \(63\)]\), multiplicando numerador por \
numerador y denominador por denominador \n\
\!\(TraditionalForm\`\(\(=\)\*FractionBox[\(56\), \(21\)]\)\), simplificando \
por 3\n\!\(TraditionalForm\`\(\(=\)\*FractionBox[\(8\), \(3\)]\)\), \
simplificando por 7\n\
\!\(\*StyleBox[\"Forma\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"2\",FontSlant->\"Italic\"]\):\n\!\
\(TraditionalForm\`\*FractionBox[\(12\), \(7\)] \:2219 \*FractionBox[\(14\), \
\(9\)] = \(\*FractionBox[\(12\\ 14\), \(7\\ 9\)] = \
\(\*FractionBox[\(\(4\)\(\\ \)\(2\)\(\\ \)\), \(1\\ 3\)] = \
\*FractionBox[\(8\), \(3\)]\)\)\), antes de multiplicar se simplifica: \
tercera de 12 es 4 y tercera de 9 es 3, s\[EAcute]ptima de 14 es 2 y s\
\[EAcute]ptima de 7 es 1,  \
\!\(\*StyleBox[\"solo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"se\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"puede\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"simplificar\"\
,FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"cuando\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"se\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplica\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)."], 
                    $CellContext`textPopUp$$[
                    "3. \!\(TraditionalForm\`2\\ \*FractionBox[\(4\), \(9\)] \
= \*FractionBox[\(8\), \(9\)]\)."], 
                    $CellContext`textPopUp$$[
                    "4. \!\(TraditionalForm\`\*FractionBox[\(2\), \(7\)]\\ \
\((\*FractionBox[\(1\), \(9\)])\) \((\*FractionBox[\(21\), \(4\)])\) = \
\(\*FractionBox[\(2\\ 1\\ 21\), \(7\\ 9\\ 4\)] = \(\*FractionBox[\(1\\ 1\\ \
1\), \(1\\ 3\\ 2\)] = \*FractionBox[\(1\), \(6\)]\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                    Deployed -> True], ImageSize -> All, Appearance -> 
                 Automatic, Evaluator -> Automatic, Method -> "Preemptive"], 
                MouseAppearanceTag["LinkHand"]]}],"\"     \"",TagBox[
              ButtonBox[
               InterpretationBox[
                Cell["  Divisi\[OAcute]n  ", "Text"], 
                TextCell["  Divisi\[OAcute]n  ", "Text"]], ButtonFunction :> 
               CreateDialog[{
                  Pane[
                   Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Divisi\[OAcute]n\",FontSlant->\"Italic\"\
,FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"en\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n de n\[UAcute]meros racionales se \
define como la multiplicaci\[OAcute]n del dividendo por el rec\[IAcute]proco \
del divisor. Por esta raz\[OAcute]n, la divisi\[OAcute]n es una multiplicaci\
\[OAcute]n. Es decir:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"a\", \"b\"], \
\"\[Divide]\", FractionBox[\"c\", \"d\"]}], \"=\", \
RowBox[{RowBox[{FractionBox[\"a\", \"b\"], \"\[Times]\", FractionBox[\"d\", \
\"c\"]}], \"=\", FractionBox[RowBox[{\"a\", \"\[Times]\", \"d\"}], \
RowBox[{\"b\", \"\[Times]\", \"c\"}]]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
Recuerden que la divisi\[OAcute]n se puede escribir como una \
fracci\[OAcute]n, en este caso:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{FractionBox[FractionBox[\"a\", \
\"b\"], FractionBox[\"c\", \"d\"]], \"=\", FractionBox[RowBox[{\"a\", \"\
\[Times]\", \"d\"}], RowBox[{\"b\", \"\[Times]\", \"c\"}]]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\npor \
lo que se dice que esa divisi\[OAcute]n es igual al producto de los extremos \
(est\[AAcute]n por fuera) sobre el producto de los medios (n\[UAcute]meros \
que quedan dentro)."], 
                    $CellContext`textPopUp$$[
                    "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\):"], 
                    $CellContext`textPopUp$$[
                    "1. \!\(TraditionalForm\`\*FractionBox[\(2\), \(4\)]\
\[Divide]\*FractionBox[\(1\), \(2\)] = \(\*FractionBox[\(2\), \(4\)]\
\[CenterDot]\*FractionBox[\(2\), \(1\)] = \(\*FractionBox[\(2\\ 2\), \(4\\ \
1\)] = 1\)\)\)."], 
                    $CellContext`textPopUp$$[
                    "2. \!\(TraditionalForm\`\*FractionBox[\(1\), \(4\)]\
\[Divide]2 = \(\*FractionBox[\(1\), \(4\)]\[Cross]\*FractionBox[\(1\), \(2\)] \
= \*FractionBox[\(1\), \(8\)]\)\)."], 
                    $CellContext`textPopUp$$[
                    "3. \!\(TraditionalForm\`\*FractionBox[FractionBox[\(2\), \
\(7\)], \(-\*FractionBox[\(3\), \(4\)]\)] = \(\(-\*FractionBox[\(4\\ 2\), \(7\
\\ 3\)]\) = \(-\*FractionBox[\(8\), \(21\)]\)\)\)."], 
                    $CellContext`textPopUp$$[""]}], 
                   ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                  Deployed -> True], ImageSize -> All, Appearance -> 
               Automatic, Evaluator -> Automatic, Method -> "Preemptive"], 
              MouseAppearanceTag["LinkHand"]]},
            "RowDefault"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"], TraditionalForm]], "Multimedia",ExpressionUUID->
      "da3e7a88-6f98-4e8d-8a03-64a65cb70f57"],
     TextCell[
      Grid[{{"Fracciones equivalentes \[DoubleRightArrow]", "         ", 
         MouseAppearance[
          Button[
           TextCell["  Enlace  ", "Text"], 
           CreateDialog[{
             Pane[
              Column[{
                $CellContext`titlePopUp$$[
                "\!\(\*StyleBox[\"Fracciones\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"equivalentes\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                $CellContext`textPopUp$$[
                "Dos fracciones son equivalentes si representan la misma \
cantidad. Por ejemplo, la fracci\[OAcute]n  \
\!\(TraditionalForm\`\*FractionBox[\(1\), \(2\)]\) es equivalente a la fracci\
\[OAcute]n \!\(TraditionalForm\`\*FractionBox[\(2\), \(4\)]\), ya que ambas \
representan la misma cantidad (tomar \
\!\(TraditionalForm\`\*FractionBox[\(1\), \(2\)]\) de una unidad es lo mismo \
que tomar los \!\(TraditionalForm\`\*FractionBox[\(2\), \(4\)]\) de la misma \
unidad)."], 
                $CellContext`textPopUp$$[
                "Hay dos formas de obtener fracciones equivalentes, por \
\!\(\*StyleBox[\"simplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) y por \!\(\*StyleBox[\"amplificaci\[OAcute]n\",FontWeight->\"Bold\
\",FontSlant->\"Italic\"]\).\nLa \
\!\(\*StyleBox[\"simplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) consiste en dividir tanto el numerador como el denominador por un \
mismo n\[UAcute]mero. Cuando ya no se puede simplificar m\[AAcute]s, la \
fracci\[OAcute]n que se obtiene se llama fracci\[OAcute]n irreductible.  Por \
ejemplo, \!\(TraditionalForm\`\*FractionBox[\(12\), \(8\)] = \(\*FractionBox[\
\(6\), \(4\)] = \*FractionBox[\(3\), \(2\)]\)\). \nLa \
\!\(\*StyleBox[\"amplificaci\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\) consiste en multiplicar tanto el numerador como el denominador \
por un mismo n\[UAcute]mero, de esta forma se obtienen infinitas fracciones \
equivalentes. Por ejemplo, \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)] = \
\(\*FractionBox[\(4\), \(6\)] = \(\*FractionBox[\(8\), \(12\)] = \\  ... \)\)\
\)"]}], ImageSize -> {$CellContext`panelWidth$$, $CellContext`bodyWidth$$}, 
              Scrollbars -> {False, True}]}, Background -> White, Deployed -> 
            True], ImageSize -> All], "LinkHand"]}, {
        "Operaciones con n\[UAcute]meros racionales \[DoubleRightArrow]", 
         "         ", 
         Row[{
           MouseAppearance[
            Button[
             TextCell["  Adici\[OAcute]n  ", "Text"], 
             CreateDialog[{
               Pane[
                Column[{
                  $CellContext`titlePopUp$$[
                  "\!\(\*StyleBox[\"Adici\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"en\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                  $CellContext`textPopUp$$[
                  "Una de las formas como se pueden sumar dos racionales es \
que sean \!\(\*StyleBox[\"homog\[EAcute]neas\",FontWeight->\"Bold\",FontSlant-\
>\"Italic\"]\), es decir, que \
\!\(\*StyleBox[\"tengan\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"el\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"mismo\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"denominador\",FontSlant->\"Italic\
\"]\). En este caso, se suman los numeradores y se deja el mismo denominador. \
En otras palabras, \!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)] + \
\*FractionBox[\(c\), \(b\)] = \*FractionBox[\((a + c)\), \(b\)]\). \nPor \
ejemplo, \!\(TraditionalForm\`\*FractionBox[\(3\), \(5\)] + \*FractionBox[\(6\
\), \(5\)] = \(\*FractionBox[\((3 + 6)\), \(5\)] = \*FractionBox[\(9\), \
\(5\)]\)\).\nEn el caso de tener denominadores diferentes,  las fracciones \
son \!\(\*StyleBox[\"heterog\[EAcute]neas\",FontWeight->\"Bold\",FontSlant->\"\
Italic\"]\), es necesario encontrar fracciones equivalentes para convertirlas \
en fracciones homog\[EAcute]neas y as\[IAcute] poder sumarlas. Se explicar\
\[AAcute]n dos m\[EAcute]todos para realizar estas sumas."], 
                  $CellContext`textPopUp$$[
                  "\!\(\*StyleBox[\"M\[EAcute]todo\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"1\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\
\):\n\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"a\", \"b\
\"], \"+\", FractionBox[\"c\", \"d\"]}], \"=\", \
RowBox[{RowBox[{FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \
\", \"d\"}]], \"+\", FractionBox[RowBox[{\"b\", \" \", \"c\"}], \
RowBox[{\"b\", \" \", \"d\"}]]}], \"=\", FractionBox[RowBox[{RowBox[{\"a\", \
\" \", \"d\"}], \"+\", RowBox[{\"b\", \" \", \"c\"}]}], RowBox[{\"b\", \" \", \
\"d\"}]]}]}]}\n     },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
Observe que el com\[UAcute]n denominador se obtiene multiplicando los \
denominadores.\nEjemplo: \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \
\*FractionBox[\(5\), \(12\)] = \(\*FractionBox[\((36 + 20)\), \(48\)] = \
\*FractionBox[\(56\), \(48\)]\)\). Es necesario simplificar esta fracci\
\[OAcute]n, luego, \!\(TraditionalForm\`\*FractionBox[\(56\), \(48\)] = \
\*FractionBox[\(7\), \(6\)]\). Por lo que\n \
\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \*FractionBox[\(5\), \
\(12\)] = \*FractionBox[\(7\), \(6\)]\). \nEste m\[EAcute]todo es muy \
dispendioso, ya que los n\[UAcute]meros con los que se trabajan son muy \
grandes y exige el proceso de simplificaci\[OAcute]n. Adem\[AAcute]s, si son \
m\[AAcute]s de dos n\[UAcute]meros los que se van a sumar, implica la \
multiplicaci\[OAcute]n del numerador por todos los dem\[AAcute]s \
denominadores, tarea bastante pesada."], 
                  $CellContext`textPopUp$$[
                  
                  "\!\(\*StyleBox[\"M\[EAcute]todo\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \",FontWeight->\"Bold\",FontSlant->\
\"Italic\"]\)\!\(\*StyleBox[\"2\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\
\):\nAntes de realizar la suma, se encuentra el \
\!\(\*StyleBox[\"m\[IAcute]nimo\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"com\[UAcute]n\",FontSlant->\"\
Italic\"]\)\!\(\*StyleBox[\" \",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"m\
\[UAcute]ltiplo\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\"]\)\!\(\
\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"denominadores\",FontSlant->\"\
Italic\"]\) (recuerden que el m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo \
entre dos o m\[AAcute]s n\[UAcute]meros, es el producto de los factores \
comunes con su mayor exponente por los no comunes), para amplificar cada \
fracci\[OAcute]n de tal forma que todas tengan como denominador el \
m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo y luego sumar como fracciones \
homog\[EAcute]neas. Observe la suma realizada con el m\[EAcute]todo 1, \
haciendo uso de este m\[EAcute]todo, \
\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] + \*FractionBox[\(5\), \
\(12\)]\).\nLa descomposici\[OAcute]n en factores de los denominadores es: \!\
\(TraditionalForm\`4 = \*SuperscriptBox[\(2\), \(2\)]\)  y \
\!\(TraditionalForm\`12 = 3 \*SuperscriptBox[\(\:22192\), \(2\)]\), por lo \
que el m\[IAcute]nimo com\[UAcute]n m\[UAcute]ltiplo de los denominadores es: \
\!\(TraditionalForm\`3 \*SuperscriptBox[\(\:22192\), \(2\)] = 12\) (observe \
que \!\(TraditionalForm\`\*SuperscriptBox[\(2\), \(2\)]\) es factor com\
\[UAcute]n en ambos n\[UAcute]meros y \!\(TraditionalForm\`3\) es no com\
\[UAcute]n). La tarea ahora es amplificar ambas fracciones de tal manera que \
el denominador sea \!\(TraditionalForm\`12\).\n \
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"3\", \"4\"], \
\"+\", FractionBox[\"5\", \"12\"]}], \"=\", \
RowBox[{RowBox[{FractionBox[RowBox[{\"(\", RowBox[{\"3\", \" \", \"3\"}], \")\
\"}], RowBox[{\"(\", RowBox[{\"4\", \" \", \"3\"}], \")\"}]], \"+\", \
FractionBox[\"5\", \"12\"]}], \"=\", RowBox[{RowBox[{FractionBox[\"9\", \
\"12\"], \"+\", FractionBox[\"5\", \"12\"]}], \"=\", RowBox[{FractionBox[\"14\
\", \"12\"], \"=\", FractionBox[\"7\", \"6\"]}]}]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
Este m\[EAcute]todo trabaja con n\[UAcute]meros m\[AAcute]s peque\[NTilde]os \
y eso evita que se cometan errores de c\[AAcute]lculo."], 
                  $CellContext`textPopUp$$[
                  "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",FontSlant-\
>\"Italic\"]\):"], 
                  $CellContext`textPopUp$$[
                  "1. \!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] - \
\*FractionBox[\(2\), \(5\)] + \*FractionBox[\(5\), \(2\)] - 3\)\n\
\!\(TraditionalForm\`m . c . m\\ \((4, 5, 2)\) = 20\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`20\).\n\!\(TraditionalForm\`\*FractionBox[\(3\), \(4\)] - \*FractionBox[\(2\
\), \(5\)] + \*FractionBox[\(5\), \(2\)] - 3 = \(\*FractionBox[\(3\\ 5\), \(4\
\\ 5\)] - \*FractionBox[\(2\\ 4\), \(5\\ 4\)] + \*FractionBox[\(5\\ 10\), \(2\
\\ 10\)] - \*FractionBox[\(3\\ 20\), \(1\\ 20\)] = \(\*FractionBox[\(15\), \
\(20\)] - \*FractionBox[\(8\), \(20\)] + \*FractionBox[\(50\), \(20\)] - \
\*FractionBox[\(60\), \(20\)] = \(-\*FractionBox[\(3\), \(20\)]\)\)\)\)."], 
                  $CellContext`textPopUp$$[
                  "2. \!\(TraditionalForm\`2 - \*FractionBox[\(1\), \(3\)] + \
\*FractionBox[\(5\), \(6\)] - \*FractionBox[\(3\), \(4\)]\)\n\
\!\(TraditionalForm\`m . c . m\\ \((1, 3, 6, 4)\) = 12\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`12\).\n\!\(TraditionalForm\`2 - \*FractionBox[\(1\), \(3\)] + \
\*FractionBox[\(5\), \(6\)] - \*FractionBox[\(3\), \(4\)] = \
\(\*FractionBox[\(24\), \(12\)] - \*FractionBox[\(4\), \(12\)] + \
\*FractionBox[\(10\), \(12\)] - \*FractionBox[\(9\), \(12\)] = \
\(\*FractionBox[\(21\), \(12\)] = \*FractionBox[\(7\), \(4\)]\)\)\)."], 
                  $CellContext`textPopUp$$[
                  "3. \!\(TraditionalForm\`\*FractionBox[\(3\), \(20\)] - \
\*FractionBox[\(7\), \(10\)] + \*FractionBox[\(1\), \(4\)] - 1\)\n\
\!\(TraditionalForm\`m . c . m\\ \((20, 10, 4, 1)\) = 20\), luego se deben \
amplificar las fracciones para que queden con denominador \!\(TraditionalForm\
\`20\).\n\!\(TraditionalForm\`\*FractionBox[\(3\), \(20\)] - \
\*FractionBox[\(7\), \(10\)] + \*FractionBox[\(1\), \(4\)] - 1 = \
\(\*FractionBox[\(3\), \(20\)] - \*FractionBox[\(14\), \(20\)] + \
\*FractionBox[\(5\), \(20\)] - \*FractionBox[\(20\), \(20\)] = \
\(\*FractionBox[\(-26\), \(20\)] = \(-\*FractionBox[\(13\), \(10\)]\)\)\)\)"], 
                  $CellContext`textPopUp$$[
                  "4. \!\(TraditionalForm\`\(-\*FractionBox[\(1\), \(2\)]\) + \
\*FractionBox[\(3\), \(5\)] - \*FractionBox[\(1\), \(6\)] + \*FractionBox[\(2\
\), \(3\)]\)\n\!\(TraditionalForm\`m . c . m\\ \((2, 5, 6, 3)\) = 30\), luego \
se deben amplificar las fracciones para que queden con denominador \
\!\(TraditionalForm\`30\).\n\!\(TraditionalForm\`\(-\*FractionBox[\(1\), \
\(2\)]\) + \*FractionBox[\(3\), \(5\)] - \*FractionBox[\(1\), \(6\)] + \
\*FractionBox[\(2\), \(3\)] = \(\(-\*FractionBox[\(15\), \(30\)]\) + \
\*FractionBox[\(18\), \(30\)] - \*FractionBox[\(5\), \(30\)] + \*FractionBox[\
\(20\), \(30\)] = \(\*FractionBox[\(18\), \(30\)] = \*FractionBox[\(3\), \
\(5\)]\)\)\)."]}], 
                ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
               Deployed -> True], ImageSize -> All], "LinkHand"], Null, 
           "     " MouseAppearance[
             Button[
              TextCell["  Multiplicaci\[OAcute]n  ", "Text"], 
              CreateDialog[{
                Pane[
                 Column[{
                   $CellContext`titlePopUp$$[
                   "\!\(\*StyleBox[\"Multiplicaci\[OAcute]n\",FontSlant->\"\
Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\
\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"en\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                   $CellContext`textPopUp$$[
                   "Para multiplicar dos n\[UAcute]meros racionales, se \
multiplica el numerador con el numerador y el denominador con el denominador. \
Se aconseja simplificar antes de multiplicar, recuerden que la multiplicaci\
\[OAcute]n es conmutativa, por lo que el orden de los factores no afecta el \
producto. Es decir:\n\!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)] \:2219 \
\*FractionBox[\(c\), \(d\)] = \*FractionBox[\(a\[CenterDot]c\), \(d\
\[CenterDot]b\)]\)  con \!\(TraditionalForm\`b, d \[NotEqual] 0\)."], 
                   $CellContext`textPopUp$$[
                   "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",\
FontSlant->\"Italic\"]\):"], 
                   $CellContext`textPopUp$$[
                   "1. \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)]\
\[CenterDot]\*FractionBox[\(4\), \(5\)] = \*FractionBox[\(8\), \(15\)]\)  \
fracci\[OAcute]n irreductible."], 
                   $CellContext`textPopUp$$[
                   "2. \!\(TraditionalForm\`\*FractionBox[\(12\), \(7\)]\
\[CenterDot]\*FractionBox[\(14\), \(9\)]\), para dar soluci\[OAcute]n a este \
ejercicio, se va a realizar de dos formas, una es m\[AAcute]s dispendiosa que \
la otra, as\[IAcute] que compare y elija la forma que permita menos errores.\n\
\!\(\*StyleBox[\"Forma\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"1\",FontSlant->\"Italic\"]\):\n\!\
\(TraditionalForm\`\*FractionBox[\(12\), \(7\)] \:2219 \*FractionBox[\(14\), \
\(9\)] = \*FractionBox[\(168\), \(63\)]\), multiplicando numerador por \
numerador y denominador por denominador \n\
\!\(TraditionalForm\`\(\(=\)\*FractionBox[\(56\), \(21\)]\)\), simplificando \
por 3\n\!\(TraditionalForm\`\(\(=\)\*FractionBox[\(8\), \(3\)]\)\), \
simplificando por 7\n\
\!\(\*StyleBox[\"Forma\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"2\",FontSlant->\"Italic\"]\):\n\!\
\(TraditionalForm\`\*FractionBox[\(12\), \(7\)] \:2219 \*FractionBox[\(14\), \
\(9\)] = \(\*FractionBox[\(12\\ 14\), \(7\\ 9\)] = \
\(\*FractionBox[\(\(4\)\(\\ \)\(2\)\(\\ \)\), \(1\\ 3\)] = \
\*FractionBox[\(8\), \(3\)]\)\)\), antes de multiplicar se simplifica: \
tercera de 12 es 4 y tercera de 9 es 3, s\[EAcute]ptima de 14 es 2 y s\
\[EAcute]ptima de 7 es 1,  \
\!\(\*StyleBox[\"solo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*\
StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"se\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"puede\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"simplificar\"\
,FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"cuando\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"se\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplica\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)."], 
                   $CellContext`textPopUp$$[
                   "3. \!\(TraditionalForm\`2\\ \*FractionBox[\(4\), \(9\)] = \
\*FractionBox[\(8\), \(9\)]\)."], 
                   $CellContext`textPopUp$$[
                   "4. \!\(TraditionalForm\`\*FractionBox[\(2\), \(7\)]\\ \((\
\*FractionBox[\(1\), \(9\)])\) \((\*FractionBox[\(21\), \(4\)])\) = \
\(\*FractionBox[\(2\\ 1\\ 21\), \(7\\ 9\\ 4\)] = \(\*FractionBox[\(1\\ 1\\ \
1\), \(1\\ 3\\ 2\)] = \*FractionBox[\(1\), \(6\)]\)\)\)."]}], 
                 ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                Deployed -> True], ImageSize -> All], "LinkHand"], "     ", 
           MouseAppearance[
            Button[
             TextCell["  Divisi\[OAcute]n  ", "Text"], 
             CreateDialog[{
               Pane[
                Column[{
                  $CellContext`titlePopUp$$[
                  "\!\(\*StyleBox[\"Divisi\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"en\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"los\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                  $CellContext`textPopUp$$[
                  "La divisi\[OAcute]n de n\[UAcute]meros racionales se \
define como la multiplicaci\[OAcute]n del dividendo por el rec\[IAcute]proco \
del divisor. Por esta raz\[OAcute]n, la divisi\[OAcute]n es una multiplicaci\
\[OAcute]n. Es decir:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"a\", \"b\"], \
\"\[Divide]\", FractionBox[\"c\", \"d\"]}], \"=\", \
RowBox[{RowBox[{FractionBox[\"a\", \"b\"], \"\[Times]\", FractionBox[\"d\", \
\"c\"]}], \"=\", FractionBox[RowBox[{\"a\", \"\[Times]\", \"d\"}], \
RowBox[{\"b\", \"\[Times]\", \"c\"}]]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
Recuerden que la divisi\[OAcute]n se puede escribir como una \
fracci\[OAcute]n, en este caso:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{FractionBox[FractionBox[\"a\", \
\"b\"], FractionBox[\"c\", \"d\"]], \"=\", FractionBox[RowBox[{\"a\", \"\
\[Times]\", \"d\"}], RowBox[{\"b\", \"\[Times]\", \"c\"}]]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\npor \
lo que se dice que esa divisi\[OAcute]n es igual al producto de los extremos \
(est\[AAcute]n por fuera) sobre el producto de los medios (n\[UAcute]meros \
que quedan dentro)."], 
                  $CellContext`textPopUp$$[
                  "\!\(\*StyleBox[\"Ejemplos\",FontWeight->\"Bold\",FontSlant-\
>\"Italic\"]\):"], 
                  $CellContext`textPopUp$$[
                  "1. \!\(TraditionalForm\`\*FractionBox[\(2\), \(4\)]\
\[Divide]\*FractionBox[\(1\), \(2\)] = \(\*FractionBox[\(2\), \(4\)]\
\[CenterDot]\*FractionBox[\(2\), \(1\)] = \(\*FractionBox[\(2\\ 2\), \(4\\ \
1\)] = 1\)\)\)."], 
                  $CellContext`textPopUp$$[
                  "2. \!\(TraditionalForm\`\*FractionBox[\(1\), \(4\)]\
\[Divide]2 = \(\*FractionBox[\(1\), \(4\)]\[Cross]\*FractionBox[\(1\), \(2\)] \
= \*FractionBox[\(1\), \(8\)]\)\)."], 
                  $CellContext`textPopUp$$[
                  "3. \!\(TraditionalForm\`\*FractionBox[FractionBox[\(2\), \
\(7\)], \(-\*FractionBox[\(3\), \(4\)]\)] = \(\(-\*FractionBox[\(4\\ 2\), \(7\
\\ 3\)]\) = \(-\*FractionBox[\(8\), \(21\)]\)\)\)."], 
                  $CellContext`textPopUp$$[""]}], 
                ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
               Deployed -> True], ImageSize -> All], "LinkHand"]}]}}, 
       Alignment -> Left], "Multimedia"]],
    DynamicModuleValues:>{{DownValues[$CellContext`framePane$$] = {HoldPattern[
           $CellContext`framePane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "Cuadro/Titulo", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPane$$] = {HoldPattern[
           $CellContext`textPane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "EmphasisText", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`style1$$] = {HoldPattern[
           $CellContext`style1$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style2$$] = {HoldPattern[
           $CellContext`style2$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style3$$] = {HoldPattern[
           $CellContext`style3$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`titlePopUp$$] = {HoldPattern[
           $CellContext`titlePopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama2$$, 
             FontFamily -> $CellContext`font1$$, $CellContext`color3$$, 
             Italic], "Text", LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPopUp$$] = {HoldPattern[
           $CellContext`textPopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama1$$, 
             FontFamily -> $CellContext`font1$$], "Text", LineIndent -> 0, 
            TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"42f7b687-6f4e-401e-bdc8-d24a922575d0"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"c7fec79a-7599-41c2-84b6-b724a7757e09"],

Cell["\<\
Primero se realizar\[AAcute] el desarrollo de cada ejercicio (para luego \
colocarlos en la cartelera)\
\>", "Text",ExpressionUUID->"bb0e4cc8-cf92-467f-ba65-35ed3ef5e101"],

Cell[TextData[Cell[BoxData[
 FormBox[
  StyleBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox["2", "3"]}], "+", 
    RowBox[{
     FractionBox["2", "3"], 
     RowBox[{"{", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox["1", "4"], 
        RowBox[{"(", 
         RowBox[{"2", "\[Divide]", 
          FractionBox["3", "2"]}], ")"}], "4"}], "-", "2"}], "}"}], 
     FractionBox["3", "2"]}]}],
   FontSlant->"Plain"], 
  TraditionalForm]],ExpressionUUID->"af83ffaf-36dc-4091-9668-d00eec75fcb3"]], \
"ItemNumbered",ExpressionUUID->"6042dc79-3dfe-4379-a383-33b68c85d000"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "3"]}], "+", 
          RowBox[{
           FractionBox["2", "3"], 
           RowBox[{"{", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "4"], 
              RowBox[{"(", 
               RowBox[{"2", "\[Divide]", 
                FractionBox["3", "2"]}], ")"}], "4"}], "-", "2"}], "}"}], 
           FractionBox["3", "2"]}]}], "=", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "3"]}], "+", 
          RowBox[{
           FractionBox["2", "3"], 
           RowBox[{"{", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "4"], 
              RowBox[{"(", 
               FractionBox["4", "3"], ")"}], "4"}], "-", "2"}], "}"}], 
           FractionBox["3", "2"]}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "3"]}], "+", 
          RowBox[{
           FractionBox["2", "3"], 
           RowBox[{"{", 
            RowBox[{"1", "-", 
             FractionBox["4", "3"], "-", "2"}], "}"}], 
           FractionBox["3", "2"]}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "3"]}], "+", 
          RowBox[{
           FractionBox["2", "3"], 
           RowBox[{"{", 
            RowBox[{"-", 
             FractionBox["7", "3"]}], "}"}], 
           FractionBox["3", "2"]}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["2", "3"]}], "+", 
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["7", "3"]}], ")"}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", 
          FractionBox["9", "3"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", "3"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"be3180ac-f887-4b0b-933c-9e69ae22b1bb"]], \
"Text",ExpressionUUID->"435d1c96-ff42-4497-8073-a6af4f02de1b"],

Cell["", "Text",ExpressionUUID->"858a52f1-51a8-48d9-b815-65e0195d7614"],

Cell[TextData[Cell[BoxData[
 FormBox[
  StyleBox[
   RowBox[{
    RowBox[{
     StyleBox["3",
      FontSlant->"Plain"], 
     RowBox[{
      StyleBox["(",
       FontSlant->"Plain"], 
      RowBox[{
       FractionBox["2", "3"], "-", 
       FractionBox["1", "3"]}], 
      StyleBox[")",
       FontSlant->"Plain"]}], 
     StyleBox["4",
      FontSlant->"Plain"]}], "-", 
    RowBox[{
     StyleBox["2",
      FontSlant->"Plain"], 
     RowBox[{
      StyleBox["(",
       FontSlant->"Plain"], 
      RowBox[{
       FractionBox["1", "2"], "\[Divide]", 
       FractionBox["1", "3"]}], 
      StyleBox[")",
       FontSlant->"Plain"]}], 
     FractionBox[
      StyleBox["1",
       FontSlant->"Plain"], "2"]}]}],
   FontSlant->"Plain"], 
  TraditionalForm]],ExpressionUUID->"da6b6d39-808c-4949-b576-f81fcfbb55dd"]], \
"ItemNumbered",ExpressionUUID->"3f5177fc-fff0-4c43-a1fb-1f52b1ed303c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         StyleBox[
          RowBox[{
           RowBox[{"3", 
            RowBox[{
             StyleBox["(",
              FontSlant->"Plain"], 
             RowBox[{
              FractionBox["2", "3"], "-", 
              FractionBox["1", "3"]}], 
             StyleBox[")",
              FontSlant->"Plain"]}], "4"}], "-", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "2"], "\[Divide]", 
              FractionBox["1", "3"]}], ")"}], 
            FractionBox[
             StyleBox["1",
              FontSlant->"Plain"], "2"]}]}],
          FontSlant->"Plain"], "=", 
         RowBox[{
          RowBox[{
           StyleBox["3",
            FontSlant->"Plain"], 
           RowBox[{
            StyleBox["(",
             FontSlant->"Plain"], 
            FractionBox["1", "3"], 
            StyleBox[")",
             FontSlant->"Plain"]}], 
           StyleBox["4",
            FontSlant->"Plain"]}], 
          StyleBox["-",
           FontSlant->"Plain"], 
          RowBox[{
           StyleBox["2",
            FontSlant->"Plain"], 
           RowBox[{
            StyleBox["(",
             FontSlant->"Plain"], 
            FractionBox["3", "2"], 
            StyleBox[")",
             FontSlant->"Plain"]}], 
           StyleBox[
            FractionBox[
             StyleBox["1",
              FontSlant->"Plain"], "2"],
            FontSlant->"Plain"]}]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          StyleBox["4",
           FontSlant->"Plain"], 
          StyleBox["-",
           FontSlant->"Plain"], 
          FractionBox["3", "2"]}]}]},
       {
        RowBox[{"=", 
         FractionBox["5", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"1e2fbb9c-82f7-43c2-a9c1-9d5f690f0f33"]], \
"Text",ExpressionUUID->"0b9da39e-1e18-4585-b384-0081085e4338"],

Cell["Ahora se coloca en la cartelera", "Text",ExpressionUUID->"8862c48c-8df7-47f3-9478-f4068e33d3af"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`rojo$$ = RGBColor[
    0.58, 0.09, 0.16], $CellContext`azul$$ = RGBColor[0, 
     Rational[69, 256], 
     Rational[31, 64]], $CellContext`azul2$$ = RGBColor[
     Rational[179, 256], 
     Rational[179, 256], 1], $CellContext`verde$$ = RGBColor[
     Rational[103, 128], 
     Rational[105, 128], 
     Rational[27, 256]], $CellContext`verde2$$ = RGBColor[
     Rational[45, 128], 
     Rational[217, 256], 
     Rational[1, 2]], $CellContext`fuente$$ = 
    "Gabriola", $CellContext`tama$$ = 30, $CellContext`anc$$ = 
    775, $CellContext`alto$$ = 350, $CellContext`tam$$ = 
    20, $CellContext`anchrow$$ = 356, $CellContext`loc1$$ = {5, 
    7}, $CellContext`loc2$$ = {95, 63}, $CellContext`area$$ = Dynamic[
     If[(100/(100 70)) 
       Abs[(Part[$CellContext`loc1$$, 1] - Part[$CellContext`loc2$$, 1]) (
          Part[$CellContext`loc1$$, 2] - Part[$CellContext`loc2$$, 2])] <= 
      100, 
      NumberForm[
      N[100/(100 70)] 
       Abs[(Part[$CellContext`loc1$$, 1] - Part[$CellContext`loc2$$, 1]) (
          Part[$CellContext`loc1$$, 2] - Part[$CellContext`loc2$$, 2])], {3, 
       1}], 100]]}, 
    PanelBox[
     TagBox[GridBox[{
        {
         StyleBox[
          
          TemplateBox[{
           "\"El \[AAcute]rea encerrada es \[DoubleRightArrow]    \"",
            DynamicBox[
             ToBoxes[
              
              If[(100/(100 70)) 
                Abs[(Part[$CellContext`loc1$$, 1] - 
                   Part[$CellContext`loc2$$, 1]) (
                   Part[$CellContext`loc1$$, 2] - 
                   Part[$CellContext`loc2$$, 2])] <= 100, 
               NumberForm[
               N[100/(100 70)] 
                Abs[(Part[$CellContext`loc1$$, 1] - 
                   Part[$CellContext`loc2$$, 1]) (
                   Part[$CellContext`loc1$$, 2] - 
                   Part[$CellContext`loc2$$, 2])], {3, 1}], 100], 
              TraditionalForm]],"\" %\""},
           "Row",
           DisplayFunction->(FrameBox[
             RowBox[{
               TemplateSlotSequence[1, "\[InvisibleSpace]"]}], FrameStyle -> 
             Automatic]& ),
           InterpretationFunction->(RowBox[{"Row", "[", 
              RowBox[{
                RowBox[{"{", 
                  TemplateSlotSequence[1, ","], "}"}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]& )], 
          "Multimedia",
          StripOnInput->False,
          FontSize->25]},
        {
         TagBox[GridBox[{
            {
             RowBox[{
              GraphicsBox[{
                {RGBColor[0, 0, 1], Opacity[0.3], EdgeForm[None], 
                 RectangleBox[{0, 0}, {100, 70}]}, 
                {RGBColor[1, 0, 0], AbsolutePointSize[7], 
                 PointBox[Dynamic[$CellContext`loc1$$]], 
                 PointBox[Dynamic[$CellContext`loc2$$]], 
                 {RGBColor[0, 1, 0], Opacity[0.5], 
                  RectangleBox[Dynamic[$CellContext`loc1$$], 
                   Dynamic[$CellContext`loc2$$]], 
                  LocatorBox[
                   Dynamic[$CellContext`loc1$$, ($CellContext`loc1$$ = 
                    Round[#])& ], None], 
                  LocatorBox[
                   Dynamic[$CellContext`loc2$$, ($CellContext`loc2$$ = 
                    Round[#])& ], None], 
                  StyleBox[{},
                   PlotRange -> {{0, 118.9}, {0, 84.1}}]}}, {
                 LineBox[{
                  Dynamic[{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc2$$, 2] + 2}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc2$$, 2] + 2}]}], 
                 StyleBox[InsetBox[
                   DynamicBox[ToBoxes[
                    Abs[
                    Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], TraditionalForm],
                    ImageSizeCache->{22., {0., 15.}}], 
                   Dynamic[{(Part[$CellContext`loc1$$, 1] + 
                    Part[$CellContext`loc2$$, 1])/2, 
                    Part[$CellContext`loc2$$, 2] + 2}], {0, 0}],
                  StripOnInput->False,
                  FontSize->20,
                  Background->RGBColor[
                    Rational[179, 256], 
                    Rational[179, 256], 1]]}, {
                 LineBox[{
                  Dynamic[{
                    Part[$CellContext`loc2$$, 1] + 2, 
                    Part[$CellContext`loc2$$, 2]}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1] + 2, 
                    Part[$CellContext`loc1$$, 2]}]}], 
                 StyleBox[InsetBox[
                   DynamicBox[ToBoxes[
                    Abs[
                    Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]], TraditionalForm],
                    ImageSizeCache->{22., {0., 15.}}], 
                   Dynamic[{
                    Part[$CellContext`loc2$$, 1] + 
                    2, (Part[$CellContext`loc1$$, 2] + 
                    Part[$CellContext`loc2$$, 2])/2}], {0, 0}],
                  StripOnInput->False,
                  FontSize->20,
                  Background->RGBColor[
                    Rational[179, 256], 
                    Rational[179, 256], 1]]}, 
                {Dashing[{Small, Small}], 
                 DynamicBox[Typeset`ToBoxes[
                   Table[
                    
                    Line[{{Part[$CellContext`loc1$$, 1] + $CellContext`i (
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]]/3), 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + $CellContext`i (
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]]/3), 
                    Part[$CellContext`loc2$$, 2]}}], {$CellContext`i, 0, 3}], 
                   TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{33.58578643762689, 
                   666.4142135623731}, {-200.4142135623731, 
                   194.4142135623731}}], 
                 DynamicBox[Typeset`ToBoxes[
                   Line[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc1$$, 2]}}], TraditionalForm, 
                   Graphics],
                  
                  ImageSizeCache->{{33.58578643762691, 666.4142135623731}, {
                   191.58578643762692`, 194.4142135623731}}], 
                 DynamicBox[Typeset`ToBoxes[
                   Line[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc2$$, 2]}, {
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc2$$, 2]}}], TraditionalForm, 
                   Graphics],
                  
                  ImageSizeCache->{{33.58578643762691, 
                   666.4142135623731}, {-200.41421356237308`, \
-197.5857864376269}}]}, 
                DynamicBox[Typeset`ToBoxes[
                  Table[
                   Text[
                    Style[
                    Row[{"Parte ", $CellContext`i + 1}], 20], {
                    Part[$CellContext`loc1$$, 1] + ($CellContext`i/3 + 1/6) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], (1/2) 
                    Abs[Part[$CellContext`loc1$$, 2] + 
                    Part[$CellContext`loc2$$, 2]]}, {0, 0}], {$CellContext`i, 
                    0, 2}], TraditionalForm, Graphics],
                 ImageSizeCache->{{107.5, 592.5}, {-14.5, 8.5}}], 
                {Texture[
                  FormBox[
                   FrameBox[
                    StyleBox["\"imagen\"", 100, StripOnInput -> False], 
                    Background -> RGBColor[1, 0.85, 0.85], StripOnInput -> 
                    False], TraditionalForm]], EdgeForm[{Thickness[Large], 
                 Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{31.760693309010097`, 
                   248.2393066909899}, {-202.2393066909899, \
-38.7606933090101}}]}, 
                {Texture[
                  FormBox[
                   FrameBox[
                    StyleBox[
                    "\"t\[IAcute]tulo\"", 100, StripOnInput -> False], 
                    Background -> RGBColor[0.87, 0.94, 1], StripOnInput -> 
                    False], TraditionalForm]], EdgeForm[{Thickness[Large], 
                 Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (3/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{31.760693309010097`, 
                   248.2393066909899}, {-45.2393066909899, 
                   40.2393066909899}}]}, 
                {Texture[
                  FormBox[
                   FrameBox[
                    StyleBox[
                    "\"descripci\[OAcute]n\"", 100, StripOnInput -> False], 
                    Background -> RGBColor[0.88, 1, 0.88], StripOnInput -> 
                    False], TraditionalForm]], EdgeForm[{Thickness[Large], 
                 Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + (2/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{31.760693309010097`, 248.2393066909899}, {
                   32.760693309010094`, 196.2393066909899}}]}, 
                {Texture[
                  FormBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
cgRitKgBAL3zrusJAGBT/h9TVKEj
                    "], {{0, 299}, {327, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {327, 299}, 
                    PlotRange -> {{0, 327}, {0, 299}}], TraditionalForm]], 
                 EdgeForm[{Thickness[Large], Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc2$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc2$$, 2]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{241.7606933090101, 
                   458.2393066909899}, {-202.2393066909899, \
-64.7606933090101}}]}, 
                {Texture[
                  FormBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1: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
AIeGYgUAAACAH8z/A0BjzWY=
                    "], {{0, 290}, {357, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {357, 290}, 
                    PlotRange -> {{0, 357}, {0, 290}}], TraditionalForm]], 
                 EdgeForm[{Thickness[Large], Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{241.7606933090101, 
                   458.2393066909899}, {-71.2393066909899, 
                   66.2393066909899}}]}, 
                {Texture[
                  FormBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzsvQd4G8e5Npr//PecJzcnceLYsroo9l5BooMgiQ4QlQBIsPcKAiRBAiBI
sIpdEqlOdcmSLDu2U+wUx3F6c04Sx2nuvUiyGiUWENh6Z3ZJilazJDf5XPN5
n4+DxWKx2J393nlnvvkmuNxuqP6Pr3zlK46vAmMoc2W2tJS153wLvDDZHHU1
tqpKha21qqaqhV3+f8HGp//PV77CBfvDMoL4AQKBedreHH6/D1gUDdD2bgb4
OcBiGELbLxzA+dOWvjVLoF8u7XAHO98Kll86HEdpS2Npy+0e81a+8arv+phA
sQBtEdQP7ALoMrp4lWAB1G1fAJn3B+YQFJwBgaI4hhE4ThIEQZIkjhMEAAEt
juEkhuMYgREESgEhCPA18xj4MsxP4AjcQlsiQBdIDCFRhAwEyICf8AM7j8/P
4XN+3B8gAsDOE/N+fB68BbYjuB/HAxiO4PAA9DcEAEgSFDASgKS30PfiOr/6
RtcWfJy2ywH2p+3SbvSDQx+KfuvWbw39waWnb/nDuHS0q07gjrH89D6pCnMj
XFXnr3Iyn+w5LH3XRzouFPPT1o/OBzB/AF2AH9RnUMlxhLYLwJAAZTGUsrfw
7N+FTv4q/3Zz0DtfWxvvQlyXrZa2XBe3UkM+Myydz7UP/nV/1/J3r/vyVr7r
qt1uflk+2WuFfgpsBX0+ZVHchwE+WQBgKPDST5CAEQAv+AFQbB7BfBSpAToC
PAUByAn80R4ROCrqoUdwQDWID1gMBVQBCABQG7AkilLAAbUBNqPKgKIwEqPg
R8E3EeD7UEhCNPGQYAvcSJCUhWWw3Y/6/MilAHoZQWdQbA7DfSjmw8HZAkqk
2I8+ZxT4HBT8OgS7piFxIwd4XbK4iq2W14Ebcd9VWP69N6ob6KdJKJ9khVn8
OTevpZ9upb0NtgpQ1BMAVIWAJtkiAEkBCysrZRfZKgBrMLi/yO250LsKt05V
/wvY6gsE9HbY6trPfiK/Gr2ptvpkL+x1v+sTe/AxIH0AQFsUEhMNwFkAdBlu
x+eBqIGtUyjBEAQ81aCNiswh/mkcmSaQGSIA7CUAHJkiUGBnQTMWpfbFMcBY
QI/BL4UFSG0I5R4QSqeBNjlwI35K0Pn8/jkk4MNRP4EFCMriKJRl1BZwetMo
MYWRlwhimiBncWIGJ2cJ0ocT8xjhhwD6C/XT7V781lr12C2z1fIbsfytO7s1
V93c64q7j6+tPsEKc7sM8ulW2lthK+zW2Ypqb2G3oa3uQif/JVvdnbgttlp6
d/n2pZdLb90OqGYb/BTslUIpSwNd2AL8eWB55UfpTy3Yq7Dw1nUfk4WD0Eej
ZAwGBdESFl4CLsCWnuhFiy0rU28hy0F1zoGPgyNT2gqD2uoatvLR8groFyBb
EGwugM2iOBA1szg+i+HTODaFo+dx9CyBnCECp0jkFImeJvEzJHGWxM6R6Ack
AnCG9J+GhcAZcv4ULAdOw43oWbgDfo4kLpLkJQjsAomcI4DFp4DFUYDzGHoO
Q86ifoAzKHoGxQE+wPCzKH4ugJ2bR84i2BRkLtxHkuAkkaVfii3wyNWg7xS+
7JYtYyv0ej6frjCAzQPoddkKhYxM26sBvghbPCX6fOiXyx04TZc4RtslAG0K
C1cz0cIZ0u/ixHKgV8o4in/JVl+y1TXDH3cPW936935MtrrK1V+FOz7sp8RW
2GKP+vIHZ+nldQeYPvRxdKFXYQGLTwEc4vmwm8KoMm2B+Lj6sDTBUZ1UNOgy
/day49Mn8CHCAuoDQylygZb2hJTLXXSJ2KIzXPCHtJf+UJkax6FPkgIKnTDd
i0cxFH6Fp4DFSYTmKdg3SG0PYHN+7LIfv4QSlxF8CsHOB9AP/P53CewUib1L
zL+GXf534OLz8+f/Mn/+r5dP/ers698/8+rjp1585L1/n3zvXw+9/8LDoHz6
xUfOvvr4uTe+f/GtJy6+/STA+bd+dPbtp8+//4uLp38zdfrXlz74zezFP/ln
nyP8/ySQf5MA2Ask/hIE+SqOv4kQ72HkGYI8R5AXMPw8il0MoFMB9BLVN+ij
XA1w5iQO7i59LygeX/jtC+ywWKYLKIItMghFQFd4AVw3YqG20H1E1LgVVQGW
SAdWvGsaLfiiXfyihTOh6hVKyahrdBxFQ/jCYBwFfMHiH7I0K8G3lu287FDU
p8AZElQrBf14THErRHNztrou7pjCbs5Wyzd+BFthCG0XAFwHdsOewOVHpgug
LRqAo7qBWwHsh7g1h3wjHXSLvv1WxNTdFmVx8x++/Mxv5KvvfiC3GThxbd2+
Lt/d/BGj6n8ApQlrgY/8lDaBlgZVprrBsWW1C1uwiwfx0z1vC51saOBKkMOV
PenvCqCLOg48TQiBLowPEVS8w8KoE0K5YoxyxdDZUtvxxddLW2gXCnREgAAW
mydQHwEDH+Zw7BKUSMDioHCJwC/DAnqBQC7gyAV0/mzA94F/7sz8zKn5+Xd8
gTd9vtdnpl+auvCPs6f+dObd377z8lOvPPfo33978LdPjv34eOdje5sf2l77
0PaSkzvzjo4bDoyq9w2rgD2yVX98u+nRvYXfP1T242M1Pz1Z//TDDT89WfeT
4/VPPex4+jH3Tx91PXmi+XtHG394ouVnj7l/96PeZ5/e9Nwvx/79x22vP7f3
nX8feu+lE2+/8sRbb/zi1Kk/TF34m2/mJb/vddT/No6dJkkgxy6QQGRBrXeJ
QKcxdAbH5uCvw2cJOLYFlSMOr/zCncKpAkr4UXwhyAHDF+TVom+EnAIH36ib
jizeLMjz8Hpi1MgdRjVOqOtPWQoo5KgFoqRaEfBogQU9C64/FIABKtJkMeQE
Bqbg+ILFqSHBxX8E9Z+gvo7WVji2wKrUzaWwzJ9TZ4XTA4xU82aRLm8Dt8Um
N2KQa5uIHx/o9SJVrvvYIlSUBbB+jIqyWASMsgD8hSO0pXEbURZUKxQSUMAP
qe0muAH3faqe/9a11W3x4KfHU7eOmzvnm92yjzFs9IkAvU1xh17TKbH08ibH
X8CStkLQRW1Fj+/A0RyE8Pnx+QAMWpunotd8wNJjLQhGN26xhdY76ieQedoS
gTlYBhb1U2RC9R2ii36Peh4w6qOg4IfjOgEf5p8lwQcC8wRgGsxHIHNYYBYN
+AkMxieg1BAQSoI2NQLoCCMxGJ9AIjDIAb6kIh78hH+GnJ8iA1MEfonEp0jf
GWLuTRJ7ncReIdGXSeQFcvZ59PyffKd/M/32M+defPLtvz78yh+OvvCrfc/9
dMcffzD6xx+NPPvU8B9/PPS7J/t//p3OJw43Pbqn5sRE6bHNhUdGcw/063d5
VRMuyWhLxmhz5maHZLQpa7BRONAgABhqFAIM2zLGmkXjbbIJp3ybSwHsRKt0
p1O6yy3Z4RRPODI32wUjDZzhevammrSB2tShevZIA3OLnTfpkR7u1z22q/rJ
o61PHGl5fJ/tsX2N3zvc/L1Dju8eaf3JSe9vnhj++68n3/77yel3niIv/ZGc
/wfpf5VE3yKJd0kCqL/TBHYOxy+AH44TMxgxjeLTQCf6gU4k5wIoaF6ikBco
tqBiHLGFkEbIMvOQ2jAfgsxS2oqgh+Agt4DLHqB6SVE6xIMKSPRTcR+wfiEw
EBLcYjRA3TQ/NRI3T6LwHpIQcyQ6R2I+EgFalgQVE1gCJXHaUkGOBE7iBEkR
F0kRF7iRFPHBsBSEik+hIlngucBbjcCwSHh2CEFSzIUu0uVdoa2ufRLvTFt9
5GO71Di8GguNQwT9sLZCb82hoUvaCv1obRW4fW113eb3Lfr26/IR0FCfOzFd
F7Sm+wzI4nalzeeOW3xGlvb50PlTMQCw8QWPEaDa5/MI7oNUhQF6mpsn5ubx
OR8xN0vOzRFzPnIOEBLVYQecyUJHEOxTQubJgI+2JOIjgA3A8DkYGw6vnB9c
P5TSTJCkYBOOVkwYHbPkxwOX8dnLxNw04ZshfLPE/Bw+74PMGEBxSq8Bv4nS
wgvU0Xmfzzfvn8dQP0kC1+kjsRkSu0hi58m5t4lLL5NTL+Bnn/e/98ep1556
5+8n3nju8Mt/mPzXLyf+8qOB333H88zRlpPDlqN9OQc7sw91Kg96ZHuaM8br
2eM23ngTf6KJP24XjDelQ9j5W2yCrTbhRHPmDodop0O6wyHZ4ZCO2+WjdbLh
Gml/RVZ3saAjn+POZbpymcC257E8FjbYAuCxcDrymF5zcldufFduotec0GmK
9+TEtBui2jRhTm14hzEaoCs3brCEsaWGO+mSPzxq+clk3dMH6n+yr/oHu8u/
s7XgyIBusku2u1O6oz1zZ3vWgT7lQ5tNTxyse+4X21597sTMqV/ic//E0TdI
5G0y8A6JniHJ8yR5kSDO48Q5lPgAxc9huI8KvyeofkHQZvbTPajg6mEIvLAE
7fNB2yAwP48EgPeBd2ZB90CKI1HIHrB9ECDg6JkftBVwGCJCDQ4CSiNRSFUk
5gcFwFbQgjoACqA+IKA+YAtMF6CoKkASkLBgcCS+KK0WtByoUXQ8CRlA4feB
AoJR8ZX07pBiSXqCAPwIPRyGf5oB8Ddiq+WP3lVu+RaPfLsUdhtu58M98Ci8
y9BCF3pTh0aTYAA8j1CpBW4GUFsoCx3zrbnupQ66O+uv+1Jb3cT5X/uN/8u1
FeWv4PAszVYolFTzuI/WUz6orXxzlMLCCB9oPMNINgp0lAJNKPAqwQNilJSi
BqgQepTKjy4GWiDgWQj4QIMfAIFTRXzzgVkfOusnAA/O+klQmAmQlzHiMkFe
RrHzOHaegLEK5yk/fIGyH5DkaZJ8nyTfIZHXkKnnp0/99sKbT7//r8f/9es9
v36894n9tmObi/b0asadsgFrVn9dRk8Vr7uC3VXG8handhYlD5SxN5WkDZam
jVayt9bwx6t4Y+XcbktqZx6nK5/Xnc/vtgi68vjeXFAW9hZk9RWJBkqlQ+WK
4QrFcLlitFIxUiUfqpBuKsnqLkz35HKcOWmtekarNsWhSW7JTnKoEluzAWDB
Lo5rkia0yJJa5DQSm2UACW3ZyR16jtfIBugx8/ry0wfL0yds4oOdOcf6co/3
5z40ZHlktOjkcP6xwdxDPfrd7cqdbdLd7fIjvYbDg6YdXs0Or35XT+6DW+t+
9ujI63/53vS7z86d/qv/wr8w3+s48haJAvJ6AxRQ5DyG+nAMkDuMwMeA7AW6
KLDYsEUAi5Eo7IcFDOGfRy/6sYsBfAohLiH4JThkhkwRxCxBzBD4DEHMEfgs
Zf1ULyFB98pRCpeSQFT0AyxgdFuEas5AUvNR+gt8NbSAQDFiHgdktBjuiMBI
f0iEkAtxCFgg5olFnltQVMuGtOhvpjsPv9RW///UVksH/ByJ6SY/+bMki8+L
re7shG9dW334/AOLY1ULEmahJxAO1/rhxFUc2MA8Tk1lBRY6nDkSnyXROYqz
KDcIYxXggK8fOkTgmICXwX3Q3aAo1bCmZh3BCAc/MhtAZ3ECHgQHrAcORfhw
fBpFpzD0AoZdxImLcIyGOEsSH5D4KRJ/h0DfwPwvozN/91/448yZ31x+/xeX
3/nJhTe+d/rFk0A0/es32/74ZM8vH3E9sr1kR6dswiUctqVuqkvcVB3XVxnd
XRLrzkvy5DG6Cph9JbyhyozR6qyRqsz+Ik5Pbqo3J6nbmDKYz95Smj5ekbm5
Qjpeo9ljNx1oLdjfUrCzwbilUr2lUjtepd9SqRsr04yUqoeLswcLlYMlkKqG
K2TADpVDzuorzOzLF/bkCbqMXI+O5dGketQMYN0alkPBalVw25Q8AKeK78oW
AOvWpHsNmb1mabdR3KnP9Bqyes0Sr0ngNqe6zQy3KaWrkD1aLd7WpNrlUO9p
0+51Gfa4dLtas8ftsi0N4jFr5tZmyW6P5nBf3tHB0iObSvf1lOzpLn1iv/fp
E0N/+tHul/9w8txLP5k7/fu5S89j6DsERkUnklMkfhENnJ+fPYci09DhUxOh
oaCBcRNAqoB/l3FiGgfcREyT5Ay+ALDzDAZj6eFdo6wfKmoUqi7YwwflF9Rb
cG4YRs0mA1IMqjFAPyQC+w1n4GHxGYyYxcgZlJhFSUBYPnBMBChowgeAQOYC
rAQ1Gg5lmJ9CgAJVIICdJyGXzROL3ZGUtrq9ecf47QTA34itPs6TeGcUdsdu
59YdGk2CyDXBG9cBChXWl2z1JVvd2QnfEVsBkoLVEjAUbHWDMmj0gpcIHUpB
6SDYM0D3GcFxKQTqKcBTMwQ2i8Ng7zk4XxUOafmpkSpkFjAZnCmEz5DAqfl9
2LQfn0aAd8IvI9glBJtCsQsQ6DkEPYfj53ESqKezuP80DPlGTpP+9/CZ15Hz
/5h9/9lLb//q9Is/ePvvD7/0x/1/fmb0l4+3//Bow/cP1Dw4Ypj0ine6hVua
2cONKf3Vcd6i8O6SyIHK2MHKmOHq2LG6+Alr0nYbY6KeM1ImHCnJHCnOGCnJ
GCoS9ufxu3JYzuxEe1ZEFXt9BXNtvSDEqUjoNrD6LLzhkoxtdcp9zTlHXAUP
thcebS885Mw/6LAccOTtb87dazdP2kzA7rAattRpttZptwBUqUfLFUPF0qFC
CcBAXmavUdCl43rVbK+W49XxPboMtzbTpRa6NRkuTQa0amGnQdxlknWbZN4c
CSj3mBUjJfq+QplLz7ErkuzKRJee2ZnL8+bx+oszNtcqt9v1k07TAXfefnfu
AXfuvjbthDVzvEE4WssfruKPVmdutcp3OHS7nTm7XcZ9ntzD3YUnRyp/uKf5
mQfb/+en259/9sg7Lz15+cwfUN+/4VAXeY7ETxPoWTixC9yuwAzih4OEqH8u
ELiEotMYuLnYHA4qAxRlkDuoIBZsQUktho8vxF/AqA6CmrpMAm4CksmHk3ME
nCo2B2QYCRgIfHYahQNqsyhkpTlYzQg/SvrBWwGq3zBA9SQiOBX1h9FjUwGY
CARHSAwUoNoiIUmBFo6PhOEl8yRUYQjViXh7M7m+ZKsvLltd9wh3LVtdF58s
g3xB2epO9/dT0eaAkeCkpMVAPjhDlnqb6iKEQ0coHcocgMFgfujHQMMYponw
AaoKkH4YhoH5fQTEHOGfxaGdhwx1DgOUhF+gR1II/AMCP0OSZ0n8fRJ5h8Te
I7F3yPnXiOmXkakX/Weeu/zqr9/5y/f/8cyB33935OcP9Tx1xPmjg/bvT1Y9
sq3g2Ijh4Cblvm7pfo94b6tod1P6tgbOeC1raw1rc1XalirWeC1vvJa7tYaz
pZI1VpY2UsIYLeFsKRWPFomH8jMHLMI+M79Tx3aqGC3SxHphdHlacFHyurLU
kHphXIuC0aZJbtPGt2kTXPrETnNabyFvqCxzqDxrsCxruFw0XC4Zq1JsrVVv
q9dut+rHrcYtDTljtfrRKs1wefZQqXKwWDFQJNtkEfcaM7r1/C4Nz6vldep4
nTnp7TkCt57n1HGdOp5LBwo8jyG9w5gB0J6T3mnM6M2XjVXqRit13ZYsmzyl
NjOuNiuuQRrv1DLderZTy+ow8rotgv4i0UiFYnu9drJJu8+hOuxSH/XoDzm1
e2zKrTVZoxXCvkL2pmLuQAl3sIy/uTZjT4vioFe/vVOxa1B7Yk/ZUw87/+fp
kZf/5+Db/3xk+vSvsJnncf9LJD3mBW4E0LMkELbTJAFbHARgKxRQ2AwGbmZg
DoNdiHD4AwdVBY4/BnBsloChibMUoL6mhhXhCBYVJ4PTMYs+KIFQaod5jBqF
pGcA0bqOzu9BxRECUiMRYiFS8EMTsmCkfYCSVJS2IgAH+qC8IugJaBj+SbPV
8u23RRZ3CVtdteftsRV6u2zl/2zY6rpDVHctW30ZZXHzE751bbXs/KkOwIXe
P6Cq6Im0MIyZCvbD4XAGuhCSR82Moq4+5ZQCeAAhAEDzGIYOBoi5AA4E1AzQ
UCicrzSFEhdx4gyJv0sS70GLv0MGXid8L6PT/5o995dL7/72/Cs/O/vCj999
/vGXf3fs7z+b/MMjw7842vPkztaTI9WHegv3dRj3egz72rWT7cq9LtmeNtFO
R/r2FsE2O297ffpEpXBLKW+0iDOczxnM4/SZWT1GZq+R3WPkdOdwvFq2R8Pq
0HE6tByXIqVNluSQJLbJk10qplMNhBWnTc1tUXFtclZdVkqVILEyPbFSGF8r
iqkVh1VlhZQLg0r46wrZawrYa/JZqy3MNZY0gLWFrPXFnI3F3JAKUWydMrVW
mVafzbTruG1GYXueyGuR9ORLvaYsj0HoUvOc2VynitOazWrTpbZok5o0iU3q
+GZNQrM2yaFPadJA26pnOnSpzZqUVl1qu4nbnS/uLZD1Fyn6ChVtWl5dVpxV
HN+sTGlRpLRmMxwqUIAjXw5Fskud0mFI6jal9OczR0r4EzWiyabswy7jsY7c
Bz2mg226nVbpSDm3Lz+lMze2vzpxsDFx2JY03Jy6xcXb3Sc/PGr43v6aZx51
/+GHA889M/7P3+x66U8H3/nHw+de+/nl95+fPfOC/8Kr+My75PxpEjlLoudJ
4jKJXyZRCgjANIFO4dgHGHIKR09j6Ac4ehbHzuHYeQy/iIEKQEA1TdUKH2jJ
AJIiMAQCijEcp2ImgKWEFIlhCzF/UCbB9IwQVHAHsRCDQb2ikmVReRlhNzI1
sIVTE5+vmfX8kcAWc2ss9yQ3enzQG+Q/vIlbxj/RKItbP4Eb+cZbd2h0+sHA
NekHrwMY4w4tHAG9Ndf9iURZfKG11aehd5YOeFtV4nPE7Z7Psv39UEXBYHUf
is4tpnpAqGBzqh2NkAhMwEoNbWFUc5RK3zoHe/kwGPMHuwH9BDkP5zQhZwng
uJBTZAA4ujeI2VeQi3/3ffDszOk/XHjzmVP/fvKNPz/80u+P/u3pXT873vXk
/rbvjNefGCk71GPZ6dJuaZSO1GYOVAh6SlhdBandhWl9ReyBMm5nXhJAd16y
15zQnhPTnhPdaUzw6hgedUq7MhkwkUvOcCnS3EqWU8luk3NapJxmMbtJxLWL
OHYxzy5m2sVJNlFikzi5RZHq1HA9ORlduZLOXKnbJGk1ZNmz02vlvCopu0rM
qhCllmQkFvBjzaxIfXKoLGq1MPhe/rpv8dZ8k7P6G+yVX2etvIe96h4OQNA3
eWHf5IV8QxhxryR+lZYRZGSHFQhi6lRsazanSSto0Qma1PxGBbtOllKniKtT
RtepYhvU8VZNgk2b3KRn1CvjKyXRxcLwfO5GCycIFKoksbXypFYdb6Ase2ud
aaBM5TGlt+nYLgOvPYffbgC6jAnYqlEcaxXFWEXRVnGUTRrbrIhrVSd4DIwe
C3uwWDBWIdrRoDjQajjsNu1v1e+2q7Y3SEaqmH2lcZ2WCE9eWFdRVF95wkB1
cl9lUk91ypCVvbUtY1en/MCA7vCw8bFdFU8fdz5zov23j/f8+cdj//rV7tee
PfzO8w998OqT5998avrUr/3n/4Bc+gs6/Vds5jnS/wLpf5FEXiaRV0jkNZJ4
myThOCNomRD4+zh+CkNPgcqAoadx5DwRmML9l4nADI7M4AFKeSMwrI/KW4VT
wYEwoB1Uubl54MLAf5hNEUYjAgUFWlEBGIGGQJaDWYLpmHaMmjtGzym+M211
83bdVW28W8enpK3u2CHcukNbpq1uKqwoVYXcvra6Lm6daJBlIet3OVtd94ff
tXrns8fN6+QNeHZJW81j6ByGwsB1WlvRCfBweroLlRUJhxkPfP6Az4fjsyQ5
S2JzMMHrLIpexvznYHoi7DSJvkvOvuR793dv/unhZ7+/9UcH2x/daXtke/3R
0fL9vfk72w1bHarxJsVEk3ykJn1TKbO/OLWvKKU7Nx4wUUduvMcU78qJdetj
2/VxHTkJXmOKS5Pg0ia7tanO7JRWRRKAOzvNqUp1yFNaJCl2EQCjWQJeclrk
fLuUb83i12Vx67J4VlG6VZzRKOFZpQyARlmqXcls1fFdORntZkmrMatRm1Gt
4JVLWCWitBIpq1zKq1aKyqVZRUJBPp+by2FpGcnK+DhReFh68Ebuug1pK1cz
VqxkrFjFXLU6eeU3o1b834hvfyXyvv8Tt/I/U9Z9LXXD1zkh35LEr1OlBJu5
scVZKWVSZoWUVSFllEriS6WxpZI4gBJRbFFmTIEwJocVokpaJ4lamRH67czw
+2WxazTJwerkdXmskFpZSouB15qT3mYUtOXw2nOFPUXSnkJxT2Gmx8hr1aQ2
qRKt0rgqYVS9KN4qS7QpEu2qpBZNcquO4TIwO8zc3qL0oXLxeH32nhbzIU/R
MXf+oWbDrjrleGXmaKmgvyDNY4zvMMa1m2Jdxgi3OdJbFNdXnthfkThQHT/U
ED/SGLe5KWnCydrdIdjbIz44ID++WfvwdvP3D5Q+daz2mYcbf/6I/eePND99
tOVXJ9r/8FjPn3848o9ntr/67OG3n39k+t2fz5/9HTb1Z3Lun2TgJRJ/nSTe
ILG3SfQ9EqOSVsFO4LMEfp7AzhGBs0TgPDEPuQymYfRfBkSGUGmCgLf0UdMe
4GwuGHJKzfom4HSFOTiiBmdEo3TiCxiZ+Alkd19OYeinn9r90wB2nc6T2/Qh
GEKNWS/MKb6Su+la0JmdoE/4jJJFfKmt7sDtf7Lf9Qme8B3tH6ADAuHsKnwW
5v1e1FZwZihCgKsLngOq4waBscf4DIbPBEATmfDPorO+wGUUgbOcYA49/9vE
1L8vvfLz13515DcPdh/vL9pilfaV8rxFzM4iZkdhiicv2W1OcBrjACV156d4
TfFeY3yPKWlTXnJ/blK3OZESUCmd5uROU4rXmNZpZnpNnA4Dt8Mg8OjT3WpB
m5LXquC3KfnNijSbPLFRltAgSbCKExulSTZFml3OAlqmQcask6TViplWGcem
TLer+DYVu1EJwLJD1cNz6DMcOVl2XXqNkgM4JZcfl8OJMnJjjYKEAhG7IIud
n8G2ZLILM7n5mRxLOsfMY+pZydlJCeKYyKyI0MyIMHFUuDA6iBO5khHy7YQN
98Sv/lr0iv8Ku/c/Qr75lfB7/yNqxX8mrP5vRtC9vMhVorggeXKomhmjSo1W
JEdKE8KzYkLSIzbww9anrlvJWLsqdc0aCmtT165LW7uWve7ejIhvZTPW5QrC
AaMVZkYXZ8WUi+Nr5SmN6jSHju3QsZo1ac3qVJsytSojvlaUXCtOrpUkWuUp
TZq0VgOn1cRx5vI9ecL2fKGnQOQtlfaWKvfZKo+3Np502Y+3Ney3lu2oMk9U
6IfypV05fJcmtUUe0yKPdCgBIhyaIKd+jdu0piNvg7cguKswBNqSsOG6pOEG
xmY7c9zB2ebk73Cn73Jl7HZmTbokky75XrdiX0f2oW790QHzybGSR7dV/Wh/
0zMnPL95tP933x/6zXc3/e0XO17+88E3nz9++uXvXnz3p/PnfotO/YmE6uyf
JPoinLsNgL9CEm/i2Lv+2dNI4CKOTVOpGuegbCeQucDcdGDucmB+BjSqYLgp
Pk8Na1Gx68iX2urmDuHWHdrdr62+KGx1k+twFzLIFwRwehS0+HyAitRC4Rwo
2LrCoZaCs3thSiScSmGEXgJNYpK8gBMXULptjJ7BZt6aPvX8udd+9/LvHnn2
uxNP7Gjd327eWi8dqxBsrhQMl/F6i9jdhcyugjRvHqPTlNSRk+g1pfTkpnbl
JAP0mlIHcpmb8ti95rQOU0qHOdVjZrYbmUAjtGlZrRqWQ81pUfFalOnNinQg
nRolgkYJv04CXHRMrTS6RhxdJ4mtk8VZlUn1ssRqcWyNNL5GllAnS65XpFiz
02xqjl3FtmezbYCqNLxmLb/FkNlqEjmMWTatoFKWViAEbBWuTQ1Wp27UskJ1
7DA9K0LPjqQoLAawWK4gAcDEi9ez4nTMGD0rVs+MNQtScsVpOn6SkhUjSgrj
Ra1lBN0Xv/YbMav+O/KBr4bf91+h9/4/Iff+R+i9/xn27a/GPHBf9IoHou9f
AWzk/Ssi7l0R8a0Hwr/5QMS9a2LuC4p7IDh2RXDM/cFR314Xv+rbzI33cMPv
FUSuEETcJ4j4VkbktzMj7xNF3S+Ovk8WvSI7fnVOalCpMKYqC461VQmTKzMT
q0WJddJku5rZauS78zO6y2RDtYahBlN/jaGzXNVeoBwoKpyoqJ1saDrc0nrE
0Xqg2b7fVr/PWr2zpni0WN9rknaoBU5FWoskwZYVbhWttUrW2mTr7fINTYoN
LaqgZmWQTbHertzQot7Yqg11GcLbjZGduTGjVWljlczNVazN1ayttZyJ+vTt
jRkTtswdzeI9TtX+Dt1Br+FQl/FQV85er3JXt3SyT7F/QHNoxHBkzHRkzPzI
zrJnHm579kd9L/5u+zt/P3zpre+SUz8nA8+T5LskcZokz5D4B7j/NOY/g/rP
AdqCwTxwwBSDCgvG1sMm1KK2+rjC6ioK+wS55nPRVnfsDJeyM92OtvrsOOJL
trqL8eEG0qKltA9yZerfUh1byJu0LBHfVenQ0au/Al1Iuw3HrQL4LILPITB1
aoDKkgSjLOiBcBg2jF3CkQ+wwHtk4E1y7iX80t/mTz97/pVnXvr9iaePDxwf
aRh3GEbqFEOV4sHS9MGS9KFi3lARr9fC8phSPcYUly6xTZPgyI5vUcU5spOc
mlRnNoRLzXRrWC41q1XFbFKlNmuYLVoOQLOaY1OxGpVMq5xllXMaFTyrXNCo
EDTIBTVSbr0yzapOtqoS65UJVkV8gyLeqkyolcZUiSJhWRVXJ4utEoWVZQSX
Z0TWixn1krQGGcuu4jRreK36dKcxoz1P7DKLHAahTcOtljGK0mMs3NB8fkiB
YGM+P8jC25DL2WBirQcwpK7RpazRM9boU9bqktcBaJLWahlhOawEPTPRwEzQ
s5K0rARVapwsOVIYGyKICWJHrE3euCJu3beiVn49/P6vr7/n6xu+8c3137hn
wz3fWveNb6392rfWfPXetV9bsf7rK4O+sXrjPWuD7lm38Z71Qd9YG3r/t6NX
/3fMmq8BG/XAV4Fki7n/v+JX/r/Ja/47ZfXXUlf/N2vtPRmh96kSNpjTIkrY
saXs2BJudBk/pjorvjE7rdXE669SDdXrNjdbtrnKdnVU7+5qONDr2OZoHG+0
brfZJlsdh92ug67WXfaGyZaGfS3WHQ2V45WFI0U5vSaVRytulnHqM5LrhIk1
6fHVgvia9Li6zIRGUaJdkmQTJ9rE8XZJQjM107lNHt8sC22WBrUqQlzq8E59
bJcxsdec7DHEtRtiO3LiO00JXblJfQVpm4qYQ5WM4dqU4bqU0frU0Ya00YbU
kYa0QWrLdqdwf4/iwSHDoxMFP9pf9etH3K/96dDFV57Ap/9KEq+S5FuAvHD0
XQL7AEfPo+glDANtqkCAhAk4MCohFJ2YdylZLv4hLMvcvjCV+EOWwuIHqanH
VKD+DdcC+FBG32tBJ6X/kq0+NVePLOatvZatljjr8+KgW3nrDs7wLqO2wGJ2
vhvQChpYWMphCYvz1jH0ysevrNmxPNv5UhJL9ENHu7KWB7yAdMXzAapCMZhi
AqothJpKg6AEjAKco7plLhL4GcT/RuDy8xde/t5rv5j42aGWBzfl72hVjtRl
9JXxvQVsr4XtNbO8Jlanie3JYTs1jFYto02fCtM7qBlNqpQWdWqrlulQs1vU
HAdoz2szXDqRSy+GNkfsNknduQqPRdWRn92Rr/bkZ7dbVO48hStP4bYo2vOV
nUXZQCm05UndeRKPRQzQbhG58zIA2s3pHXnCnmJxf6m4tyjDmZPWqIirEYdX
ZUVVCuJrM1IaRGl2Gbs1m+fUprcbMrxmcbdF2lck7yuSdlmy3AY+IEq7mtGs
Tm3KTrXKk6uyYkt44YWcEEvqxlxGkDllQ07iOn3cGm3MKnXUSmXEWml4kDRs
ozQiRBYZKosOy4rcKAwPyojYKIwKFsaGpseF8GODudEb06I2pERsSAhfHx+6
PjZ4XdT6NeFrVoWueiD4gVXBK1ZvvH/NxvvWBt+/LmTFBoiVK0NX3xux5r6o
tffHbViRuOGB5KBVjJBVnLC16dEbRbGhsrgweUKYIjFSnxxZwowuY0aUscPL
eJE1mdE2ZXKzgdlTKttsM+7rrjk+1vrQFvexzZ7DI+3Ht3oOjbTt7286OOh4
cMT14LDrUE/zpKdhj6tusrVmT0vVzsby8ZrC4bLc/kJjp1nv1qtalRK7TGgV
AyXLs0u5TQDitMaslMaMpIb0+Dp+TJ0gqgUQljSySRRhzwyzZ4XbMkPrBUFN
onC7KMyaEVIv3FgvDLJlBjeLw62Za+uzHmiSrHGogly60E5jpDc3uqcgfqiM
MVSeOlie2lec1F0Q31OU2FUc4ykI3+7K+OHe6n8/s3nqle8hM38l8Vep4I0z
OHIOmb8YmL8EZ4FRDEIRxCIB4Qu5cKmg94V0uBSXYYt8dAXEQuFK7lxqLWbK
LvMPVIqqpRVSrlkzBV+0NFksLgBKfRa9Cjidn/kafrku7kzffSRbfaTfo/wM
nWWa8pbX5sq4KmkGejVbfVKdfjdy/ktRFsujCu+2dOs3+pmfWVj7pw50mV1g
scAVAvqQtlqI2LuSYoWaMIWi18nEQmdDWqhXaGBBly0A5lSnrpsfSKoAMXNF
WyHIwsKk4Jr7L6HzZ1DfW1MfPPfP53/w25/u+MG2kuOerM3l8T3mUK8prDs3
ptMU22NJ7TKnOrUpTaqklmyGQ8Nu0/JatdxmNcuenWZTMe3ZbIeG36YTUsSk
8ORpOwsM3kKztyC3qzC3p9jSU5rfXWzpLjF7i0wdhQZ3gc6Vr3ZaFI48cXNu
Zmu+uK1Q3GLJsBp4jdr0Zo3YaZB15Cp7CzWDZYaRipwtNeZtVstEvWm4XOkx
8cBp2BWJNmlSQ0aKXcxslXFcKn6HTujVZ3TlZG2ySAfzZaPFys1lqtFS+VCR
pN+S1Zcr32TRDVhyeowap1LUmMmvE3Dq0zm1fFZZanJ+Qqw5JtIcE5EXF22M
jdFGRWSHhyvCQuWhIZLgjcIN63jr1/CD1vI2ruMFr+eGbeCEb+CGb2RHb0iJ
WZUcu5IRt4YRt5YRu5YRs44Ruz4lZgMjJiglKiQ5MiQpEthQUEgMC4kP25gQ
FpIcHpoWFc6OiWBHRXBjIjISoiXJcarUJA2ToecyzemcEiGzTpDUmB7fkBHT
kBnTKI5vyk52GNI6izJGGnSArU5ucT263fvwRPfx8Y5ju1qO7mk8utv64O7G
Y7ubH9rVfHKn49hW+5Fh66G++v3e6sn2yl2tZdvsxZsbioeqiwcq8nsKczym
7DadtCU7s0nJd2RzHdnsFmVqszylSZpkk8Q1imIreOEVnPAqTni9ILoxM86a
EVufHtUgiASo44XX8sJqOSE17OAa5sYGfrBdGNaUHtokDAcFuzDUlh7cKAy2
Z4UCanNII9oUMe3q+A5NYoch0mta225c4Tat7i6O2O0SP3XA/o+fbjv74o9n
zz0P4zTIGZKcxZFLkLNgWhXAIAFKYSHLVBJKTVZeCr1AF4hseb/fdbQVuqSt
lphiUVjdQFthC2vZ4Fd4bTnFINcUPl2gN4h1v3X3eCdRFp8VR1xXW13Lhp8X
T93KW/+LtJX/ikUX34JURa3WQOcvR+mJukQAJqfG6Uxhfnp5IYRuF8FoX7j6
AwqzECDYLIpNY9RoNZzSC4+CL6z7AFOIonARK5igwofis37iko+4MI9fCGAX
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
9reOUJpEreXs2gJaUU5nVmZbalpjUmJ9IrEhKbEhObE+KbGWSKgBqRUbnR9+
M+vmk1nXn0DYevIjWeEfK4x8oiTmyYak2z25scziRH5FurgmS16fJ63N5pYm
92dFdyXf6kqOoKRG9qRH03LiGYXJ7LIUXlUqvzqdV5kiqEpSN2cbe6ts/XUL
1Kqp1mx1dbymnqhrSp4mZZr68m2sUge3dElYbheUGDm5M4Npc+z0RWnh2kTN
U+u9X/iE6LtfN//se4evvvj58/vfxLD1UiD0Bvq35jkPeHyY80UIyaegJxRE
McT42gi2GIL3sSrJCDd+vAIy1v9N3Pz+E2n1m0HQ94HLg//Xfs9ohX9I30X/
IoMfXsb3zOsDSD1woziRt72+Bz484t77ZsB7z+97PeB/LeR/JeR5MeT+sff1
777+/F/+8Jsf//vPOz+1rdkxDFlljXpm4Qg1XdWdMUEvnWRUSkkFg1Wp5Ly4
usSbJZEfKwp/oooQQS3JY7fWDZEahb0dKmaPhtOrY/doGKSRviYVpYbfmMus
SGRXEAU1KC54srfMxGu3irtBszjR7Lp/RdHnlPehdSERxS7ssgCzhtqMrBbj
YIsBcadhjgWgacRaJCKgnUUdvI8MfzjPap5jts6zWuZZ0LbOMVFnltE0PdA4
TQdgNc0ymw3s9gVOh4nbYeC3GQWdJgEJ7RCJyWZRtw2ggPwokMMD7vmwpOxf
lPeCkjIIO+f4HdDalbRNPe/QJD3GIHVolqFlQBBWC5IdMINodx5RbGdOgLax
oG8Afgl35vk7c/ytGe7GNG9Dz16f4q5PsNfGh1Y1LECVc4wFnZXRweURBtiS
emBRCczqt8lpVjnNgvwuSFZxl13SvShFq4U2cZdF1AmtVUy2ijrNw6QFQYeJ
32bgtpoFJJukawmgJqcCngw8kJBNs0NN08ymKUa9hlY1Qikb7682cNscctqW
Xni0oHh6SXMKtLIjD8Bj5/gJJqzQSuAy0lany+NPuybuXnpZXGkrkFpX64H4
phVClU29Z1Pt2JR7dtW+XbVrVW4tyDbnRRtzw4CtTQPC1ga+n4Vhy6llro4z
nUArzSBctR2uV0IFZi0gr8guE6fLwO6cHmjV9TaOkOtlrTX8uvLB8gJqfiYp
M6k5OR5lA06MrSPE1hBiqxJiKuKjy2Mji6PCM25eywq/nh8G9rHSiCcaCDc7
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
+CgIcxo3KCx30ONGmS3PUd6wAEo6gVUcOPP5H/lQSd+HAf/D4NlbwfM3g543
Qu7Xgm+/cP7q9x699J3Xvv+VH/7tU1/7Y+snnPLN6T6rolk/VDLNyDcOFsz1
505Rc6Z6842s2lVpz7py0MTuHums51QX9xfmdaSnNhITaxOTSgiJRYTE4qTE
stS0ioyssoyMkrS0gtTU3JSUzERiSkJcYlx8Unx8SkJ8ZkJcVnREevittNs3
MsJuZIXfyr59Mzf8Zkl0RFVCbAMQKpnQmkJoT01sS0loS4ml5KZQC9J68lL6
SjIELeVj9NZFFXt7VnqyOHpgVaHaSSbpiWNsa16I6QKua5J94QKnG1rTDQGw
1kFeYbRaHUOBw6sahnN8YHWcgdXaoIMtj/bjnSvDj0C7rKS9ZzEQR5UF8/QD
Q7HAMsqSEuVWsopReiWjkGIUdtuUA5vTw4dWUA2a/cVRkFQHy9qDlYn9Fd2B
YwTzN+Bu6FmuCYYLy08L/e1ZNp4GENksG88KCMJqG9AzzX3cueLqIeYiyMbX
7kBb7eALoZeousLTLkaQfZMEa8V7oIDmZXsG6Y5BDCP5zrxoB+FMgOkvIB0X
gLWBAQtscYQG2gpf+sMN30G7+hiX6ARiggl2ZpAH455BuGsSodW/BeHmPLCY
sznNWtcNuDR9W5qBnUnm9jRcGn/POHxolh7blCc25ZFdcbI4crqkubM0dgeA
BaoKUOUYwzatRrHk7Wgx8PH1QGhxu+qfgECzqXFm4cDCDZdaQC7ogNoCbKHU
gnhGXGwnaxGXWoo+/Eu0oagEmkPWtyTvX4RWTd9FlyZwgVrXstYn0KIr/NLg
vh2aZXtmyRaQ2iQ5tCsOFhU7dum2VXzoUJwuj+0tSJ1a1gy3fWKgaZ4L0pvm
VAyuyhkOUZ+F12Ngksa7a4fri4bKs+jF6bTCdGpBekdGUkt6YmMKsS6ZUJ6A
EkClPfGHmRHXS4jRtZnE+sz41uz4rvzErry4wbIkdkUSt4IgqCBKqpPUDama
1qwRVHesUtxYNFic2JcXy6lKkjWlyxqT5Y0EbUfKdHfaLCV1nppuGciysgps
oupDQ/8fLwv3DIw1Pe2OQ/rZuws/ffYZzxvfC4XuhYL3gu5Xgr43gqge0NlV
/W9/wIMFXXqwwsR+vNwjBiq8++sVP7pCyQcomt+SVt5fp+bIr+Vl8R+uAb5H
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
Rm85eVnZ7VT1rI/RNsb7kWlQvkHQHZicQQkrrgDxuPs6pm6QG/muSYTe95JN
0Dm0wyRfiTPryvCHGKougpX2LIhWgLlNw/Dm/PCWSYjbplG4aeBvz1+910WM
1ZXUuvo8W1iuQgDr7iRrR8fc0g4Cc9d19A0dYx3oPNazMkJZUnQuyzqWpW1O
SbtT2r4sIy/KuhyK7mUVBS0JjtHXtYNoOw+E2yRyaUBcwPzhd42SbaMUNCBQ
FY+xunJfx0yN2z7QyvaO2rpKfHElx64eXnllHGH82rdfOsNb1TDZuOMYA3m1
e+n0jjIGTwu30W9JgBImwxdtQCQ9MEkPsBC/PYQqBKzdBZBa0kOT6sQ8dsc2
frqEAscOl8f3lzT7mDf+PpZMHmi1bZCiF5/ir2rZK6ODDlX/EswYFZRlaZd9
uMM41KCnVY93lKkbCyVVubz8tP5MQkdKRGNyWC0hrDzuZkl8WHF8VDEhJjs6
PCvydlZUWFbkzZzIGyWxYdWJUW2Z0b0FMQOlBGZF8mBJ4mBx0lBJsrAyS9VS
rGktmiCVzFCKTb1ldmbVEr9+Tdbhkndsqsl7OtrduaFPL4o/u6L48y3Nl/en
/vJw+gub2s+ujX7xYPobn7J957OWb/yx/k83xOv6boe2+9M7uh9++zMP33wu
4HslEHzL57vv9rztC7jdKGWc92JsfFdNB+9VuaJ36kGgcRIbCC/O9GEdPKW2
++IP8WH8lzz6rh76f9Otq9+AVr+8Zvhf0svCe9Vx4/xChMIy2Xofy2XhRbG4
XrQUCBbwYmlngVxwz98K+u/5z3781s/+/rmv3/n0rsaqalvg1yzyG5zDzc7h
lgVGta4zd6wtQ0vOm+6vmGNWmYTNLm3viqbHPkJZnuxZmmp3zpE3zf2HDtap
U/CUU/yJNeXnD/XPHMx94cDwZ7uGP92Y+9Sq/hNL+k+vWz+1Zv/EquWuw3Bk
nTkw6w7M2j3T2Pa8amNWuj4tXpsWOSd5y1r28ujAqrrXpaa6VD2rcsqShLyI
aqN32vhky1CHidFmpLfM9jZMkqtH2ivk5EpRR4WwtYTbWDhUmz9Ukz9UXciq
yB8szh0ozKLlZPZmZ9Cysvuys6g5KdQcIi0vaaAwjQXAKspk5KUMFqUP15VO
0TtXR4SHxvGnlmaedhnvuubvOFG1I2hPXZN3VyeOFkd3F3DNIjtE+/KCvTn+
zgzy9F4HcTTJxXMyAK1gbIERBlXjnRaiQUaPKawp3tYkb2sKGMcBuuGEAltH
xnZdrgEiVGnoS2P9jhEUeLWEorFoyygIq29ltB85Co70OUdhKGbtzvAO54dP
TOJjkwSGrE2jeMMg2jYO75klMP3enuPvGQRHJhFMLXZByU4yEIBGepBfnJri
UnWvKrucCvKKohPMqSQvy0nLcqyv6FpVda+PUNfH+lbH6c7xAZcWmMWEkfyx
DSPk9oASH4EZUO6jHaNw14x5plllmE+F9D2cOrQp923KAxTZpNxFCf2UV9G1
2yZsGRDkKkxszDCxAdqKQFhtziOH9gsldSHxLr079Gysj9w/1ibxXLjMrXHG
lpYBqMJoNQB0XtfSgc7Lqu5lOULVkqTVKWlbEbevyCkr7+jKXkxewcmDa7rB
dR0TsLWJ6MzbRqu7fNc0f21WsDE/jK1YygCv+1bFIaIMXI4K66jgCDyEXwi2
Qjh6CSwN3uLbXhcRW6iPtU4Nyp6BecWjwOQljGLAPrNizyC5qkq8BVpvdnhv
BgwD6LzowCA+RMBCDpYHWED0DgqIBqklPTQqTxbGTu26uyuTpyu6o2XtnmNs
DziF3GxGdmwqfD6zPS/dnhNvTgtduiH4h4ZC/FTUZcC3mGThNc8z6ia7K3Qd
5ePNJcrqfEFp5kABkZwZVU+4WRFzoywurCQ+qjAuqpiYkB8fnxUVmRl5Kyc6
DB2Jj6xPiyLlRnflRfcUxNEKE+gFCYx8AiMvgZkbIyyJl1cmjlYTNLXx2vp4
TXPCGCllsi9/brBkeqB4eqDEAgOOkryro+9NMk/m+H9slf/p8thnndrPrIx9
0sH97CrnS7vSP99VfHpdcsch2loQfHJ35gf/+IXAOYishz7vW77AI1/wHKbl
2Kogxibv5WrSFbmutBW2m/+htJUXzwCE8OT7z6OV9/3c2j/AoeI/S1v9n4oO
9vou2ITlmjj3+M69aGZxjlb2UDoj7CE6iH0qlCvQj3kCBj0oAcVDb/C+L/i6
P/hzj/vf3G999xc/+OLffmZpf55jHW5d4DTY+E0L7IY5etUEtXSEVCBvzpY2
ZkkbsxUteSPk4il6rYnfuiBsMwlb7QqSc4zs0nVt6mk7s/TducH9Odb+/NDJ
gvBpu/xPnJo/25j63Kb+c+tTn1mbenpRe9c+cWrTnlg1oLD2jIpdg2JnHiZ7
4jW90DkpWJ3iOye5rkneyjgL/h2tjDFWsCwQqO6tvG9J2msTUezDFKuw2yIg
///UvYd3Y/l1Jvgv7Nk9s5qx1DlXV1cmWSwWizknACQIkiAAIhM5Z4AAiEDk
nAESDFWsqq5O6pactE7rcVh7PfZ6pJGTZEm2rNBSd6u7i8XMvff3QHbLlpOs
0din73nnAcUmgYeH+/2++/vudyMiWnBh3Msbcsz3W+Z6DcwOzUSbYrhVNtiy
2N8i7W2R9VyXdrUI25v4rZc5TZc4zRdmWy7Mt1/ldbbM37w223qR39WiHu8K
SGbLduW6z/gg6Xk973uQX76bXbqdspM8Y9vO2u/m7Hczlq0ELIABF2B9u1j3
S9dw7Luw5uWvevilJUJAXKRaRVzKSZsSaQJCudoiCtuW0SMIjlVyUvMt4uzd
JSHkxiJJtnkHL2cDLgCQNJuzoso9bZ5PW9iUrSslyYAourA6t+YDJFJuhVSb
mLKAAqBuvOyTVP2S1RX5WhA7f+EVrgel6z5hzQ10g50zM9N6ACN6QT+Z0zGy
WnpOw8jpUHWQ009lgF5pGEk1LaUG5IJnpvOmWXglGetc3jafdxDRIGKEsLYs
XvVLAa3gT2+GVWhpjhOHlfWwYiOq3Iyq18NYmKo36JUBUno9AYnduBbH2fH1
mLEGCTlKSmfASrARQFXBtix42Yq1gKzug2WAZNUrqrr5AFW1ZREuCVBvDxeK
C9BZdPLKbgAUQXkJMHShtLQAV6/oAKjiVFAxwinb2UUbcM854JJ503RWP5XW
0JLK8YRyLK0YyygAuRgpLdr/ZnRTFGDlzLN5LBtCEHTGv7KA4cItxSK6c+Du
ZC0ggxcJpGYjosbm4qh2K6bFXi1s19JvYQHQdDsFCGW+k7YQvyYqGufo8kSC
Qi7AqXuolidNXikLQNUakbsTYT8OJi4vy6s+xVpQtRZQrmG7lqoeUNVx6Ji6
cSSB9GoFB6ZsrGhvh/W43ZY0b6NhFNy6ji1sczbVE6bVuHE1gkuF1ZCuFlBX
PbKSS5yzLiBgGWaSWmZCPRldnIhIxoOCUT932M3qs9E6DEM3xO0X55tepJ1/
cuiFx/uef7z3hac6nn+y/fln2l58tu2FZ64/91TLM082P/N087NPtp97ovfi
UwOXnhy9+iyt+YWp5heYTS8yrz07fempuStPcq4+wbv2hKDpCXHzE6Ibj4s7
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
AsCsEm7HNJQYZzh1J66DLAToABgBzxAfWjH8iZoPk2cV+ZS47pPC68HSmRNy
+CxAVUJHj6lHI8rhqHIkrhhJyIZSsuHk4lBicTghHyN0YyJFsndGOwU4RUVa
x4QEnrMAvTqtktnm4RPEHSKvgDhaIGdEekVAc31FthlVbsaUCKOn3Ioo5Qxr
SQMBLPMa6gooBR1uY9Wjujpcasi0vkW4H8oOftnOLds4NQg7t+bgkU2oeVQn
OrkATFXALIJQSPScXGpnqgBUyDoHzIgIRaYApzKGqTTglI5BQVVcORaXj0ak
Q1HyflNYEpxIUPQKGKUWuSQwrKwB6WTWxIJflYVfiAwLBfB5CztnwSNgFlyB
LGrj5wuAkkDugPF5BWVYwPhE1YBkNfyJzmSd2A9uNIxzG2zrFLyQbd0DqgXk
K2OBFdE66YloiP9JEx9E2b9YghWOT1qFO8TXsFsk1otSytiKPIRViow0UOCT
RA8DbBTrtIRhaXE2dAyblHFzLUagKqStrmiBka0HlGvLSK8AsIqOhkUYDgvQ
zaW0s0CvYipmXMFMyJhh0WSAN+GaGTLTe9Qj7aKu5vmblyabzk9cfXHwlWe7
Xni89cn/0vL4f256/D83P/kLzU9/FqcYPP25m8891nXu6f4Lz45cfYnRfJ7R
fG6y5Tyz5fx0yyus66/Mtp5b6HhZ0H1e3HdJNnhVNQwr4SbtaLN2pFk7dE03
cNkwfM0yft1Ou2Gn37BNXHfQry8xb7qm2zzsWzHpcMnEuhuQ1L1Ae2dfTyvf
LupXfdy8Y7oaEv3fb+ce/vD/O9n9+t77f3548L2jw/eOHr13tPfxwe7HaJd6
eHB0crR3fLyHnoPEoptsVFFzRogsjeztk0ogIVO7pwqN/Z+hU+5PgWs/80rg
zxGtyAYcdlHhYCmKVe0R+9ndg12Mw0ePyD/vkq0s3CA8BAj74ODoh0eH3z3a
+dr73/qd3/9ifissWRa2B8WdcdlATDrgmW03jFyFtY16+Ipi8KJs4JJ84LJy
qFk3ftNE67Ix++GOdc0NOmf7bNPdlqlb1ul281SbngY/0KKbaDYx2lxz3T7h
aGgRcIoaOMhK6Gbi+tkEhGE2Y4F0B2jFQ2m0V4wjXyFTURZqKG3SroVwF7gW
1FQDEHCig2PFry4vKxCzPLISkBEU3Uko81j4lgFsxc3cuIkTNbLDurmgeiag
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
KGxVF4W0o57226/A08FBPEmrx5703tNeFEwwFuebk1aYISQHY0CfVu96q27V
YliUZEHQ2taDWcRW8atGMkJF4oKKZax5nMMqWAV5glYF0tyeM00BJJ1N0DcB
a8MjXXNLALDgZ1JadlQxEZZhMjAimwDAKhh4Od1UUs1GwJICwxqNKkcBsICq
l10CYJdrPsluXPNKzfmFF5J/+furX/3ile98/fff/fHfvXfyk3v33j0+eofY
4CK9OuNWd0/gkWYm8P32IlQC978RrQ5/hbrVfxqtWj9Df4wA03FLVr3pYHXm
BkKePtqA4VDwu6fvvfXeez863P/7d37ype//w6e/8KlkNSDwKzt9osth4eWI
sCMkmYhp53I2Zd6uKLhkKAwekFWWxcVFPnwuykvw/uJbXHPL0BIUrdZIGyrA
FlqoozE63MwpzRiW44mIXEKKdCAlH0lhDpCML2mYae1E0/lIywRuBVtokRxE
sfN2SdZY1qwQU+CNiHErbt5OWXYzlit5217eule0Xi3bYd1I6VcjspILPmsD
4bnL3unzy5PnApPnw1PP+yfOBybOB9nPLzOfXRq74J644GE95+Fc8nDbPVOX
FzmX3JMXl9jPL01edLMvLkw8u8R63su+6ONcDky3h4B/8bsSUqxb0Z7ArI5s
yDgwRT6VJChaUdnPvJ1dck5XFvkVIhqPwzI4W4SNcHXstIcd27oVc24nHQSq
3DcrgZvV6M168nYj/eJ67tXtwu9upl5dDd8pL1yLa9c9gqqDSVr+hpJoHTWU
UTAyyuEs/D1yRloGaMXIyIazstG0dDglHY7LsA8wRopW8LJTeKLzwvehyswh
PiBTWcsUnRTIY3VmGrduFBWk7dnDcRXsSAMJ5QAgQoLYKaZoFUxFThqaseZK
GjayOibCoglxvOSYLc9j3aHuka361VtR407CuhW3bCRsm2k7QNVObn4nv3Cl
sHg9t3Q9u3QlPQ8kC9AKzSVz9p2MZTOuawTlKM6wIIDzf8EyAYwvr2VmNeMZ
1XhGPZJWMVJqEhpGWjOU0TIyekbOiICFwvhWmnzjALWhsPU+hnXmDDJNM34V
0vhHAatgbyJXC7/yyK3ggoNoBTwFggKWHqUCgVLhdLBiqGhg1q1TdSunbpuu
WHl4e1AVxEVRwz2H+TpszJOsLcvW/WQgGoXCtFsxwwYgeIxYQQHlTJg3IJLA
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
VKMROQOfhY6V0jKTmvGEZjyqHYtpx2NA/DVjYfVoUMUIKoYCcoZfPhSEzVM3
FlaNwCMQEc1oGi0ysaBGRM7ZmPgyswuY8mIW4SQM+4xpsgqYZeHU4VQMIG4C
aGPCD5SBZzm4DZdgc1FE0SqrHknIBiLC7qCgw4cdpJcDMx3B2c6IuDuK8lZA
Y4eS6uEisQMr2SbREczFqy8KGkuzG8tzmz7pll8Or+FOWLUb0e5EtXtxw5Wk
aS9pupKy7KWsV5JmWHdT5u2sGTv2c5a9nHUvY97LWODcspsyXcmYr2Us1zLW
vaRxI6QG+EsaRhK6wZi6P6ruT2oZWeM4dSIj0ojcqoP3gMwUFUW831jSArIW
WpWI1h+adZIcIK1sPghYrXFyon+CyJVQMNAe5YFoIRcAVoocotAKDUV9R5My
RnC2e5nb7p6+7Jvpgs/R+oJoA3aYRRFBKG7LQqtomaYdKRAUp2i00Aq+W7WT
5lu4dV0zcHim2EThqUROyy0Iq6DTCvqtUGBqrTRoezyFKqpIT2yUm90XFLCw
lX1eVCKGjwWi3A5oRTou0CQCyCMwxyrKx02T+i8XoZaI5+OEKek/rHpRkjdr
ns3o+XnjTM0hXV9SNRYVJbs4rpmMqphR1UQUbm+grkS6DZ5aDbv0Z4rzgo2o
4qW1xVe2vVfqzr364h9/duON7/3Ve6dvnB7/5Gj/JydHD+bfDpus53j/mFAq
JFbHpJLVrFsRIvNvuNWvGL8JtCJ/7QHCVLPz7/CAyHTg4PPxW0CpTg6+d/TO
P779w6/+8zc+8+efWXllK7AaVgI8xUyskHYU1iJiOvBlOX0TV7DXSAi7XM46
jW1jZIVXtbUSF56mLjrORJBABQDrJGFVw8CqUDVC1BsQ90XJPM59AXNsq8B8
eNrERKt3+zRmUeaFtcW5WlNaWYx34KKw6J4pLPKKePBm561MiIp9smRlASkL
zXW5py+6Oc/OM887x552DAOrehLCPfaMl/msj/18gHMpOHU5NNWG63RbmNsO
EeF1RPmdMX5XTNAVRYcLdGWCiAr7qL0gjZSUkZYNZxWjOeVYXjWe1zKx1kzo
VYF0O5dbgNV0lECPpFXP3Br6fajXI8aNCByhYSOyXcnY4RR9szj/Qs1zu+p+
obZ0Z8X7YmP5Tt3zcmPp1ZWlFwq27ai6siCAXTcoHwjJ+2PKIXT3Iz3qSVhh
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
0bRAq1+kNSzR61fo9Qvk6nlS+dxg2XRfkb07d6orx9p+c7Y/3zFYsDBUuE6t
8nGb/ZwmP7sxxCVEBYSkpG1P2X2o7TsZJ+0byXtW2uks79wpurcourskurcq
vbsiPloS7C9ydxZY6QVGyslML7Eyy7zsonTXKdtZkKDdLgcW8+IYoM8MPzUr
QPzrhYxwYpKRRhXKmILlFMAWM2HnYADHj8Np04JtOz9iF0RQITYSHMaCk8R/
F/7atDDjkCYdEhRzsuScHNrUrGwH6J5DtOsQ42UyKOnOKcNqx5ALyQkqykNm
LndQKqAmu6FFCtsb+n2cQGGkCaXIrmruAhlxW+5sjJ9vjr+FCoHHzzzjd7zG
u14z5lwJ+GW647aceyfv+6fv+abPvTP3vLP3/XP3ArPIRtY3hTzQ3RNnLuvZ
luVsy3q6bj5ZNR4t6/ed2l2HCiK7oMg4lRmnAqnHYBeSwpggqk5FBugCBFh2
YWYK7acg2HWijTk4AeYAcZgDALrNy1Lz8vicNDotDk0KfTaex8L1W7khGyc8
wY5MsuMz7NQCJ7PIya7yTrbEpy7JvYDq8zHTF9OTEJ+PTrzlt36UmvnKoePd
XeMvf9Xzt3/9754//oOnj7/55PKHnzz/5PLx0wcfXz579skTLOMCpaNf/vNW
Vv9ElsXPwq2whb5HGFpdPEWFv/BLwKoA7VA8egb/GAjbjx49/P7Fw+98/MO/
+Js//49/8H+ef/1849Clj89LI7PymEO7s2w52Jw+2rIfe+zHbuvepi61LE+g
4VoOH2DCLojDlGmCH0cF/gizYhhmxQChXuzvANEAqIqgOiZqUD3mU5K9ihGP
bBieVogteDwlg254ZmUAXiSYmYf1o9swezfTEhZ62saAKWvWztqdZmWnGTt2
OoopWnaKsa0b8Svhqe9b43cscVohFrmty4J2tAsv7d1SDno0JJ+e7DeM+gwU
3zjNb6SHzMywlR2d4CFxjBnRwZIaX80+XtXhJp7A1O55rIBWd12WOy6kIo5s
VbfG77hhrqU7WVfurwBUCROz8OgxYpOsmI0dNTO3TUh9PTpOj+ipQS3OKcgh
LIkdr7qKwNCNFRFH8MosQGcFABbJKx70iQb8WEDHJ+gPCAfcvJ5NbjdMtjeg
A0O3sHdT3O9SDPl0oyETPTbJTcwKd5cUyETPazoLTdyLTb+Xnv8QqZg6343P
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
vj3A1DMHqOoOAkgtt5Uut/hX2spW28s32su320u3O8qvdVZcT4XujdTsnGrb
v9C9N9f99GLv/jxjj786+Gx56PnK8IvjTOD+BxvKPgTWowtM8UPYHbLjwWkI
qTuTTTCmmpg1KXDmyduTyVsTIGpujsdBAG11d/pnlqsApE6YxQILJjOHq68N
Vt/oDd3urrydqnw4EAPyarO5ZC5gPVtkmvDqUwZwP0lW0pICUuwkhKVqusqg
qlSSEZ0ibtbETOoQU4o2pKWCSokfUImHFPKQsAxvMIH7VX1MLgvLiJiSCsmJ
EjG/QMTxYUBwITa2egOYjqRorhQtEnP9QqRECIv7VZCCMpmgiOAXklgBjefS
EhclMeKolPVvcxGcC7NnCg640yaqDJqkTt2gVjRplC16Vb1WWUkKwfwGgBUx
yevM8hpwtyzkBLicEAepwbAGtTKklLklfCDToAUCJgIRgC0eB2beTBK8yKCN
OIxRk6KCFpaJwATIjVNoyqWd9ueMF7gyLmOX2xg00T61qEgrDtlUQZM8qCOT
VnVCR9bIsWopUitGOpX8ASM+oBFO0qIrOnLBoprUkh0yLE4IKsSCfCHfweUC
DahHEAcHLcJkFbgqLKYbNcpOu6ndYUqa1NVGZUwnDymJWr2iwaRu0itq5UQY
R0M4Py7lN4uRQTn/tFV52qYa0RJpuTBFCzNaMmvXDlk0nSqiV6/Ieq0Zm7Ea
vFmRgOZAMkpFmFpBq+VypVSqE5NGjLALCScmMnO5GkZRGlDEJEA8UsyvVviV
yiKJvIRQFOJkWKWrMujzCdTBR7wEkq9AchSYVUoahLhOIFJy+NJjc6COz7OJ
BE6MX0yAPwB9j9PaadY0ayV1KmGtEqumBGGCF6WE9QZ5Qkkk5JKkXNQox1rk
ghYKSUqQejVZZ9LFtaqgjCgQ8XMF3Dxc4MF4AFU2lKNllvkMPE6OQhYxaFvM
ph67td2kq6ckNRJ4qxAjuLUKcVQpLpcT+aTEjuM6TKTj8cBdR6WIWyMXVssE
EYIfxJECDlIq4gdoLKSTxmyaCpPcLUOBYKTh8iKHYpYp9RzEKeJ4cH6OGCum
ZAGlIqHXdFp1Q07djFd9Lk8xX6G9EtQvRBxXojkXI3nnKnOnKzzTFe7hEsNE
pXUsbH0633v45//i7z/53jeH3wckevsOwOj1O4ikw/dHwHoPZdTbw+8cFwzO
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
bjGTuJKunu+rWkhXXx2ILw8lVoYT69nkxljd5njd1mT99lTD9enGG9NNsLL3
GdizCdz2P7ncBxv2LTMLRutjcN1ncwpWotic3Nuc2mfMCfvHrRg/7Mn4oUUQ
Lg8BNjFrRkeLR4yq+s/U1gmthl+uD7xYG3hypefObOvd821PrqR2FzM7C2kw
wv1Hi/1wFWkhA0aorZiRORhkx+NewCmGMhAoQO/sXAJT7tCzxZHny1mgs16s
TbxkOQXGYwf7Uakl6FQfONpCdVSDIs2Io15YVHYu9eRC75Pz/x9d7wHdWJrd
dz689/ByRM4AQYA5BzCTABhBEgTAnFMxZ7JyTsyZrNBhJB9Z0hnv2quVLNmW
vWtJPtJK8mqt9XitLI9Gsmd6pmd6ZjTTXbmqtd/3Hqu6p3V8+p7vPIIJQLG/
3/vf797/7Xmw2g3idLX7BE6f7zpe7lQDXq8o1yvqNfgUnKJ4qBZIAGBBMdIB
xxMvtZ+CgEN4oefe/mIcvP9XB6qWorlr0dybPSXgVmRnAuzw9Tvn6rbHa0GA
CxBfPHIuDMTUzmj9DoAUiJHaneHw7nDt9kBwqw/SCtrutZfejpfcjgdux/Jv
R3PvgmjLvRvL3+gq2eurOhqtO51qfgwU1lrne+e737sA3qieR5d/xjnqXdX6
l6/PFBZALSwChLQ6AqpcoZV6bgU4paCqQUXV5nhwczz0LuP3Tkl9BVVKJrB2
e7R2fyB80BMEz/BgoPygt3QrlnuvPvVCoXkuRZ5Pt8xlJ8XtxhxMA/7v9iHw
7DugxYOyELGZm+0WcFHOkdUCXarVFCBIhRbrtFmGkjxgbZXlMhTNUM7Ky0k6
YrPHff5Gq71clHK1uE/Z3DIwpNokJpJdbU5LSOICJJqtQTI0SBFLlslCkcAW
CGw+zxXwHFjzOT6LYXwsmSXzZTZz0GGpMYjVIl0rMz0+10hWSrvXXsGRxTRa
KlD5POFUKvGcOJIvkPU2E9hFA5S2mMJqTGJTkr0uyVpm4IrAViwyhVadxyhK
JCpoYNGIqGzURgQel3hRBAi9UgFrsDNRtxC3C4Nm44TdPeX1zaZnzmblDvnT
ms3mWlmoEegqBguxWKuB6EsS57IdM27DhIEdlOkoi9ULeL2JDNuYCjNZYsCC
FrLVI3Z65A4rFdfhMSPV7DRXSUwRhuQhSBF8J5FqDm80s/Umqh581sTFTGK7
nmsVhTxG8NKiR8t4NNokBFZOZmPwFqKWx+JGpsOoHbRRsz7pnJMctNCDdlOn
1dBiEUMGulRAC0gEAK6CRCI6Bmz1oymO8UzPbGHaYnn2eJa/35/UaNVlEZjx
rVuFl8NKXHJblqs32zmcaprwGSaTJfDSZguShzOdCb8x4tU1eHW1DqGMx0pJ
pMsunPNZASVHXWKnrI3QaBOLhnCkCkFqMKSZI1oFqpFEOnRcl47t1XPDZmnM
rh8zS31msUTEXQRixRAfo8nWMXl6LlfkCkBwTB5JFdJMEcUUEVQpzdfwXA1D
BEk8TOJNHN5upge98ni6dSLfM5DjiXhM+TKTylM+WfDLsgfFgYosZLlqo7HW
Zqk2yaUy69PA2WeSUpmp1ZAoziFaDiFYlBc5vazTCwBYIoHIWkQmgdTSMAg0
83cxaJ6ZaEzXDxW7F8p856tSr9RkXK5KXSv1rZT5liozp8vSx0pSxstShosc
w0XGpbDjt07nf/o//uOzlx8/f/HJsxc//Pwfnr9+DWD1TC1mVwoFFTYBWr18
8o+PrhRt9eOnz3742bOPn778wZPnAFgfv3j60dOf/PWPvvdHf/sn//sf/ruD
f/HB/M9t9T64nthfbQbaanO6HsTGZO36RO3GJLiA9RJbk01bU83bUy07M1EQ
2zOtuzPRjcnordGmqwPhiz01gFk3huEE4TvjEcCp+6ox+0zz5mzL5lzrFjwW
iR0sxA+UIYMn57segt3p6hAcQH9nHJY3wDrwSaUafOZ9tSzhZyF11m/7pSYs
GHcnv5IAfLeqCksJ6McOvS/ujvyTe4M/f3voEXQmj+4vtz242P3oSu+jKz2P
r8IOJmiXB1CljH96/60KeO9yv3K2om6naol1j1q3ptTRJY6Wu0/X+h5fGvrg
6igA1s8BkaWsHyqNzB8q/ktnxkpXYUEFQNUD6E0BBIXSM6UOz7rY/96FvscX
+h6d71XX0xV19Hzn8VLH0UICrF++Pl4EGIKjhw8XYSHf4WrHAVjhTCiYPTtR
9ch8/HAe1qKDANr2ymD1YmvOSnPm1UThvYHKnfHavYn6XUAowKmx2t3xOvVD
8Pj2WHhrNLQ5HNocDK0PBjcGYF8VUFXbg6Gd/tB2X3Cjt/peV8W99tI7idK7
7SW3Y4U323JuxXJutmXfbMu7lyjc6i7dHaw+Gq8/nW55tNT+eKXj0VrHwwvg
LqXny668/zi+rK0ArZRSwA6AqnfaCjZVKdpKpdXWudDGWM3GWPArqPpKQFsV
JTZHwgeDdYe9IUCr/d6yve7i9daMOyHPWq5u1stOevhBl9jAE0BSZRN4icCX
CVKlLDc6He3pae1pqQ0OW9AsN9ottUapCEcLEaRJ4tuM+hBN1LJMAEVyELA9
oiUkU8Lw+QSZAu51NZoUBMnE0Gwtnk9ra4xC1ONotFvLBC5Xi6bBZmFNqSw0
JLujab56p73abKwyGGoM+qDRWKXX57FUPkuXSEKNUaqQmWIKLdJqanVMi8NQ
b5IKCUyVZl7NmQeFh8HL7cYmrztsMRZo0WwUKZWYFq+jIz25zWNvNMoteqlE
5i0kKgNNodW4OcLDat0M6iEQ9XTJiyA5WqAakHIRCQpIQmQHzOYei6VJFCto
JsCyhQKfwzOphEb11nBrkExSUwEYZOO6bFKjjgiQiloE2x0GraJ8HJIlIyVm
vNyIFrNIMYGUkEgZrwW6r1Zi6jmqiadiZqE7yRSxcmWCpgCQS8BhDs1qilvM
xXqLVzQ6AbAIxotr/TiaRWhyUNhWFpG1zQIS5ZEuHZpgkTYaHTBJAw5Ln9sc
s0t18PAIb9RpuxziZJp9Nd+/VuhbKfAtFfmXSlLHU10DSQ7AtQCjSUERP45k
0EiFlY5n2qcq0hdLU+ez7fOp5tVM20qacS5VN5Gi6/GyMS+T8PHtyVzMpu0y
a+f9xosZtlWfbtykaaeRBgyp1SINrDam5/scxhGvbdBp7jQIDVqkSYvEWHzQ
JE0nWaddlkG7rkrCU2jEjSGpJFIgU2VGoVQvgH+sAE+W8kxQloKSWEZSRSgK
/q4CGijzM5Xbp2oSaZTRVvBUvbp6Ox+QtH6txkthGUax2OUImC1ZFAXujjJQ
tBTcWenAX46QQ+JJGGpBURZasmgRgCNcQDAG0ZKkwOp0glHH6jiMJxAG01AY
iiMICf6iCMQlokVuvjXbOpLnng/4LlSmX61Ov1ieslLqm4XTstInq7LHy9Mm
Kvzz1Z7zNbY/+mDt+Uf/8emL7zx7+f2nz3/w+efP3rx++UK1tnj15q3BhVpi
8T/TVn//5PknP33+vScvv//kxQ+eP/vB6+ffffb3f/Wj7/zhX//x//If/uX9
rz849+FG5+m1tt3lyOZMPZRXIKbq7k/WrQNUTTduzUaAPgKxM9e2Ox/fW0js
LcT3FxPb84k74y1XemvXOqov9YZujjTen2zZgEOEoxvTrZszLdC4aS66DXbL
+ej+fNs+WBfbDpZiQAicXOg+udT7ECgaWEM+BmeCqF7r92Bm72sqiZSyOnXo
sDpx+MvAgo/fmXpXCvjlNKA6TEQdd/X+HWWYyO1zH94Z/vl7QFv1P7zcsbfU
urvYcrQWf3gZAuvh5Z6Hl3sVWg1CnQWrHfrfVaypJdbvHGXfVX1DA72l+P5c
/HCh43Sl5+FFWJkPRNaH16HO+totWAD/wZemTz64OqR4KKntvYOqadLjt7QC
kHrvQv975/veUwYynrxDFRAXIKBi6oCp1LMPIZuOFuBzgGnAtU5VYZ0owz5g
9mw2djAdhf5+0y27M62b081XBqsWo9lLjamX23Lu9JRsDlXvjoVA7ACdBS7G
wyDAxfZocGukZnO4BpZV9Nfc762611O53lu12VcNVNV2fxDEZm81NImFlual
dztKb8ULbwBUxXPBer0t+1Y8915H8WZP2d5I+Gii8cF866Pl9oerHY8udD0C
tPpZMQXeWLUrWS2n/6KCfbnji0wgwC4UVrBb+RA63EIjC0Ve1anA2joX/koR
4Jex9Q5V6yOwymKvv/awN7jfX33QV77bVXS7wXe5xLiaKcx7mQknM2iDOahK
Vhs0yHVJnkqHq1BvDBjNpRZLviT7CTwZQ/M5usIolQhUMYnB5JLVWCsDoYQF
GC3YZ8plsVgUUjGNTdn81f0ffEulUVdh4MtktlTm83k2m6YyaCKV1qYxRI7I
AvUU8tgrjPoyia/SyfUWU8zjSnjcYUksIbAiQlPOU2WCNp+A5nvQhQ+WkMHt
K0txMvco4IAnHbimQBbL9foAUGe0NodEi0S63mVOpHq6kt3ddmuPxRTSyV4K
d5JoMktk6fgsiUml0DQKiDKigMPLdFTYyodNTI2eqAUbPo81G/gakfEpqSRw
fy5qEB2J8uiZLz2j5JfAry6SsIiNjzilKhOTxSJuAnZLGTSIBWx6DJIioak8
tIf1KGyFaTQKj1oNPQ5rv83U5zL1+yy1BhK8KLvSrVZO4c06KW6zlOj1yQyT
RJJpDJ0LXpTAVBiEcp4o1SJhRhMR8WYWCWuQagSp1SCtDJHQy3GrrtHIhA3a
iI3t8MiDXtNslmst37tWlLxWnDyX7xpKNXUnGRJ2XYuJbtQTER0IvElGuh3s
TJbtSmXGtYr05VznQqb1UlHy1aLk83nOiTRD1IZXyUiFpCnjkRCPtBvwESs3
65Sm7OywERu0YL0Wuo7D2ixSX5JtwGvrcYJXp+t16ttNXFyi4jI56NBN+uwj
LkNMIuplbbmi/gpJpFLUNtqkWJK5xWlqsEgRuz7mtsTc1lrALwoDcC8lNHnK
vzVgVimFVAhomaQt4jVpBEwgG5T6f7/ElLjtzWmpFXoZvI25KBKUtBGLGLEK
YRNfbuCzJd5G0jRKwdpMrYRgNLQ4wREdS7kMksvA62mcwTFKS+CYliC0LKGR
KMSj15a4xGiyeSjdMV+cDFB1qTxltcQ/E0idrsxbqCufqs6bqclYDfnXyoy/
eX/gp9/8reevvv3i9cdPnn386s2nb94ox1WvXr98+VrpGn7+Uum6evnqiZIP
fPrlInZVWz159slPnn/86avvA231/Pn3Xz/76LNP/uzjb/3O//d//fxvfv3q
LxwMvH+v/eRKdG+paWc+sj0f2ZprWp+uvz9Vvz7duDkLHmnZW4rtLycOljsO
VzqPVrvguta1v9R5Z6z1YndoOV5xobsa6CyAqq25+OZMfHO2TeUUHG41H9sG
qFoE2iq6u9C6vwh0TTvYYI8udB1f7ju50v/g2vDDm2f+6g9vj71/Z+KLjuC3
F7DW7q1J7Jm2AuvdMyWlcgqEyinoMXjz7ZCsW2PKZOGx928Nfu12/9du9z64
lNhZaAavETDr5ELHg0vdDy4Brdf98DI8WHmkKKwPzg5WzlTVV+781e6k/cX4
3mIMaMz9WQisk+Xuh+cBfYbevzLy4Y1xACx1eohq4gS9aq/APt/Hl7849nqk
FP6drHU/WFMSgNCxAU66P13uOlbxBKTTQuLdqsbZp6DCgtrqGDyZVfh81LlU
YG8/nYsfAVRNtuxNtWxPRgCwAK2uDdcsx3IXG1IutGTe6Cha7y/fHq7eHqnZ
Gq6GwBoN7sK1ZnukGjy+OVS5NRzaGAgCTt3vqQSx3lOpDosHsdlTdb+zXKEV
nMFxs73oWkfe9Y68G4nca7HsG7Hs20C+dQa2+qv2R8LHU5EHC20PlhNnwLoM
vQG/pKcArfqA1oZV62AFfxXgtawAFifUCvaThcThXJtaZbE3HQHa6nAO0ko5
uqrfU46udibr9ibhrBAVWO+wpWb/3qHqvkKr3b7wQU/oYKDmqL9ip7PwVq3n
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
dRs81fZisEJm9VTc6am6D4RkT/leV8lJT9levOBmOH0+39XlFBoFbZhAGrXI
iIlbTTGv+o1zyfpeB1chICk04uJw8D+yhaL9olxoNFbopRqBjhipDhvd6WDb
3Lo6ixA28xGnMZbibPE5ww5jndeeJZAuHEnmMS+vNUDja41bi6aTmgwOy2Cx
VEqTrIXQSaOwoF2qdejqrHyzXezxGrrcunojVypyWeCGXwObasH+49DAdFCB
gSnQ0/mCNo/FC1myiMFzgQzBNdkcXWU1NbjsYbOpkuMrWbaEJAsxbT5BZROE
H0XtGo1Jo7ECuaRFinREuVmoNIBNjw4QmkIECdFoRM81m6SgQSrV64qM5hyD
JcNgdLOkOs8rjdMGTHzAxAJw+DF4tuVGEXUosA4oGgypZTX1BipkpAMiXiig
xTzaZJMH0zyDybYBNxBiQr9LHE+3DBb6S7weI0GICCAvUcyLlZIckqRqlmk0
yg1mqVpP5zFoqhYpNdPVDqZUpwXyNpfHAiahymaqsVmDJkOdTtdmkIZsukW3
8YpHf80lzrnEFj0VAHoTQcoxTZDBQgxWy6JNojYioq0S2mMmx5OkcTfXayKa
WDrIMKUsncczGSLjFWk7p3WwWg9L+Fkmi+fyRbGAFwo5Po+lc1k8nycqjGKd
y1LrMhfxZBqGpGs1WRwRsOrKXeY8s+CiNCLEEQoL7tTRLCqcNF8gi8IQidZw
GDwwYpQ+KTOs/9SWmWxhj6/QYHaQlIzBXCL4ZkqDCzhrICSO5BBCA79HA38i
+EYThngpWIBRLJEV4EZFYMo4qpylwbN1UpQOR9WfnKlF6nVEr41bSLMv+qzD
Ri7G41ED155k70jx9iQ7R/zO0VRPwmMLWfVFFjnTIrtl1kDjekIraVBl3ijq
QMgUFC8hkToJG0q3zxal9PvNzTYxlmSP+r2N4JYgxTGY510sT74VTrlVn/zL
G6Mff/PfP/nkv7x5+u3PXz15+eLZs+fPXn7+BqLqzZNnr58+h1a3L8B/r6C2
+iIT+PLlc5VWTz77+Mmn33nyk7/7wUf/9b/96X/4xh/+yu//n1/77V87+I1f
vP3Lx3MPbnbtrbVsztbenagCtNqYCG9O1e8uRI4ArS52AzFyeL59byUBabUY
2wOP3Bg8vN6/tdpxe7z1fDw0EQz0leVM1JVd6o9uzAzsrY4eXhjfvzi8u9a/
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
afd8nW7AJesxE3kLWbTJihbpoFkyYiJGwIyhJqMYv0aI1Eh5dRivnuBFaGFU
IYkqsKhSFtUwtRTpkggrKNorxatRSUKt7Hc5Jss8Ux7HlMs2ZNLmlUw3Q7XJ
ZSkCS5BkiKF8WkWjVlHDkF6ZxEMK3XKRV0WU6mgTTVAiAVwVFIhRES4QShAB
TyyCS4VaHhLVKjsNuiYeUsdDynmIiy3dUqMCOSaUCXl+lbJgMXdrVV0aesxl
GHOoc4xk2CibcWtmPYZxuy6rICMiQTMqzqlUwybDoJoeVuGDSkmPnB9GkVIR
zyQSyfgCKU+AwSx9gBVxzKrMWqmsiUjpJH4F4kWheNFxu2Mkki7RpBzqaoJf
IkLCWrzToGqnsQwhaaEkrZSoVYZ0K4V5taSLlnSpJElKVIcJXGLELkXcOHTh
8LJu7UEeksPRBb3+qtOzUVo5q1L3ytCcGm1WAHGKOARwAZCDjl7Is8hETiVW
pqcdClwt4lHsHYKKJzRKiFKFNqjXp4CGUtOtFn27wxLSKb0S2PALBKBVQKNO
Wy1Jg74RlVpZOYaye092Hq9eJG2WqzrMtrBa7RAJuEZmah7fiZP1KkN7iaO/
zpkrN7VZqC6bYqLattjgnKswT3rU86WwJcdSuW61xnih3rZYYXihybvaWLrc
6Jmpd4xWmgpeZdYl63CRWa88X67orQAqTJEvpYpe+ZBJMKpGhiikD0cG5bwR
ButjiLRUGJXw21TyQY9txGvrt2hGHbqZMst4qX6oRNvnUPXYVDmHbqDUUaws
6XZZgebK6HWtZlObydRuNLXZLKkye6ba3VlR0ulx5VzeLocnbrKV0rSZxJWo
SC5E9GKBUyK2s7uTJA9Ri/lmQqITClUw6Z1XKydbrYYuqyZvlY+46fONhhth
y5WA/kWf+VKT+XqTeSvsPElWnWTqdxK1m/G6lwYyW60NV6LOS2Hd9SjzR79w
/qf//nsPH/3Dkw9+9OjJ2+8/egd2twe0gr0XHwJaPX369uOn7z6C7e1/Co3Z
HwFC/SdaPXznn97+yXd/8C+/99d/8rXf+c2P/8YXPvSVT7/y1bde/fVPv/q1
T7305Y/f/vyHNz9269yrN4dOVmGuxe5c8/5C6mgxc7iQ3p1uBjPbha7qpUzJ
XNw5FbKO+0zgJmEmYJ+PuBairsVm52pL+aWO2ms5MCtGD6baby/l7p7vf3Bl
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
0wNaRVYFYIc2kuI6WlopkwBVqGfXBq3sCFSzUyKpkNN1jLqBUfmV4H4Aj8rQ
rFpWNClGTfS4WT5lZ8Ztin49VjBgRadysETTbsJCcqRJigRJJKmRFJxqwILx
KttwibHPqiw6NBOV1tlGz1iNpeBRdtllY9XGoTJNn5UesihnHPops6ZHhraq
iGYNEVOI0ho0Z1MMudUjTtWQTT4OMF2uH7NTvRp0xEJdqC+5FqlbbSybrXKM
eI2Dbl2/W9vvMQyUmuCbVlonK6wTpaZRh3bUqhq0KTN2eWeperDcNFlimnWb
Zl3mMZtuvNQ+Vu0crHEOVTuGq+wjZZYhoJ6c5i63rc1uSRh1Ia3Kp1b6dBqf
Tl2vlvt18oRd3VlqyJZoutzKrJsCzG11ER0lTHe5oa/GPlTrGK+2LNSZp8sV
F0PmsTLiWnv573/86J3vfPPJD/72vffeBqrqyRNOWz18/PgdgK2nH7zPjTCD
HZALJl289+Txoyf/Ocvixz/5mx//4M/+5a++/cf/461v/Nprn//4nc//6v2v
fOr1r336Q1/51Ze/9NHbv/YLu5965epHjhZevlk8eaHzcDkDtNXOTHxzMnJz
LHylv/FCV/W5tvLlTOlyqmQp4V6KlyxE3afAClgn/NZJn3XCZ5mGy4MlS/Gy
F1rrLnUH1oZSW1Mde4s9R+cHbr3IuaMX717sv3U+f7SUPZhr359u2RlPbI5E
14qhtf7Aer9/rc93o7fhBrxj99/M+dfygfU+CKwtNpsaAGJzGEy54Ha6mQMW
hNRzIxf/aZ3wFFhAtrQfzAMQt+0vt+8vtu7Nt+wDMC203WGrg++e64Yp06zV
HojDaSjWDiYy++PpgzNg7QFgjSW5EQBraygOKQDOjRNWnJhiAxxz0/jN7oaf
RVf9Bpgw+6ECOhhJnmX6pWE2xXQrpwc5+MLOiVPps+TD1AHMlj8F1tF48ngi
BcajscTJWPJ4NHE82nw4nDgYShwONx+cpUMAbAEswr2t4eYdeJ4xMKVvQhkS
3x6PA2CtDYau5Bpe7Ky53FV7Pd/IaisWtbmm08VAdpIH18LRigMWGAGnWEEH
jzk0QxYDOdbVeLOzDnAKjNwBYNAzVAFOXUqVXQTBEgrQ6lKiFARkFkBYpgLQ
bZ3LEhyIHA3Gbo0mb09mbsPUi7aXljpfP5d741zu9eXu1xayL8+035vI3BpL
AWrvDkW22aXOLZhZEeG8OOCK3xmhuGvhHp6iCt5LAJEVBDjezvmO+oInfaHD
rsZrzd7lev2IU543SWFOoE3ea4MdGdJaMqaWhbWMX62qlsurCKwR6COjps2q
73CYmg3aKoJwiHEvJg9omLBaXouJPKyragBDmuXCDh3ZoQZTOhbFRUGJMIKj
SYUso2YKDuOQ156zazsMiqyR7jRQcZkY2h+JeVGaiCvpBkxaIxU3KIgaWlIh
5UVVxGCJY7Lc02PSRiksqMQa1dJGPRG1MBmbrs2iaTGoA1q6nEKBtrIK2Laz
pKieRitwQSUuaGSkTSCUmE8lradETTJeBsyQZkW7koiI+A08uIUEpm4bjprl
hJEm1BIhzBhBeGUo3ohhtdBEQlQhE1bKBU1KUcoIZIKuR0VlpOKUVByTiv1S
USOJ1tIijxQmMDjYRIsStu+Gi3XEtbIPQ6goq2CGNfpBlSFLKlsJJiyS+sXi
FEPnDMY+vSFPKfopeoxRzur1MxbjpNkwaNR0qFRphbqFVrapmDa9MqmnwnqJ
X4akFaIRAzOqoQsM3sagIZW4Wi6owITVqKCULUP2CQXgVzr06npMUC2FmZkO
Pjy3KgkvqiQaZeKgkozq6LhRnbEYM2ZDTM20mnWtenALIW1RSDppUTcjKuqk
cxbFObNqwcwsuHUrtc6FJneuRBnVCYMaQbMZ63CrijW28Xr3aIV9wGPM2bR9
Nt1IqXWq1j1eaRtwa/M2ps+mzBmpNgXaRku61bK8hmoDNzyooFIEa6X9GL9d
SxUsTJ+JyjLinEoyYVdNA9FkV4OY8RjnKx3jlZYuMwW0WKuB6HEqh6vtk03e
sXrneJ1zqNxccKg6dURWg3cYyEaFIKhD2y1M0QE0l2XWY59y2ybKHGNV7mKF
rcdtyLkMg14reGa81DHktOQshlatMqGiYzomYdInrAa/nqqQC6uVkoBZFjQT
Ubu8o1TVXcr0lKnylYb+WvtwQ+lYvWeizrHUZJ+v054PmZaCxk+ujb3/F9/8
jx/9+ZO3//H9999+BJ3X3wHCigXWO0BVcXGmrd5/+r80DuYC0OpH3//OP/+/
3/qj3/rk1z/7MqDVFz7x4Kuf+dDXP/sm0FZf/JU7n//FvU+/fuNjd1ff2B67
eyV3uJLZnU9sTsZujoauDDZdLNS/0Fmz3FK6kHQvJkqWmr0rydLlZu9S3DMb
d01GnRMh23gA0moqYJsJumZD7uVExfm2+iv58M2h1M5U++Fi761VaJZ+58WB
2xcKQFsdLmb3Z9u4jksbw7Gb/cEbvb61PiCsfDcK9Td6Gm90+653N93o8d3M
+9d6gxt9YcAFViBEN86A9YxZ22dq6xmqnoms57XV4XwbzA9c6jhYaIWNg+db
AL8ArR5Az6WuW8vQcO9otgUG+K2JNJcofjgG6JA+PEvDOxgFkdxnQQBlC7tp
tXMGrGe7VM9QdT1bd62z9lq27kZn7c2epvVCCG4GDcYBsA65lx1Ps2SE2Nqb
zOxOnZ750XSaq+0CtDo8A9bJZOrWJDix1MlE6tZ46mQMRPLWePrWeOZkNH08
yp7eSHIf8OtZMsZwMwArAP3WCJSxAFXb47H1ofDVfOPFrtor3VBbbQ6ENvvY
ky+wm1a9MNcCTvvs5YCr4y6QO+COQXBohloy59vohpmBHKfOlgR/Jq84YEFa
pUq5TStOW11JAorB58H/Ab8FZV3OB3tEFiPHI7D/7/FE4u5M5tWFjteXu95Y
yr6x0PnabPsr060vTbfcAR/FGBCq0d1B8HmG9geiQF49k1TPOMUdc3H2TABm
v+T9OznfIaRV8Kin4Wai9Fy9cdxD95mxXjPRb6f6we20le7SYHFSGCbRkIIO
KtVBpTKkVARpMiDHAhTuV1D1tKJWpWsymJp0qoCBqSQkNh70Ow3QaJSRthsV
OYcxZzcklfJ6Eb9ewA+TeEarjCtkTaioUcQLorykXNJr0RbthhYGS1Boq1bR
ZTG0GDTNakVSQ7ebFN0WRbeR6rcop72WEY+hTUskNNK0mex0MUPlxrla53K1
Y85rzhu1XRYTiKSaacLRRgzalTdRgHqCCnapDczhtaxzOBA+URWac+lTShJM
6TGSDBCkh8+383gWsdAiFekEPBVMpePVyPEylO8WsX0JxdAXvRbjt2iJglFR
1DP9KroVFfsgF/hpAHQV5sGQMglSJUIaJEijBGlAkUZcUIcLy0S8MiHPh4tT
KiarAaTTZklFWoI3IbwaBAlI0Q6drs9i69UaexSaTpLKYGQcI2IEGaOpjE6f
oJXNQmkGxTsYuhkmmQsBjqvESLtMPECTeQpPKSQNWtSrxKwkYZdiFh7fjvCq
xJK4Upkx6sIqWQMtqpAiFUKkCed1majJaudEpWOipmSwzJ61qNv1ik6jqk1H
dZmV7VpZihanZPwUAdMpexjhrI560aBcMagWrdqFUvOQVxfXSMoxxIsjtYww
bqO6yg2FMmuPXZfRKcJyLIiLI6Q4LkebSTRBCFMycSMPiYiRGPhGpPwgyodw
R0VcFy1wb1PLR5plWFYDm0X2KLGsTJBTSIaNimmHbtyq7lMR7Qq0WSlJqCQw
zcOt7nQquz3q/kpTscqWL9G3mORBStCEIj4MCcj44MQqCSRIizr19LBZN24z
Tjotoy7LoBv8bShjjDSpwvqc+tmqktky16TNWDSoO1XyjIJMqeQJrQIwq56R
lskE1Wqp36rw2Si/k06UKNvddNajzFcYi4DLTZUTjWVT9a5lv3MlYJ+t09zo
rv3zL736H9/7v3/63t88ffS9x0BPnS0DPvrPwuo0YEL7f02rH/34r3/w73/y
99/59T/49se++pkH/+1X737pU6987bMfBvGlT7z8hV+5/Wsf2f/ch9c/+fKL
bx5MvXSzb/9cy/ZsAqKq2PRib/357przHZVLmdL5Zvd83LMQ96wkys4ly1aS
ZQBeUzHnWNA24reM+61TQfuUHwgu51Jz+Wqm5lJX4HofIEvmcKbnZLn3ZBVW
XR2v5o9Weg4WOvdmWncmUoA460PR633+64WmG/kmMHNezzdc72m81tV4NdsA
xms94Hn/zXxgrS+0XoysFSPrZ8B6JrJAcPDa+V9yME63rthcC7jQt9R+uNxx
sNgGtdVcy9FC2222a/Cd5c6ThTboWD6d3p9JHU7BKqdnSePPZ+I9QwDQLEDx
AYZugwn8f6OtbnTVg+CAdR1EV8PNHt9GIbgDptahZg58XALJ/jg3QlTtsXXT
p6iaTB1OQtPyo8kUiOPJ9Amg1UTq+Dla3Z7I3JlsvT3RcjIG8JcGtDqAtDo9
7edptTkS22SBBWh1rdB0qbvuak89uEPY+hmtTpfROJ/bZ3jigt2uCu4+R2dO
W0EidDdxtHqmrc4SLaqfB9YlAClWUkGFlS6/mqq4nK64xP7oSmsVazlYD80u
Cn6Y3QGT1SPHo7E744l7k8mXJpL3xxJ3R+L3RpvvjyfvT6XvT6fvTMKy36Ph
OPTigMmKwZ8D1jNUnQILfEE5/24vTNrfLfgBrY57A4BWN5pLVhtMU6VM0UoM
WMlBOz1kZ0acyl49GRLD1LVSAa9SLGmgqIBKWUdIS3hQRFhghrPAJMbsOOkk
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
opkZkCADMvGEjh63GfuMdIqUhXBxhETDuDiogI0Qk5Qob1PnWTTBDUNMC5Ah
tbxpMYzZjFWHuWzURmRioHJBkXCQUFw2q29YVZtmxQwrnjbKF93MatA4a2eb
Fu2IjsjhsqhM6JcLAypRBBVGxLBTn02OJHXKht+5k4ivB/0jBhamT1BAJYTD
asWqWrNOKLesihtuzb6X2QObs5246WJueLSrVnxOL9/06K8HbLte2y2Xdceo
B7/pMEMNEuphUtlgsTGtqkeODBDSfq26T0f2mPRZgzGoJmhEKBYgAjEiFiKw
G5UY6UBFA3LFJMksaA3TDDtjMoxZ9AVaHkTh7QrOlZA7ZaKAUprQKIosmdEo
A0LosHxPP9jSEEWslDyJSYZJ6YJDt+UxLenxSbVgSoGss4orZmLTpN5yUNfb
zDfj9o02Yx3QyqCNapQxFZrF5WVCMUSrGgZi2kJXNPJhtXzcoJ33upba2paj
oYbPVvUYh21kxaqecpFLbmrOgM7gyAotvGzFbgYN12KW1ZB+3Ed1mlRWtUAr
QVgRYpYgDlTglQqCckFMKSgb8EbAPh8LTLd5x732hs8+EbY3Y47JmLcZdU+G
7XMR61LMtNVuuJozr3QwBxMdv/Hzr/7T9373h2/88Q9/+De8WwF7+sli9S+6
1V/+1e//2R//yrf/87/55W9+4ptfef+//cL7fuq1lz7/iXd+5qNPX/v40y98
8umXP/34S5+8/6VPHH/65esffrr8wq3a6XIJiNXOcNt6P7An71avf7s3uNUN
OBXYLgTBdacYBNja6Q7u9LcBkG11+7dgWrt3OwsXoNWVYtvNvsTt4fRhI39v
duDR8uj52sj9jdH7GyN3V4aOF/qOZssnM0CsOFo1s/tjnQBJEEy1jr3R5F4l
Adbt4fit4djtkQRg1l41ud9IH012tc6teEi1aPXP5QRytIIjSIBMPdkeeLIJ
h78/2YRT4Plhu0CsABSAWHH9aXPns4X7MzyY8hBV0K3yfB3T87TiDQsw64w7
8fnxlPVWlsXFSkBlqLTDxnpVaFgwHjiZhzOw+MxzAKlZWCT1gCuVOl8sPViA
TRQfLJQeLZYfA2wBeM0VwXq8UH5hqeddy33vXh14aW0QWNW7VsDisiy4YOBD
Lmh52sze5Zh1Mpk9nswegTXVdTyTPZkFDzKHE+mDRgqI1V2YAc5NPYbY7bzH
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
nWpZQS3tJ9UVPTVi0A6z1IRJP2szzTht4xbjIEsXCU1eQ6SUqjxJDFmMo3bT
sJkZNpI1m27cYRwyaIoaSTfc4rBBFliVJKsQdkihJkTEgggqjshlSUwNwFch
0DGjesiMJ9QiWGMrERUY7aTbP2P3Nk3Wqk43ZKCKelWSEPcwihEWHzMQTT3Z
pFRNTDZHqDZ05CUjvWOkLluZ2z7zXpt5206uaNXLFNGkiCEaK7JYmlYmNbKk
UtIhRjICZFAuGQe/F4YO4qK6XjVhwsZY5RirHqGxjFTsFSBepUQrFqi5UUpa
6ImCokg+KFL2M0SnQe0TwRlVsNJZJCiqpHWbsWYz5NWyjESQFwkGJJIxmWqO
pLYclmWbfspMDxDyjBTJgy1aRzWM7JTVPGEyljBlVAD2cyFAUkWvXvca9+OB
vZBvy2ZqUBrwtCEp3LfBzuyVIh0YMmrGZx3aCZOmQstKKNKFIH1iZJJRrbr1
W1H7Zty53GZcbTNOW9RjGmSRQVf1mqIEnkAVUKRBya4GdMft9sOY4aoHv+zT
rjipCintUojaZWhYLLMiYhIR4M8WAAeikwvdlDzMKts0Ap8EimRajMw5mDul
9JVcZsLtHNazRVyRUYpKuKwAbkhwaUYh7KZVozZDv47uUKBJOZpUolFUACw7
ys24HySUJamoAyBehGSUkrhc7LwYSaaC3ebhpEU5f4cA6Maopv2mMQvRi4vS
4Pulgm5KUQD3M2IBJRAqEQGfpwperVEAG+aXMGmFBOZIT9hMRR3llMGhnyh8
StjJXsidwILfy6WRtZuJnJPp9ulGIpZawjYatYzGLGPtjmbSPpf2LHYFl7oC
y2nPesq+3WG63KE96DbfLpn2q8Gf+fDB//rL//yPf/+HP3zzu2+88Xevv/k9
cOVzAl9/4+/eOrH6/zu3+s5f/t6f/Ldf/J1f/uov/tzHYJbFlz/w9ddeeu2j
L3z8g+cvv3T4ysvHr374+FOvHH76I7c//J6td9+fOdvp35vuulSJbA+FNgaC
6z2+zW7/etG3lvdt5P2bOS+0qmLb5VLoSnfb9b7Qjb7IrYHo7YHYrf7ord7o
ze7I9XL4enf4Sjl8qRy+NpDcG8sdzfSer1fvb9TurVVPeLeaLB00SweTAFi5
w/HcQb1rv566U20HtLoFY4DP3IpH1a1KfHcktjua2BvruDPRCQzrzngaYAt4
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
A3SzScF9PlZ2W7rMrFssprgdFeX8kZEgDhUa1MjaKWmPSVWza8btykmLdNEu
3fGqr4eoNQdb1Wj7MCYlU/kkYpNYSKCIXApbjQjFcAlgIhwELrhnCAmRkkJQ
1TPjTlvV4SyYzFFWr5fJKRQ1YWovTcA6X6kwrZJ2s8qSTlymRaN65bxNe8lr
2w/7ThNhcL3sNl0Kmm90eq7mPWudloWYdt5HrIf0N7PeW+XwBtj8g4aFiOVS
V9tswFhSidoFALKiphWbttFVHTVC0zUKn9aTG27DTsC86NCOGYh+GutSydLc
cM9uUl4z4TNu82KbbyUa2khEl8PBptM6bjc33daaw1hx6POsKokL06woZ1Hk
DbIxk2bGQE6ZmaYFINI8HfKu5VJjsXBvyJf1uduMrAFTaqRiUirGOU22iZAo
JimZ8DGfbjZqWYybF5OWpXb7XNLejNnqUXs94RtPe6c6nbNx97w3MO+2zPmo
+XZyKcve6IvfLMb2c4Fbecv7d3J/8euff/N7v/X97//562++5VatNuytxxeL
Y9mbb7z5o7T6nxe0+oWfe/UbX3v5Z7740k9/9p2f/+i9j77n9stPLgFaffDh
5ocern34fPVdt5sHS+XL4+mtRnq70bUznt2ZyO7UuzZH02tD7SsDieX+6GJv
eK4cmAO0KnoX8t6VLvdSxgXWcpdrPe/d7g7udLcBpbraByQrdKUneKno28p7
NvPuraIffOk61KvC/YW+h8uD50sDxzOl/WbuDtCrsc6btRRYt+oAWwBY8Zsj
iRuV+G4lcWs4ztULR28MtO0OhG71hW5xbrU/HN6vxPZGkndGkvsjsAkG2I0P
YGvc9sPxzpOpzN257P2FAnCr8+XC/aXcw+XC4+Xio8X8g/ncvZmu44mOg1r8
EHY24DP3IEoOuUjdQQU8YYJHDM8g3qSeD/q1lKrlU28D1o9HAoFb8ZACtNob
iLZoxXsWTGi/0CtIK44+fECvFdN7Xqb4BR63aMVDqvUi3zpHq6V4Yt4Zbb/9
zK069mqx/WrspBa/N9EO9OrBeBq41Rk35piPBPJu1TIsHkzwhV24Ff8Z8NV7
4xmeVjDz/2KMyGm9oxV/O7yYJsyPCX5bb/aWZLVCguA732ZVrQ/5z7Qe8MCC
k4svpo2ccI8vEgvjzwPrcCR+VEkcVKLHVfCD8OiKp9WDSui45L7ZYQC0WnZj
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
bKrNytvMrN1EW/W0flIy65MEOieKK6I8Jwh5hgzANtY84dCfx4zDKmaOktao
ZTwyNlQxDu+yyB2VnUeNRdtEA7esiGQTt2d0o4nxi2W7oWwFhjUyZ5u8LGJ3
PMxVGbB1UraMkvpRaHLSPD41cXF47MyQ7swQP3WuLJq3IvjVKHo5ZN/0WbZ8
1ssRdDvgWPej6wFqJ+y8OR28l09sB9QaZssYRssO3ZqMXw8IV4PsVhDbjOFr
YbzlctQle4E0TVvHkoaLWcPFqnlsFTXeEtAjlTxU0JMI/yCjHqSkO3HpRlS4
GhYAqrbCwlqAW/Yxy156NcCthriVALvkw5eiyJKHWBOENoOU0JFp7Ow0c77M
WRc55JqMHoSR0wr5H3728X//2h++89Zfv/vuW+91fWrQrb41rd7/EK1euNWf
/mbfrX7pZ773zR//yE986tHnPvHgsx8/+Mz33/uRj974+JON1+/Uj9ZTN5v+
3Xp0t5m6OT99p529t5y520nfbkWv1gM7BfdGTl3NaKhaS7pW4upKXFlNqasJ
ZSUmrkS5lQi3FtHWsLbj3KWEliJ4MytptJpV7ms7p9TbOfVGStqN8zfiwp20
fC+nHlaCD5qxx53pZxv5Z9vFpzuFR9uzp2uZB+340XzkfhNYQHC/Htirevcq
7oOa56Dq0ZhVVvZLzh6tgGrtFcFNMPe6DgGG5v2AVk9WIs/WupDajD3biD5Z
Cz9ZCT9qB07n/Q/nPMc19aisHmqBRC0l/iAva7G4Wc8R4JR27GpO+cW6VR9Y
Pb0aXAwalJdXxjej6rDkOdHmTF8/y6LnU3149fIuenr14OWL9jH0Cp76i2L9
99CPSfag9soWsMe9X2zFurQK7dfB56kA6B+WnMcl50nReVyUT0rqSdkNJvYu
pCKa39UCPVr1gNVPsB9MvQBu9bydAG4FaPVaJ/FaO/baywK/PWQMdhM+/VYh
wf5WrEG96hnWYHvH3spXn3d9kL14zMB24N7x29HqqKQeg39pSe7vDn69oj7L
i6dp5ihG7wXx237iToC8E2IOYtK1AFtCTX79mGIwyDZIMFvoqUlJNzVNozUn
U2TQJGxJO6AsjYcxuw+xyOYp2TARcljSJJrCHfNAuxRnliYSmAPMe2mGSNN4
ikIyJDRNwYBWCRqKM3CEhFICXnQLBTc34ySjqMVvngzZplK4pSjhMzwaRyx+
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
IBHPKVFQSpVVpZJxp9gIouJNkUL6VMuEZQxoUCpwcyf8Qk7bQawlIxvZ9Fwo
1HV7m053wQzbJOUIvOIgGy57yUpMG7GmjagS+pxOXtKrZqyGAWXqWg0jB9E1
G3MiRUgkc0qlRrlUJeJrBHxCIgnKFGG+KMrjpQHgKH3OqfWaBB4NN4bLU2ZN
yqjN4vqC0QgQmdLrUgaNTyUy8yeNfMQqn7SpJh2iiQyqm/G48laTXysLGVQR
kyZu0SXMmqwFGwZcQ6e1iWkaakVepfRoVEYhxyae9ClYLhHiECIBOSeBKZwC
nhVukQEkiRt81UChK2rFLYd6NWJdseMzUkERQfIIUuFMDTTaJRs5tpJ9A95B
DU2VriRX5uWyjFRSVMmrGmVJJpwW8cDICjhVtbiOypoGZdusLqj5ITaSZyFL
RtWNMHk1hI+csgbOnlYgdRXSVXPmdZIlg3YJx8cG0xxuaWrUFYW4qZZ11dJF
o/aa3bhD4qu4etth2g3YZ03qGiYpoLKEWphR8WYJ1c2A9Tqp38ZUNwzabb1m
w4QVBOyUiBUVsaNCoEv8plQKQHbNojmwq29Ryk2D4ArK2zJKtiyqJb2soxKW
FeK4iE+xJ7V0KXUDgoQRpCZnzxglVb0ki4pKFl3TQ9QpvGJBq0ZtG9f29bpZ
nW4W0/VNxr7RMNYrFzWCVcXklmbiBsY9sCqvosJZycQSgBGhvEVpDp2aPQ96
1aFZxEWLWv5VTHTLJDs0K3cx0bps8oqat21Rbdi0HZ0gLZoIcieB8wYEANBI
VcEbksbZgLHt0zVs6JzLdD1EbAQ4P3w39s0//8X3v/5Xf/cRs9f3Pg0pgCea
UPT86hU8q7qcb/XpCPav/vUf/un/+qt/+D9/6d//+o/81i9CWv3cP3n+499/
/Pm3rr1zd/HFyfjp7eGjW737Nzv3rrfubtXPr1RPl4u3x7m9Yep6N7HZDF+p
BlcKMNt3Nu0cJgCqHLNJ9zjtXch5GFrNAVqlHeOsazEPgOVdzPvns57ZlLMf
ozohsh2wNP3mWoCoh8hGmGyGaU4BbAXJlp9s+awzfrIbpEYR5zjhXUr5rsKT
RO/uNJAs727Ju1vwXJ927pZc+2DVbQZPOtG7AyBZSTCfjRJ3ATWWig9Xi0+u
VJ5v1t/aar6103p3t/POze47Nztv7bae79SfbJYfXik8WSk8Wyo8Wcg/HGce
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
1Vf/+o/+/I9//T/93pe/8q9/jHErhlbf93zrsw9W3723/PbpAgDWs8PR41u9
hzfad6/WTlfgTuCtUXq3n9qZiW82ImtluvRfzgukCYpVLrBSCK+VQqsl/3IB
tggBnBolYcv72RQgFxSrbgRuADa8ZogqvxmYFBArOJg9QJpWDb+l4SNqHnPd
A55JtHyWtt86iJLjpG0x7Viddm8UvVenvVdyrqsAWDn7WtK6EjGthPHVCL6R
sGxnyBtFuEm4V4FZVHsVWLNit+i8VXHeKjv3ys6bJepmidwtgKfZbkzbr+eo
63k46KaQsGAgsI/jZuiYLv5wtxt/MEg9ms08mcs9Wyw8Xyq+WK28tVF/Z6v1
mZ2Zz97ofvbW4D0wDkafPZz97O3RZw6G7+4P3rreebHdfLpZe3ql8mS98mS1
DJh1HwAL3NvPpu8Ok+fdOFCt05noSTty3IZRGeAaXABgwf3ABtwVpFn2+jAL
hmGUfZ8IYmcGAymGU5+OEnydt1WGbrVPF+6AdTwqgE3eg4aPjn70A06BsV91
3a7C3sGQWTW6ogXdTOrTbnWBKmbQgRapjw3r9cZg6jEdhgFDBPvxR7AWU/xB
L3a/GwEy9bAfYx4B8wNa0BjwwfC8i1aVNShZZ8y5FW1bpxDZ7jsVFxNo8Yl6
7BeNGulzK5gddhGpznS3B1R9REsWPGWjB2QWbdb3R4n7Q/CLRB/1I48BpHqh
twah5zP+JzXX3QJ1lCYOEqZbMeNuFN8Nam+GtDejphsp+5WYq0mZfXIpxp4S
0S3FRRMc8cQkWJyFwFbkIptUEDeinWhgkIzkbWaHRICzEILHDmOaqtdZ8bqi
OOaQic2CKZdW6cMxp1ZJiHnYBFx2gGXEFLKq1dT3OepOc8GKRdQSkjehAc4D
wDghZLEEHDaP4aOcvtu3iSaDGn5Yy0/pxQkd3w6WUykvJeGHphA3EAcOkpaL
Cqgqo5X5BWwPfyqNaaZNWFQti+uUCYfZ6zQY1QLVJALExMxhUWIhLuCD30UA
tE7EtqukIa0yq9XWUV1LKe6h8o5BWdRKYwqhS8gxsgHUWEYhl1IpQyZj2IDb
JQr9JEtIbwkCvXLIeBmNoiSXNaTyjlTelytWrdY1j7PnNM/4rFU/kSA0KRwN
SYQNo+6K3zZrUhYFSIE/mRdNZSX8tEwUF/Oiwom8iju26xZMillgVUrhAqpc
p8zLbnLktUX0UjUH/hX4LEQjmkLFXBV7UkwDC/x1NGAZB+DGNGGp0MuerKDa
RZfzasg/NBkzPG5OIOgbsI5KAUZFIY1Msa0IQoIPbYo3Y7L0LVRNiyaE/JCQ
HZCybfxJG1BgMZJSsltG6bxVtW7V3LQbjl2WM7f1wGrY1Cl2jNqreu2cXDIr
561qBVsG8TWjdNckX1VMtVlIW4DMGcQjs6KGChNCTpLHzotZBfFERYI05BN9
7dQ8yh0pJmf4SJeLtDlIk42MFVM7Nt0Vi3ZGNtWScrtKYU3ALfE5CTYMIAGy
aaRppaUvbCygWkgR43dJZceqLKh54SkYHg+wmEKQFh8ZaQVV4VSKw05whTGu
KMzhRzjcnETUlQvHYta8BPCRu6oXLeGiWYzXVrFLIiQDbn44SJbPaaoUba2m
opHn9Io6oQS0uhHzbMeDKwlqnLQuxdzLfvJG2LKXlv7897T+2zf/zQff+Gta
rF7RkeofXGDr8vzpOoGXx1//1R/+2X/5tf/4e1/+/d/8wm/94ueBW/3sjz/7
wvccArdiaPXO2SIA1oujuacH/Uc3Zu5erZ+twiiL/dnMzUH6ejex3YqtV0LL
Bd9i3jefBWzyLeWDy9PhtXIIUAzoFaAVgNQI1mKygXkuDYMxOmGi4TPVPaaG
xwguWkCsIlQjYmPcikEVM1c9porbCOY6RBvR9BvbYeMgap1LUbCrY969lnOv
Z11raWolQS5HieWQaTmIL4eMK2Hjesy4ETdtpcnrOduNvP1GnrqWs13Pktcy
xE7KvJ00bSUMmwn9VhLfTBivxk2bMfNm3LyVILaTlp2U9XrGtpuz38w7bhVc
hxUf8KD73cSDIVjfgGRlny5MP2c2A6823tpqvXuj85mbvc/sDwCq3rsz+9k7
s585HAHPgvU0rrUBs55vNZ5DbFUfrxQfLULPejDO3gfYGgFspc4HSTDfA/Mg
edaLw2DCVhhWnGiG4d5gLchEX9yhT7KO3rjVhWF9IpT9ctYwE+4Oq7hXPDBb
ma40tUfTCrpV1fNJt6q6DyrO2xXIrDswdNzzCbeCFJh57VOXacVY1WtCgQsY
Fgi3BJmwdqbYBZ2iBWbwg+GLGoOPhq+/xURugJc6ZyruwtM9umBUPXBWC8KN
wVoAAOsM2Fb14+KBl3OEmQc/7nsF9Sp8vx272wyf1V83CgFvHuZ50WAF8wN6
P/AePT8YgQH8K/KwFwa0etoNvuwHn7V8DyuOszx5mDTtx417MeONiOFWFDuI
o7fi5r2k/XomsBoLNO32kBrTTfLEkCJwsOldMHB7D2hll/BzFDHOJFp+t08h
pfhTPrU8iKqCmNajVdkUEpOYbxBycYkIFQm0vCmMx0YnJ1T0skNOInGVuGTW
Nu2m5ZR/IeGeNsltcqFwCrw2jzvBlXMFcjZbTNfH1gIiADaZNDmLLqKVOkSs
/4+z94xuZb3ONAs5FVCohEJVoQqFnHNgJpEBEgRJMOecDvPJOZ9zc5JlW25L
luw/szzt1Gumu8ft7rHl8XhmbMl2z+ppB9k9tse2gnV1dSXdlix3mu8r8PAe
39b0j1lrr28VQJAEz5Xqwbv3u/f26VVdZl2ZNJdIc79FP4Cbijasn8K6CXNM
B53hHgWSwbEuO52h8AhujtnxXsE2RFNFDC9aqT6CjGAWXKUAf45Kg1iBKjFq
PUZ9woQOYlSJYPpwKmlC/VqNpJLN4UokjhsbQWEhE1zLhBcC4ojd4tUpASkw
8NFdryry1KTPNS0KYxQ5QdOboeB+Pj0f8Y14+JIbzgCJoIakWVvkrBNBdtiD
ZS0KnwLxKWG6MqlGBrSqpl6zRlpuBV37kn3Kqq+pkYoaGcGNdZu5C9f7zEoW
RQgtYtUgEmZM8fa0zRYzGRIGTd6kGcTNk25pKx5dkFyjVnyeZVccwo7Xt+Px
zpBUQ29oGPRNs3Hcho+7+ILI+Mx6uxpx6rXdHNv0eaY87radmWdtuy5h28PP
e5gRN1mxm0q4alCLlCFNdNdC4tNc5NTNrlGWDY5asltbqGbMpJwjdbsSse2w
LlLaUT1SViFNTDPKmIbt6IhIjHvtEwFH28u1JGbSx075bFMuatJhHsGQYYAV
XLXKGnecxKGP2/fY1xzkNGVoGJUlnbJg1PbqVF0GZbdZm7doEyZVUIuEdEjW
qu7CNQOUZsKNzweYMdFSZtEiY6xShhHCOGs3bHiJw4RnQbQPE9igydSj1wNe
V63orGjbkuw7rHWTQbdF/FKQXfNSDULVr4e5SsDEAAK9iE07M8mLNQaujGl6
6fWYuJ8Nr6fC8xn3Ur9/sSu8FPdcyrjOhohf/Uz7P3//9wGtPvredy7A9P9L
W/1roK3+ze/8wpd/4wu/9c8+09FWgFY/8creOw/X37y38sbtJQAsIK+enE0+
Ohy7u924vVa5tlCQk4H9BxM9e6NdWw0gr1JLBWifmOuLAm21XEyvvqDVwmBo
rj8EgAVoBUJOA/paaakRE+sRsREVgbwaTQFOAWHlBdpqJOVtJNyNhKsed9Vi
UjXmrAJgxZzguh4HIdZi/HDSOZZxg5821xdYHoyt9IeXun3LXd6lnGcp4wbA
Wko6FxKO+bh9KcWt5oDUcu32umH0SHu9LsipLnEn79jOc9t5divHbeb4DfCy
rLgBdFle3MoDkLnA2Qlwvd/nPS6GL1fjNxqpO2Nddye6H0z1PZoberpSfr5e
g3aL3eZrB2NvHLeBqnoLcAoA69osNB+eTr1xNAG+9OqlFmDW053hp1sNKLXW
qg+Xi/cXC3fnB+7O9sPK2mz/PWjt6LvV7r45DtUWHIsEmAV1VvpaI3m1noB2
vhcWi5el08udVp8Yh3senW+RV3edXqCqEoF1q05DdCN+rq3qgFPhjraSLRYw
LrRVB1h35aJVhywXu1E65sCXqlfnpotOPJjquT/ZfQ8gqQ2QlL8zngNxdxz8
EPATAOzg9V05GXj7RTLwZmdXF6SVHABVnbOWkFuG/0H27xNDmc4V1jB428m7
MqpuQDdm4qa8KwS8f/k9Q0HXsbLDJCT4WwA3p4HWg7S6yAS+TKuTvHCcEy5l
+OMcd7XPcdrtPMh797rDq9n4bDrTSmTTnMTpLABVmEZPGk2oXmtUIrxO4Tfr
e1yOgs+VoomwxZSmiR5JSNppp1HPqBV2g0rE0SBv562YRQVLYJhSYdeoRZ1W
1KpdKkVQp4wZlAOMZbU3fjLct9odKfuFkM1u0xgsCEIhCkGjEtUqSh44ADRR
BDP0SULEiokqVcRi6sYMozy1mgjt5FPr2fh81D/mFYYlYdBuS6DGkEGfJawF
p5AmrAL8QK7sx7E2yy87XHOMs4RiYa3arlFoOx4SmYm0/DG+DyUHLXQXikXV
6oAa8WuhpzqsQ4q8eSbMrUS4/bh4Ne0+jgpjLiqKQbXoQMCnff2gjSrT1gKO
FizGYZZqS3yVwoasxgKJZg0aN+xaQnoJ/bCXHAmQ3YzS2TFsyx7vkk49Z0GP
aeKeSzxxO+Zoy4hRPYrppzlqAq5vJlOk0YOqeA0sV0VM+hLHN1ihThCTDL7j
c9/IpR4O9D7s7bqeiB/73PuSuEji8wS2IXC7HmnFYZ8k0Hk7MeMgpn2ORkBI
C1YnqqDViAT7s7SDQMio1ZM69RFL3fI5r6QCR33xvWxoViAqWqSiQCb0inXa
dOphrwSd207bDG1q4bpxm2VZsu15HWcx34ZEtyy6hlk1bjPOuuwzbkcVQBZV
51B1t9VY5MhRv7SUi02GpTqPN3m8zeNTjHmKMi6x2J6XOwyIKzwxZtI09KqK
Rjmo1xQpU4UjRr2OUZ845CBTmDZqVOSs2qIdq7KWus04wVkXXMR8Z2EZj7U9
5EbUcZx0HifEw5jzIObZiXq3wt55iW1i2hGTcoVDLwf4SwI9Z9ZP4cZlAV90
4yM2/RCmKRKavE6RUiCDqH6UA5ij8xpNRIP0ENoZD7mV8K8mQ9MJcSorzueC
gFYHWfflAvkvf3r6v3z0pR9892+/L+upj17kAy9U1cvpwf+GtoJ1qz/9jf/r
d37hS7/++d/655/5V7/y7i/97KPPv3f2U68fvPd48+0Ha2/eWe7Q6unlqUdH
4/d3h++sV68twtLVyfTAUbvvYLx3t9m1Wc+ulpMwGdgXg3WrItRWnUzgUiEi
V7VCQFjJCiswnvU0k85GXAC0Go45YfUqDbN/Tehm99RT7loSRjkqlqJiLQH9
7eDsRDUuVeNiNS7UYkIzJbWzntme4EJveLEnuNTlB7SaT7vmU875hHM2LkzH
mNk4O5dgF9OO5YywmhHWs46tnLidAzIKIMmxkxO2s8JW1rGe5dcy/EZG2MyJ
m+CZvBOIrM2csAG+lAbPO8DzO11AjrkOBvxyISl1azR3f7L30ezg46Xik9Uy
oM+z7eFXD6DhEDLrdPLty9PvnEJagXjrZPL1ownw1ef7o69dagFyPQPk2qw/
XqtAqbVcAti6Pz8EmHV7pu/mZPe18RycNNuSQ04MXh1OXWkkL9cTl2WV9HLR
6hOourBYXCQD4TVcixw5gxsnz6f4dob3XhlOnMKRiVF5QGLotBY+qUFhBWgF
i1bD8Rt12HJ18wWw5DSgvHRjLP8JVF142l+YA6F4eQDOmX5YwAIntI73QiED
vqUjJAHv2t3Qmyc79DoXt+Smp/PqFRBZnQmHcDUzNKXchP7/xDV5CtP16sfL
GTtnx2JxIbKu1eBrbnXcGhXopYSGjboMLPAntLJ3xs8FHSQv+Ism8xeZwCft
zLN25tVJaF9/XIfL7q/2SkBbHeX4vTS7l6COcwzQWVtJcSHqrDvZougcjWeL
4aQXZyktKhB0QBREO4VrFbxeEaOxPreQZWkgrDIMFUANfpPRZdBRCig6TEqE
MmidNpJATTqlUgtrLgrJYkkLjoyd8uk0QAF5FUjSoKoKxELKt9UbX8nGmn5P
H22LGw0hnbafJmtOR9qMepVKJ2x91QRNmKRHOaXBrTV2YWiRMk/7pd3u1FI8
UHfQNcE2aMO7MXNZcDQDvlYkNB4L50hClCsXMVhR0s0SzAJhrxvQjEopAaGn
hAUsSoU41YqoRpPT6Iomc9mM9Wi1ccARFZJHkT5clQQSw6aZcVmnOOOiw3QJ
3MQEywrchOiVl4ZQGcwU1CBxgyptMcR0SFqn6NIrMwhSNmnX/a7teHjUwfSb
DYOEtszoynZdgdWlLRpAw5hOkdWrhvSatsW4Zydv+MQtkZliMBBLkn3FI0yK
TFOkC6w1adEAOQbnx6qUTZycIdgZzDpv1m3ZrDfD3mf59KNs4k4seD3sPQu5
1nlyWI8MKZBhTD0D7swuetPDLgrECGPsIVRxXBnBkLAJiRuVvWZ1zawbtxgX
regeaz1zMYAg44xlQWRmGWxUh5QQpKFAxrXIAm5YF6gZxlw1K+uUccxlm/fx
+yHffsg7QZnzQJuoFMNyQ/Ss39UEf6/FEFHJeTwF4teAX4oFTfqAAskZNDUa
G2OIaTsxYtKMmlTLHLnEk+B6APyLaRUDRm1Yo+giTHUPOxwUYRc2bujCDX24
oUyZS1ZdnxIWwkYMyJKTLJCmhAbp0iKTnGknyGy68TmbFsBoy8edpvzXc4Ed
D76II3uc+sxNbDF4S6MqIEhRhQxbFcO0tskaxyV80KpKK4HIUg3T5LidKxN4
TK/KoODP0c57+cWoD9CqnRYWcqG1dOCk23+5QP3Lz8785w9++z98/4MfyjMA
YXz03U8wq/PwZTb91xLsa1/9P//iK1/8t7/7i1+GtPrJDq2+8N7lz7x+6VNP
tqC8urP8IhM49fBw7MHuyN2N2vUlWLo6nRk8nuw/nOjbb/VsD+fXq5nlYhIK
qwJQVTnwENCqY7SYHwjP9gVlVPknu/wTOe9oUhqOAWHlBMKqCbQV7LSCFauG
zKm6DKZyzAkC4AlCKuGqJDuoAid4UizHgMiCWcTRhDSR8U7n/TPZ880jMylp
JumcToqTMXYyCoKZjtlnYhBb8wl2OcWtZBzrKX4tzQESbaYdmxkB8Gg9K6xl
xbWXztWMYyXNg1hO8YB04JkNyCz34YD/aChwWopcBR/XmxnYUtruBsro/lIB
MOv5VuOV3ZHXL429dQQ7vDpNXhBYAGHQMTj+OpBgh+OAWa/sNZ/D9GDj2c7w
4/Xqg6UCYNa9+cE7M/03p3oAs261u+A50XVzPN/ZV3INtm6lOvMxXpZRHYtg
h1Cd6lXHJdgpY8FnwJeKYXCelELHsHgHXRaw62ok2RmKCIB1XAmeVEPH1eBZ
BQKr47K4OZzojGDqaCu5EpTuZAIv7vMXzLpQWHLjVU+nQnR/ph+g6tHsACD7
Q5lc5/CSC0ad8x6AncyvDsvO+SVnGm90tpx0ylgAW50RUrUY1FC1c0/FxXmx
T+TcelGXBzfJ3ozr8tkBFhRo5xsqM3fk6tu5v7GduzuZ+9gT2AbaKvV8LPl0
OHqvHLwxCF0Wh1nHToLZilh3IvhGmJzxEi03nSdMXq3ab8FDNp7RmzGV3m62
SAwlkFbGoLGpEI9Jk3PYeiVHF2/PMLRbr+3Y1Tp1LrVsk9AoFQqYPFQYVBrK
gAbsXNYpZQU+aDII8kxUcDcLq5VAdFQ5i/yxGRvlbBMCB85pj3MxEhiTxEGC
jKq1LkQlIjoOMfBKcwCle0iqDzP0mHW9Fn1Wr44okZgKptegn02nA8wqskzD
7cxbLYBWkgLJorphGzXL8fMsO8uyE3bboNXQY9VlzLpuVFfGsCmaXWIdCwwx
x6BNi3JQjQwZkDFWvxhkxkXzCGuokZo+HdKtRIaA4jCoRgisLQqzfm876C6J
VAxVc7IGdIPfZdaUKLQLQQpKxXHQ/7xaujbQc5gJb/j5NqmbIHTLLmbOba9Q
aJUF0sleYPBB0lBnTdNuctHPrQSlnahvN+qdFxmAkgG9YtCkGbLoBwyaHiUC
brYzRnSXZI8Efpsnps3KWbNyg7MeePmDgOMw4rwMbqpBroJrEko4bzaHKQs2
9YIAbuPoiEVZMCIDRqRoVtRxbVGLjJhVM3bLHGeZFS1TbuuEx9pkjAW9ombQ
rIrMpsiMmw1TFuMKeA2NLgnErJMa5a0F2thH6ys28yxHLgr2Nkt2aZRuWSc2
OXrKLY05+CpJZbVaEcpk6P2wySf4zx2U25m7VMgEZZ0EQZgXWXqeIccwtKHX
1k168Mf65RKVX4l0kcaCgxxirAMk/HAyytFtnhqzmkaM2ilMt8BZh1lrt0HV
pUSaVs2607zrJXc99BShHTMrFuzGS376NIifuDTX/fpTN37kFU7Cnm23fVWi
NoP8ZlhYCXILfnuLswyaVP16VZMmFjzuuYC37KSrTmzahS8FhKWobzblnM5J
y93RjWzotDtwtUj/q8/O/JcPfhtoq7+DGPo49XfBox+prT4Br3Nt9ZXf+MMv
/fLv/cYXOv1Wv/iFh59/9+ynXjv4safb7z7aePve6gttNfnoqPVwr3lvs35j
GZauzmaHTqcBsAYujQF51b1Zz6+W0wBVQFitV/IbNei+WC3HAa0WBs8zgZNd
vnbeP5H1jqakkbgTCCsQIwkX7LGCrnUv1FYAVZBKEkAV0FaVuKucdFeA1EpI
pTjgl1SJSuWIsxQWymFHJeyohoRGTBxLecaS7lZSmkjCCRhtILtS4njMMRax
N8O2ZpAeDVLjIXoiDMjFzkbt81F2Mc4tJ/nVFL+edqznnCBWQQBIZWHNazkt
LKUdSyl+EUSSA7EkX6ymHdt55263q1PVOgEUgEtG4kD7wG4vcPudH3q8Unpl
s/7azsgb+y0ApjePJgCqALY6F+AET3aA9WqnpAViq/5kvdqRWgBbgFlAZ92Z
7Yf2+5m+jo0QMmsMZghvwFEPn9yE9QlOdcYSdiyC0CsIvlQIgfO4GDyR96Rc
aKvLQF7VEye1yFE5AKMSOC1DYF2RbYG3RoASid9+udlqNHPeHQwzad0XqPr/
0lb3p/thpW8G0koG1gCIx7ND4ATPP5oZBOf9KTh68e50772pnnNj+QvTBUwJ
Nj/e6wFdgo3EdWgaCV9/AalPbA8551c12tFW10vRa6UIRBV0v0eulaNX5dlW
nSkfN0dS8obKDIzx7O3xzN2x1L2x1MOx5JPx1POJ5CtjqWcjsYe1yJ1i4Fq/
5yjr2I7Z1gOWdZ9lyYdNuq1Njy1FmGT6KExKaAjUIgpMreItqJvEvARqU8IE
naBReo3aCIYmSNyt1RAIYnlBK4AqxXmvltqgNhrVRkxjYlGrn2aSDkfcRoXM
xrBR49fA2k1Mi8Q1SAJB8gqkYTYsuoRFiV9wifNeqcnQVcqW1RsjGmPMRMYs
TMTCx61sFrfWneA+T/jAbQ1BMkZNUKnwyvdDTu4wBRcZrTpvNET16pTNPOik
RzyOcYmf4JkZBzPL0y0KneGpeR6oCWaTF4+dvisez2mAPQoQOy5sTTBuuC37
Me5yT+hSzrsQ4FsOqmyz5kzGMKIEvzGv1TZIathO9eOmlEmdNGtCqDqIqlIW
XV2kF8PuEau5pFRsC/y9fPZKPnG3P3svHz122Y+c9lOXsECR06x9QpJqHle3
YIsx+rBdlRE1g5yhJVIrAeeqT5ySZ0RUdYox3LjA0wssNWUxTGlVa0bjoZU4
k/ijqLjmJhYc5hnWNMOjAFLbafes3zYimTMYZLRDgUhGJGZBJlkM4GaK0E9i
2mmrZoUybtnN+w5sm7NO4VrADo8SEfWIm1IGDIoutXKUtKy4gXTyHgSkLRe7
zBMztKVtN086qRpvSaHKIJSQ0BU/QZgBQYqYIa5Gcnp1y2EfMhmrFsu4zT7K
2HtNKPgPxCKIS/4gASKuBLjUN3BT22bdkLhdr7jK2+Zp6wxlXeCYJacwJTAD
mAb8tJgKCFt92Y73WgxJJZLRqIZMulHKCkTZrN06Q6Nt0niQDc9JdFWvKCuR
CROyyur3PPSGSE6T+klSuy5hJ0HyxGfY45F9yXocC+4GPQsOat3LXu9NXO+N
bwa4Gd4yxWENq3YICElUO+mwL0a8Y2FpxENNOi2zbvuM3zkZc0znnHOZQKdu
dTJg/dXPTP7Hb/zmd77519+H85TO0fMjc4CfuLioZL2cCfyjL//Kl7/4s0Bb
/dovvQ1o9TPvngJa/fjzXSiv7sNk4Ks35p9ebj88bD3Ya97fatxcqVxdKFye
K5zNDJ1MDR6M9++N9gBarVUyAFUrpcxaGWir7Ho1tVqOLRUiHW012eVt571A
WI1nPM00gJRT9gRCefWxtkq4O+m+ChBWURHKKyCyUu5yylVMSCBKUWc57CyH
nKWgUAo6yiGhEhKqEaEeFRsRoRGFqUWo1xLSaNI5GhdHomwtZKsGqFqAqPvJ
kQA1GqTHQ7Z2xD4T5ebjjsWEYykprGada3kJ0GrlnFYCuFjOCMsAWC+YtZDk
5hP2pSQHE4NZocOs/V7PwYD/YDBwVAidVWLXGqnbrfz9du/juaGny2VYz9qB
Fve3DsbfPmq/ezz5HtBZx5NvnbTfPm4DcgFmdYD1vLPseGcESLOnm7XHq5Un
K+VHy6X7C0P3AbkAtqZ7b0313GhDnXWrmb5YOvxySvDlxquXJ+jCZwCwhoLg
PCoEgLaCm5Hl+UtXL7RVDWqrw5L/uBw8qQSgy6IaBtoK0OrmSxaLjsvuglaf
0FYXwurCyv5gEiim3nuywnoA5NXc4EPALPl8ODcInnkAmDU7AL4KaHVvpqcz
bvFuW84QjudvA5HVghP8Ouc5sGDjcPQ6TPRFP7HyHnCqkwaEwKpEOmPbrxUj
HWABTl0rhq8Uw5eL4bNC+HIpcjHooyO1brTSN1upW3CDcOJBK/F4LPlsPPG8
lXzWjD+qR++WgtcHvIc5fitGr/uwDR++5COm/HQrJCYZK66EDm2VHGrZPm3X
qYIUlnPag4SBlW3PklYRQg0pkgyZUVrWVqYXqAKySqlSKBQqpUKjBNQCCgtR
MkY0ZGfzLmnAA3ta8zTWZ8MKLDFkw7qNuhgCxUvVbBghsXE7PSVywyQ+hBq7
9Pq8Ae0jbb02NoGSHpXerVD02LBBBxM36WJGbQ+Bpk26rFGX0WvSOk3OoOsy
6Mu4pYxbCzaiHnKXPHxBpPpspi5UmVUp+jXKeXC7dvNXA56rPs9ln/fE5d5z
8hsSMe/QTzO6JQe65bddiovHaf96UBznyDpDjjiFIu+Im/GADk0bTWUaHxHs
JQYfoi1llhik0SJjaTrpaa9jKxkGwB0j0XmW3vU7r2ejl2PeEw+3z2KXJfZE
Esb0uoJGn9Obwkajy6jmUcRmQhgjIigRoBO7NcqiVlnTKkZ16gmjZpEyb4q2
XZd9V6AvceQVh+2myB667W2Hqc+g6tUphxn9lJuc8bNjbrqf1GQtCq8KIttl
QCKMNmdHx3gadm/RllnSsGIzHgj4dZ/9Sdr3NBc+jrobrNVnUmJa2Q+PwCa1
MmVu8dS0wCxJ3BRjHTFrawZ1rwoB/3Tg7XmAPkLVFcbatuo3JNuKxz4hWkd5
S5Oz1AhDRa9u6DUzJLnucc1LziGLISC7EOMqZMCiqxHGmkXTxLSrAnUUlA69
/Kodm7Hqlxl8zyvsBdwLAl0xKfrVSJ8aqWD6UZYctuGDqCGrQNJAlKmRGm4c
Z4mWzVIzK9fctn0/e+Rn9p34OqWZMyPjBsUMZaqj2j6lom7RLLuobT+xIRkW
HNicyI1S5l4FUlAp5uzmacpUUSkKCmTEpGha1TWTsmhEhmlj28OOhZ3DbnLM
gbZFatzFtYK2sQTbjrmmA8JWjD/oQf+nn5z4D1//4re+/pcdl8VF5+8FsH6k
kvqRdau/+LMv/vHv/YrsCfyJf/GLb/3C5x98/h1Yt/rJV/c//Wzn3Qfrb91d
kWk1+eCgdX93pKOtri4Ur8wXz2YLgFaHEwOAVtvD3Ru13Gopu1rMrlcAqjIb
kFbx5WIUtmJBbQVo5RnPuscybqCtAFCgxy8uwdJVytvM+EeAsIqfo6p0jiqp
nIS0KqWkQtJZSDiLEYAqqRKU4BkSQVTDTnCWgnw5xEOpFXFUY0ItJjbiThC1
KFcJMiU/XfQRZS9R8ZI1LzHsJ5t+aixga4ftMxFuNuZYTMlUApFxAE5BZsnk
Wn6BraWMINOKXUywKwn7apI9r2fJ2NrpkvZ63If9vtOh0JVS9EYN3Nhz9yd6
Hi4WHq2Wn27UXtttAmC9IwPr3dOpd86mwPnu2XRHcL1+MNZJD75xaQzIMfDi
V7aHX90afr5Rf7xSfrxcgpMxOswCUmuy5954vrMMF9xjX94wctEsfCqz6R9o
q0IIvLcLbXWxcfLqyPnY+bN6DAgrAKyjSvBCW12De0PiHUP4i2ZbWLf6OBPY
/nj+0kWn1ZPZgSdyBy44oYCSOQXY9Gh+6OE8HAL8cH7okRwdYHVOAKyPG7Qn
uy/KWNB22EnWtV5qHK7HL1aKvLzl6h+YLqphGOXwtQIE1tVSWG4rjlwGnyuG
QmeFEGBWZxLjxQqw6yPJ683EjSZgdOxeM/ZwNP6kFX/ajD1uRB5Uw0BbAVod
5xzbCWYzSO4EbSsB22TA3gg5gzSmkx2AaqCOlNA+BxQToUD8FkOWp3IOymfR
hnFjgsKShDVNUVHMAuBllV+m6ozAUHT0lVKe/aBSgZ8EgaUg1VovQaQ4Nk5Y
wyZD0mIcsBN1ia9ztqRCGZYzRRkEfNA1Tol8W+AmnVyTtzVYusGzFc7eZbEE
VAqH7C0Mm3Ull6Oft6XMxjJvbwhskbAAvTPldEwL/KLLNe8Uxx1cQ+D6KEva
qk1iqiyGZLVIv0ax6SSvBV33or4bIc9JUFqTbE2bKaVFoFsPQZLgnmZUtWh0
TqDnRa6Bm/sN2iECL7BsjralKCqC6mMGRcasyZjUfRZ9lcRGaAJAtmLUDmoU
ZYO2oFfVrYZxDp/m8G0Pu0jpF62aNcpwyW3bdfM1kyEoN/DSnU5eDSLoEYca
TqZNaJC8Gk5nbRm1yyS2w1HbHLHjIPYkas+JHzjxYxE/5NBZStttgIk1wIKU
EulFlUOksWgzd5k1EfV5m1LQqO4RqYpPbDqEUZqpWk1lg2LUotgQzFci3MOc
71l/6t5Adi0R7BfsEmHBjXpcAbN2Pg1S4olRJ1sjzRN2clFiWyTao4S/S5TF
7CCDL4ZcV2LSg3zwNO1aD9u3EuKi31Y1IissPm/RL6D6PYE/DAdW/c4WRzRZ
bIK3zjupVZdtibPMk9o1m2HTbtqg9fMWxbQJWWPQfQ+7IdKzhGHWops0qccM
6kncvOx0bAcD6yHfpMAXrKY0VHCqAmkqMZYqqRtDkSMn9jTjfiXnuRWy7/Dm
OdJQVCmiso4D/x27DOoKZWrYDCWrbpghZ5x8E0crGmQcVc7g+kmTsm1SrHGW
SwF+02+f4tERm35ExGoepipiE4J5xsVMehzg1toI0zKtHIBWR32WX/tHU//p
m7/14Tf/+rvf+eB73/3wo4++ewGgziCLl8XUJ0yDL9MK1q3+9Itf+df/wx98
8Wd/85/++K/+wpv/+Gfu/8w7p5957RIA1k+8svfew42PaXU4dn9n+M567dpi
8fLcx5nA4/YAANZ+qx8Cq9q1UekC52Y9t1FLr5XjK6Vzi8Vkl2ci526lXZ1o
Jl2d7uCmnAlsySMs6gl3JQ4ElFAIO8BFJekuJaUSEFZJCaBqKC6WolIt7KmF
3dUwoJWrFBBLAb7g5wf87GCAHQpyhRA3FOLBt5ciQjHsgA/B835m0EsNuKxD
Ej7kxIpOrCJZ625ixEu1fLaxANOO2Caj9FTMNpvkFjKOpZy40iUt5UVwvZgV
wENwzqf52SQ7H7evgOgAC+isFKx8bWUEELs550HeddjtOe71XR0KXwe3wdHM
tYn8reneB4uFp2vVV7bg9CfAo7fkqta7Z1PvnU13mAUHGALZdTIJBdfRBPTD
A3LtjUJ7/Nbws/Xa05XKo6XSw6UiuMkDEDye6nsw0Q29eS+mFZ3PWgfYkue6
n3V6rzpNWCU55OuPadU411byepSEbLTouCyCH7ssGrGrNShh4Cx0aGWP3R6B
44xuyWKnYwvspP4eyah6LBPq2fzQ07lBcD6ZG3wyX3i6WHq6VHq2XAYnuH48
X3i8UADXT5ZKsM96ofBksfhooQAQBrj2EKgteQ/LvRdZwdsys877sF7QquNO
vAUtf4kLZnUkFfQKVuEUwWtVOKod0OpGMXyjFL1Ziskjm6JXgbYaCl4pRa68
8Paf474avVqPXWlErzciNxqRO8PRh80ooNWjRvh+JXCn6L856L3W5znOi/sp
bjfKXIryGzFhKuSoBBweGlVDziBKnVKlU2rlcRMEuFOZNDk7EactPrMGnFmW
SpNEjrFlGcZjMvE6PaFW6xQf00qp1ikVWiWi1Sn1amgYh8OLcJXKi2ER3OrT
aRzyjSVl0g9Q5ABpT+tN3UZLH2quUeSM1zXvc025uCkX25bsk26u7ebqrLXb
rPWo5VSkAsnAVcJMjsBKHFO0Eb1GbdlqBrpsnCZn7MyCg5+y2UbN+KBB32VS
9VD6kog2nei007znYy4HHAcSvcxZJgV0yK7xGWAaUwd96QpBTvfl1No6hs07
hRGrpUsBHiKDVmMByEDKlKIMPhO8dYeUyACqG2eoPa93W3SOajQ1pbIXQbII
UiGNE152zGGdJvVts2LeppvjjW0erbNwNhT4XodCJSp1AY0xZzIXrdYGYa1x
5DD8Y9kZzrZqtx04+TOX40iyH3roS15qy4mu8doNTrtuV4wRqj6zZtBqAm+p
R6/OqpT9BkOdIhskXSWoXgOaUqiBdiuQthrr6LPQvRay22zMGKF1pMooZj2m
OadpM2A/TASWA/4KI6ZRPqBnBQ0AlgJ86vAbFd2EoQ/TVkkU7n+nrENaVQqS
UdlvMg7ilopJu2xV7XC6TTe64jGvh6jdGHsYYg8lcs2sWdIiuzR26nMeR9z7
Udd2kF93k5su4iBgOw3aT9zkiRM74AzblHIJRab1yIZNdxZk913kLme943He
djsvOx0nknQWCh1Ho1sBf9NGDloMUTVUdl4FEjIgXbC/GDlj1Dcl9JYLu+Ol
boTEs6h/nLb3GPGoxuxSaN2I2qtSB9VIWInk9eoabWmS6AiqbpvVyyS6QYMw
HrrIawnpNCEtSJYGrRoiVCmLqpdUjwvm5aC4GPFNxvjRBDud8s6GnHsp59kg
8T9/bvY/v/+/fvjNv/rW+3/7wQfvf/e7H8ry6t+/AJNsVv/B9y9QdeG4+ITg
+vrX/s1f/tlv/ckf/JM/+M2f+1hbvQu11U+9AeXVpx5tvn1v9bWbC08vTz08
aN2DDvb6taXSlXk5Ezg7BGk12X80OXgw3rc32r3VyG/W8xv13GY9C2i1Wuk0
CENtNdnlBbQCwgpqq7Q0mnKPJs8nLwFUjaZgm1UD0ApIqohQCDnKQBnBipWr
koJnMSEBWlUiUh2gKuSqhKVy0FnwOYa87JCPHfQBJHGDfnYowA0F+UKQHwzy
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
mdKqIc9wzBxHL4kcWMxK3KJPnVD4dsxVxh0jprzWFN0M+rZ0ZcerAuE2wZGD
FDpIo6M8sWRIQMSdingPDfmcJt4KmLcafIch7WRY3zX5JQGf48kVn7TVGKhR
jowDycBZYO5enqgPtd8OiidjyqnWwLGW8ErYN+01F0LR6UisphtNDBElXQnK
mcbsZZd9yuU6R3OXVOOk17egGd0834I6YE835WhjnN2sc5T3LMr0mgx+KT/K
UF2op93phKrWZRumPQsqOy+TswI6giMDuG2cpwYZqp8mTzf6XssFbzZoF4Lm
lir34e6U3ZajnL0GWxOJboXNsrTsdDgdLpKio5pQCBm1qFlV6S7GPq6T603m
eqv/TFfzQYd/vyQedspvnR75yp984SdP/vqHH3z98Xtfffvtrz599ujps6fv
PXn38bN3nn7/O0/e/9aTZ9968uQ7zx698+y9Z+8/fVa3EAQBFj/44MkHP3z2
3Xe/+t3v/t3X/v7P/ua/fvHPfv8Lv/vrb/3GZ+792qeufeGTl375E+cBrT7/
8TP/60OLVve2Pnxn40NXl9+4vPjK+Zn7Z6buHU7cPD5yZWfw4nrPheWaVVzR
fnq2/exc7dx81+mZ6vGx0v5IcWcQAmurP7vek17pTFqbgc1zbc2zpcRsqQkG
wFYpPlkA2io8koaoGkr6h5K+Qcs/sLfJ98LAVu9sMNqjgEdiMSrXtVVbAxBT
BohCCFzXCkEAKcgp8Onlg3rGL6dhSCmfmALk8stZEBBPItBZeTgrBI4LyRli
VpMyqpRVxbQCCMWlZD6jCCmZS4oAVWyLwLRwVDNHJhiLVpJFK56IcjjM1jrM
YiAi4ApHhDlrwePNApOUeYC/kqF0+NXusNYbVkbixmTCmGnRF5P6yvMKQG0j
ra2n1Y0UzPVYswr/Nqy6CwgsoLOSMBaS+kI2sJgLLuZDC7nAXBoAC2AruJwP
r+Sex3IuvJoFixCA12ohuFYMrpdCG22h9ZK1LvrXSt71Esj+9ZJ3rQ0EJNdq
ybta9sEAV4DgKkHnw7WsvpEztgrevZIfVmtYFfKHHeFT1dCZzui57til/sTV
odYbo+mbY9lb49nbE/m7U/n7M6UHs6UHc+V7i5XbK+23VztAvrNavbvWcW+9
dneteg8irFpfgIt3VjvuLlfvLXbene+8M1e7OdN+c7J8Y7x4bSx/Y7RwY/SF
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
EhFU8bajWmikKPIwC1Rk8xSRRsM9JNES+DrLlCisLJIVmc6zaBUM1x2tJrN5
EklGQrbP10OhA6YyaIBQO4aWYcgETcbgghGihcMGCn6hlIUhNoEmOAp8gKME
IgVgaXeNInkcQ/2BiM8nRCIWy5oEYaCIi2MpgswB1aKpJB6BtRfCIQ0npDCi
I4SNUw5KJFAyi1EZhMiEsFwYK2FklebrnNgnCHmGTpN4jsUrEluTqDKL9tKR
CoOkA+DeGxqJmgNRKwfYF8HqBDkt8POiMkZxAwQ7wAOn0+IkCQCqYAj4c8sL
XImimzQ3IAsVkSiySJFCqiwN7qIZBNUBYkCHIhJw53W4At4HnhqX2LVUfNGK
TonsksJuRrldWziWsXaT1qKpTyniGEfDtSpbWteoMQFvSHyfxBUwJB0M9ITD
DQrvp8lpXV7POMsJs81HioivSvuGdKYNXpeme3k2xzMaGuG86da4L1BFyUlJ
W1DNUZavY0gfhVUFtgSUmaaKJFFhiAZPtOAWbGJQoToCVqGDPWyoLpM1lcpz
hBYMSt5Twcq0QX8UCcZp1EYCLuLLs0hVJisCXmIifQIyGRUXAGKiwrDGDhv8
gM5WwJAy6MuFfQ2aGBK4AZJqIsggTkwSyJqAnMtFj6WtWZ7qxyItAmsQWJui
ZnV9TlNmRXpV4dYVdoLGKhyZlfgoSZIBfwie/+n3+wJhv1/EiJQs58CYXADq
GsmggSLuG5ADcy4977D9nD/nnUBtedOD0Qgih1EqEMT8QSSMEMGQGvDneabA
M3YkbEbCWZGvwcGSUouqJRm4vz+B+ApgGEz5ZjjfpuQ7YPreN568NeZ8+HD7
6//hn/7dw9+6/9ZXHz392qN3v/3W/Tce3n/87sO/fXr/ydNHDx49uvd4//6T
R/cf79978vj+vfvfenD/W/v3v/H2G3/2ja//xz/6nS/+m1/56Jd/5pWv/NQr
v/zjr/7vn7/zpR+99TOfvPETr5///AdPfBq41at7r9/d+9jdAx+9vfuhm1sg
PuyhqitZsM7theX3nQG0mn71+NQrxyZvHx7rAgvEncOTd45M3jo0fm135OLG
wOnFBqDV7mh+azC70cmtt/MgALBWm9mVBvCsDMBWl1zdnHZAq8kCPJyxu4Y1
nNT742rLlZu2DGlli1WgVFFgVXLZUmpeDfaylxlYcWA2e83V+mJ6PW70xQyA
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
ljCuS7NZZ7lWnC7A95X6RXzGlXZVvD21/GxgdrF4KYaKz7disRGF3VPyT3SU
j7TkdhWt4aw2VLb7TGpCjp/Ks3f6yUdb2K/dN3fpi+/71d9+7t9+/Gf/+/Vv
v/XG9zev/XNYy+LSjWsAqcshszavX7uMtNXVize2fn718j9fev2b//JPX/ub
r3/ya19836svP/HqZ5748m8//gcfQ7T6nQ/c/fFnTr701OEXHtt4/uH9zz18
AFD1LNDqwX1Aq+fCva6eDWn1zD1r771rGeRVBKxHj4OSGou0FUAKtBXYI8dm
Hjw8dd++kdOrvcdn2w9PtoY12JuiGOBKowQ+YtY75NVcK8grVJh9ouqOle2h
gtmf0/uzWi8orKze2K5lAUQIo4K+1hYqrB1aRcBCwgpNaWk1UyqrXB46c55w
GPi/TNgsCdrKA0ZIwCaxrAkl/ZZy69tZ66HqQdE/+hY8/b8Y0KqoshWDq1lC
3ZVbfQXdkqu0OnKLJdY0rixRJZSXTgKziiFu8jdR9Q643GoIQ6FuegewbqXV
job6fwYDd9648xGhCou4RuR4LABgcekMmwrYlE8nM0zSB2wxSTgIBifkAGpc
usilSjxW5NMlAS8jwyocVgXjiZqAt4RzXnWUP0+0yHhdxlvlaEUY0aaSrQpZ
v+UlWiOmocIdKASk0u0K1SajNPuoEbXRRDNAMPR1EW+VoEHd9CBAyMjDh4I1
h3uyhDcQ3gaHtfLpVh5rE/B2EUfVyGWiUyG6VLxLJRoa0Y2qhRA9BghDoqGA
MGQGdGpIJydMesZiVj1hI68crxhn2vz7u7Lnu3IPAq06vfu63Ae6vPPtzkNt
wYNt2TNNzt5AGpDSrQKW5zCTTLHbZbETviCbJKvhlE7QFsM6HGezrMOyMKAF
YFUkOU+zWZIsMXyrblUVLYPTIJQCginQXJZgMhjpxNNoN/lEqsSIdcWo8kqB
5AMSFAodEFyOEjIk7xNcnpXyvOJgjJkkrTSpg6UIC64GiKRpNZ2KtkEUUyke
GJRKcWkMjMVwFicYnKCgkU4RcQQRkFc6Q5k0JSQSVCh/0JrfZJrDcIGkNEl0
dd1kWR0jDAz3aDrHcSVBaFHkLtvyUmjJlYr2W0zqsYSTxEEbQkc6Yml9itjO
czWe83FCTKKwZDqMStFhTrUVi5XSqV5d6TGUXkvvMbROVW5X5DZZbpekFpar
kWQby/RIYr8q9cnIj7n6jKdNGuy4jE/o9IQlTfj2SCbTqVtFmivgWIXAmtKJ
XCKWTeFlRsimSD1M3i5RfIts5inBw5gcrzbbmbLu+vD00LLrBCpdFYtV4/Fe
hkMl6yXZIlICGSNxdMNyMpZNovCsEYtr8bSRxDI4VWWlNlHpEiTgSDcv1HG0
+K4ZFFCuOFGqDBj6imuuB9aejLUe2BtFf8nW+4jUEEctudaeQm7Zc6Y0ecZQ
Fz1nVJMaPFXHU5VkrJyOt9B4n6n023pDk/sMfcA0G4pcp+kqhvWw5IIjzrvS
lKtM+OZ43m+Yap7AYcDgJ+LwrZvwVI/ITjnafC7TaQcuq4txmo8zYpoXMDBO
wBhfhLF9ts/PDMAtaXyfSPYS8SE8NsXEppHF1wz2VC3z0HDHexZHH5sZvKuv
vr8p2NuUOdJVO9FT25VVVnxxT0E/Ui8crhdWslZYqCrdDSKRSi6b0oGCdSBv
7AKRVcvOdNWWmrOrPn9XkTsbpO+zY1853v/dD5740/dsfPtLz/wfW3/7q198
7+LVf3jzVxe2rl0AWl0PaQUGtLqy+fPNrQs3ti5uXv6Xyxf+4Sf//Bd/91ef
/tMvPfvKy+965Xfe/eVPvesLH3vs5ZfO/fYHznzs6ZMvPXn4hUeRpHr+4Q2U
ExjS6gXA1gN7nr5vF9AKAeueXe87swLy6sk7FgBYIK8AWKCwHj468fDRyTAY
OP3IsdmHj86eOzhxZs/AycXG8dnO/SP1fUP1Pf21CE9RSDBSWNERUFjhnsJo
Q+Go2u14xR0umQMFoJXelwNaaY1fLxDWOtAElrqjrSK/EwmMtBWilcJmecJj
0w5LOBxlM5QTll3KCCCduKLCoQ1EbqWVQBZAyCBtRUXa6v/LIlqBdquZYout
tKHZNK3VVdFkmS5UQ72GLghEA2bBW0J1hqKIwnY4MXq5DT6BimbEfB5HpXEZ
LNJNt3JnR0zdiqrgFq5FjR3BdcuEF5rJCg3LMMApzN/xYSNAtQ3xgMWyqBFd
DQdmwUu0DYpA5AWiyKOc+RIHniixRIUjyuDBeLzMYRW0wDla4wxGVAUcvYS2
SES+JqEFYhWBqohMWaDBShwVJuETJY4s81QJXRy9LDB4iSFKNF6isDJ4Gi+H
Fr0s0wQ0imS6SGIlEiszBPoRmShTyQqdqjJRDglW49JgzXy6RUBWF7E6qhaC
N3F4DXoJkWoTiA4h3SviQyI+a9JrvniwoJxuce7rDM4hYAUPNFBh2/Od3rlW
+6F65qHW7N0172Ben8/IfTA4MYSyLnsCb9GsRXMmKxqMoJKshBFiGpdwUqco
OZ2WkymXpPOCmKFZO4mB5XghJ0hGmhJjcROD0YWkpwkx7BKVWEpLpB2cyTCc
QzBWmvJJXk9QepICL8UQiYRYyiY4JY6LMUxNUSYJNyC6nJgTpRzPWVg6Wrcb
FZ2gwmWbOJpnT6biqWQinUqmyWSCT8ZULBmIfF6VXI7WQWGlMbhVGcNkAlfg
zllW4liF4zSKEZIITDqGAQ2LotRmWj2ZTF03cjRtJ5NuIhlgRIATFQrrV/kp
zx7SlE6Waxf4Gi/6LK1gCSZcwGOlE3ki3cLQDZ7v5LlOke+QhLrIl0GyhQu+
qiQR1VyqJBO9kjjuu1P5YCLwJgJ7JqMv5fWNmr9eywyZQpcmdpl2WdJcgnbS
eIEiayxVwNK5RLyJIIppzI8lgmS6THJVTipQvI+DNpQrmhPwmsMqeVUvKPCn
mGpOxxqJxCQtzirmsGbkeFIVMYqNJ5MxORUrE3HQIHa4dkkPl4QXkkkgVK8g
DCtKH8s1J5MgMVpwoiEpDZTozk/L9C6T3+upB3P2sVp+b9YeYtIjPDWp8EMc
3ZaM15PxQZ6fse1J2xoxtGFd7wMqMVQrx4z67kjGrQssKu/P0gDxDlEA6ddC
JMd1filvT/rqoKNMlrNDOa/EM1mK8OCXiJbyYa0C1a/wg5bRpHsapdAxikkw
dIqjcU6gRR3EuKzl0f6hQqcujWaMmbw1Y3OLOr5mUQtKepiI9SVig3hsUkju
y2l39zSdH++6d7jljt7yqUbpto7csSbjcEE9UXPu6a7c1VU9XPV2Z9QVR55V
qGk+PSek5/j0PJ9aVqmpnDmUt/fWc+s+f8rFHq1QD/jxLx9tfOP5g+8/UH/3
0e7//NUPX7/yzUub37167Uc3rl+6flNbAaqiSODm1YvXty6HU1f/+NoP/9M3
/vNn//2XX/ijzz75yu8++aVPvfsLv/nY537j/Kc+ePdvPnMbigSG2grJK0AV
2jpkY0dbRfbsvWtP370K8iqiVaSwoqSLaN7qsRMgr4BWM+cPTd6zd+iO5Z4T
c41D4+0bw6CwmiM9BagCct0aFQTBtYBS2TMRrdDsVdUdKVuDRWMgb/Tn9d6c
1p2NKlqokbwCIdPqGjvAeoe2ilIsgEGIVkza5QiUZcFSLpq6IgMxohVf0qKd
GcMiSzsLqZC2ov7n2ioCVlUXmi0ZPgtuo9VFM2Uo/KhyaAosZF8+XKtVCNPd
356nsf1yh1yZsA4GqoYRZlPsBAPfEf17RxgQvB+i7Vbb0WLbmINrsuhMeA4+
QAqYFfqIWdtbnyBBh6NcxKgN0ES5HOHN8NuTZShHEb4Rh7ZLzrNknkEp9Gg6
DIxDvsARYGgnZYEsoXVk4epmkUZLniWmLLFFlJDPFHgmz8NYncpxdJYlQyMC
hsww2z5D4zmKzNNE5PM0maeIHPJkIfQ5ikCeJgo0VaTApxHLWBwt1eFItO4M
xCCTqrCgB9NVIV0TMbAmEQcsVkS2WWJbRLqVJzpFAsaZkxq96AoHCtqpZufe
juBcI3++kTvXnTnX7Z/vCmnV4j9cD+5p9o+UrcVA7dU50MsBS9k0ZVGMRfM6
I5i8ZLKSSrMSQco4aZCsAiIlFlcTaZ/h8rwAwHJwwiTpQNYLumkxvEGxgawF
sqoSlJBMKRh6o4wRqAHIS+JailZSlIGzNi3oOCvGMTaWpGLxsDIfqJWkkCY0
inN4KcOwpXAJoUsSejKlptNod8h4IpptT8USiXgykUglYxgVj+ugRFi6Wdda
dB3elWeZLMAUg5EMl5NkXxI1miLj4cpQpNTiZhr+MISSopSQTpS8dLquqD2e
X2Zo6MPzOF7juC6BnjCkec+cUNVehu1mOOjDazzv4ZhHwd8GXRPZTlEYM62F
bHY644/YVreutCliXeaaeKZKEx7aEyTRz/Cjmj5imoOmAcprPOtN5d0JT+mX
4TeVGjW52YIL4qKAbpiCxwtC0ogjlNQobEAVOiisjqc7OVRSo6FIzQzXxAl+
Ggcl6xOMmcJNDP5jyjWd6dKoUZ6eoZndvLpHd2Z0s9e3W0qO54s8F3PoeBuH
92LpcjzmJ2IFLFnGki1YopshJlVpwdInRXGYpac0dTGTmTDNPkHqZdA2vlNc
fFZIzSvEks1PSmRbItaDJ3pItOipmky2Efiwpkx6DjyBmVx2qVxaKBWHHatb
kQYsczzwew2tmaVbBXbAtYZ8t882+lBQzlyvFyezZpfODQTWQM5r1qQ8RwdU
OkukmjiqQxV6NalbV0uaI1MynqDwJDIsRTOUwJKURNE2D79crkUXuiy51xRH
dHrRofcV1YNVcz0vzerYMJsYoOKDdKyPjHXjsUE2NmPiazlpPScfLYgnSsp9
jdzj4+3nB1qOV511XzpScQ/l9A1fWXeEBSE1Q8dWFGwlAxLPuK09f6qinWuR
nh9xPzhlf/nesW9/6t5/99yBs/vbX3zq5He+8SfXNn9448aFa1sITNevAbMu
X9tCfhMVtbi0tXX5xrUL16784LUf/eW3/svn//yVD77y8pNfefk9X/7Mk1/8
xOO/99GHfudD937i+ZMffvrwh959+IOPH37+4QMoxSLUVmjq6vy+F87tBWEF
CusZsHvWQF49dXoRhBUY0OomsMDDkYXHTsyBtnrw8BTKtVjtu22+O6JVFAyM
gBU1dsKDNwtcFMLa7B7YVM0ZqzojFXskXIHVB8DK642cug2scJLoHaiKGhGq
QFiBYsoBCDgcemaHxVGWRThvBdoqENmCzBfVkFZR0VrEKTIEVqh0kKcj7bMj
gm5FTLiBI9dkSM22WncRquqOVjNhCCdESRTQwwNHABBeSBNUQjCiVViaKbqU
HwIi8uhHIIKEKIMi9G+fooqiiDsvEX1o6Akx9Cl02qVS4HfE105jG0MhdzxU
yRABMbIIjvDpHpALXkbfLro3pPKgQWcQ9ZAPUKoGHWaDILEWMFRAE1kEF5SB
jz4OKInyGxHUcvBF4Fsz2M2DRC7krMfCcSosfgWe8plt79HwrCgfHaQDjgk4
OIFGk/s0nWWoHBO2Qx9QZBalaYWeIgMK2gAyvEBjBVBkLAlW4agKTxaZdAlE
Hwg9CQyvCFgJlQ1hKihvWWgSuWaBaeepHokaVegFR9pfNG+rufd0BA/2Fh/s
Lpzrzp7vDc51eufbnIfq/oMtmbOt2VMtwVreGAv0usZnKBQic0nW4yVHUgxB
NjjJEWVfgXGsAebzgkPQKmAoHg9YtqrpeUGQUmmRpCxRUhiGx3CFZR1FdRTF
lCRdEASaYnGcS6dpYE0yJSXSfAxpEwl0GS+YnCBiOBmPEyGwoggbn0pbPF+U
pC7X7vH9sozIFQiixwmASyaWiM7EY+l0Ip2MoaCfFotlkskKyBxNG3DcTkUp
YEQmkawJUptuFTlBi8fFeExPpfKcUBTELMuB1U2rkQm6M36GIPIkUef5NpFv
ZsgqKCYC62OpPiLdGYt1xWIdMbTXcFsSa2fYCglaGO9U5FHXnTStSVGdkrUJ
3WigugpYnkhVebLLlIddo4umhnlhVjPnTHvMMHoUuV0RKzQqwFtOx7r4VI+Y
7uKSA6ZYZSn5ZoldMVwy4KeSNSo5wKYmVGbGkqdMcVjlBjS+VxM7RA7Ud4Wl
W2S5KggZjHAT8QIe62LjexzjuO0dErR1Xp1g+S5FqmeMrCsafCLPpQYVYUFX
BziyjUv3SESfQIzJ9LwuLOncosouafyCyq+51tHm8on2+q58dloXVzxuWkmN
crEhNtbPxLqJWGsq1k2ne3miX2FHbW0q484VcnOlwkpLbblWnSsWoD1fLs4U
cmO+O2BoParco8kNReiQ+YYm9tv6eMaazdlzeXe64AwHBrCmFZUbFWHQVZO5
msi0ynyfY4xmrF7XzGomRwupJB4akUjgySRG4ARDYBr851JY1HdxWKvOTgTK
ck5eK2r7mp1DbcGh9mB/3V5v0tdK4mJAT1mpUTU5ICR6QngtiLE9evx0i/nE
ROu7pjru76/e1VE83Z4/WrGPlazbqvbhnLhLT6/p6b0Od1c9d3vVOtMkP97v
PTqgfeRQ+0+++sz/9bOvvvkvf/zad7/y3W/8yY/+6e+vXXjt2uULm5dev3Ll
51c3L2xdvQi0An9168LVrctbVwFecPwHP/3RX3/r7/7gL7760qufe+orn33f
lz797i984rHPffT8p1+85+PPn/yN9x760LsPfeCxQ8899DZtBbR6LkwIDLUV
2C6QV1GuRRQMjJgV0erdty8+cXL+sRPzDx2ZfuDA+Jldg7cv9R2e6Ng/0raj
pyJC3UquW1PZw9krlM0OtBouW0Mlc7Bk9BfC6hZ5LdxNWO1EdS2UnUmrSFJF
2mpHWCFaQcfLImTYDIayLGgAFuEiKACh+AKIoHAL+6hsRY4nQikUrgWWqCh3
fSdkFzUii7QVvBfw1GIprY7e6mjNllLVRbQxsUTntifL0jadAu/CPQAUbhYS
DFlARC/fZtyOtvr11NUOfW4lVwSpiFM7qIrgFXEKGrfQKrwgi66fCa980/Co
AcCKiBm9RDJQoH0h3AiMZzJgAh3wABGEKsAWNEBZIBEUSiH0oeGQYFuIhUSO
dFx4HA+PgwckMRkgEcdEhvDEMR5LewAs5GmfQx/n82E5RwAi4hod7LSBaHTI
OzAAHA2kIzMUDpalsIDC8miDCaLAkkjlIa2Ho3JVElkWiZKIKlwVRKYkilWR
rwpsjWfaBKpHpIZVZt4V9xaNYzXvTHv2XG/pwZ7i2UZwX8O/v8M93+E+0p59
pC33QEfhdGtuveTAKLddQ4XWrTTuYPAtRF/WTEFGwgqUUQq3SSYQgBoAEaWq
6iVZzgsiAMsmCD4RZ/GUSBBUEuXLMXhSoimOSBOpOJWG0XCCxJIkliBSCSoZ
ExMJMR4Py57HTZp0Bd7mWIOmdJIU4eSQVlQ8pmCpDE01S1KLopZYDvhSM/Sa
YfkMq6cJKZkG4SakCDaByqUD+/xEokMURz1/KshO+kG/qnfQbCfL98lKtyzV
SDJAgiJRwLFWRW7T1RZJqgp8leOyGKaimBgqQugDlVhqyjOnHL2DSHRhsUEi
NYynJwh8DMcG0ul+jBxk+W6ObWepAUWatqxF01rVjFWQV5Y9qhtdElwTK9Lx
KpNsZ9IjErdsmRuZYNE0e2i6CU9VaKwZ/vBSySARGzaFI70th7prQ44aYCkt
kVSSSTmRBGzZqWSrLIwYwpSYnpaxRZtbL5rrFX/e11GqdmANuepIxhrP+n2m
3szQRSxWS8XG+dSpUvahlvoD+eodmcIuy+kVhWaND2TCpeN1iZzzrY1cZs5U
BmVyUMIG2cSMQuz1lENZ/VBW2/CUFWCWzu/N2vvL2V1Zd95RVnxhwWMWfG4p
EGYz4qhO9wqpIZ0fNIV+UxiwtUHXHA3c8UIwHLhDnj3kWiOuNeY7E4E/W8jO
5oLJjDvmWyOeNmRrw646mtEnMuaUr89kzcnAHPb1flfrddRuR28z5C5L7bbU
ftCz+WC6GAwGXsGwJEEicZIkkGFYmiBwhiZYCpMYzGBxh01D59NiCqM5fbGk
L5fRBkDLTcbedv+20ZY7JluPDRRvGyge688d7w2O9jiHu6yjde1Ajrq9SX54
qPzMct97F3oeGKmdbuSP171THdnb2zO3tdin29072uwjRWFNSRwLxDvKyv1d
9rPLrR882P3Zd+35/n/82JsXv/6La99849r3rl/50a+ubf0K1bW9vLWJcioi
VIGwAtu6dnFz69Lm5pWtqxeuXvnn13/yX7/7zS99/Wsf/urvv+/Vl98L2uoP
Pvn4yx87/6kX7/34c7f9xnsOfejJw0CrKBj4PNryfv/zD6KVVs9H2ursrufu
+zWtnrxjYWf2KpRX4OefvGMJ5NXjty08cgzt3njv+vCdq4NHp7oOjLZHkcCd
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
Pp7uYbABDp+UqHmNXTEAUuyGJxwIlIMF/UjOPORp+3R5lySsiOI0z/QRqR4i
2Uelp0Vut6UecqyDtrUkK3OmNmrJDYPuNIlhj1/J6Yfzzl2Vwtla04lCbtE2
hk15MKO3qVK3pfVb8oDOzeb0jY7Kwd7W+eZSj+8263qTorZpSp9jzJb8/bXc
4aK1L6OgYrAFY71kLQTKuMUNmeyYK0HPv1B0F4v+NIDAAajxG7ZwomAfz9p7
LW2PZ6+41qAsdPF0K4vXOaJf5SdMdUTmRmV6TMGHucSEkFz3pDvqwZn20qmq
v5FRFw12SqamDGHW1ecCe8bXp1xxPpBWS9be1tyBjvJGR2m9vbRY9qfy9pCj
dWtCm8TVRaYuMe0612lLfa7WZ6v9pjwCPPL0xZyzlPfmM9acb8wHxgIQNm8v
5qxVOJ61FrLmfGDOZq3ZgjNbsCcDYybvzsL5+WCxmJ3xnX5Nrht6VhI9VAOB
QUllPOXJnC3QNvQ5IplFG0MIzbbW5dvTlWB3PQe22uzNV8zJvDLocaM5YaXd
29dbODHafPtY/dRYy+1D1TuHKo/Mtj8+1/HYfMcDky239xcOdri7W/RDDe/0
WOXhtZ6nDgy99+DQ88dGXjw1+fIjh/7sxfPf+tyLm3/9pf/ztb/9317/xpuX
vn3l6vdev/aDS798/cIbCEZvbb3xr5tv/fLKja0rF1DK+pULUTAQaStUif3S
lStXr25eunblJ1cufPuH3//3/+Xrn/7TL73wx7//7Csvv/ff/fa7fu83H/rM
S/d9/IXbPvS+A6CtXnziCNBq2x7e/8JDG8+f34fCgPejLIvn7l+P5FU0dRXR
KgLWDqoev22bVg8dmT67b/TMruE7lgaPz/SCvIqAFYX+dmi1Ewxc7iqtNFDx
W1BYC+3BdN2fCIE1WgVmOUNVe6Bi9SNmmb0FoztvNvJWd94FSIEH+//XVhRh
M0SYwc6VFLGsiygnMJRXUSQwolU2LK+UvamnokBZ5uYUDzSQtpLZksqjGoOa
UlVRjUH4S4Che4BCZ7SL8g8Jg07rgCrQ4GgpByDpZkgQhFWIKrCbsmvnJfIe
9MN06G+J+N1KrghSt05U7QQMd4TVrQorzKzAs2ieiMyyURwPzT2hUB7aDAKY
hTIcto2lfI6I7hMFLYFW0nZBD7RGLFodxpE5Niypgfi1PecVPajoKe1AKiKX
TSXBh9yEr7PDUxhLYJFK8tkoShlN2FHh/advoRUWeR++MrMNLD+M8aJEkZC8
aIIMJBVLhrVB8Pz2LzS9DSwBL4p4iYPOnG4S6BpHtrBEO4d3C8SgBH0Ot5ZR
9xfNky3Bvd1lANbd3bm7etwzDee+Duv+Vu++mnNX1TmQU0cFbEjjezSxlRdL
JJtL0V4S19KYThAuTQcUk6fZZlHqNuwORW9muCpFtfBsuya360qnrrUpUo1n
yyxdYqkCyhXBynA/ElfgKHie5bA8F3x3h0wWaKyDJ6Hb7Ff4Tg5vo1ItZLIJ
izUTiYZMd6tMnU4100mwMpHIpBJeKp1LEyWaaeK5KsPkMLQU1A233C0mEjUC
q2HJPBAqlWjiuGaRL1NEEEMLdjrSyV4iPUimFxR+1RB3WeLBrHG0YO/P6gsW
P2Xws5a8nDEXUAaFOMxTIyw+xqSn+fSaTh3NSKfyyvEMf6Kkn2rNnGr2byvY
R339iGcezDhrpjohMmMKM67Qi6a44elHfPOAqS/J0pwmjeh8t0H2+tR8WTvS
GpxpLZ1rLp2rFk+X8hv5YDZrDvnaaCGYKheni5mprLFQtNbr+X2dTYvNpT7P
rslisyR2m9qIZ8xmjdWsvstXVixxzmCndWbSZMdtYdwRR21pPNBBqszk7IWC
v1gMlrP20aJzomjByORIxV1ylTlHHdPEAYkdkPlBVQBQjrn6sKP1KHS/SAKw
JhVqweQPwGCmvXS6vXyk6sPYZt6Wx3RhSBf6dKFbk3o1YcKWphx+2pNnA30+
Z83n7LmcPeYoQ5bUpwkNheuSUQ3/hia1G3yHKw1kjJHAGMvoIKDmAhPAtATP
2dEWPHU1Z64VLRCMu4rO/mp2veTvKfnrZX93JVgr+yslb7ngrBS8xZy7mHWX
c/4c0FYRu3WtRRZrEleT+arCV1W+bqntjtHhmR2u0WqqbZbR6dqdljEeuEtF
dwaEmy+P+eKQK3QbVKeBD7jsTEnf3RZsdOYOdBWOdBVP9JYfmGp7CFA12356
rOn20eodU7U7Z1pPTTXdtdj6nhMTHzu/+2MPrn3q8fVXfuOub33t4z/9b1/9
xY/+5t8ufOetn/3D1de+e/Xiv1zZ+tnFGxcu/WLz0i+2rt/Y+uX16/+6deOt
zas7nEIzVpsXNq/8fOvahatXL1++vLV55dK1zdeuXvrOj3/wH/7uL3/3z/7o
A3/yB8995fee/sNPPfn5Tzz8Ox8++4n3n3zp6YMvPXUEaPX+Rw8iYRWWt33/
w/ueOxfOW51FWRbPn90D9tzNYCBYxKxwDguYtRgCC0UCI2CdOzBx7/rYXauj
pxYGQV5tDLcCsHb3Nd0SCbxVXsFBpK2Wu3KLHdmZtsxU3Zts8cab3dEmd7jJ
GUTAshGwimZPweou2D0FL7JGDmiF5NX/fN7q5upgHq0ONsC2CwmG2YCofwsr
rqMFxShTTkCTO1Hfu52NwGGRtsorTEnjwkK4YlkWShJfkLgcqp3L+AIDQHRY
wmTSACwjjBhDG4CFpBOP9m10OJBRmMWA7EqBj8xk4WUa8QtEExn6W6J80VTU
Tshup/GOVcARp96WaMGEiRzQpdMojy7LkDmGRMkJoc+QeJYiwALw6AQELBRz
4zFPQEOyICzcEab0b69uDi16XGHyYQT3WzMbbzILgBUxy2HQ/B3oXD/Sg2ED
tSnw2LZiilI1wgIdAQcwSme4VMCBB1GWirzHJMHftKQHx9l0QIO8wgKkrbAg
TMsPWCzMwN9eXJbjUwURK0l4mcerLFnjqWaOqDN4B4s1eHwApQWyK568UTCO
t2TuaVTua1Tu6c2f6c+AvLqnwzrb5t3X7N5d8w7n9WEuNaSwvZrUJWsdgtrO
GXVBQyl/aK6NyTFssyB369aInxmy3YYkdQpCr6EPOlavrXcZykTgz2T8Ucca
MNROjm2h8U6JH7D0XkNt6PKgbw9k7GZ4vGS6hcGHBXpaEaY1cVIRJhR+VGT6
GaybTE6b0oJnTBriuC5Ch9kj0CUShQELBFWmmQrLVmm6SuA1nGjC8RqWaiPw
Bk03KLw1hYq+elgKbUlAptwwY7yWjPVRqRmFWTOFVYMBBh3IyEeyyh6LXTW5
ZUvYl3OOt5SO1sv78t6qqx4suHtseZaJL9GxAxp2u8/cHrBHs9yhqn60ou/3
pQ2T37DENUNcMoQFW1zy1OWMsrdon6wFpyqZ41n3ZCG/EXjTrjzo0IM+PZMT
9hSVw55yylbvdPQTnrU/6yyVvMmyN91UHivmxwNnHjrnsrtUsmdy1lwpO5YL
ugytS1f7TGVQF4Z1dtrkFix5RuPHVGZU5UZNYcxVhl15yFXGs+ZEYI75xlTW
ngm8WVvb8OWDvnC05uypmKMeN2jzXTIFA4NRQ5m2jDnfmcq5Q77R48l9Oj+m
CTO2uuQbe4veoVr+YDW7BgLHUsZNpV8TuhShDmgQ+BbgsilOmPy4IY3pfLhZ
JOCP7Zc5GG8MqMKAJg6Z8qijj/p2r681AqUv0Eby5nTBWSr7qyVvd8nblbNX
MtpaTt9XcQ40efsq7nrR3puz0TKunL236O4DYMGjyBrLOXMJHoWnzTnGsm8v
edaErgwbGiisPk3ut0C1af2OPpL1JyuF6abSaD7odaxu2x7MBP22N+17a1lv
wbdnfWPSVycz+nhOnywYC1VvV1tho1He317c35Y/2FY82lU82V8+M9Vy12Tr
yZGmU1PN9670nN839MBG/2PHRj/wwOpnnj76pY/c9R8/99i3v/bBf/nBH3//
x3/5Lz/5r5cu/uONK6/925vX37rx5pXNrctXr12+cWPrzTfefAuObL61eeGN
zQvXQj0Vpa9f3bx4+dLPbmqrzc0rF7Y2f3z18vd+8sOv//1ff+7PXnnxT774
wlc//8yXPvPk73/ykd/9yNlPfuD2jzxz5KUnj3zoXUeBVi88sj8sGHgg1FZ7
b2qrXc89sOf5UF5FwUCwCFihvAK/FM5bLT5xcumJk4sArAcPT92/MX73rvE7
loaOTjUOjLZtDDevD9RupgUi+3X9wLBy4HIjHwYDs7PtwUxrZro1M1n3x2re
aM0daXKGq85g2R4MN23sKdi9Bbe34IDvyTvdObuRQ5mBra4aLg1m89vLlECw
hJWXGMrl6IzI5aNdfU21GmbxlVS2gGouRdtzRB1v2PdykZ7Cw4gWDrrAQyEv
oBhVkLkS6KmwZntR4sNdsdhsuOdjRgRg0Q5HWoBIBtNZ3OIIi8UsLm3zACzM
EQiEKmATkzKYJHiTTQG2DPQSZGAK2BSZR0c+DYPtHUi9I7MdbninmtP2qqu3
C66dsrfAKZAhoLCgEWX0gfdJDCxDhZM+dPhTGj0xl8cyAp4RiCyayCOzEgkK
FBWZl+iSHJWoChPaby6U3slIuZVZOyIrMm8bUjs+5VOpDMglOkQMElDhmq9o
Qo1DhHqHB0Jl2Ft8yCafwuA66Fsg+ZaEy8LBPNw5j4XASgGwQF6VJLLC400c
0YyE1a+1Vb9ITOrssiftzevHm717uoqgre7rL947lANa3dlu39li3V6xTpTt
jaw2ptAjmtCnip2i3CaonZLRqVoBQ/vhYKDEMi2C0C5KHaLYoyhdotglS70w
oAUBztNFhmimyU6WHdTUcd8dsa1eTRlDfWPQb2jtEt+lyQ1NbubhIkyfLk1o
wrypzIHp8rwpz+vCpEANkckVR9vIe+tZa0/e3pODnlPuNxT4iDZJbBX4VpTY
wDQ4dlAShiRhRGDGZX5WV+ZUeUJgRlShz9GaRapMJjoEctSSp2x5XKamZHI3
PIGMvD+rHK9YRwr6mkFuBNqqJa464t6cuQs6RpWdFqk1W1x3pX02v99iD5r0
UZs8kWEO5Lh9Zflg1djli4saNa8x4yLRx6T6QJuY/LSr7C66x+rFE7X8kbx3
KOevuQZ07IMWPYSqi3BLLrfXFo458knPPJ6x9uestaq/3JKfr5UncsFU1lks
uQuBMWmjTcFm8+6oZw27ABpr0jOmXHUxo67lLBCAs7Y6Cd/IBbVijgfGoKsO
OupU3gP6TGSs6awzEzjTlrJqCWsmu5ZTZwK5z2IGHbHPEoYNccpWFxxzMXBm
Mtawrw5klAETxgPirKPPewZcfy1nL2esOVudAlrZyoitDFhKj6V1O0afrQ+p
Aowfxk15RBeBU30C1c0RQyoPL0cBYaYyATcD9wb3XHRHi+ZgRhvN6nNFZ63i
A6o2qsGBqr+vYB0oWcea/eP1zOFmb3/R2hNo61l9X946VPEOwglF+KUbe0v2
7ry17GsrvrFeyOwtBqtZ+GrahCFPmeqMb0775kzWWa0WVmvF5abCTM4fAh1q
WbO53Hw2t5YLDtcKx1qrR1or67XccslbqvqrLdm9XZVD/fXjQ+3HB9pO9Nfv
GO48M9F192zXQ+vDD64P37PUffdq94MHxh49PgUs+PDjh37r2ZO//7Gzf/PV
F1//1hcu/dNXfvSzv/rnze9e/uXPtn5x8ecXXgOddH3zxrWtX9y48cvNrRvX
4N+bW2/euPTWjYu/uH7xxtbFN9/YfPPNzTfe2Ly2dfHSpZ9uRXsyXrt47cbP
N6/9+MqV7//0tb/79jdf/Ys//eSrX3jh1c8/88rL7/nibz/2ex994FMfuPMT
z578MNDqiUMvPnbgQ48ffPHxgx98dD9oq2fP7X767NrT969B45lzu599YPdz
5/Y8c9/u9921+t67QGGtPHV6+R0W5Vo8enzmwSMT5w6On10fPbM6eHKucXSy
7fB4/cBI877B2t6BpvX+6p4+0FaVtW5AVXm1qwQ+rHaL/GJnEe3YWA/QeuGa
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
r0/pC2gwaVXoOIc1Mc4kEBD0rACUxxp5JspRNQxeTbtqWSdQu1EkYiLeoXND
AWUUPl34xDE3N+nhxwBebhY+LfQo8IGBBk4NGMywhxv18hAjPmHEww25uWGD
7dOplOzqlPAu+CdTyWGDnvIJ0wFxwuCmvfysX5wJStNBYTLATQTYKR83olN9
Cg4vNR0xTFr5+z3coI+fLXbvrQ4eqcs/FA0dqPLsLTeO1PhPxIqOxgqWasLz
lYH5aP6uWOme1qrFRDlwaiZWOBsvBFrtaC85OFh1bKrxtl3tdx3qe/j0BOia
F588/cvXH//zv7186b1fL1/8/crFP60v/+3a6vvrax+vrV+22tZbhPr0s1UY
0w8Rsz4FYbXyCcoHXvnsM4DUpfX1i599dhUeokvB65dXr11eu3ZxeRVlApev
vvn+337+h9++9LM3nvjnlx967bnzQMnvPX3Lc48e/vq9e75ydu6RM1PAKXRu
dWLEOrcCeQXMsrBlKSzQVnfu7z63tw9oZckrKwcIkErnBmFuXrxCPUSOjMQO
DDTs6a4BYM23lk/Fi0BejdbnQwzXgbzKG6zOQ8CqCPVWhnogKkKWvErTykoJ
WlnBtM6KBQUAVqOfawoJDUGx3i8CsCo0tlSmTVo5vViu26xNpzlyNYdDczp1
F2wp8HkYB20VZMkwOrciQjweAFqhmoF2gwBa2f9bWlmQugFYN6DKevIXQIYM
7ZxtuxVsNgBrO5OFRj4nY+uIiu7aM9NVbdPtQiDSMEItHU0eWesQHmwTWAQK
lAyEdasjyda2I5vtutI0SXv2tmYCeRs6tJLNfKB5d3h7mlkmH20ATSsZCAG0
ikh0nkhZwEI3AigH/Igb7BbWodXWuwBpSKUdGhs1GM0C+IbZW9ntMEezyTKM
KLFp3fy1Zxl2dCKp5ZiXsEwPydbLaP/9/egcdOCl51h9vhCwkLzKzSp2ZlUR
OU2sHbaFYTeNqgWWGkcq9cNV8v4KZalMXSzRJ/P1/qDe6pYrWLKAxDyoaZRT
JXCNImQCY3JtotOhEbibIrwkCWAKYUQeQYUxPGR35bmwAooooukIiUeQnnIF
XXa/IyeE2dFZFfIb24OuXHhLhi0j4LDlEc48a92ZC2TMxx0lmCPKEDGBSXBU
kiWTQC7SGcNzm1y2Jld2vTO7Afni7I2Mq0WkujWxWxU6RLKdxdsYrIV2tAFK
RBAOWJLNTTK5LayjXQCJxKDUlsG1K0yzRMR5PMYT9ayrUSBbdbHDp7a6BZBX
7TrXrrPNEtmhssC1Lo3rVNhule8E3LBYiid7Qc2xeJ9EDWlst0y2I/3CxEWm
TmRqeLqCocoovBTHynBXJYFXEa5ayhnnyXaN7/LIoATh1wEcgHgBWqG8oqmt
+j2sSSu5z40SgBBWAtBCVSuHwwQgNehVIDa/yoC2Ahh1uoWUV27R+aTKtehC
UmETMpM0bzClDK7bzfd4gDtKlxv99ARHxhi8hSc7Fb4VXlkgLL0GxOxSIdAx
GToIUzl4wx26kDJEK2CeEEhLISZMa0cd46plXFEerwc+Ksgw3+oW2z1Sh872
gXr1K2M+aUznRxV6VCFHAU8a2YPkEjak0xMAnYg6FVbHg+pEWJvM02Ey5BX7
daZTBsmJpRQStNgQfLtHmPKJ015xys3NeLm5oLAQFOF/7HyYnwtxMyEeZNew
mxn1CZMhbTJiwP9b+DOaOVVqNMjNFyj7q32nk0VnWkrPtJad664721t3vLVy
V33+fF3+znjprpaK2VjRVENkojE8kyhYbAZaFe3rKz85F7/nSP9Xbp955oED
rz177hevP/7mr1/68K8/Xf7w91c/+uOVj/+8duXdaysfraNW9VfWrl3ZSiuY
mMnAFTNQPnAdKSzA01XU4uqTKxCffbYMsbp6aWX98sq1y6vrHwOtVlf+trry
54/f/81f/vMHv/qXr//La4/84IXz33/m7CtfP/PCYzd/8769Xzu/+OjtM0Cr
e44NWQHAsgLm14G1H51bXdg3cIO8Sp9eWSunF9pvmW1Bp1ej8UNDTXt7o7u7
qhfbq2abSyeaEKpG6j5Pq8pQX2W4F6ICAcuSV22FbissbFnAMkMxywmKwKxY
GHkwGgJS1MtX6hzQKt+she7F7GiXc8HG7nBjLvgw7CEwE1VEgCFCLBniAFhA
KyLAYmY99lyTVrk34MZyEqaBtZVZ1pEWZ8sEYG0VX+nvNSOLs2VYkIJxa9yA
MD43E51w5dwkWVdf0aEb6tWom222UNKPcvhAYZkNkRF3nOhemG7qJkCtG8/d
yGc6s7caHjZex8wBptudpBVW+m5U+txK3ASWJa+2Mss6wLJSgshxATpLIEPm
3zBNK0tebRyQbbkCkM4Q3lAYJI1RK1dpNRdzu8wA8Wja5mE0UAswq7guctFb
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
NAYyKqxNhPUxs+hfv44uW414hVGfACSCNwMUmwiA1JIXCo35Eu9IRB6AhwX6
Yrl/B0Spd09F8FBd4bF4+cnWmmMtVfsaCuYrvVNF2t4q38Fq78Fo6Oam4uPJ
8kNNJUvRyGyJe7bE2FnlWar1HYwGDkZ9B2vde+v9hztKT4/EbptsOTWWPDYa
PzoaOzIaOzTScGA4esscoKr38TMT37531yuPHXn9iVvf+Mb5n7305f/4yfNv
/ec/v/e337z//h/e++jNDy7++aPLf7185e2ry++srLy7svzu6iqqTGuKo+tx
o7YyM4EwrllpQHNcRxZB0FYoE3h15QpKBq5dWl394Nrqe2tX/3T5g3/73b++
+IsfPvHjlx7+p3984I3n7v7+03e88uSt33ns2LMPHXjq7l1fvXP+sdtnUGkL
hKrR9JXh9A2sCweRtrqwv/+8qa0AWGkr+2YJpg1U3bqj49TMxtHV4eH4oaG4
SavoUk/97q5609BePhUrm2gsmWwqGW8qHWuEQMCy8oFp00Xad2GVuego9qRK
3B1mD8fWIneiQI+FkLyqBm0FuknlUD9fBg8DsBjMRzlBWwXQ/SAqX2FMYSWY
tJLLvWKZRyg22AKFzJNAYeFehvRQhGFe+dRwp0Y4LXJZ9SvSVSy2XiKWHCaY
LGPz5z0Yot08zLLnirkWsGwmp2BEc4CUGYhfCFgZAK/NrGDmNto85LICmAWx
eea1jcneztq2MxsttL7Eoxrv2wT7ps5yZlrkgpX0feSN0rL/R8cF7P+S1Qj4
8z5ACOQANDl1A60U1HryehOrtKnDjM8dlm2tyGQVtJdvKHHvyNjqY7yhnPvn
ajRtLdP0+W6SaWbdCCzUChPksE1C/zQ21Z6r2XP03CyvLSuYs60A0Sozwef2
GuRokJ8tAlrJO8skoNVsHjsdoGYCzLyf3Rnk94SFA/nikQL5SKF0tIA/EuGX
AtzOgDim0ymRjAl0BUcHCcxP016a8ZnaqpBni3m6nKOrGbKOJusZuoFjGzjG
RBVZS5E1wCkCswIeRhmygSMTEhFDbS+cDZKrUSFjOhM3uCaZSKgmcRgsJXED
hjro1VtVEZRaHUs2sFScoxMM1YS7YhTWwlFtIqrImkSeCqpZYSBgkpSoFnMb
73RzKYNuU3GAVJcXVshWydGhOXu8dE+Ab3ML7W651RCTCofc4Ah5qOYejKiW
kcolzL6BTTLdoAkNHqkJhdAe1obL/RPV4bFy70Ch2h9RekNyl19qd4txQBWH
3ICtCpsyxD6/BupvrMA3Xujr84qoqJEA79nRJjg7ZQK5LDRkq+hG9XvFQbOu
BSgskD8mrfgejevR+V7NvCMMPNLwLlT2gUipwEGmE/XUEJolsk2h2zXKtPkB
qvAeBZsI8FOw/wcE0DhjXn7Eyw8hHYcu8AIWER+98oBPHfIbI355yMsCTfp1
atDDWtGnkV2Sq1vGezViwM0OeblBN0hvZjYkLuRJswFQUsycl1vwibNuNM77
xDm/tJin7Sj2LBZ7Z9Fxkm86Hx1RjQbhp0ijQXk6T5+J6FN56nRImQnJM3ny
YqGxq9S3VBlarA5MFRtzZd7FSv98mWdnReBAtOBQfdHNifITbTVHWyr3NBbO
VgUmS4w9ld59Fe591f6jTQUnWytPtFYfb61eiubtrgkuRYP76gKH6vyHo95D
UffhZP6J/prbJpK3z7TdMpY4OFC/rz96cLjh2FT89HzrPYf7H7916uvn5p+/
b9crjx750dfP/fS5B3792pNv/urlt9/86fvv/vb9D9987+Kf37v8l4+uvHVp
+W9XV95ZXX1ndQXRanXVNLFv2gJhYiUDP3eMZWUCTWCZ8mrF1FYrpra6dPkq
fAvw68ra2ofX1t5ZufSfH73zq3/98TM/fuXRN75z/4++c/8bz9/9/a/f/vJT
tz7/2NFvPbT/yXt2ffXC4mNn5x65bfqBU+P3nxx76PTEQ6fHH0JSa4NW5w/1
XTgwmNZWML9zqff23V237+o8s9MsvrSj4/Riu5kM7Dw9n7pluvXm8eSREaBV
bF9f/Z7u2r29DQAskFdAq+l4GcirqXjZRKx0zATWaEMxAMtC1WBtvpUVNJ3t
wa4yv3mM5e20araXeEBqJQu0WFhtDMk1HnTlqlhh8kUqjyUQsBgcJQNpJ5Ao
T6QKFbZY48vcUqlbgCj3ShU+sdwLaovMVzBkDuRIP0N5acJD4cAsgzCxhTk0
DGUIEb8g4CHuVBGtEKREq+AtoGrD3G5WtQXBZVosOFummJtjAitHyAFOgbDK
hgkEl40qw6PRhkY2M5POymBMWsGIJNVmAKrwbf9AALMAWFkWrTJp2zY6+x8Y
GyrkzuVu41EjkgweiOPKQpXeUcn3DNYs9s5lg/a5ySpdi05t0J5/Xezoro0T
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
WY/OoQu8ADiR6FTIXh3kGN6pYCgfqAC2qE6V7pBQpdwUqlzk6lOJQTc97GVH
/cIIoCcgTIRliGEfUI/o0cg+g0Xh5ga8wmhYmy7yzRR6pyPGZFgd9YvDZk2k
sYAE8yEPZz0cD8qT8MyIPleg7yjQFyLyLHzU8XHzAXFHSIbYGdF25sO6OhdG
cmlHiWe+0JjJN2aLPLPFvpkC73SeZzJkgLaaDqqovrqXmQpwS2X6iabw7W3F
t7aXHk4WHWkuPdFWfqyl7HBjwcH6yNFYyc2J0kONhbuqQ/PlnqlifbhAHomI
0/nqjmL3rjLvzjLPfKmxuyZ0OFF8PFV5vLPiRFfF7YN1d0/G719ofWhnxwPz
qfOT7aeGmo73RY8P1R8fbbx5tP74ZNP5fd2PnZl67qH9Lz9x4tWnT73y9MmX
nzz9+jfv+vGLj/7mn7795m9efefPP7/0wR9Wrr599erbV66+s7z63sr6h2vr
H69f+3gdnTRdXDY5dYO2QrertnraN7XVuimp0IhiGWkr1EX4/766dm3l6nv/
e+XN/2ftt6tv/+A/f/LkM1+++amHjn33W/e+/uLD33/+/KvPn/neN48+/7Wj
zz52+KkH9j5+z86v3LXwyLnZh++cvv/M2D2nhu49PXjf6YH7zgzdf3rw3hP9
dx3tP3+4/+yB3jv2d9+xH5g1cMf+3tv39p7Z3Xt6V8/JHV0nF7tOLKSOz3ec
WEBxbK715pnmo5OJQ6ONB4bqAFj7+hGzdndXL6YqZtrLJ5pLxpqLxuNFE42F
gKrRhgKIEVSaKTKMygnmDdaG+6uDfVWBngpfV5kHINVT6u8p83WXeTpLjfZi
pSVfTEaE+gBT66WrDKpMJgt5vIDB82iUDwSFFWHJAoECWpVpfKXBgwqLelGB
QdSIxM/VGGSF7CqW8AKJCbFkgMb9FBaEkcZgAtjykU4v4fTgqPGiGzW0spme
6hw3huSGjqOiGbozB2HLhQSXkGsDWqFTEleO6MzmHZmCAzVhNHsyZorOLMFc
gdHURGidQ32vtjM5WVRONmXLIrMziexMPCsDy9iGZW7HMzOIrAx4CCOsU1nI
m4H8hOgMK4PbdBhafvi0Z54zD7k4G/JmwJMRvzbudsFipoLZIdKXmoGq8FUB
cJO7XTBPu9IV2q3rvZZf/brlD0Rljg2kigS/aQ7MAVhZJmWyrLmIerVkidlo
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
KHpdqn6fDlDV41KNFdrmKn1TpU6Y93m1vW5Vp03WDcByKbtssk4j02UQ9Vqk
8MU+HbZOBEzgQd1GpkMnbFERMIK1Dbu1oHIDTtVI0Ah3hT99tAC+5434DuGe
MWQBZAPwXRc0jwbhTmyDXnOvQ9tlZqvuQeIcACwV4GlHqXN7sW0iqEfnbhQY
J+Ct/HqkOU70AhjjXrhuAlTBxR6LpAv+TqzSQadywKMe8Kj63Yp4QDtRaB4p
0EbtogGvvM8taTfxR0KqlbbQUrN/rsIyHtLHfbq4Xz8RMs+VOLeXOWeKLXG/
ZsCtGHQrRwLaqULjbLF1rsw6Xmjs96kGfOp+r2rIqxzxqycKdBMh7VhQvaPa
vrc1uNJdeHSwfC1efXS4crkjdKi76Ghf6ZH+stVY6Upf6Up/6aHR2lM7uy4c
iJ9ZHgSTWhqvX5psPDTfdXRX39riwBMHxi6u7/jGU0svnDvw0oVDr79w8off
ufQf//rCr//jW3/6/Q8+eu8//vrhr6998qdr1/58/fpfbt788LPPrmJgYVQh
vbp388G9zx/c//zvKAfIpgH//r+51T9awGJ3B9+8c++TO3c/vH/vvU+u/vy5
p/d1VJvCpuyIIaPCyql1Cpp88g5Q2vbaJ/bs+Na5x1977tQrV46+9vyR164c
RktXZ3ZePjUFYnVmJYa2WR0aPHt49OljE0+vz5xbnzx3bOzpo6NPHRp+YnXw
9HLfyaXYCQDWrk4ErO2tB2eaD6ODGpuPzDavzSG3OjzVvDJavzSMgLXYX7nQ
U7Gzu2y+qxgMa76rHIA1214811EEwQIrPNkcGW8sAMMaqw8OVvr6K8CwPAlg
gVv1FFkBVd1Ir6zdEUtbQI/6sTtUVWZpqU4MerUJLB7GUwJSrEaxnFJQeF4A
c3hKQaF1KAXB5vf4CTY9giocHoCUPNmtSCcLKSdI1ia2QLWAWXYxKn13iAin
kO9E32ZsCEkHg46GBBiZWJNKAAsIBWETk3YJBSN+iF+AX5NglkmwUaeBe+0m
iuEBWHhE8MpFp5nI8tOZ/DTUWTc/nR3xPI3JTRXmpkBsnLGVuYU9qBGNwswt
NBpTBeAv6UhM2EWlFGLbNhSp23BK8JGmGXgb8hdi46yQ1MQm4kQX3ORetYkC
eFAw4UPoPLrH+R+143ika0ci2bixqytRc8j2y0VulZouSksXpqejI13ys6Sc
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
pMC21Dt6BVzA2gWMAM+qAeURkp0CEryxUkCqkyKyuJVZGIvtegF0+ot1o46c
vmKt1yR2A5W07EYNq0YGfz6lVk53KTPrVUyIJsCNnufR8TBV4bvgo7DKQQAl
d68KfQUcurWsFj23ScdugPeq2fB3wRW2avkQHiWnVc3z6iQBgzxgkLRpeWBe
gKduiwzANFys6zJLfAZ+l1kKAZwaKFT3F6jg1YBJ3Gbk1ysZThEClktObcnO
as/h9BRIp2tyD/ntKy35/SXSgVL5Vlf5xRnPEwc7nz3U/+TB7iuL3u0x90Jb
8UxTwbynZLKhgIii0dq83nJjb7kBOpP1BWM15p5ijd8qBVQNlekHyw1T9XlL
Xvui1z7bXjLrLZoLlBwcrT0y03xstu3Egvfiob4nT009dnLyHNBqrfv0eu+V
Y+NPnJl96vzis5fXfv/Y4VefOvnW7869+9LF91++8v6r1957/doHbz35yfvP
/eGDFz795OXPP33t66/e/f4fn9z46YsbN5FY3b6NJ61+2NWrXzKB/9fc6t7N
+/dv3bn/06273969+7dbP/7xh2/e+PSdC49vD4/58+qLeM1lsskux8GxlrUJ
73i36/Cc9/R615nN3lOb/dub/WeODF88OXH19My109OPnRy7fHzw1EpgdaRq
rM3S06DrbcqZ6CxZGa09PNuM8oGgVxMN66N1gKrlASdw6uBg9dpgNejVwQGI
yrX+CgDWYlfpXKB41ofcaqzZNtxoJoCVN9aMgWXFAYO7koWygn21CFjdTgPo
lbdUC8DyFCpb8uSNZnGdkSi+RExa2eWMEmnmXrfCYUGBxCqPT8OBgQWBDQtN
XRHzVmpqItBKTf8nYP0aVSgTyIAzk9XUZDU9WUVDpZygVVHRHiIKMkQ8DllG
nJyEijjJUsGtEn9Nq71u9e9oFZy32juTJUhLeAhPWKYeCrQMg2iBRKj95+AB
p1CBehTCNLgM9DSrOCNJkI6AxUsFxUNPdeE9kRmxaDEGJRw4tS8jFNzq0TTQ
mQO7GT+ism7QsPYmA3EEfQrwhCN4uHf2ChQM0Aa0QuWbQv9FBD8w+C17cYbr
9z60pfIvboW2Pw5mAtHzVkCrhNBHwK0yQv+DceA/+CH/kR0TZk+LbaAmtGSl
eNjJbma8ixbZQAlrpka2MeJa6PGNjMQKRlIePTGbmqChJBhpqbqMBFVqrI6c
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
fhpALQ5F6i9utYutneCiGas4TjLhVviZrN3aF1kJUczdkhcQqAgGkCs5hgXc
BGYBJdG3oN3BUK34xChefCQnJowTHcaOCmFFhAC5qKgaYSg1OpQRi3bdYsSg
gvB0oqVGh1GiQtFOxxEhlPD9lIgQoj58CCViP7FUI4Qougud/SRwq9BH00P2
QZsW8giQKC1yfypCz760iP0Q6ZEHIFKhH4leAirttOH7ITLC9qWHPZoRhgpx
oBb6xCBqYYQYTEcd+CIQOlCwkIzwMEzA9Igw9N7Q32SGPcIPe0QWtT8nKaqI
FFNJj3Gzkzyc5DZ2go+T5OWmtLCTapnxjsz4AlqciZaYk5lm4tJtwCB2Bvwi
yudRbVyKlYM66NeRmAkuD22ZHJSfa5exS6QsC5tkZBBPpjPQjiG5tOQcakIu
NdFKT0ZzVey0CgHdKWIAXOyc9GJWcjEnpYSTYuemlQvI1TKUMXOpMhu1rBYD
z5MjQI+O5vD9VqnHKKxXs6tkDIgaeWaNnOlSsmoVTBSAMCmwiVKBprcygWUO
Mb1CnOkQMZxiOuCsTsF0qbMatKxGXVaLgdOWK2jN4bYZOT6LoN0EcGG7dSyP
kRvIk/aWaPpLtT3F6u5CZWeBorNA3pmv6CI6faXqEXSXzhmu0PcWqzrAPqwS
v03qt8n8VnnApgjYlH6roi1X0mIEuPBbjNwmAwewBZ1Wk7DdIkR/Tg7XZxV3
Fiq8FrFbz67XMN3ZnCY9F/7YJj2nKTvLaxGOVhnGqgxeq6BGQa6SkVr0cGFy
hEKLxGsCiZOACrUaeGgRBfxFaqZbkwUjwJS2HAGMe4jxOjm1TkFza9FLgJ7e
QjW0yI8KNT15yg6zrN0gbM0WtBn4fou4t1QJf9pknWkGdMZlG6kwdBcpOvNl
cKntZhH8jfBP0Vui7S1W9xSp+u3o32HaZZ5158035c23FEzW547UZA/XZI+h
Z3gNi+0FZyYbLy22nV9oOTZaN9Nq63Iouh3KiSbrfHvpjKdkuql0utk+XFvQ
UaL3Fmk7y/T91bkDNeY+Z05/lWmsMX/SUzTWVDCKJvoLht35k+0lm2NNJxb8
h6ZaTix0nFzuPL3Wc3lr9PHtqcdPTV89Pnlpa/z8oZGzm8PgVs9fXX/lqa2X
njzy2nMn33zp3Bsvnnn9xbOvvnj29ZcuAK3ef/upTz584U+fvvr1V+9+9+0f
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
ylMQ81aXBLNlZdk1hGxhWZaQkC0qQ5XbxaVZcEUCzCoGPGVJizJBwWqKMwFY
stKsWkJWLTyhKENYkM7PS+XlpXNQb+JEhKHcNGZuOj03tRrLBmRiB4pZfy2R
8TywMpNQxgU6sZVCy0lG6e45KFcQpQuuPEzGKzthtXMTK1FdQSBUYrxYLj6W
pa4npifEixBiFXQBQ3g+RjIWKwmBKIk9HfCUuJqJgREtfaXT8VqgxMVnrbit
5l08v2YYn6xd7ltLK/x94t63tufXCgdxUOKQwqptVGRgfS1X6vpiPZTx35ic
QEjCgJWSUJaMfinQqjxlAzllHT11HTf1X9LNL+q2JtpKM1orMtspGYhWldl2
UnYjuFVFjrGysJFBNNBQEoWJXmplE5s45Y3MsgZqEQBLQ85HtW0peXpKvola
CG5lrMxrBMPiVwQUzD69aNBUE4P7rZYba+CHwSAUdLzoa0jDhtssVnUW5WPg
xcDDWtZ0q2y+q26HX7vUDbdiaUhDbxOXO/kEp4Dg4BHtrLJmFqGVV+mpqfbX
VQcVqGlvoL46qmVj1ZDoeKIFTqvOWopXWe1V0rrrq7sVjPaaSjuX0MIngmcB
qgattb0mCQDLW88E4fLWswBYPQZhVMN1S8kAKZ+ChtLjxeX4eaiwhgXoxFtc
DTaK94ZtJ8Y8hwc7ptq1XUo6KFUXln3nlJI7sXNMHTUUj4wKqOpVcYP1DJ+a
4W9gR8yCAbsUxKS3UQjgC2Cl3cHj4I/graWGFLQeLa9fL+rTS3p04lgDqiTf
YxD1GMU9RtGwrW6b17AjZJnp0g7aZYCSIbts0qWebKnvM4rwhPyojocHmJpf
yewxCQFA/ZaaoI4LYtWFfTDAVgStzdaNu1SArYEmGdgWRL9VCqgad6omW1VI
dTu12/ymXTH7jphtxm+Y7NZN+/TjXZohl7zfVjNgq4GvHJOt6oEmRahB7Fay
vRqUxz7kUI60qYfbNQNtqkizLGiTDHq0833N24dbQZH2TnUfXYwCg44vRc7s
7j2/v//srtjJ7eEzu3suHh558/Qclv43fnbvwKkdvWd2D5zfP3xsKQovHA83
Tfe07J32HdvRj4nV9NkDU2cOTp0/MvvK8W2XTi29dmb3Wy/tA1S9c/HwWxcP
w/g2BLjVO+e++ezytW/e/em793+++uGvP35246cvbv/y9d2bVx/e/XH53s+P
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
pLD+Sqt4aXe8ai52+ngLrzCDU7CZlZfGwM4aA7AYq4eO8ajOxg5nZaNGWtTM
ZHI27laJeACY4g9JGYCDBBjJmXi3YrxtcdJqJK40LM5I+ouwrALl73r1f+9W
8df+PT1j7cvj1FuhFbbQB2McVfgIAVfiF/GHZOxKRWoCOTUBI9dGFOkw30hJ
TaClb2CnrRemrZNvWW/ITWop3dxRkemuzPJU5XZV5Tkrc5tIW03lOQZyvpFa
3IAa/hZoKfmIVtQCI62oiVVhri4zUIuBVmgNkAqcKjBQco3krSZKnoWab6su
dDBLXWxCu4DUJqxw8gjN7JImJmpb38IptWOtrBxcgreuGu9gC0SbbFHsDRr2
R4yHe5uO9DXvh+/kLkVEx8X7gKCmiuJKl4DsElDAszpEJLeEBG6FbvhYgXQI
VLlCQfPW03pMgtGWupHm2n6LeNguG7LJfCqGV0kPNwCheDDxKGgBDQvlYGg5
MPGrmRAwWXDrIaZalT0GvkdO9WD12FdQaJEAFvuNgtEm6bhNNtOmGXXU95rF
010NJyZ85+YjBwfbB1vk7bVUlHQhIXmkVFTgXUxuRfV7CZ11lKCW2WsW9MN9
HmRNyw7UIzHs1XF6URYiE6JHw+k3iAaM0l69BGiF2h+jVUqUjBE1CMacCuDU
7qhtR7Bxyq0ZcdWPOJXT7doxp7LHJALuhDQc+OsCVrprq0CvwLMGGmtGmmon
nMo+Sw2uV3i+OvjUSIsiahRC9JjFQKs5t+HIUOeZSf+OoAX+6oaaZYOOuvEO
9aRbO9xeP9gqB2aNdarHOlRAq0G7FPSq3yrttypijfKgocanE3obxOFGWbRF
PuE1T8Gb+Ix9gDafYWHQtWfSvX/Gc3TJDxoFnHrj9NxbZ7ddPDZ1Zv/QGVSZ
duLi0anLJ0CsFj+6sPvTV/d98NLON09te/3k7KvHps/vHz21a+jEzkEA1tEd
g8d2Dp/cM3Z2//QrxxYundr+6pntl8/teuOlfW++vP+tSwffu3zso7dOg1hd
+eiVq1+99e2VN7798s1r373367VPfrt25cZPX96+/vX9G1cf3LmGlgEf/PLo
4W+PHyJaPXkCsLj/7Bmg6sEzTKz+B90qnv3+9xLuT7CEQGwF8jbmVvdWaYXG
x8toMRDp1YObDwFYD6/fu/vj3Xvf3vz1w2tXL/xw5dg7L08sDVtbdVTQK3sd
tdtaM+wzjEUa+/3qWGdtX5d8xKueCOmnIkZ80Q/YBLTq71LgwIpL1rBPNeSr
H/LWDwHjIDz1o576Ca8KaDXaUTfoqulrFsUs3KiRFTFzoxZ+pJEXNnODBhYC
lo7uxTjVDValrvKgoHWpqZ3q6g4No0PL6mpge03ccCM/YuPHmgVRGz/UyO7W
0jvqqS4ZuUlIMHGKAFJ6epGBXmQEWrELzZxiC6+0SVBmE+KGBbSCKMdGlHFh
ExIBZwAsE6tUTy/Ay7mrKHmKily0/QT2VIYwhFYCiZmicrQSKC3LkiC3ypQR
AWQQmTiqasvQjlUdIUtOzJYTcuqwrEI8YxDPuOCCIuWkc7diMNqKWg9jqHo+
vwJvUhxHFSr3VJCJTnsVbeEUpDPzUD48PScJAibxOWpTkg2xiYZ1fvyzKO5q
UXesxjuaV2wBVCVg40asZzHepiQRjz9bQK65gi0hJmKJ8ckVf91Oeo5l/86t
nktHjENqrXA9R8a/LwbinIIAHqHlvtSN2FpfAkzAodB1+ClgC+CVvomSvpGc
vpGUllCeBpK1oTx1AyVtPT19PTf9RXH6v+oz1pvykhzELZ1kcKtsLy2/m17Y
XlXQQs5rrMg1kwut1QQzrdRYBVFkxNqCNDJKm7kUK7O8kVZqohaZgF+UfAMp
rwGlEW5tohXZ6cVN9MJmepGDUdLMLLZWF5grtxopOY1VuTZ6oYNT5uQSHOxS
iDZ+OQQ87JbR+vTCaYdsp1e3O2DcEzAditl2+RtHbbU9BmGsASSI3VWLqgu2
SigdNVScVj55FdCqB+uWiC/W+eur/So6QGrcqQBORQ08IFdfowgmMSMvagCl
YuGpHXARzAsCnjxglfRbRPBMeNVcl26bRw+v9aFG8zTwLLT6Z68dAb0yCgA0
IxbJeJNs2FIzjEBQP9GqnukEGbEeGu48MupeDFiH7HVBVPaW4aultQsrWthF
Dl6JS1TqVVTG9OwBM79Xzw6r6X4FNaikRVT0Hi0zpmX26Fi9DSglI6YFnNVE
NAKs+QjVI6/GUwdjRsGIA9u9CluXQpZpd8NIq2qiQzPiqA8bBCCMbSCJeEhI
AKywGtnWUKMU5As+JMAFBxa++ge0wlMBAWS4YcGVcZdqyF4LfzOhBk5Qz5lo
V+0ZcOwZdM4GjKOdKvCsMeBXh3rcpYC/sahR1NuoCJvq/Loat1rg1vD9JmnE
Lh/u1I93m4e79f1dmiGvfra3eWnIdWJ75KV9fS8dHLh4dOKdl7d/cnn/J68f
euPc9osn5i6dnL94bO7V43Nvnl748OWdn1zc+/55oNXC6ye3XT4x98qhiTP7
Rs7sHTu1e/To9sFDi33Hdo6cOzD7yrHFCyeWLp3Z/tp5ZFWvv7zvrQv730HV
lk5+/O6Zrz679OM371z98q1vvnrrh6vv/3zt419//vzmT1/f+eXb+ze+f3jn
GnKr+789fnDjyfLtp4/vorW4Jw9/f/roj98f/Y6VtP3v0Oq5Yhdxq1rbjBh/
n8cgVs/gVwOtbqGmIX+uBD5AevUI3Oru8sM7yw9vP3h4A4B19/7P9x/8dOvm
59d/uHT9uzNfvb/rzL5AxCk0S4oMgmKHihFrVw4HjQOBhh63ItYm6+9U4LtU
eKY6THBOwRhHFVwc8iqHvIrBbsUganwvH+qqG+6Sj3kUY27FaEftUKu0v0Xc
Y+XFTOxoIy9mFeDACpk4AQML9Kob+RStG2NWl4oKzIKxQ0lrVzHa1AhYHj07
YOKEm7hROz9mR7QCHetUVrpkJLuI2MgtMTIAWMVGJohVkYldZOaUWHglwCMM
WGV2EaFFQnTUlGNjBZbNjvIDm1B+IACrWE9H1XEBWOBWdQhGmTJQJ5RTkSku
R4uBYsKWGkKGhJgBo5SYKSNkyEpBrDbLytBiIDyEV9VClGXLSrNrSlGWOwIW
VvWCD7q0FcbNgrwtMLJXCIVajazNsoiP8W7FEKisbuEWXsFmTh7YWQoTrSIm
MrKTWFtTUGXC7CR4SM9OomdtqkZbWsmVfwVWfILDCw/sYSKW4v7X/o8YpNY+
xID1/Ergf02rNbL2D7EWXs8p21rh+nMhERwQ9ya0yreRmJxQhkrXrivduA4m
hKQNcJGUhp4AqKrckkLdnEjdvIkCCEtHYlWRCrR6sTJ9PWPzBl76esnmF1VZ
CY2FKa3lWZ7KHB8t108v9DKK2qoK7eRcc/lWE6nAxiBa6IRGOtHKJOA9QZp5
pFYhzcGrbGaT7KhcbZmVVtII2CKDVRXY6SUOVpmTVdrGIXYJyU42oam6sLGq
wEzNb6IXNaNMiVIXv6JdSGnlV0A4uUQ7s7RNQOqWVUVUjHFbzahVMmgWTjnk
ky3yngZun1HQizLAuVhvC5ZHQYcbeJeE3CWuQA0+6qhhbGtpwCwatckghptr
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
VMi0MBlrJpLSkpeCDCsHM6wslPIH8+0OIwk7bkWHOe5WWQfw2MEWoKomPQ6C
lhYLAZyC8c/M2rEtnFk4tjCHQlkZACYy6pAVjUPqd7EfHd2qOIAVu8DcqhTb
w8I5hVVnisRphao2IZBFViREVCbsrjwQScTmKKUwfnfp/t3FB3ZjboX1L0bA
gojCDuFuHcVFk/1oLIqLwkY8oorgEbgVUCY2ojQOZTsQoncXYydzS2IjS+Oi
8BEL7DIuEu6UYCl8cAcuS+OjyuJ/e60EH+EFGOPB6cCqgE27YILP8/a9gl2i
O4VoiyoCfQ1Qqn17iyCi9xXG7kOQjUZuVQluFQu02sNNi1bmJRqLUYqFmXxQ
T0xRlSdJS5IEhGReYRKHkLpDq568xO7cAz15B4BWHZn7WYWp/JJMXnE6C14r
ShGCXlVkCMvTNLRCVxfVy6qxtpP6Wom9DSX66jx5ZbqoNFlcmgzk0tHyeuuL
eusJproifU0+XEIYawt0NfkKSpa+vtBIL9IByOiFYEAAFw+bBn/wF23CzQEt
jCNqVMt9TMMYUjQPypogAmK6i0Pt6yI62RQvrwaEK6xomdR3TRuZM70seB98
x8Opgc8J8OoAf3bsWBaMA4KGSX3PokN0yCVdcEvmXeJZlwT+CC945Qse+aJL
DqoFAUYDauPEaj4MytqGFIxBWXtI0RZSteHVekOK1pCsJSgE52oOy1pRXiKv
zsepcTOpXjbNw6FZWZRRQ8+xIcOFacfpMcuSWzoO383CDWsYflGDG0ued7Kq
3RxUK2lA2uqXtvgkzcCpoJoBMjXWyxk1sUP6bgiAKXzDMRvfq2qxiWvdisZ+
TduggTlsFoz1Scf6ZD4l0yZss/CabOJmp7TZLW/1KtsmLJwJCyuk7fBKmz3i
Zreo2calGzopZmYNXAbVHSFtZ1DT3q9o6lc0BtVNYU3biLFr0sKasfFmHaCc
4mkHf8TMHjVzYAT8hY3MaZdkZdSwNKJfCGknvPKQTRgwcfuNnKBFMGgRjrqk
c4PaQ2HDQkgzP6SeHpCGHCyvsaPf3D3k4E8FFOtTjgvrwxc3Rs+shCFOL49s
zgYXh+wzAePcAHym/vCkDSB1+ej4uY2RU6shbBlw8sKxiQubKHf94rGZiydm
r5ydf/3CoXdeW/3w7c1PPzz75ScXrn55+duv3vjum7eufffe9WsfQNy68fHd
n7+8d+/bu/e+v3fv2sOHPz5+fAto9QyVB7yHVef7/9etXnrzZVShwN3qF4xN
L8df0Qq51bPHPz9/dOvpox+fPfr+6cOrj+59fPfWu7e+v/j9Z0f//trkxoTO
JqLwalL41cnwh13bUeYUN5g5NFlrCas6m1ubq+2pMgvqzcJaq6zeqW50axsc
qjqborpPWm2T1jjktW5lvVdFR8ACydLQ/co6DwBLUeOX07xyqlNMsvHRvpWp
p9TQWQwB2AK3AlTBCLQC1QJgAcUMnQAsAhBKhekVBEw0baBdxUbQK/xAMaNE
2VQgrs3kUQ4yiQe7y9J6IMoPsohbiRZCGjAoR0jLFlSnA4kEtAyYAJVkyK0K
5Q0QBSgAWHSU3A6PeJRMZkUadvYqFVUOzIdI/Q1YyKoSkW39donTCrkVjiqc
UMitsg7sXAKwdpgFgUsWTi6cWTitdpiFqxYlZQ/IFCU5FlOqGJxNuEzB5ZZb
YdoFUZGAaLVVlAkr04SPYEkleCfi/ZG4apUnocwNclIkOXEPKSmKmBiJ0uDh
Ndyt0MsovRB1Lsb0ioAiihAXgcb4SHzECBVVFBcJzAIXI+xHY2lsREns7pLY
iOKYXRAwJ0S/CjAqi4/Ax7J4fEQkKovfAyMQ7SWQbUXZb2MkoArRKhY76rsN
JpxZeGCcQltURUBPtHi4lxANAghutRfEkBATURYbQYzbXRMT0Zawh5cWrcpN
6CWk2CszbLQsc1WGnpymJKaJSw8KilO5hIPAKXwlEGjFzE9kFyahTaiCVFFp
lrQil09IY+YlgHNJKrIU5FwVJc9EL3EyqlydFGsrsa+FaG4sBQwpq7IkFQch
FFWZ2po8Q10BhLG+yFBXqK8tgOhtIJiaUDElc3OpGaupbmgkWNrKHV3kACgG
AAvbYBpStA1Im6Z72ete+ZyFE5Q2evk1PkEtBKDK2l0JYWeSHawquA8UG1a1
BmVNdmABu9rHqwOUjCkZwBRglo9bOygFEesGakxZuCPGniF9J2gLyMuohTvR
x5uxieacgDDptFU4BNYAvoPRKqRgoLrl0pYhJSodP67tHtN1oRry8rZheduI
oj0kbhoQ0AFYA/z6kKgpJG3ulzQ6+LV+WfOiS3Jmwnpx1nVqzLI5ZIDLIW2n
R0R3CWo9onqvmB6QtQwoGCA7QWCiugNQNdknmLaJph3iSZtw1MydsAkWfIql
Ae2MRzpsZgK/+tWdQR1zzCJZ8OqWA6Yxs9in6LLw6L1smoVXYxPWOUR1QKIx
M2saZRIKx3p5IU2PS9Tcy6yxsFEp2mEje84lXvRI55zwAnvWyVsfVJ+aMJ+Z
tmyOGFb6lXNu8ZRTBIiccAgnneJRu3DcIZz2yRaHtKtjpvUp28qoeSagGXcr
R53yIask1CcMO0RTftTyY2nEsBjWLYa1M0HlVEA2O6iaHdTMDmrBnk4cClw6
MnbxyMSVzek3js9dWJs8Ph9aGXXOD+oXw6bDk/YTi4Fzq+GTy4NHFwLHlwZP
r42c35y8dHz28sm5Kyfnr5xZfOPi8ttXDr/7+vrf3zn26Ydnvvj4/FefXvzu
6zevffsu0Ora9+8DrW7e/OTez1/dv/8diNX9+9cxt7oNYoW71R9WAnG3+kta
/QFbf5687FYvw+sf/7E1/vqP36HqP//rl3+NVk/uPX1499nDn548vPH00fUn
j757dP/zBz9/iPTqq5Nfv7986YhvyMIQN6YxSTFMcoKkodDMopmZNBWDyKLm
dpIyxU1lmi6Kjl1tFtfblQ1IrzT1DlV9n7gawiaptstqXHIELJ+2oV/T4FPR
PYhTNJAsj4zqlpIdgiq0RcUsA1TpGEUAJsATtpNVga8KwghzHFiadgJKDsSA
hfSqDe4gvTJ0lhs6y7SMEkVzobgui0dJYxHTeyoyusvTwLCw4ksZnKpMHkpi
z+ZSMjlV6WxyOpuUxqo8CCDDcgXRMWFMr2DMkzeAYRWAiAHgOKRMAB+DgAEL
FWY/uAMsrKVIUkvutnBlJzVmJTZkJtAzsA2sbbfC2bSDqh1s/bYqmBa7gy1c
uHZQ9TK5MGDFUJNjKWj1D8cT6udITojGL3c8C6s6uLccK82E6jJtl2mCEVyp
dH9UcXxk6YGosgN7sJJNe8nJe6qSo6qwCZCr4gBK5yhFqELnttAqIr5suLUe
uKsobvdOFOKTePQU+dp+fO0REBlVjjbC0KIiHiWxrxbHvIpvveFjxQHAYiQ2
Aq32ArC2zQvBC+fX1mT7sgRoiE4HR7wEpqjC2EhsElm0NYkqQhkdYGp7i2P2
EtDS5R60YokWJCNLY3aTYnbVxe5uT4zip8do8hIsxanOqixnXa69Js9Sk2us
ztWgvaRcCTGHV5opKMtiF6WxCpJ5xQeFZWn8klRxaYasIk9WkS0gHGTnJvIK
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
GVj/6//69c9bVP9NsYstWr28Hgjjv+xWj+88e4iJFaDq0Q/37n97584XN29+
+OP1169dPff1pxtff7L6ydvwv6p13M1UtBX2kJO7KlPETQRpSxm3prCDmEXL
iafAX+aiZAY5h1VXxGssEbaUqLsrDZwqs4AGYeJWQfQJq61CVCUJH+2CKoeQ
YhdWOYUUh4Bi56Pdq5189Z31QHxJ0NBZbGZizOosMXcCmIBZxSYGWvozthfB
pBddFhvbCZqmXHldhrg6lU9K5VUe5FSkcisO8iszhORMASmTR0yHEJJyRFV5
Emq+hFIgphQIqvI5lblAK3ZlBpuUgQErnU9NF9ZkiOuyJXWoUhO4FZN4sLMk
paM4BSCF4wlfGARIYfxKAmw15e5vzEEVLeoyousy4+q2wfRyvvrLblX/+72t
HZbt5AfuJF3s5LrvHNF6ObN953DWTsY7PhKBBRgU8MBdBukMlkqBr8IhfKC1
uAhyYsTvcgLjI4BT2D4XJlYvndIq2U6ALznwWyY8rl14SvzOa0SUPoESNsri
8a0rtI2FnUHejeEpCh+JCZj3bcf2TTTBIgrtasEI9DyALWMCIhNhRHtkJdsj
xs3IrcC6J5egLbPIiviICuxUNZbv8WpZ3KsVsUCrf6uP+5+dSa9Ks/aZixM8
5HRfTbarLtdVX2CvL7DUFRpqCjWUfDk5X1SRIyXly6uKlGgZMF9amSUqT5eW
ZyhJOfCCuipXXpkJoSRnq6uyNdRsHS0HQludravOUVIytHX5ju6qkKR5RNE+
JG0BEsElakSICZS9iwwBl6gqIJMa4NMHpc2DshZQKp+gfkDaDGYUlDX7RHQ7
D/VedwvrPSI6BDo3JKgfVHUseuRHh0yr/ZopK3/Who73zjsl807pnEM8buYi
61G2B+QtYFvY2ahGdFKYXwcfjvpMCerg0bgZZcTN98uXgqp5t3TaJgRUDagY
LlHDgKZj0adYHzYtB7UzwCmHaNIpnnSKJh1CtAFkFUy7pDMOyYiJM2bmHQ33
np92rw8aF13yGatoyiIAcoW1PWE9M6TvCag7BrRdYRN72MwZsfJG7cIpv2LC
J5vsV0CM++Vzw4aj8663Tky+dXTs2KQTAcsmApMCToVtomEHoE0x5VfBOOKU
hGyiMYd8xqsdsUidsg4Tt84sqHPKWtyKVq+qLWjsGunjDls4A4Yej7LdLmly
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
gzWjlAZuXwWzt1RAqVOy20c5HTJGs4rVJR1uZnWXc3ortby+dR33vF46p6Aq
OV2ykVY+pYFDquWSa3nD9dAKybUKVsvoSJOUXidn1qq4jUpOo4rTpOF36MS9
OuGAYqST1VMz0JDfV58x1JxNbsmltOax+6pltA4lq4c3ACwrI7cU0TuKaZ2F
gDN2f6mYUgPaSGvPHW7N4Q9WzEj7z8+Lbm6N3dwaP6cXLajpWvHAuLB/Ukaa
UlC00v5ZNVU/RtePsVcmhZuzss1Z+ZyKPSlnjItI46LBKTl1aYK1qRedW1Kd
X9HsLI+vz8r1Gu6UgjGpoM+oWXotd0HHX5uTnltWbi8p1ufEqzOijVkZCNf6
jHR1VroyB8ySrszKVvWjC1PipRkZKNX64tj64vjWim53c/L6hcW7t87e//z8
g88vPrp3GWj15MHNR/dvAK3Arb79+otXL756+/rR2zePcbfC9Orrt2+BVk/f
v3/2n9AKj4+OpvrXS1S/2o31IbAFr5++++mn9z/9hMPrgFvtvUTAwuoEvt97
hbfIrdDxwS/foSPvX7x9jWYC3799/G7v/rs39/fefvX6zYOXr4BWnwGtvvzy
/BefbXx2e+HWtamrF1WXdyXXt3mXFgc07MLOkpNZYWYJfsfTAq2yQh2zQl1T
Apxjve2DHc1RWW/LI0CueD+btCC7nAjn3CiX/Cjnoli30kTv2jS/unS/+gxg
FgJWGwasjrygzrzATixNvf3MqTYsm6I58yQEVr/C+wOzPOtSPJpTPZrTvJpQ
69mS7gUt9NszfTuyAFg+LWlejcnudQkuNXFOFVH2GK1si8NsSyPsyyMcAVjl
Ec4VkS5lES6lYa4loS4lIYAtl+JQ98Jgz/wQj4IQ1/xgl4JQlyIEJmfkVuFI
rFCZpmg3fAErL8gxOwBohbsVjiqbdF98PcsG9OoDsE7EOp+IcTKPAXY7A4zM
MXLhYRH5ezOBHwHLMDF4YK8W6kc6mkU5mUY6mkYQAUPAHSDOsXD743AZhrXh
WAdv4SW4AR/H70Qj9gAs6BjhlyG2R0NsjYJtwa2OhqCJRJMQAp4MD9gyDrIz
CbJFG43BrbDNVuBWxn6WZhC+5kArVMMWVQs8geoEepoYuR07DJxyPvI3F6NP
gFZuh/7qfvRvgCRDuT8UZqjon7fxEe/jhyHgJaAVylq3OORveQjN11kdxvIG
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
nVlor21PXT07CSO7QKVl9c6yagcItYTKU2wuqrZW1GjP7+YEtJtLquVZqX5C
AO3GovLcmubi2akbFxfu3Fj79Ob6F59vA6GePLn+5PH1x4+gvQluBfH44a1v
nn724tm9t2ga8BGa/XuPIwBRAKU04NUqsJWj7zGa/J9zq++xT/7H99/9HdWy
2Pv7z8it/v7P1wdPaYQOohX+kAdaHLJv3j6HALfaQ4tuT9+8efLq9cOXL798
9eLut1/ffvzV5ft3dzBaLdy6Onft4uTlHeXVbcmnF0Zvn5eem6MqGeXNZ/yy
gszSA8yyAi3ywxwKItwyAx2jXM1PE457mf7V2+xvJy0PB9oZhTmZxnpaJfsR
kv1skvxtAFiZwYTsUGJ+tHNJgkdFimdVmlc1eFOmb0O2X1M2QOpkc/bJxkzf
RiRW3o0ZXg0oPMCk6jI8atM9ELBS3KpTXKuSXSDqUt3qUz0aUtzrklxBrMqi
CMXhtiVhdiXAoGD7omACBCCmJBStXlVGuUBURbtCWxEJwHIqi3AsjXAoCScW
A7CCifmBhNwA+9wA6DhCm+NvdybALu80AYhWGu4AygYELAp2yDtFyPG1zfQh
pHsTMn3ss30cMnxRqXY87yLFxyLN2yrd0yrVwxIDlnmis3mC84kEZ/N4NDEI
qEK1BAE3MdjsH44kQ367wa3w/gdaWUThbuX4sVshR3Mwx5mFAwjHDT54EFUG
Eh1EFf4uHEyG9iDO9i9t0eRhCDrU+HgQOtQYbdrFt/TifazWH15f/RBWen3f
nvZ3V1kasv6O7ZfR2McTvqkK8eiUlZGBTR/FB0jtF5XCE93R9+Kp7/BeiyO/
fsuHS6AY/HdocSTI8kiY9dEIq8OxNuBWJjitOgPt+oLsev0te7wte92sO1wt
+wIc6Qn+vDPRvOIEdlniSFkirSR+MC+qLTmwLtKzMdKrJd6vMyOkC9WaiAFC
0SpSoAVm4diilidTyhIHi2J7cyO7c8K6c0I6sgLaMk8NFEUJWnOUQ+Xy/nJQ
FSW1ZozROM5qGWM2q1nNGl77hLBrStQLYALLoLfn09ryuH1l0J+R9C8qKQCm
zQk2sGl1nA4BtwGhAGFbk+xF1fAYu0050gwt8A7GAVVzskFoYQQQAKhSYyAD
nI3Rm0YpdbKBKnFPubirlN9ayKjJpJQlM6syhO0lMlqLgFzP6a/g9JZxe4o5
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
FZPV/P4xQd+MknpuSXbr/MTtC9PXz+mubKJJvO1FxaZevjotXsA2Us2B0+n4
G3MyzKF0l7CJvu0F1fby2IWNiSvbs9fP66+fn7+2MwedG7sL0OL9K9sz58Ha
lscMhDLQCpTq6vk5UCrg1GfX1yDArb64vfnl3V2g1ZNHt75BBWxvf4Nx6tk3
XxhQ9e7tk+/ff/PD98+/+x5NA77dQy2uLTikvvtQbv0/d6uDp4f8p26F1sXA
rd7/BG6FA+vntz//c+//nVu9eQO0wvTq1QOstu29Z1/ffoLSS3bufrr+6fWl
6xdnruxMX9maubA6fnZReGGNd22bdW6xd0peNtgUWJxkkXjyUJKPcZKnVZKH
fYqXS6wnIdzN8rSDyUmbI16Wf3U3+6Oryf9yN/uDj9VfAolHQl2MIzzMor0s
Y8Gz/C1Tg6wyQwm5UY6Fsc4lAKwk16pUNN0HPAK3qgOrSndryHQFyapOc6/9
ACwDraoSnWuSXJBbpXzICYyxL4sglH4AVkmYbXGoDURpOAALDAuQRKyMdqyO
daqOgdahJt62Os62KhaYZVcZY18V4wivloQRi0OI+YF2Z/xtAVUQWb5WBafR
EhieVVgc4pQXSMjyAzABrSzQDqyTACzrVB/rZG+rNC+rdC/r/ZlAt4/dCji1
70cuyKoAUjinEtxtDcD677rV75qUQbLwFEQD3T6yrY/u/2iq8JebQa+IxyOI
RhHEY9CGY4E69kahhCNh9kfxyzDC0VC7w2BYoR84FYbCNNTWJATwZ2cKlyE2
2FFcKHPDGC4PEuqj+b2Dc4n/yq0+UrNfzT1iKY7hVseQWFkbxdkYJdkY5Thi
OYF+Nu1Bdn0RxIEoh8FIR0qMGyXGozvUsSmY0B7l3JvsO5AVSC4Io5VGUYqj
yEUR1NJoanH0QH7YYEn8UEUSpSpluBodcTvSkIXS2xqzIUYaILIY9VmMhixm
4xkA1lBpDLk0jl6dwqhJI5UnDpUn9ZfEDVYkCTtLNMONk8z2SVbHFLtzWtA7
IyVNSQa1IC9coFXfjIw0N0pZGR+BWFIzFtX0WTkJYKFkwe9/GwBLPFzL7ivl
D1WOjjQpWS0KZjOMcPrLeIMV0J8U9c6rKMtaxtL4yJyKOiknTcmGZhWUJQ1z
VceeUwzrwLnEAwsK6pycMgOqJRrASNQL9qTh9YxxOlWMdhm9RUptlNOagWJj
nC64H55qSjyI5gN5PVohAJG+PsnfmhHtzMs2p4XLGvb5BTn09UqalN7K7q9m
9VaKhxsBPcqRNslQHbujBJ1K314i6CpXUJomuD2z4kH4QJ2gFz5fze5TcQbG
eYMaAbTdo8xWAaVWNtKo5nSAyqk4XfCNU5JhnZAyzidpEEQGx4UkAMrmrAxN
uK1pAVvQgtTgs3MQKAsC9Gp0ZJw7IKG2c/rrmT1gbbWAKnZfHYwA/oBoWzNS
vYKp4pIElK6Rnkb2YJOaT5of4y5qUKXZSdnwmLBPJx1am+Je2VTfOKe7sTN5
fWd6d12zoZevTIuXp4SLk4LFCRRweXZReXFDd2V76vLW5O6GFhi0s6a5fHb6
2nn9zQsL13fnryFUzd++vPTplZXPrq1+enn52vm58+s6HE8XtiYhcL2CDtDq
5qXFT6+uAKTwALdCtPpi9+FX4Fa3vnn66bdff/bsm89fPLuHxZf4puD3b7/+
7t0333/37P13z/9/4FaAKnwmcN+tDkLqILbwwYP82let189fv3oGzHr9+utX
r568evkQ/syXz+6++PbO14+vg1599cX2F7fXbl5dvL6rv7g5swOWuizdXRdc
WGfsrg2dXeiSMrOaij1STh2N9TgS72aa6GKd4GqX4EOM9LQJcTE/7WjiTzjm
bfWJ+4k/OR3/ny6m/9PL+s/+xMMhriYRnuaR3pbRXubxvieSAqzTguyAWWci
HYrinUuTXEqSXKpSUQZgbbpbXZpbfQbQCrEJRtC61QdUVae41qa616WgRava
BJfqeCdwq8oYsCdieSShNNwWoiwCIAXYsioJsylH6YIALDvolEfaV0QRKmMJ
1fF2VXF21fH21SBZ8fY1cQ4Asooox7IIh+IQh4LT9mBYOX4gWdbZJ62AX2BY
5REuZWHOhcH2Z07ZZvhaIL3ytUqF8LFM9rZI8rJM8bRM90KJFphegVudiHcy
A8NKwtwKZ02Mg0WkA+KRQawMqPovafUL7zBmHSTXQQDh3DHQ6ndbvGOQLwO2
8BED47CPBdYYhQOY7A5DG0k8ChHlYAQtXOIjEfbQgVcPhdkdDbczxSPUxhjl
yePZ8lgbbHUMjxBrMLv9kvJ4e3AR6pf09QMaZbg03HzQtg7YmTFmdpgegj9a
Ho22NEqwMkq1Mcq2P17qYdkQYNceQuyPdiInuNFSvDlZp0UFEfyCCGrmqYFU
38HMQHpxlKgxjd+Yxq5PYdelcBrT6JWJ/YWRgJu+krj+0nhKdSpQiVaXQapM
HgZ7qkmDoNdnjgC5mtCxGpSq5IGyuMHSWHJlElwyG3PgBkDVcE06v70IxErL
aJtmd8/x++YlJP0oVcfvV7O70ISYcGBGStGP0haVDBiflQ3r5dCSxzk9Emqj
iFILbgVIUmLFHGT0BogxbruK3SqjNShGmuAl6E/LBpbG6XMq+tTosFYyqJEM
To1SFrWs1Wn+ioY9p6TpxADHfvguCJ2gf0rSPyMdmpVSpsVDIFDjPCBXn4rV
peZ0wyONc3vm5NTl8RF4DDTO6VawAB+DS+Psc3rZ+cVRaLfnpNDZXVRszYjn
FHS4R0JD2RFiapOI3ChGC1V1ot4aflflKLlZy+qeEQ4ujNJWNWx4nmk5RSui
gC7pxJQJKWVCMjQuAGFsGwPTBKMU9GoEfePwVAJ4YIpORNZJhmeVzCk5HWcW
yNTu8tidCwtfXF7+/NLSta2ps/pR0Cs8+WFhjDMhpSpYYE/N3IEG3mAjn9Qs
pXVoBaQFNWdFJ1zF8s/nVDyNYERC7+OR2iW0Ho1oGGgFb59VjgCw4F9vScfa
WZJe3Rq/dX769kX9hU3dml6mn+DP6bgrs5KNhdGtJeW51bGLWxNXdmau785d
Oz8LceXczOWdWfCja7v66xfmoYX+1V2kS3dvbX756VkAEIzvbk0AoS5tT+OB
M+vi2akrO7O3rywbaAWogrfc/2znq3sXHz24DlaFoQopFaDq5fP78Bv++iWi
1d7rp+/efL339hvsEKtXBzllgNRBVBlGfhu4f/37Guy/TVyHr/sBvghtttr7
xw9vfsYTAn96g2j1L9atPjIsg1uhWUF0gjDQ6jmWZfH161eP4M989fzeC5Ro
AbS69NUXOxitFq7tzl/emt0Bq12SbK/ydzfY26vks8sDenU9qSWyIMY6wcso
2sko1skkzsk81ts20ss2zN0qxNX8tJOpH8HI2+aQq9kfXEz/4Gb+Ry/rvwYQ
jwa7mIR5mEd5WcT4WIBkxfpaJKKJQUJupBNIVlGcU1mia2UyHk7Vac41aa7V
+/xCemVwqxpQKmzRCoBVk+AMboWAFUusiAZa2ZRF2pZH2UFbHGYFURZhWxph
A4GPQ1RGE2rj7Gti7aD90CHUxBArI+0rI4kV4Q6locSi0/b5AYQ8f7scP+u8
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
GUF2mSG22WE2uZH2BdH2hVG2hTF2xXH2ZQlOlYnOlUkoUJHbNI+mVFR8CQOW
O9CqPtmlPsmxOp5Qk0CsTXAAYKEE9Rhb3LPwfPUKsK0oa6AVqFNtpFNdtFNt
tEN9nH1DPKExwa4h3q4xgVAfR6iLJdbFONRGO9ZGO1dGuZWGuRQGEfIDbfID
rQtDbIojbMui7FH9wHD7vGBCTqBdpr8d0CrdxzbT2ybDywZtuXKzxGcCMcOy
inexRKKEpy6gfUym+In2kcQTUQeOG8YPFoly+PVMIFYLN9YRkAeoAmwh0IBe
4aoV44gVdMJK3WJ4+lXWBJ5xYZj6wyGFOh+KDaKbsWwK/C2GJS28Bi88XgTG
rCjQKzvjKAIIFIAJIGUGLbApCj4cXiWgfoQtEqtowokoOzNoI23NAFt44JIV
aYMohloQK6tjKD/QBtuThSo74cUAsSwLXJ3w4oEnUPib7TNrvwouVlEQRgIP
pFvsp2RYocMl0UygjXGk9fFoS0SrJMujOfamxa6W1b7IrXrj3amZJzlFwZyq
GEZ1Eq0qkVGbxm/NFXcXibtLBV3Fgp4S6VC1eLCK21fGHSjnk9AuJ34fmuLj
95QAmMQD5dDCpWSwEmRKMVynYaITpqZ4nRPc9nFum5rXNs5v16Bdrl1Yqnmf
TtgLFjMtHlxQ0Na1nLNTgg0dd3WctTzOmVeP6JUMiAU1EwgFSgX9pXE2kAUI
An2MX6RpGQgXCQcT+BQEsAngBe3SOHVZS9+YZm/NchfGqDph35SItDDKgJiV
UqeEpGkJZV7BWNVwl9Qs+Bb4itlRGhicmtOtZrVp+V0zUjLY3JyaDbQCx5nT
CCaVTJ1sGKAzLaXMyUlrGia4FcgUIAl+/OdGR4BWC0rWChBkUrymE67rhPAS
kAvaZQ1vRkGfkJABtUpWt5oJtOqb5g+uqlhbWv6GTrA0xoa/dEnDWQDLU/Mn
VcLpceGcTrg4KVqaEi7quCuTvC296PyibHtOvDLO0QPaFEyg1TqW8rc+LdmY
lgCndhZVO/jup2kJjAO8rm5OoqSLK8v3bm/e+3TzPrTXVq9tTq1q+BreINpo
zB2YklBBxyYVjOlx9sKUcF0/uqFXrM7KNuYV51c159e0W4uqzQXlzqoGYnt5
DC7PLqkvrE9e2Z4BNkHgkIIWOAXwgsCBBZKFAwufCQRgAYxwpYIO4Al8Cjo4
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
2JSxc2P6zo2p235I2rxmxoaVU39YPumHpZN+XD558+ppW1ZP27V2ZvaGlP1b
0o/snHdid8bRLeMOb0jIXhmzdVHoiiTv5HjVWD9uhNbGh/+dK+O/vNhmfnyb
QCEjTM6NchBFOguiXIXDvWUj/dUjfOXRroIIJ26EMzfEnumvsvWQmDtw/0tD
/79llP8ltB0msBnGsxoCxrUaAtjiWAOtzABbLOuhbNuhHMpQLtWMRzMXMCxF
LGspmyLn0DV8loOQ7SRieMjZ3kqWv5oeakePdmTGuzNHeLNH+fDH+ksmBCom
BinGB8jG+orG+YnGeAvGefEn+omBWTPClLMi1MlgkRpgU1oMhlSsJjVWmxqj
S4nWIouxS4tzSIlxSI1zSI1FPi3GIS3aMS3aISVSNytcMyNUPSNUNS1EOTVI
Pg3IhfkFMzNClbNCVamhyrQQRSoMQpRgKSGK5GD5rEDpDH/xdD/AkABgBGOY
SQ6WpoVJ0yNk4FNDJcnB4pQQSXoYasWFLoNgjWhmgHCmv2CGr3iGt3yGt3K6
l3yap3yKhxRsqrt0irt0gotogrNwkot4spt4kqtoootoupd6hq86KVCdFKyY
GSKeFsyfEsieHMCe4MMZ584e5cQZqRMMVwiixbxwETdEzA4Ssfx5dF8uxZtt
7cW09GRaeLEsfTiWgSLbUBk1Ss2K0/ES7HgjdIKxrpLJXoqpvgoUTOKPytFP
9ZNM8haOdxdN8JBO8lJMcJeNcRGNB1a6iaa6CKY7c2e6sFPdOHO8BPMDJCvj
HHfMjPhp8aRT6zPP7Vx6+cC6q0c33Tq5897ZnEdXDj27cfLp7VNPcMv457+D
vLqS9/hawbNbRS/vVeQ/qil5UV2eV1NZ2FBbiqMFcIJPS2074pQ+8MwYe4Z7
lFeR7+ctLTWNTZUkugltyzeQHj3l9XpfCtbQUFTfUAyG2/MhX1NTUF2dX1X1
Cr5GIl/1CjzazEc7JMWkCQV6QiM8EJ5chguu6uN+MacqjEUATOuykgo2xJr0
pWzQoKEBVQjHRcJhproRFQnXt1Y3lgGvq8NZMI1fag6QzhfGitkm2TEo3ri2
prKutqK+Dh5bVV9HqrOSx37pfqsv7AAGVKpH1lJf3VJX3VxbCYM2NIk8MKsN
XkJq6y/Jti2GyPB208Bvw6Yc4kIHusQDYk3tCEl4ABqnvRE4hay9sa2jCbfh
aGrDubfGZhz4Et+Lap43mxaSJUZyddtJLXTsibW/burATOlAAeethgGabyMV
1LF1GPxX1vb38kqdKEBd7w3B6qZKyhhn3mVIE27vamt909ba2d7e2dbxppX8
YK/fNHd2NXd1Aaeae3ua+3ub+7qb+nqa+/rbevraUCXAXsyp7o6O7tdv+ro7
+/rfvH3b9e5D9/uPPQOfegY+97///O7D5/cfPr8b+OMD4tSfHz7++XHwj8FP
nwY//fERYevjh8EP78EDqj68GxgATr17//4t2Lt3/d19jV09DZ2diFY43AIk
VUVzc/lX1tRkLLReWF2TV1b+rLDoUX7Bw4KCh4UFD8tLnqLk99LnVfAtruJV
XXledcmLytKnmFZ3C/Ju5T2/+vT3C/dvnbp19ci1S/uvnMu+cBpotfXMsU2n
ftpw/MC6Y/vXHt235qe9Kw9nLz+0d+nBPUsPZS89sHvRvp2AqgWIVtvm7t4y
Z9fmzB0b07ZvStm+IXnbD7M2rZn+48opPy6btH7pxLWLx/2wZPzGJZM2r5i6
c21S9oa0A5tTTuycfnzb5BNbJh/bNPnAuvHbFiWsSwtPitaN9uSFqqz8RMO8
uEO9uWZ+AssABSVISw91YEU4sSOdeXEewkQf2XBvabynOM5DFO3KD3dkBaop
3jJLF6GFim2mZJpJaEPFlG/5Nt/wbb7j2QzhArCsh7GthrGszdnW5hwbS66t
JQrGoFsLGTZCuq2YTpUxwGzteXRnEd1NQvFWUAM1tDBHRqQrM9aNE+8hHOkt
Ge0jHuElSnQXjPDgjfDgjnTnjPXWA2t6iGJmqHJmmCo5EnSWBssodUq0Ogmf
c82K0sJfDZtdcoxdcpx9cqx9aox9OmALKSy7ZFgQqQE/K0IzM1w1M1yNLEw9
KxxZUpgqBQgVrEjBqNIDK1iRHChPCpTN9JdM8xFN9xXN8JPM9Bej1pDhQCs5
WFq4LC1CBoPZ0crMKCVpeYy6HsNkuCw9VJkepM0I1mUE22WG2M8OdZgT5gge
xumBWmRB5CW79EBdSoBDSqB9cqA2Cek+2bRgAJZwRphkeohsip90ood4tIMo
XsGLFDADuAwfLt2bw/BgUt3oNi40c2eKmRNlmAvNzI1h7sVBxS5CZKwIFS9W
yx/hIBznJp3qq54ZqE0J02VE2WcCxCO0SSGqGYEqHMOvmeangQXTfVSzvGWz
vKTJHsI0D/5cb8F8f/H3oao1w112zIo8smza2c3zz+5cdnrX8jN7Vl0+8OO1
49vunN376Lcjj2+efHzr9OM7Z57/fjEX9fi4XZJ7vzz/UXXh09qSl9UV+TWV
RSQ/t7mBxFHX4hQelIuKTZ/X09ryJfKZ7MybbssbsvL1ufn4LKkY9evB/zb1
/0KxXCLMwlYAYwIj0+BeAiDT4qv/WATA9FzApJSQ/scgpYGMJemacfmFdrTZ
hYVDa2ObIZ6tEXHtS6FREopg+mTTv52x6FAjfvKX5zfVGgsQAX2aDEdRIJ0Q
j5DVNNdXfzm30r+qV1VfUGXIujUWhTC2eseoasJc0Jcrx+hBM8ZLjCp9l6i/
G3mJLIMbvxh5lImhMPX2f9BWHXox1aL3ePsOaStjpw8D7L4gr+MvPx556aua
FX/f/TON3DNe4g3A1vbu9tbOjrautraujo5ORDoS+t7V3drV3dLT09Lf09rf
09LX09TX29Tb19rd296DhVUncKrnDU4B7nnT//bN2/ed7waAVt0Dn7sH/uz/
8Aeg6gOgCvVY/OMjAGvgDxxZgYIr8InVxwHQVIMDA+j/338EamFgEWb19Ddh
bYWA9fp1LZFUBE9gBFV6frVgbDXDF7PiyqrcouLHr/Lv5+Xdy3t5tyj/YWnh
47KipxUlz2vLcsGqip9XoDpjD8uK7hXl3ynMvf7yyeXf7/5y6+rRqxf3Xj67
5/ypHWdPbPnl6EasrdYdP7D22P41R3JWHdqzbP/uxft2LsIGwgqhKmfHvOxt
c/dsnYPlVdq2jck7fkzZsSF5y7qZG1dNBVqtXTJ+xbyRK7NGrsoauXbBmA1L
JmxeMWXH6inZaybvXTvl0IYZx7emndo5+8T2jGObUnYuGbcqKSI1wXl8gDja
iRKoGOIr/saJ+x/O/P/ykpn5q62DdJRQe8AWJ9ZNmOAlAWYlestgEOMmiHDm
BNkzPZW2bjJrB6GFhj1EzvhWTP1WSBkipAwV2pjxrc25VhZcayuelQ3Xyppj
Y8WlWHKpFohcttYCG2u+taWUaqVgWKmZlvZ8axexjZeS4qOlBtgzwpy40a68
GA9+jCs/1oUX68KNd+UkuHFGefDGe4smAy8CpdOCZDNC5DPC5TMiFLMilbMi
VeBnRKpnAHciNQhVUdpkkFpAq1j7ZKSw7NNAcIHHlh7nAJYaY5cSDXJMB+RC
8IIbwcLUyYCqYCAUcArklSotVA0GA5hJCpTPCgBmSWf6I3IlhUjTIqQZUYrM
aCXxc2LV6ZGoKWQ6yvzCHUwigWLyjHD17HC7OWEOWREO8yKd50c7L4h2AZsf
5TwvwgkMBuRyToRLapBjcqADyKvJPvIJvtIJvhLwk1DvY/kEb9kET+kYZ1Gc
khMupPlwKe5smiuT5kSzdaBa2lPMdbbDtDZDdTZDYezMsHLnUH1FrEAZJ0zJ
jdPyxzghWiWHOGRGuS5I9Px+jM/iUZ4LEt3mxLlkRjtnRDqnR7ikR7imhzoC
N2cH6+YGKucFyBcHKZaGqVZG2/0w0m3rjPDDSyYDrc7tWnpy25KfNi44vGnR
6T2rfz229c6F/Y+un3iCO8g/f3Tp1YvrpfkPKgsfVxc/qy1+XleaW1OZX12h
rx1hBBYRVsCpzo5G8ARY+NRen1VKDkH+iRdkjCqeNTaWNDaWGg0XQCvVY6uu
yCRDqpwkS5pm+hvjrg1MrDBWVzOiyrTYNUEMHpOwYdLnrsa0eiqJWPvysY/y
hhpwcit6i+amatOMJPK+xsca0pTqjDKK1Mcj5PpKW6Exjosg0REtJnt9xkkS
4Ndq8KaoMo2yM0UVOeJBGuq1SVsNgzLCAGrWk+hvmPi7/V34/F1bEayYwsXY
xcMUNH83441fvdE/ourvvelNd/++zpbqauvobG1709aGgdWOtJX+hwEB1dPT
2tvb2t/b9ranHeRVL+lW39Pe2/cGH1q97uztfNPb3dXf1/n2bee7D13vB3o+
DHZ//KP34x9vBzCqPv4JqCL2cRDGnz9+/Dz4aRCfXOGtP8ysv9Oqt6+5p6+p
u1sPLCKvjLQCA1ThvcFKAFl7e3Vbe2VzS1lNbX5Z+fP8gt9fvrz78vnt3Od3
Xr24W5B7vzj/UVXJs5qyF9WlzytQocvfy4sflBbdK8m//er51ScPzt29ceLq
hQOXz2Sf+3n7meNbTh/ZdPLQeoKqo/tWH85ecWD30pydC/duX5C9DSBFUIVo
tXd7FgHWzs3p2zem7NyYuvPHlK0gr1ZP27Bs0rol41cvHLN6/iig1cq5I9bM
H/3DwnEbFk3ctGjS5sWTdy6fvv+H1BPb557JWXxh//cX9i08tT1t3+oJG+ZG
LpriPiNGPNKHEqAd5iH7zlX8X+6Sb70VZn4qK1+lVaCOGu7MjnLjxXmKEwBY
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
2GwEVAri5Qbz80IE+aHCvGBBThB/UyAvL5CbH8jLD+AVBPELgwWFwcLiEGFe
ADfPnwuuFIUIi0NtwFoYJCgK4heH8IqCuWAtCRWUhglBlEfaVq13qIiyA2t1
jCPYgA/l+XPiHIzC+QwvE5IDlcDD49ga2iYqAFiabG1NAVHbiaHjY46LsKUk
ubLSPQwz3I1ApLgw40XU9ULSeiElWkCJ4BBDzPF+RlreBhreBpp+htq+JrhA
C2I4lxYrMkp0Mk+VWGV68nL9wJfhVB3r2pzi25YR0JruV5/gXhXjUhHuVBHi
WBFkVxUgrPXn1/tzGwK5gFYtkXbbkj0PFcecbNx0Zlf52X21p/fXf7ir+oPd
VRdO7Qa0uvYLNF3/8/o3iNf6j/fvXH5w59d7f/4Kj3HvztcEAmAteLdCYKEO
dQqW4M9gPnCxtsKSb+gtHUugoRfBzR9LrKF7VMJgt/2FCorHC9rqca/ClHDM
FVxxsB2mrTDtg8JlcffrwvwmBc9VRaWjKHn6esH1DgRwz5bUjaDvolhugeY5
l4BpXqMtO3Xq7X2O2TXM13X0dQ32d/chzVBo723/YmPYJaMMwYr5SKBlIfPF
IQOLagJRHbQiQRTH7L6l8mFFPGEpPkVhhcmo4cWjexWZsiQTuPxLUnyR5Xbo
i6Z4jA0sO+oCD3uRUyrwCt2wwWq0ByqpkUUvgn49/UBFDnYNjA4NjI0OA1WF
GNVKp6ZkU9MTMy8mkYH1kzAH+GJi+gXcT79AhBNQUEjMzAAmARE1MzeFoGpq
clo+OSWdmAask01OAELJAKRQYQVWmXxMKhuRy/sQVEFgoahacoyFaiskH/gE
+al7inYTd3ffe/709uMH1+7eBsC68P23p7/5/PiFz97/6tOjX39+4ofvTl8B
wPr921tXv7v+61e//fzZz9+fuvT1hyC+/+o4ANbnUGHt+PjYluMH64/urTqw
o2xPexFMA25F5RWEFJoJxKosdm7N3rk1cwdAVROsDGxvSAG0AtoKtlxVxrVV
xgNUofnAhs2R1cWB1SX+VSX+cFMYVIVERY5/RXZA5abAmtywxqLo1vL49srE
Q63px3amv78r49jOjMNtabvr49urYmrzA3PjneMDOUEuBmKOLo+xDgCLrfeu
gKhiq6/uyNR2NSH4WBL9BfpBIlqkMzNKwox0ZUZIaCFORD+RjqcA52ihJzIi
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
310JVxiV+3dX7dtVuQ8QDQ7Ayt/VngMzgYi2am1I3gIHXSWiFeytCLBQZrVs
jgTaqq4gGMUTGlg+EIUXii0s9QfYBCQVprDABgALXAfAgrWCef61eb6NBb6N
hX5NRf5NhQEN+f61Ob6Vmd7l6Z6lKe4FCZKcGKfMCIeNYaLUUNu0SOHGGOGm
BPvSTI/6ouDWyqj2mpjtdXE76uLbq2MbSkKKM9xSonjRviY+dkRHtrqt0Tou
fTWXscbGUNXeVNPJAifhEF2tSW5WZDcrIGRIdkBn0bVguSBVi0fT4tG1+LAG
A29jqCs0JAJ8CEzIPGOKtYGeGRVnSNRi4NTp2hoULXWiurKuqhJu3Wrtdau0
lVfpqK7Cq68haCnp6qwj4pWJBFUyXoVOUGPqaYCgI64aLLyqga66KVnLlKRp
CjQXScOMrGlOAeJLEyYPqXhLOoHL0rMxpNgZUx1M9F3MGGJzhsSCIWYDSDHE
VgyxNVNsRQe0crKg2puR7UxBUOxM9O1MqPYmdBtDKpdBsiQTTPDaLE1VuqoS
Q02ZqaFsRtDk6OvyaUQhg+hoQHEyojgbklwMiGJDoqc5NZhvFO1gkerBz/YX
FYY5l633qNzgXR3vW5vgV5voX5cUAAJswJWKWK/N6z2Koz3yw91zQtyzAl3T
fSGtgLBK9XZMcLeLk9jEim1iXYQxzjYxTsL1jrw4e3ainWmKvUmWk3mRm1WZ
N6fCj1sZIKgOFW1N8f+gIefCkabvT+27/NWJ37//5A9Aq1/O3rjy6Y0r52/+
/iXMBN78/tGdK/Pa6uENKKwewoLA5wtnRl1d84k4VFv1ArgAbTXQOd/ruoAD
bI9qK/B3IFoHuFC7jpxedQFJ9XTBbBAAC4gsiC2UVoBQ4H1RVMGjq/kZCvd7
gfLqeYyeNWPeEbDJq797cKld0uscoCKqXqcrl9WNY6pn+Q12eXLs7TfqNzFo
+Z3538irJSLrLTJn5F/kA5fEm7QVxrIVn6n4pv/4sm+H8pKnKX469l0dHulF
3NS7AKfAimorIKxGoKVSLzKyanBcPiyfGJNPjk5OSmWTE4BTYyDks6MTc+MT
AFWAUy+kE68Ap2STr4DImph+NTnzamr21eSLl1Mg5kDMTc29gOM/ZmeQafVw
RhVSpg7ABASUDLrULvaqRdcVBRe2IjIKSfctQGoBW1KpVIZ+aHx8FKHVGFCE
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
RaUyKKC2SEwyGZjFoBgwyQZssgGHbMghGXDJhlwKmU0jsRlkLoMiYCDZJWVS
ZUy6EYtmzKCgzKYZc6jGPKoJny7jMaVspozDkrCYEhZDxmUa8VjGfDS6S8qh
SjhkKZdixKeYCKkyAV3AYbDpVDadzKGTmYa/o6/7P8x1/0dE+50Zx8BBzNhi
wnYz53ha8LwteYF2YmBW5GazWFereHebpG0OaX6b0vyd0/ycdwVtyQxxzQ5z
h8gKdc8JcSsMcikIdMnz35zp45jqYZPoYhW/ySLOCfBkEmZvFGInC0UtHLJg
K0m0tTTBTpax2QJoVRvl1rrDG1DVmR54pDj+8eacZ/dXv/rovg9feeLU3174
6r2XgFNfAq0+fOnkR38GefXjV4hWP5/5/PK5U1exq+1VvG914+oZfW1FdFng
M8IXb966vKSwsHTSjdvQteTpbPpWzOBAGQ1sAszdgJCjxTV8eU0B6mnkqnwY
MWsIM2ug/8Lg4OWhYWQ9jfetro0sbV3dXLMnEPvrYnjhwRxKOSaUAjlBEZAi
MkGr1V0W97NhtCbXVHeqsBU3702re6sSHSl0+2Kjyw3w+m0YqmXrcuVa7e6q
OytsawJI13mub8Z+t3b0f1NbEfJqdBT/nNE7HxkbQ6HS87JAkMKcQqeQtGMI
VXOziwvzi/gxD4SaBXG0OD1/e2bxNiisybkF9fRtpWZeMTGnmppVaadRDVA7
q0FImp/EPRUzQKjZ+Zm5+TkcM+j+jHZudhIJqyntLALFFEGrGYSqSVwDRKjS
jt1NW60ZK7QV7rIg9JRGp6r08rJB+zhxfHgS30XaaoJAJGIf4BL5345PjExM
DkNoJpBBk3q8f3TsplJxXQG/FITZxeA11NM+dH1g5MYgNvAfkl8fHrk2iOxw
L43c+n7o2snrFz46//2bJz985s2XD774+6ZHDxUeasvYVw9wST3cvPtI056j
bdkPdhcdP1D+0KHKhw9DVJw4WHp8f/HxA0XHkFtg3uF92Qe79uzvTN/XltbT
knKgKfVAI3HkKrmnfue+uqXA2grdwTeRvOomGtor41rKYvYWRzYUhNXlhddk
B9VkBeIcUJPtX5vlX5flV5fr25jv35jntzffv6kwoKUoqK00pKMstLMirKM8
lAhYd1VGdFeFdVVHdFZHdFWHd1VFdFRFdlREtJdFtBaHtRZBRDTnhdRnBVam
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
wlLfUqgIYF1BgXTWdQysvuWZlfBPxAH58HVcaT8vHzw33Pf9zSufXDz79zPf
vPzZe4+8+kzrY4cKDzan9zaknujOfXBf/qH2/OP7ih86UPrI4XIkrw6VPXiw
8PiB/GP7c4/2Zj8AwOrec7Br18HOjN69qQSPCEKBjCLYhGmVTARx2V2DioEd
Vdtby4EFsY1F0Y0FUY15kXvzwhvzQhpygxtzAxtyfOuzfRryfPYW+DfmA61A
ZPkBsOpzAVsBewuDGvOD9uaFNOYF780PaSoIbSoK31sc3lgc1lAS2lgcvLc4
uKU0pL0spLM8pKsitLcydH9leE9FSHd5YFdxQHN+YH1uWH1eeF1uWE12SOWe
gPJd/kUpXtnxW/OTPIpTveASnm0vj++tTzzYtP1wC4qe+pim0qDy3dvyd7ok
hVhGbTP2d+Z72jA9rJledlwfB6H/RomvHdCK42bGcrPgIgMlW4mnrcTNSupq
Kd1sIXFEk7M4lqhTgmbOp5vwaMY81PtnzKMY8ejoTDEXginlsIQshoBB59Kp
LBqFSyXz8H4WZEKIQWaTSRAcChkC7qAMa3TTkEMh6YK45FHJxJq4hG8IwaEa
sqgGbBqJSafQqRR4kABXhiQGyRCeFTPophy6FZ9uK2BaC9jWIjTPy0EqdJIJ
gV+OMr6zkWCzscDFWOBqJvQwE22zEHtbin0sJX7mMj8Lmb+lEWQ/SyNfc6mP
mWSbsRDC00jgIeND9jQWehkLvKScACNOjJVkzxbLqqAtQKu2ZL/u3PCjjenP
HKt5/ene91458fkbf/jqjee++ttzX7773Bf/eB4UFtZWb/z41d/OfPvez6c/
+wW0FZoYgrTV1Sunr2JOXdfzslj2PkKqamnI1GDfajvZu9r0AbaGsc2RgjDk
xPOh9MaswwuGlkz8+vQd0VeYft/NnOFXbYW8qQlthSt++v3qd/8mv0lb6dOK
uLyHtlqtUO5TW43e5VzSarDqv/l/R1ut3iz7rdrqzm81iOdzDWJ4DarwYlQ9
pBpDB3tBUhHaSgcsQBXaM5qZmJ6dnJ2fwg5/M3OLc1OLC9rbiygvLmoXb0/M
L2rmFsZnkRkFqK+J6bkJ7SzyrICvBE5Nzkxq0UwPEE7T03NoUhXOuphZvolg
Na0lRn7o/ChWOCktl/UQhlbvW/0ntNVKqbW8paXGJu1q5Ms0OTY+QSgs1bLI
UuJQjGuHx9FsLAJYN0YU14Zw3Q8Ncxy6oRuvjGiFBiXckg9fU8ivqBSXRuUX
5AM/Dtz44sblD385++a3nz3zzl+OPPd440P7C4+0Zh3pyD7SlXu0q+DB3sJH
DpVBnDhY8uCBwhMHCh48kHd8f86x3hwA1gM9mUeAWc3pB5vSD+xN02koBKba
pGV5lUxcdtUkdtUmdNcmdNZsb6tAxcDm0pimoujmoqjmwsimgrCmwpC9+YF7
gVB5vnvzfZsK/fcWIFo15PnW5fjWZPlA1OX41Wb71WTigiEIsRygW1B9XlBN
XmBVjn91TkBtbkBjQVBLcXBrMdrw6i4P7akAWoXvKw/ZVxbcURreWhrVUhrT
WhrdVBRZnx9SnRVUscevJM2rKNUzf6dbbqJrUYpHxW7/hoKQ3oa4Q83xxzpS
TnRnHG1P3d+Q2FW9vS4vGOiWErYxwsPYz4nnact0s6R5WNG3WTO8rNnALF8H
kbed2MNG5I7s1kFhydytjUGYOJmIHWRCOwnXRsKyEjHMhDQTPsVUQDUV0k1F
DHMxG8JUxDYWMmV8uoRLE3PpIhZNyIRMhyxg0CCETBqfTuXT0U4WXMKaR8MA
opBYZAMWyQCoBBkClxBRZpIMGIYbGIbrl+6TDejk9QzKeibVgE41pFFJVAqJ
QibRKWj7DL6hBO+ImXEp5jwa6uXgsix4bEvAloBty2fbCFg2AqYNn2HLZ9gL
GA5C1kYxy0nM2iRibxFzXCS8rVK+q0zgZgQhhIWLhA83t4i5m0UcyHDpKuV6
iJg+Yka4KT/N0aTU12lvjGdzknf7nuAjNcl/OFzx1z/2fPjaIyffegZo9eVb
z37+92c/e/e5k++/eOrjV7/7ElcCv3v/wpnPL549dennby7/8t3li2i4FXII
/LXL4gLh0Ye9j64NYeOjoaE7tqt+u7bq12mr5TkdfVhVLeUVwzh0Rao1P711
h3YJi1pipNT9NzOsiYA1Q3n3s70qPVPWFdrnHtrqbrRac9dMF2tWAldoqzU3
5nSX/2qJ716cWgU4WIwQBUCCWXjfaqnFQrlUBkSQAlU1jvwo1EAoglOgqgBV
C7dn5hfnpxGqgFOLk4uLCFWz8+qZOc3UrFo7g8qFU4CqmQnIGFtT2IRiCs36
nZ3BhuozM4St+nKemSNGgSA/QKSttCtOUemjSh9D/1ol8FdjwPtj1XJJkDgs
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
99Zt31cV21Ea3VEQ1VkY21Oa2FGyo708sasqubMysa0ioa0yoQtVCJO6qpF5
YEdtbGdt7L7G7fubEg61xB9ujjm4F4AF8iqkuzp4X00wXoDCCu6oCGwvD2gt
9cd9g/5tRT6t+V4ted7NudsasjzqdntUZbiXp7mVprgVJbqiFsEdrrnxW7Nj
twKkMiKd0iOdUsM3poY5JoduTApx2Bm6cWe4085w5+Qw550RzjsjN+0M35Qc
7ghaLC3SPiPKYVeM0+6YTXtiN4EEg++wJ9YlJ8EtL3FbfqJX/k7v4hS/0l3+
ZXsCICqyAquyg6tzgmtyQ2rRKa3wvUXRzSUxrWVxHVXx3TU79zcmHW7debwr
7aGeXSc60x9oSQQ099TGtJYGN+b71+zxKk9zzYt3TAs1jfeWRm2WBVgLXCVU
Z76hs4DkKCDZcknmIFUYG4wYG2QMMvJEYjOkLLoxi2nKYhozGdgiiW3CYxtz
8XxGAddEyDMV883EAnOpwEwqtJIJbSU8B7QphvbFHMRsRxHbScx0FDEcBVQn
HsmRa7iRY+DIMXCCBY9sx6fY8sg2XBKgyoJjYMkxsGCvt2BDNjBnboCAhSXH
0JJlaM2g2DJpdiyaDYtqzaZZs2hWbDqyFkQFTLY1hJBjLeLaCdkuPMMgGS3G
QphgLUuxMYOIN5HGSMXx5qYJNpa73Tc3JW9/uLr4jRMHPnrlyVMfvHju67eB
WT99+sa5z97+9p3Xvv7bq9++89dTb7/23Xtv/Xzqo+tnv+679OPgtXODAxcJ
Cwtirj3RuI7ng/TJhwFAgyOoEjiALkfuGHmvP0RYvjxTGI1EhP/nIxf0lYpJ
tXyUVX8fX9e1rv9RfJ8f9XdTRvfoHLhbKW/Fh79qlautTkbpayj9PazVL77/
N7bmW1XeaWmovLODXaXXdkL8NHS9/Us/WxXasRpVjaiV8Hk0MqaQq+SDo/Ih
lXx4FMXQqGJ4TDk0phpSw1fBtx0dUKr7leqBUc3g2Pjw2MSIelI+qhkaGx8Z
145qZzTYSQLNPAQBpV28Pbm4OLlwe2Ie2c9Ozt9WzyyotLPKyRnF+IxcQ+Rp
5fiMGnEKQQrZAs7e1s4sopmJeD0zs4CO+k7PT01BnsUNFUvbTDN6eXoGL9CE
eu3U9CTKS4d8cdcftqtF6gk+uifxB/jkcq1tXLPaUP3+d6zWPAi8Ziy/4Ldo
qztVlv6L9bTVuO5yXHdv2Q0DrrWYwXg/a+mBfyBE0+A40TQIzIIAZinRVIJ+
ufLWiOKGXHlToQIlNazA4kouB1rB7yYu/47eGpZfl6uuAbDkqotDivP9wz/1
DX574/onl3/52+nvXvrso8fefG3fs09UPPZAzrHutEPNib11CQdqEw5VJx2o
2NFZGNNRHA+06qhIai+PbymNay2Lba+I66za3lm9vb0mpq0qur06uqsutrsh
tqcx9mBTzMGGyP314bgkGEooLEBVZ2VQR0VAe7l/Wxmgyret1K+10Lst36s1
f4lWtXvccT3QvTTFFW1g7XAFWuUluObEuewB3EQ7g7YCkZUStnFniENisH1i
iMMOiOCNEAnBG7cHO8ajhX1ikG1SiG1ymF0KoC3CKS0SvhBJsF3RLnvi3DK3
u2Vv98xJ2Jaf5FOY4luU6gMBaqtsV2D57qCKPcFlu9GiOiesNi+iPj9qb1Fs
cykqinbWxPY2Jh1pTTvalv5AW8oDramQjzQlHmyI662O6aoIbysJbMj1rtnl
WRLnmhu2KWWbdewW47CNYl9LtqsRzUlMshOSrHmGZmxDU5aBCctQRl9vzKCY
MWlG6NATGTWN02kiGkVIJYvpVBEdTXIUA9Q4LCm2HDTjMsw5TNShwWNY8pjW
PLoNyjRrLsWaQ7Jmk2zYhjYcEFMAR4o1j2zNQ9mKR7HiorUVl2TBNjRnGeAw
BFRZwctYZBs6yY5BsWdS7JhkOybFhkGyYZBt2TQbNtWaQ7HmUm14NFsB3YFH
dReQQozp263FOx1M0+wtdlpbbDc2CuFyQ/mCEAE/yli6x92lOSn26Zbqt//w
wGfvPH3my9d/+PjVHz7489dvPv/Bs4+99eixPx8/+NZTj3z66vOnP3336plT
/Zd+HLixRCt80uoG1lZ9aArVMFHZ+3XE/AjqY7+DVnI8d17fkWmFtiLGUem3
+a04CKxcHpi4gk06vfNvaivdd9an1f1rq7t5sOtLqv8xWq14ezr1t7r2qL8J
OKaUEwHAUiFUIUipVSNjyuExxfAoZAhU8RtUa4ZHxwfHCFSNA6Tk6gnFuFY1
MTWGimyz2tn5aQSZxdmphQU0wgM01MwibqJAm1PKiVnA04h6anhMCwELCKAV
llR4AP3c4sz84gyCFLJcn8WzqGamCZckJKLw0SmtrtlvzdA3ptDvACQy0eaN
zytpUJVs4l6G6v+ege2aY0R+60OzYqHXE3inoFr10NFrcvlBwAp3lUziiugE
VpoaHOOEzhpTY7Om0T7F6C3Ux64YHBkZXgo58SsJ/8jpGxq5qlBdU45dVamv
qdRXlWOXlaM/Dw19NzjwVf/NT69c+PsP37zw4TsPvvVK99OPlD3Uk9lTn9BZ
EdVdEbsPqFQS3V0e31mF6oFt5bGtZTFt5XFAq47KuPaquLaKqLaKSMjtVdGd
NVH76qMONsbsrwdagbyKwPXAsO7qpT0s3CgY2FaG5BXyFSzybSvwackDeeXV
mO1Zt8ejdrdnZbpHWapbcRIAy61op0dhknv+jq1ZcVtAH4G2AgDtDLHfEWSX
EGiLwy4+0HZ7oE2cv22sn220n3W0r2Wcv+X2AMuEIJvEELvEYIfEEPukkI2A
tuQwp9SITWmRW9KiXDKi3TLjPLITPHJ2bIPIS/IuSCbg5QcLiOI0/9KMwLJd
QZWZoTU5EfUFkXuLw1vLY7uq4/fVJuyvTzq4F4CVdqJ914Ot6cfbYJH2YGvq
0aadDzQk9hZHd+WEN2UEViV6FUZvTfezi3c3DXMSB9jxt1kwXWQUR5GhHX+9
Ffu/LFkbLJgkUwrJhLzBmGJghK2QJBAk1JInphlKaBQpgyZl0mXISQmCZsSk
G6P6Ic2URTNj0VGfBtEdQSebMIjGP1TEs+RSLLk0Sy7Vmk+3FTJshEwbAcOK
RyNa6634dLi0E7EcBMyNbKoTh+bMpW3iUSE7c6mOHPJGDtmBTbLnGNixN0DY
cw0c2Bs8+AahJowddtJUR4sMR6tkG/NYqSSIzQnmcANYjAAuc7ulcYGP29HC
PS8fa/v7n098/cFzX7/z3Jev/f7txw891VpzrDyvJ3/XU11733n60W/ff/3K
mS/7r58ZWOpdv4y1FdG4fgu01TKtkLZa8lRHboF3GtguNwr+a9pKJ6/u1hC4
Zu3u/lmzJrx+k7a6R0OF/oGv1XtJ/6lKoP5PQHXndpv+vwF0kkr/jpIYOo+7
/kZHRwidRZQE1WPysdERIuAmGrU8NqQZBzE1pJkc0UzKNZNK0FPj2jEtHpU4
Oz87vzA/v4CsaOduL07NL4zPgphaHEWQmgMlBWAaGtMOjU5CDKomIGNaTasm
ZlHRb4ZA1e3Zhduzc7dn0UTghZmZ2zPTi4SNEjrzi2ClXdGIvjr029H1GypW
jAK5Tx79b9NqFb3um1b6thh3AouYNanBqEK0Qo4gsxNE3+ASs+CfJWMDyjHi
8MigXI4CDcZC808h+pC2Ul5XqK4rR2+oINQ3VGNXhod+Gh46PTT4Q3/fqetX
Pjx/+q/fn/rTe28/8JfnW588Wni4Jbm7Jq6rKnZfDbIE7KqM6wBIlUV3lMd0
VsTCZVdVTEdlTDueqNhWFgHM6qyM3FcdhRotEKd0tApf6rioDOkoD2ovC2wr
DWgt8Ue50Lc136ctH4DlszfHuyHLqz7Tq3rXtgoAVop7SbJ7cbIHAKsg0S0n
3iUzdvPuKKe0MIedwQApm4QA2x0YWJhWtnH+NrH+NlE+1tE+VjH+lhBxAbbx
Qbbbg+zQs4F2sf7wMruEoI3xwU4JwY5JYZtTI1x3xbjujt26J841K949K36J
XNkJnhD5O70JeJWkg9QKAWZV54bV5Yc3FEY0FkY2l0a1l8d1V+84UL/zUEPy
A82px1szTrTteqhj92MdmQ/XJ5+oSXqwJvFoRcKB4piWzODqZK+CmC2ZIfbJ
PhZxWyWhTjx/G7qXOdnViLpJSHfgkG0ZG2zoBha0Dea09abk9SbkdSaU9cZU
QBimGNVQis5DUcQ0pLkgg/iSMGgSOk1Mp4AcE1HRYGI0lZhBlwLC2HRzNtWC
TbPiMmz4LDshB4WIMNxAYS/mOkoFTkaiLUYCDynXQ8rzlPG2GfG2GfO9TPie
Rmx3McNVRNnMIzlx1zuyf7eR9TtH5v91464LNqYn2svSHS0znKyTrc1ipaIA
BoOIQDY9QipIdrBs2h7++/byN5499Ombj5/865MfPn302baq7vT4xriwzvQd
T3fWf/T8k6c/ffPauZN9N8/0DZzDR4MJP1vCcAlN+B3WaSs9WhFnhH/tpsDM
0ifXb6WVPrPWBNa/pq10hbLRO0/46pfO7k0rfUWjj6f7afzQ6a/Rf89k425/
WdWq0Y0rQkV0UKBRU0NjwCwVUk8ISarB0VF0R6ORq9UjGrVcox5RowH08G6H
1UhMjWi0SiymxvGMDu3swhxAan5hcWERu6XPL87O356cWdBML4xNzY1OzCg0
2pFRdPIKhJlcPTkyhkKu1irH0Rh6zdQ8rgESqEIZVBUaRg/CCkTazPyyAy2y
oFjBoDVDn0c6N3Xds3Dzf51W91H6u+vL/gVttQJYmFlEk4laD1hIYeGbo7h1
UIn+ZQL/xcaWemzw0RLs5ImPWI4oro8oUbVwOW4oRm8oVYAw5No0PHx2aODb
W9c/vXb5H2e+f/m7k898/M7xPz+z95FD2fubEztrorur47oBTKWRbaURHWWR
neVRSHmBmKqM7gBtVRbRWhLWXhbRUQ5PhXdXhWMxRXCKWIehLouqkPaKoLby
wNaygJZS/1bQVoV+bQW+7QU+rfm+Tbk+jdk+DVnetZne1bu9KtI9y1I9S1I8
AFggr/IStmbHbd4T5ZweujEpyGZHkE0SqvjZ7QjGOivIPh5Tabu/XZy/XWyg
TUyATWygLQQsooFifjaRvtaRviC+bKN87aJ9HWIDnBJCNieHb04NdwbBlR61
ZVfM1t2xrnvi3CBDALCAXLloh8unKNUfmFWyK6h8d3BlZkhVVmhtbgQaWFy2
vb08vrsq8WBdyqGG1Aea0h9s3fNYR9YTbbufat39h/Y9T7Xtfrwp7XjNjkNl
MV15oS2Z/vWp28oTNhdGO2QFW6T7Gid6mEY7mwTbirxN2e4S2mYByZGzwZ65
3oG1wY65wZq+3pKyzpz0/0wN/8uItE6KrGhJQip2+aOQBGQSn0wSoMohGi6M
BhDTqAIGXYhsbOnGdKopA4DFsOKyiBZ6OwHPXsS3RVmwUSJyNpJuMpFtNZV6
m0l9zSX+lrIgG+NgW+MQe+MQOyN/C5GvGWebjO4mMNzKW7+F9zsX7n958taF
mzCS7GVpTua7HG2SbcziZGJfKsmHYuhPp4ZwmZESfoK5tNzf45HG/LefO/TZ
6499+dqj7z/e82RFdmOET32o95Plue8/cvjcP1678v0HNy+dunHzx2u3ztzq
WxprBdqK2LpCJcFhLK9GloZVEZXA5cGLazdd3I1WKyqBa2qrNSl2N6GxWm7c
TVutxtAKiaSPgDULa6t5cW+a6F/e7Q38JjCtWOt+jKo7N+x05sDLIMMtK4hW
g6NoMQiQGhtDl2r18Pj4iEYzrNGMjI/LcR5BQ9Un5OMYVXj0PB7tgTB1e2Hh
Nsgq4NTc3OL09KJ2apE42wuhGtcq1JMQ8rEJpWZydGIK7hDnfzVTc8izYmZB
O4f8AAFVc4u3gXQgrPAYesAWGkM/PT0/PT2HbJOWbdL/BVqteamPm/sH0z0b
1P+tLot7MGuFqeAK6fSbgAX/i80uJvDoyQnUMzmla5JU44ZJjR6z5Lg2CP+3
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
yzJpZenU8nQaYFZZGrUyAyKsKCGyMC58TTy+JIm0JpFYpCDmy8IAqrKjg7JH
aJUdHZwZvSpNGpAq8U+V+KUAVEGpFZAshB1GYGw7spkFDRhMMPrFsfzkTJyM
gY2l+0bRMFIaBnrdKT4iireI7CMkI+t7ZHAFJ6X5R9ECJZQAERknIPpwIl3Z
+JXsCECrlYzwlSizGOBmuBsz3IMZ7g7HsOGRFebODvfkRHhxIjzBhBXmiW6K
8SIxnAgMNwJMcAKCP5/gzyX6cwl+HDyOjcdxwJzkzyH4sSKxPKK/kLpKTA8W
00NEtGARJUhCCRKRAgV4f14kFjwU+MGiaQEJvFDArIJ4WmkatzpXvLYwekNx
7PpS+cZyxeaqhC01CVtrk7Y3pOxqSt3TnH5gk/KlzTkvb85+qUW5f2MWGF/e
nPPSpryXN+W8tCFr37q03WuTd9YptlfHbK2QbikXvVjK3VjEaMol1WeE1yUH
Vcf41Eq9aqJ86mT+61OJu9aIX2lIe21j/t+2lvxjX/W7rzZ98reWr97fffyL
QyeO/u3EN+/8+O17Px//8NSJT3459eWV88dvXj5558a5tlvnO1ovdbRebr9z
ufXWxVvXz9+4cvrm1TO3b54DF3u7bvbBLlcAVTc7OwGtbnV2AWC1dve2wREA
q6+jp68dbgwhKeu9KvBE7byHmOHqhl1oka2rxzYEqsa1x0Jv/qa2GsOp8Xee
CInUf4Apved+MKkQkxWco4YrMKKGYb1eDe8MT+92wEIP8BogjAxQOt1Ldwew
g6oK3q1db+w0mHrAe13UygXDS2GAua2/H4BqwGEftNvvWu1DRvtdk+OuEULq
LtIJcVBnHdCY7GqTHW3qAWll7Nca+3UGq8FoM5r6zVCPDcAOi/a79oGhgUGY
DeiAIYEwOmkApicNIZm0g3YbPFFsswyAORgtZgcYkXJYzcgI96iGrRRwtMBe
i2C0mI3W3zpaZUayKR5GkEes5jnf4T9kVv8f0lbOV52+1/AFRGSNRbnz/4Xh
vi3I2qDVNhzZBJ51MGnQAP5MwJ9kO+w+3NcGqg/GNHWo1X0awCrwH/xDQ/+C
YCMStQ4JyNXfVGmvdKt+7eo93wWk1vV/3fz1k4s/v3362F+Pf77/i7c2f/CX
htf2FB1sSdtWLd2wmtWUTwPAasyjVStpgFOV2bAqlPSKTBri0KBUgnf18MgV
qSwJvyY+DFRJQuSa+MgiBex+mBMbnBsTAiovFua058SGZkXDXKZ0CRBW/qmi
gDQxDGxPEgYgme3YOA5GzvKVsXwRozsuju0Hje5IXlM0wzcKMstHSvWWUBGv
O9lbRPIWk3wkFIyUgo2i+UnIfiISVkj05hHceEQ3Lt6Vi3fjRrpxIlzZ4WgB
NnmwEELBArQKXckMdYMXIbncmKHuzGAPVqgnO8wLjKxQL064DyfClxsBycUK
x7LCMcwwX0aoD5iwI+BNMAcToLD4xAABKRCMoADgOOEYVqgPI9iTEezOCvHg
hHmISeCfBv7VodmxxKIkenkGt1YpbCiQNq6ObiqOWbcGkCu2pVKxrS55z7qM
A5uy9m+EnNrTnLarKWVPc+re9Rl7m5X7mjMPrM/Y35y+tyltb1Py7ob4XbWy
3bWxu2ujdlVLdlaItpXztpWwt+VRtueRt+bRt+Yzd5WIDzUkv74p7509VR8c
XPfpXzcfeWvn1+/vO/bpoR++AsLq7z98/fZP331w+vuPT//0z19OH7l07tj1
iz/eunbmzs1f2lovtrdevnPz4o2r565cPHXu1Le/nP7u1/M/3Lh6BiCsq/M6
6g/s6roDaNUNDwtDYTWsrRADw2h+wr1DqWonYfVY5gpnbTXex/4IbfUwGP13
tNXDiTYRbTXSXgSUsVtv7DIgo87YbTD2IK30Rh8KpZsGKilTr9HcY7KowHtd
q02PhGyb7XZoKIdBRjYgaiA7wGi0DAANBbv3mocb+I42mlcBYCEjuKizDhqg
mIIbT1bbgK1/sN+OCChUQzmcCr0JVBXs9DFsWR81rlugc6L//kJpNXYr6jfX
8X6vTeL/B201cWH1H9ZWE/n4DVqNnteGm1lwZdeIxF8A2aUbjRkEBfuPQGB1
jAKrB4Y1wTPFoNDdVQ2yZK3RtKs0rWptK+z2qL2t0t5Qa2/0dZ9vv3Gs7cY3
bdeOtl756vr5f1768e2zx/7v5JcHj7734nuHq17dqty1Vr6xTNBYxKrLY1Rk
08uzaOVKamU2tTqXXpvLqM4ig6pRUqqzCFXp+IrUiLKU8LKkCMCsorjQfNj3
KigvNjhfFlogCy+Qh+fHhGdHhyolwRniVRmiwHRxYIYkJFUUlCKEHUagsEIS
BVHHYAIPh7gHcUjMIC6WjsS5U32iad5RFC8JxVNCBuUtpXhLyeAKJoqChUeG
4VEsbyHJA5SA6C5ANqd4gFlw3c+NEwZGD3ao+0h5MEJXMEIgsEAxQlzpQa70
VW60Va7UwJW0VW70IHdmCGQWO8ybEeJFC/amBXtRgzxBgQk9BN4EtEKBxYnE
cfF+YAQ1QitvZogXE6LKixvuxY/0BFSN5wBSh+XIiKsBsFI51TmiunxxbZ6o
Nk/cUChdXyoDCmvn2rTd69L3NGfsXpe2Y23y1rr4bfUJ2+uTdjSk7mxIBapq
V0PyzvpEUDtq43ZUR++oitpZJd1RLd5VKd5ZKdpVIThQKX65RvpybezLdYrD
jamvb8p/c0f5+wfWfvLnTV+8sePr9/d/98nB7z975cSXr53419+BtgLC6syJ
T86e/Oz8mS8vnv32yoXvb149DWjVfudi251Lt69fuHrp9MXzP/14/IuTP3x5
+tTXl379CVxsb4MNRLq6bnV33+6GEUytKKfQckaVc86P6v6Oin9gjafVI843
/VGlGdcx5HGdfvdpK4Q+ztoK3EQUFvimeriLrYeQguPIGmCvbthEoTGatCMO
ZI3FqgGvG2gzCOSQLzzzBI15NihtrFDmQKWjNyHqyXivN6La1K8x27UWwCwH
MhkAqDL2D8LcCQiju4h3AmatI/52wKa7tn7Y5qMfKRjuBybIN3PmFNrXFzYD
hHiCx6hGRivyomd8DFqBV86Jbzz9Xnj9IWJqTP0/g4FyMQ==
                    "], {{0, 442}, {570, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {570, 442}, 
                    PlotRange -> {{0, 570}, {0, 442}}], TraditionalForm]], 
                 EdgeForm[{Thickness[Large], Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2] + (1/3) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{241.7606933090101, 458.2393066909899}, {
                   58.760693309010094`, 196.2393066909899}}]}, 
                {Texture[
                  FormBox[
                   GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzt3UuONLlxwPGWtdHSV/AtjG+npbcyfAAJnhK0GQMjAYJXfYU+Td/CJ/gW
dYQ6Qrur69H5YjIi+Aoy/z/AhmamOouPZBQzkxn8t7/8z59O//Ly8vL3P3z+
vz/9+Z9//O23P//vf/7r5z/8169//9tff/3lv//j13/88tdffvv3v/z+81/+
3+9eXv72+X/X//0BAAAAAAAAAAD68n56mfrx9rN1iXrlsyV/vv1wVayM5Xk0
+Ok9ZwHz+ypnSrtfD+Cskve2v5fqeepv1dJh6TN7ntOWaipasqJHlW7F+g5t
rYqVszzzFnfreVaZ2/x6hNbxfuk7/t/bf/Uv5saPHtYTUtuSlSxL8f3PbU7F
jOXxP+HINLu6VtRb4PhY/gjET/iv/+63s7K4n5PK3tK2ZCWLYrUOHfnK4z9y
PKRNQL/+2n8lJVP2bqpi9miDtMGVdPFTipN49mQvj8vm3ZYSOr6q6XDKsSIa
NN3UxizDD1qe8JNV+iV3XmnlcdjAIQmh41ZL39Fx8mggWtDku8XeJZ2Wmpas
xVu0z1CeRzM7qlWIPXTc/tLNabRPVM2uamSQ5RfNyyOWxfPiiTYdmKk8Rwgd
tz/soIY3kqvP+2eGjR2Zb3a0bKjwQG1TrGzl6Sd0TJ6z6Fr8/odFa2j/jvXD
BMkt7xp1askSOmwtWVz+0GF7/pS9PLLQsXzsVdfy4azubIiVfevoxqeChv7c
mEp99+1Oc1tPn2lt6/amqp0NocPakv1JCx25i7FTjmmU6rEHdm7Wr6LK/PQW
13bSRNZlNY+/k/5Q2h5BGOuXSt/OGWYdLqYcRTgPHZvTmtaFtQg+fQ78/s4q
Lq5wWm8a1rxZLjSXfVondJja2Xqvw9u7Ih8bo2jifD4bjpkYOnIVKXoKTjuj
fkfsV1NS01DomJ1km9fHVWpsrd1z5EnH/+1p3Ok0qV2V0GFrZ9tyo8RTpYQS
RfIROuJd1HvoCI2x2ak7+W+dhA7l2HqsXg/VuhxjO5suyBJPlRJed10uF8Mx
E0NHpiLFXzRqGzr2qympafjneXst3XxWX7zG1tqpQsf3yvX6ocPazpY78yXG
6fY9+i2FmlNegJrDU7LgQRU6mrfzmm5mv6hA4G8cVFOxhnj62p8qdBSspqid
XSxead7X/kKH9Ger89ChWRUkixvrD7aopjR0LBYcuwgd4nb2sOqoeV/7Cx1f
BIkROg8dwlmH7g6Hg2rKQsfqBf3WoUPTzp2kkanPx8PZ+N2otvc60kVDh7fX
GWUkk8aNl/Nb3OtYfrWonTt6LbM6H6EjHjuGDh39vkUmy+oRXC9ROXSo27mj
XBD1OQsdTtd1pBMtCdvhtM6xftt7U6FuDU3tzKRjRyehw2eCaY3AvEo6tlTT
63rtE5stugkdtnYmdOxwHjr2fytal1ojsEAgZ+hIeYfFKHb6EDpcyfoLnCF0
5CiPg8dfCqZL4PJ36s35ALaOIOsOY6Ua3iZVsYcOd2+xuNviIVd5egodxhFa
JbfF6jGo8k+fdZLti2Gt09ihw9KSpa0WFjXOP5SvPP2Ejs+Snt5MN95drEoM
Wnad6GVxa+KzoUOHqSWLW14wNw4d+crTyUXlZzGvJTQ+s7v9mdcqLvpScsKb
KzR06LC0ZH3enjuby9NF6Pj8jb2Vz1zNfrYuEf0ImKvTS+jIMRlu/fO+ydt4
SymP/y2crlcqy8mV7X0rv3W8kT7j7ScQWqWelQ6XCHvb4iG9PN7C4ML9SuX7
n8yVdbpv5N3iNbXoR12cfcVY3rif/a3fjnbwiGUupTxOVphsmUw4vqRdJ14r
6nHI6fbF8B0CszBHDm87nmzydiGVVB6n7yhGlzCbLlu81VKX3N5r+MvJejp6
2/FkWqjN1IotfgEKlOd2AFdnZf7QcTuoq0qqTvj30+DzjaSHYR5Dh7ctHryV
pxpvD7aACG9bPHgrTy2EDnTI2+J4b+WpgdABAAAAQMz3i2UWzzXvVf/UmSrv
GuPAhltjMF+6arBcwtazAyxaRRvDnVqy9WL71fa45szKtKJ7trZilJbwZvaE
pNHcMKEMfl8VsMU02aCXbbQ5yJDRvmU3b/h+s837NpvrN7pjkFaGrzPDV+iY
/uJZ3soXbGn04+0tNp7GiR3KX4flGeE7S0qnVou+G6wCTy2D2xe/rfNswZZv
148I6j3K/VLlGbFqeIe/Lt0jdBRkCR3xOcfzBqig3tcSjDBiEs9Kv5e0A/Hw
6pm2DCOFjth77NMnL5J6D/JefNppOUgjeOYhOBuH2yChI3Jfdf7IVlLvQR4+
2UKHwwRd4/FwH8lchnFCx/4fLJdqiOrttnFUclyw9N8K7mS7Hk6YFyaVIT46
Gl3yq0PH7t28nZwhsbTDhvstdUbaqk6BL00e+wSP7EI5SaxpiVPSGVvLsB86
GmY81W5RUuL2sHrM1HoleP0Mfif3uK4WG+GS0JHdAKEjcFYsj1o1dKyrJDlr
HYSOWsmytxfvhMOW5rprq8qDPp2VbaPrv96NbmTHzgrHuZIXlBcKitAhrPyt
B9/K54cNxYjgFFF37bc4Ez3cySuD0JH6rbtfS+iQVf75MKZGaunAkuHw1aX2
vtH8LkoHnd+fnWB1Pp9VhzKHjoQyCB4+1g0dKe0ZDR2Gg0tDx6TzGmal390v
SXF+ZTyrB5cwb3kNu1wuhb40Uxlk1/HC0JGpOvb2FLy8Yzi4LHTMRqUodJSY
Ksc2WpPft0noBTTQ5IIlPpEd9oJFRBA6ljO3JrOO6IMwD+sV3eFeR4roTxGh
I3oXef6fa4cOUQeNsbQtN0JHktjPEaEjssxsvTtTtdAhrvGgD1dx0zJ07Jx+
/YSOEuuW9o4ZuMdcJ3SoLkBY0eVUplRsSaEjoQyy1aRN058JKyR9F1bRUHsj
VDTdLdJs8W9OXwzqIffd0DKmYjOHjsQybA+44NlZ9bdL9wse+yU2NJThHkGF
WUfx0OEh993gPKRiSy2D2ztosjSAU/vR19JQhnjecF1HiCVLWOMEVsPzkIot
tQxOQ4c8DeDsb2LXXrqGsuTrIHTAwMPTc20ZXIYOTRrACVV6AEFDxfMVbv+N
sxYlX4d7HlKxqcvgL3Ro0wDO/1T3struR0050QcLHR5+DQfW+jFEUhm8hQ59
GsDFX0daQN5QpsjhUUqCQaJGHR6mdtoy+PpZMaUBXB5BVhvBihY3zZLGluV1
kMp3o8Pg4WnaYUsDuD6G7MOxBV9OGiWZsodzJrDCNg+p2DKUwcMtmhBTXNuc
L+gaapwph75/CR3FeUjFlqcMlicJdRinRD9XW92rGmp52dSzQTaEGI2HVGy5
yuAzfNivpn6+neaNIG6o95O/drDhloVnHlKxeShDIXlvxAzcUAAAAAAAAAAA
AAAAAAAAAABQGVmv5e5txTJ2wOebb67xPirgehS4LZw+81amrb4wDg/7ZCWU
wVeCwTmHKYKfErZ5KLE7LnrjYZ+stDK43cpYv4VTVZqQ62GrL7jiYbOb1DJ4
Sk06YdnCqSpNM3vY6guuEDoKMW7hVBObmyCjDvOhOxycCVs4VZTQ157zSKMB
Dz8lhjJ4G5xpWzjVYwgdHrb6gise7nolpTP2MzjTt3CqJfmCxWe1UE22pNMJ
s9ikMsQHZ8W82jm2cMpdhMAXpw1/gsfB5dzsxho6UsuwHzoeA6nVlKrqrGP9
YPvRuBvVVwx+D1t9wZcBQkfgHF4e9QChY3tFzHMSst1EkqJ52OoLG0JDx8ep
L9fotnvsHL437/ihIxQjgvMuxS1pD1t9YYXQkfqtu197mNARWocbvmRTPc5i
9yjM7ASr8/msOpQ5dCSUQfByWd3QkbE9c3n8NIV2tRY1jcN6IYOEectr2OVy
KfSlmcogu1MnDB2ZqmNvz3xl2DxmqJmEtzuT6gXsanLBEp9zN75gaSn6dMnD
IkDYca8jRfRX85ihQ1Rrv8vVIELoSBL75Txc6BAn0+D5KnxoGTp2RsqRQofh
kQmTDthlShyXFDoSyiBbTVo3drTIxRefvSauB/WQTQ5uZEwcZw4diWXYDh3B
gVR8ILfKxVc2dHjIJgdHPCSOSy2Ds5t9HppURJ0lrHFKKLjiIXFcahmchQ4P
TSpC6EBGHh70a8vgLHQseWjSTeTrQD4eEsepy+A7dHho0m3m4e82GKI+D4nj
zGXwGTo8NOk+c4JBtzVCQx4motoyOP8R9NCkm5TtVjHVGrrk4UwfYTeFCQ9N
ukHTbDlTQmEEHhLHZSiDp/sJHppURNVohA7MeEgcl6cMbra699CkEm530UYn
PCSOy1UGJ+HDQ5Pu464FsvCQOM5DGTIarDoAAAAAAAAAAAAAAAAAAAAAMKRW
Obrv38tic6BHjd984zVUoEfZR+789bWJ3e3i9QlVY4cFfPOwq1dCGfInGAyE
jtjGttII0GqPJyAnD7t6pZUhfyadzyIsv37jXy3+s7gM3ezxBIR52JontQw1
UpO+n/aHtno7pB72eALCCB0SkSnHR4btkIgc6JuHDLyWpMYli/xZnujATmg3
TzmZARMPP3+GMhQOHZ+Hjx/cvB0Slyromoc7dUnpjIuFDsmU44P9W3FE2fJj
J8y8k8pQMnSIphwfqcOf4IHu5Nyaxxo6UstQLnQIpxwfqsHfzR5PwI4BQke5
cSedctw/KytEL3s8oQOhoZM+mOtq9Kig1LiTTznun5aWwv8eT+gEoSP1Wwt8
rfqFOtWjIfZ4Qvd2gtX5fFYdyhw6EspQ5J1Va3mkDZCxzYEkCfOW17DL5VLo
SzOVYfcuR4s2Ed52sbc5MKImFywelrF5KwmOgnsdKbw82KzxEh4wQ+hI4uPX
nuergFXL0NH6995FIYDKMiW7SwodCWUodamgKZI6dHjIzAYkyJjszhw6EstQ
InRoi6QLHR4yswFJPCS7Sy1DgdChLpI6S1jj9EpAIg/J7lLLUCB0qItE6MDB
eXhcoS1Dhcei0SKRrwPH5iHZnboM5UNHvEjm4e8hVgNmHpLdmctQNF+HsEjm
BINEDYzBw+RZW4YKP9zRIinLkC0zG+BGh8GjxhrwSJE0RciZXglow0Oyuwxl
yH2LRl0kVQEIHeieh2R3ecqQdat7bZHY6B7H4yHZXa4yZAwf8iJx1wKH5SHZ
nYcy+C8SAAAAAAAAAAAAAAAAAAAAAODp/VQ/lTJry4G+/Xz70WIYf0YP3nYF
unV9zSzjEJ6/tTax/o7M3wwcTsOdyLIP30Do2K4VwQMwa7oTWdYMPV8+a7A8
4Ma/mvwnYgdg0HY7oSo3K99Pe9/B/VLAomnoyD/nWNuZcjz+O7EDSFY7chQe
tYKHNx52rQL6VncnsgrJgCXPX8lJDNg1SGdcPk4J14vU2MUFGFC2q33d1L/4
pg3SJV+1d48ARpBzOyFV6Ch9U0W+RNXDdndAb0YNHYpV5oQO9Co0fNMHc12G
3RMLDVjVWzHsOI9eETryl0NxYEIHYLATrM7ns+pQHkKHoTqEDhxXwrzlNexy
uRT60r2XZdLmYIbqEDqAtjzMOgwIHegV9zqaInSgV4SOpggdQFue1nUo+CkJ
0JnZtMc+hgwL0Ys9nFVUp+5Lf8Ag5i+OJl1G6EJHmRFrqA6vvwF6y3e/Kl74
l0iUYakOCTsAvdVvf733SEskyjBUh3wdQAY1L/wr5PYTVKdGlkNgdHUn78Vj
h6A65EQHEjx3L6m/C0uJb5RXh8gBZFF7kUPhvQxi1WErBSCXysGj9M/+XnWY
cgBGGw8gqi+uzPjLr6sOUw7AaGtcNcjym2ure1V12OgeSLB4BtHsVbCfb6cC
SdnD1Xk/ETeANPO94bufwg9WHQAAAAAAAAAAAAAAAAAAAABwabZ2m3c7AAjM
Xi1lJzQAEqt30tkLDUDURqAgdgCI2doerUGuHwB92bq3QegAELUIHo+HLVyw
AIiYPpv98fbOxu8A1GruHAlgEDxeAaC29bwFgFe3ERtT9iLifr+DKxWgH41D
xz1qMNkAILcTrM7nc+vSASgpYd7yGna5XOpXBQAAFOThNimA7hA6AADAQcym
PTykBRD3tarjGS5YTwpAYpmcg+SkAARWL8qS6AeAHu/cA9C7zjkIHACEnonC
iBsADMj1A8CE4AEgZuN5CqEDQMRWmODpLICoxSMVVoQBEJpuw0LYAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAgr3meH5KSAohZJxN87HhPpjAAAfcwsZhk
PCYhBA/Av8eP/b68ozkUIx5l4boFcK9F6AjMOh7/mlkHAAUiB3AkeeYt94sY
rlUACEzjDmED6EeTex27JSGCAB3wEzo+uNsBwOS5vJSZBwAFLloAhOw8TCF0
AAjYuSohcgAICqwl5R0WAPs2ggdxA4DI6rEwlykAAAAAAAAAAAAAAAAAAAAA
AADYcH0PZfPVk+V2sp7eavt6eSZYoGCVDiTeBvttWE2FrnRS07Fcw8NWmz7C
xq3Xvt9y89D+z5C2V5hjR49Qt84+4KBDK3Slk5qO5topmy36PeG49dn3P7fs
ANU06OvDxwwewW79cDOVrNCVTmo6pK+5RKBH5rMOJ6Hj7jkHipRlr34DE1Vb
2oaFVehKJzUdyVc0EDbnchLSlvhk0FRxFMI6OxlQFbrSSU0HcosGgkjg71pR
fjIc7/aYtFudDKgKXemkpuO4NWjkFHP6q604GUTVHIi4vk4GVIWudFLTYdza
M3Zbe1vzgag4GQ62gXa8W+efbD6gKnSlk5qO4t4N4cbc24qy9Tic3DmPFiVa
0aHIa6tpwxzfl6EYxi/LU9PBLB8+ydt18fhkg8/QsVHjWKWtO+BOv6puhbcq
KSt+vFsDh7eN/smR9H9eoSvz1XQkq1acDfXoqX6gXZZsVZ2fddWaaTX2deWo
3K2Tc67KeDzQWVvKpMsmrTg7y/a78kgbSj8aS3NyL6dcdZopMM+ZFUa2QLRa
t1qndEnfdvh5g930XJq2YsZz7GXX+XzOWyMJa5GerSIdT7enSqfTJBBXGYqh
0D+feOz1qyR0eOjZOl3poabeTM8lW+iI9oHDZrcWSflT/FjyPBuw9UNHaDYp
eyY2aOjQdaWHmvqzPXOT3+6InmOvuy6XS87ayFiLpDrfvpc71w8dobV386un
1NDhoWerdKWLmnYidB2z99FyY2L77vaWwuNSsRZ2+tKYKnQUrOzi0Gm/CIla
96m/Zc0jCF3ERD5M6Jh/7vszLkKHJm5U6NbWfUroyEh+HTzDrGPzU9OStA4d
lp5l1gGxzc5UvDV5gIezkgvkjTe6W9zrWH61doSM3q1HWlNQk6eLYk/i59tm
XpxGoSPpbb3Ru5XQUcz8XvxO+x6pD2LriPZW3Kunc0mE1wPhUozerSwJK0Y+
8TjQkt5YVd2EDmlBdkpRu1sr33w40FlbSHheqp52HKATYmulRwodlbu10Tss
TDqM9i7C1etJI+fY4mz20GfqIslqutLwNmkCWWVzpftNfJ29QleS2HhqZ82o
PHIIch/M+8lFuhRLkawZJfoMHfHaZt4jw5p1vkJXet4NpJHQNFHx5uz3p0O9
vlpe1D6vsa1I8rRZoW/rKXREM2n52COjRlf6qKk3j1YIvV4pOtNvfxFsxuVl
c/vQYSpSpJbxL+ssdEQrvGjERgOqRlf6qKlLG7fVdI2i2trC4YM/42Iv5cF9
1VlAU2UHPwjzcpToyvk39NWZXskvVDfmOa2JinTIPZyE3epnWXfprvRT04Hs
bTD4/Qln4VpcJOs9vO7FunXxql87xbvSTU0HdO08cSYLX5E7VqR4XBxXuFtd
7pFRpCtd1nQo18AsaEuHF4u7RZLGxFFtd6vPRPclutJrTQfz2XHbi8s2n+E0
+iVXFen9dNT5xsS6W50MqBpd6aOmx7MxgfzuijYN77BIsKErR7b4XWg+5fBZ
JNjQlYNz+AKAwyLBhq4EAAAAAHTh/WS+Zk34UwA9+/n2I23wf0YPHs0BByNc
lFr8GH2Rb/YJDEky6CWvMB0peMzbI2kbBfnXAK7sv2Uw/WmVxJdjnOdfrbJa
i53xfo+m2YEmRLc4pe8/D3m/9Of7+7JKq/ZYxpLvD74lDHxeO4dfsjcbpefw
9XNjneqyYLjTPin3jwkdcEuYTEF8Dg+VZ0N8ARaptXkuRuiAV9LbcOJzeKD7
eoL5mDj7nTGiEjrglC4iiM7hUTKK6gb7LYbEtuyzbShD6EBpqy2ToyM4dHNv
+9Dy0KE824s92/yibxZLAIwGD0tMJXSgtPXDQcnO4tHTfXE0cZAx7Q9YalnE
7MiyDddj8W/jv8vmHcpKWvewAmS29/OMp7mXnM3rXG+C9NfyEVIyafv2bmqC
UBWLHFt1jM+2VC2jbXYckWyXdMFWpMuPPA4cPOlKXCioFkfdbii82TallpXE
EFIFY3xxJ0RWacu1HBCWHDpCu4ivE9Bu/l2r0PF8GGPcz15YlNVxo6FD1izz
WyjSB9fMHuBfNHLEz+WdUHY+nzf/RBo6Jr/bpULHzjcnT8YMLSNsGsuRgWxi
u6bLPvMadrlcdg6qWucgCh3pc7P5cWJbK0eKY2gZYdNYjgyk0r011eiCZbls
rNqsQ7j7bqkLCy5YkFeu39PAYWNLDWqHjvVaqxqhI371tvwsoQPeFQodH/Hx
Uj90bK5TLxw61LXM/gZ90cMC+cWWMIhWGihzYe0dM/CCS7nQYVyNKXyKOnvG
Iv24tJbKgwNZxS5aYoujDbmw9karaH6VbZjEv21/OhZfcPpsCvlNaVnkUB8c
MNg5tWKhI/KrbMmFZXhVo9CsIyF0RF8AXsWBeGCQN4zh4IDezlVJ/E7p/vuh
4lxY4iMG/8Td0BC0jGp0y1IqGQ8OWIRGnuRRpC69huDWgSVfh8vQoRrs0cGt
OZb64IDVxtgTLmFQZQSUTCgsY8Rp6BBnCYtG1JSMrbx3j9JWl/ayoSiIHeJc
WMac6G5Dx9XuLYr4zZ+EzEc8zIVvinmHKCeFzwiQX9EMzuOlh8aIFPPp/eAx
5FYKm0JPb7JUv+jBgYwCkwVlLqwjTTkIHcCXrfmCMhfWcaYcAL5tbXWvyIXF
RvfAYf18O63CgiwX1vuJuAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOC7l/pIA
YNhfEsDhWfaXBHB4lv0lAWCBDcsA6Bk2rAZwXIr9JQFghZ3ZgY61fEZK8AD6
9Lx4qDB8lftLAvBqsrKz/PBV7i8JIJPQ7sTWvYpvTzjeTtWWhCv2lwSQTdbQ
8VwT/l4vdHxI95cE4NPk979m6NiJeOfzuUIBACSYXTiIQkemCc9r2OVyyVU9
AAXM316tfcECoLocP/3rxd+EDmBwyaFjOeGYHpXQAWDTZuAgdADYJ5q0lH9c
Ons8y9NZoFdVZx3XL3t+0z2IMN8BelQxdKyWovMKC9AtQgcAg4a3SYkcQL9a
hQ4SkwJQ4Y1ZAErXsEHQAKARWllCLAGwg9ABAAAAAAAAAAAAAAAAAAAAAP2a
b+DIenAAIluvkxA6AOz7nHQQKABoEToAGHxer5ASFIDSddJxOrGVEgCVeZq/
+9MWwgcApdsDF65hAOh8xQ7mHQDCvsLEfIbBZkoAIja2QWFnFGBgoYTi6jWh
1wNNPnY7LoEDGFS20PGxfIeFsAFAYCfynM/n1qUD4NRr2OVyaV06AADQWs57
HQAOg9ABAAB6NHs8y1QFgMD12ue57PweRFiGDmDX6o0VXmEBEEfoAJABkQOA
1lfc4DYpACletQegNM9OCgBxoWWpxBIAOwgdAAAAAAAAAAAAAAAAAAAAXXp5
eWldBAAA0LH/B36AzJ8=
                    "], {{0, 461}, {361, 0}}, {0, 255}, ColorFunction -> 
                    RGBColor], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    Selectable -> False], BaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {361, 461}, 
                    PlotRange -> {{0, 361}, {0, 461}}], TraditionalForm]], 
                 EdgeForm[{Thickness[Large], Dashing[{Small, Small}]}], 
                 DynamicBox[Typeset`ToBoxes[
                   
                   Polygon[{{
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc1$$, 2]}, {
                    Part[$CellContext`loc2$$, 1], 
                    Part[$CellContext`loc2$$, 2]}, {
                    Part[$CellContext`loc1$$, 1] + (2/3) 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]], 
                    Part[$CellContext`loc2$$, 2]}}, 
                    VertexTextureCoordinates -> {{0, 0}, {1, 0}, {1, 1}, {0, 
                    1}}], TraditionalForm, Graphics],
                  ImageSizeCache->{{451.7606933090101, 
                   668.2393066909899}, {-202.2393066909899, 
                   196.2393066909899}}]}, 
                {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
                 DynamicBox[Typeset`ToBoxes[
                   Table[
                    Line[{{
                    Part[$CellContext`loc1$$, 1], 
                    Part[$CellContext`loc1$$, 2] + ($CellContext`i/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}, {
                    Part[$CellContext`loc1$$, 1] + 
                    Abs[Part[$CellContext`loc1$$, 1] - 
                    Part[$CellContext`loc2$$, 1]]/3, 
                    Part[$CellContext`loc1$$, 2] + ($CellContext`i/5) 
                    Abs[Part[$CellContext`loc1$$, 2] - 
                    Part[$CellContext`loc2$$, 2]]}}], {$CellContext`i, 0, 5}],
                    TraditionalForm, Graphics],
                  
                  ImageSizeCache->{{33.58578643762689, 
                   246.4142135623731}, {-200.41421356237308`, 
                   194.41421356237313`}}]}},
               ImageSize->{700, 490},
               PlotRange->{{0, 100}, {0, 70}}], " ", 
              RotationBox[
               ItemBox[
                StyleBox[
                 
                 TemplateBox[{
                  "\"\[DoubleLongLeftArrow]        ancho del pliego:        \
70 cm        \[DoubleLongRightArrow]\""},
                  "RowDefault"],
                 StripOnInput->False,
                 LineColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 FrontFaceColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 BackFaceColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 GraphicsColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]],
                 FontFamily->"Gabriola",
                 FontSize->25,
                 FontColor->RGBColor[0, 
                   Rational[69, 256], 
                   Rational[31, 64]]],
                StripOnInput->False],
               BoxRotation->1.5707963267948966`]}], ""},
            {
             ItemBox[
              StyleBox[
               
               TemplateBox[{
                "\"\[DoubleLongLeftArrow]        largo del pliego:        100 \
cm        \[DoubleLongRightArrow]\""},
                "RowDefault"],
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               FrontFaceColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               BackFaceColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               GraphicsColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]],
               FontFamily->"Gabriola",
               FontSize->25,
               FontColor->RGBColor[0, 
                 Rational[69, 256], 
                 Rational[31, 64]]],
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]],
    DynamicModuleValues:>{}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Answer",ExpressionUUID->\
"c3df68af-a094-4ada-844f-7a521407064c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAeiIWBGMT+TxD8+/t7ocbvRRr/7m79/+8fYfVw8PXV7+l8QPRrGh/QhP+/
vxGp79/TE7/AuiAk0Gpi9P57cw2oEqQLjH5P54fai9fNIF0LNWBaYBrBjL93
tqJ55/+Pj////QE6BuhCuC64O+GGgCyFgb/H2+AmY0UwS2GhBAMg88Ghh1Mv
2CKgS/4BHfbvL1YbQSSGIaCofHMNS1h8fYXVbZAwAel6jU0XxLXb41DVIwwB
uhBftP39hRyAyKEBlMKv8e/1NdAARw0i5NBAA/8+Pvo1V+3/62sQveg2AiMX
u7a/kOgGRRDQVf/+okUrLhtByqaDEzAwjuDgx8e/lxcCjfp7dytWXUBHgmQv
LyQtuwEdiWYRkfqAEUSSRaNgFAw1AAB1Yza7
     "], {{0, 31}, {19, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{19, 31},
   PlotRange->{{0, 19}, {0, 31}}]],ExpressionUUID->
  "221ee0f1-3ca2-4159-9959-e8b11565f6d0"],
 "Resumen"
}], "Section",ExpressionUUID->"ddffb911-82ad-4060-a43b-89e8d6592e4a"],

Cell[TextData[{
 "Los n\[UAcute]meros inventados para expresar una parte de un todo son \
llamados ",
 StyleBox["n\[UAcute]meros racionales",
  FontWeight->"Bold"],
 " y son todos los n\[UAcute]meros de la forma ",
 Cell[BoxData[
  FormBox[
   FractionBox["a", "b"], TraditionalForm]],ExpressionUUID->
  "a2effc4a-2a10-466e-bc11-2ed47603594c"],
 ", donde ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "\[NotEqual]", "0"}], TraditionalForm]],ExpressionUUID->
  "6fb26511-9292-44f0-81d2-2a7fd5da7aba"],
 ", ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "1dbcee4c-ef51-4d59-b198-dd876c030cb8"],
 " y ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "349d0236-28f5-4795-a62e-893804b6f674"],
 " son n\[UAcute]meros enteros. Este conjunto se denomina \
\[DoubleStruckCapitalQ], y es necesario hacer algunas precisiones con relaci\
\[OAcute]n a este conjunto:"
}], "Text",ExpressionUUID->"3e70d6cd-7e75-437e-a73f-bb613fa1fa0c"],

Cell[CellGroupData[{

Cell["\<\
Este conjunto surge de la necesidad de expresar situaciones \
\[OpenCurlyDoubleQuote]cotidianas\[CloseCurlyDoubleQuote], por ejemplo, medio \
pan, tres porciones de una pizza, la relaci\[OAcute]n entre n\[UAcute]mero de \
hombres y mujeres de un sal\[OAcute]n de clase, el candidato que tiene mayor \
opci\[OAcute]n para ganar un cargo, entre otros.\
\>", "Item",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"0806ef34-8e05-4bab-8ba1-6e8e994b02a9"],

Cell[TextData[{
 "Es importante destacar que la definici\[OAcute]n anterior implica que todo \
n\[UAcute]mero entero es un n\[UAcute]mero racional, por ejemplo, 12 se puede \
expresar como ",
 Cell[BoxData[
  FormBox[
   FractionBox["12", "1"], TraditionalForm]],ExpressionUUID->
  "8fa138dd-7743-45d7-b7df-155bc4d3b951"],
 ", o -5 se puede expresar como ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    FractionBox["5", "1"]}], TraditionalForm]],ExpressionUUID->
  "cc1f58f9-35ce-4fd7-95bb-c5a84a76b79f"],
 ". Sin embargo, no todo n\[UAcute]mero racional es un n\[UAcute]mero entero, \
\[DownQuestion]verdad?."
}], "Item",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"a3b62239-0a49-407f-bd92-ab42e6a5ade6"],

Cell[TextData[{
 "La definici\[OAcute]n indica que los racionales se expresan por medio de \
fracciones, pero, no todo n\[UAcute]mero expresado como una fracci\[OAcute]n \
es un n\[UAcute]mero racional, por ejemplo el n\[UAcute]mero ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    SqrtBox["2"]], TraditionalForm]],ExpressionUUID->
  "a02b5cdf-e4c3-43a7-959c-a864d62a0548"],
 " no es racional, ya que ",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]],ExpressionUUID->
  "22936b22-aff8-4014-a413-5fcab130a666"],
 " no es un n\[UAcute]mero entero. Estos n\[UAcute]meros se conocen \
simplemente como fracciones."
}], "Item",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"3497274e-c01d-4d4f-8e09-13db98d0ff6c"],

Cell[TextData[{
 "Recuerden que ",
 StyleBox["fracciones equivalentes",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " son aquellas que representan la misma cantidad y que se obtienen mediante \
dos procesos, el de amplificaci\[OAcute]n y el de simplificaci\[OAcute]n. Por \
ejemplo, los n\[UAcute]meros ",
 Cell[BoxData[
  FormBox[
   FractionBox["5", "2"], TraditionalForm]],ExpressionUUID->
  "46d78e85-1954-4d5a-a98a-3fa4998a1adf"],
 ", ",
 Cell[BoxData[
  FormBox[
   FractionBox["10", "4"], TraditionalForm]],ExpressionUUID->
  "ad388c0c-4e96-4327-bf52-1fd497b28448"],
 ", ",
 Cell[BoxData[
  FormBox[
   FractionBox["15", "6"], TraditionalForm]],ExpressionUUID->
  "a0e551b7-f6cb-4994-9929-8b76dfdb0151"],
 ", ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"-", "50"}], 
    RowBox[{"-", "20"}]], TraditionalForm]],ExpressionUUID->
  "08ac64b5-8ace-4fd9-bb63-aebb700acee3"],
 ", son equivalentes ya que al simplificarlos todos dan ",
 Cell[BoxData[
  FormBox[
   FractionBox["5", "2"], TraditionalForm]],ExpressionUUID->
  "da4757d3-efb6-42ea-a403-acc9616def0f"],
 ". En este caso, se dice que el representante es la fracci\[OAcute]n m\
\[AAcute]s simplificada o fracci\[OAcute]n irreductible."
}], "Item",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"40d793e6-dbd6-4099-bb09-a5dfb6a2db47"],

Cell[TextData[{
 "Al igual que los n\[UAcute]meros enteros, la operaci\[OAcute]n ",
 StyleBox["adici\[OAcute]n",
  FontSlant->"Italic"],
 " en los n\[UAcute]meros racionales abarca tambi\[EAcute]n la sustracci\
\[OAcute]n (una sustracci\[OAcute]n es una adici\[OAcute]n escrita de manera \
diferente). En este conjunto la multiplicaci\[OAcute]n tambi\[EAcute]n es una \
operaci\[OAcute]n y la divisi\[OAcute]n es una forma diferente de multiplicar \
por lo cual la divisi\[OAcute]n no es una operaci\[OAcute]n."
}], "Item",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"8798b67f-2fe4-4ffa-9479-23dcc685ea5b"],

Cell[TextData[{
 "Supongamos que se quiere dividir 50 entre 3, esto se puede escribir con la \
expresi\[OAcute]n ",
 Cell[BoxData[
  FormBox[
   RowBox[{"50", "\[Divide]", "3"}], TraditionalForm]],ExpressionUUID->
  "32a843ac-2791-4f98-956b-2610d15c1b68"],
 " que es lo mismo a ",
 Cell[BoxData[
  FormBox[
   FractionBox["50", "3"], TraditionalForm]],ExpressionUUID->
  "d7657885-9021-4914-afdb-1b124072d98e"],
 "(parte de un todo), por tanto, se puede decir que\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"50", "\[Divide]", "3"}], "=", 
    RowBox[{
     RowBox[{"50", " ", 
      FractionBox["1", "3"]}], "=", 
     FractionBox["50", "3"]}]}], TraditionalForm]],ExpressionUUID->
  "9ff17edb-cc76-4a60-81f9-b9836cec6cb2"],
 "\nesto se puede generalizar para cualquier divisi\[OAcute]n."
}], "PildDer",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"ac92c971-b6e0-4135-bf31-ea1a279334f2"],

Cell["\<\
A trav\[EAcute]s de todos los problemas realizados, se observan distintos \
usos de los n\[UAcute]meros racionales, seg\[UAcute]n la aplicaci\[OAcute]n; \
entre ellos est\[AAcute]n:\
\>", "Item",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"bd4d3f84-ff73-46b7-84fe-02b156094018"],

Cell[TextData[{
 "Racional como ",
 StyleBox["porcentaje",
  FontSlant->"Italic"],
 "."
}], "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"6cc212c4-6108-4e44-8e8b-442545b4e42e"],

Cell[TextData[{
 "Racional como ",
 StyleBox["n\[UAcute]mero",
  FontSlant->"Italic"],
 " (n\[UAcute]meros decimales)."
}], "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"a40f9d0e-a6f7-4d44-aeb4-83b983a4705c"],

Cell[TextData[{
 "Racional como",
 StyleBox[" raz\[OAcute]n y proporci\[OAcute]n",
  FontSlant->"Italic"],
 " entre dos magnitudes."
}], "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"4ab3374c-96bc-4e38-98d3-1036c5a70542"],

Cell[TextData[{
 "Racional como un ",
 StyleBox["operador.",
  FontSlant->"Italic"]
}], "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"9b364dd1-3a9e-468a-a1ab-b9ec80e20883"],

Cell[TextData[{
 "Racional como",
 StyleBox[" parte - todo",
  FontSlant->"Italic"],
 " o una divisi\[OAcute]n de un todo en partes."
}], "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"233b0fa3-7ecb-4b0b-9dae-adc8def2cd27"]
}, Open  ]],

Cell["\<\
Finalmente una inquietud: \[DownQuestion]Por qu\[EAcute] no se puede dividir \
por cero?\
\>", "Multimedia",ExpressionUUID->"927eb87b-d462-4609-8335-7d2c239ba0cf"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`framePane$$, $CellContext`textPane$$, \
$CellContext`tabImage$$, $CellContext`tabText$$, $CellContext`style1$$, \
$CellContext`style2$$, $CellContext`style3$$, $CellContext`color1$$ = 
    RGBColor[0, 0, 
     Rational[1, 2]], $CellContext`color2$$ = RGBColor[
    0.2, 0.08, 0.28], $CellContext`color3$$ = RGBColor[
    0.796078431372549, 0.07058823529411765, 0.], $CellContext`tama1$$ = 
    15, $CellContext`tama2$$ = 18, $CellContext`tama3$$ = 
    25, $CellContext`font1$$ = "Georgia", $CellContext`page1$$ = 
    3, $CellContext`page2$$ = 3, $CellContext`page3$$ = 
    3, $CellContext`page4$$ = 3, $CellContext`page5$$ = 
    3, $CellContext`titlePopUp$$, $CellContext`textPopUp$$, \
$CellContext`panelWidth$$ = 750, $CellContext`bodyWidth$$ = 
    600, $CellContext`rati$$, $CellContext`int$$}, 
    PaneBox[
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJy9WEuS0zAQTQELllyBDWuWbFmyHYoDzBRhiixCxSFf5+eZgtmwYOdj+BI+
RA6ROzR6GnqQjWS3LNmq6nwcx/3U/d6T7Nc3366+PBuNRvOX6uXqevU+Sa43
H1+pL5+m86+30/HnD9Pv49tx8u7muTr4VsUbFS9UrFYrOp1OAZFTeSEaRRi4
3uFwoEP2QGmaUji2gs4Ujg3XAp403dFyudQYw3CpyMsouI7Ho47tdhuhXo+R
q4aG4uJAvYCvbc5lLsNWnLv307wO6mX20TVnUgwqetYB/p9lGe33e30tfm+b
M11KynvUAdcJ/UOt1uu1eM50LmR8U5Prggu8Qp2Y/z76Ohf96AD/mc/numbs
Zdxb6Zz70AHOhzcAD/cSx+5/PFC9FkPqAOfPZjPabDYVPWZ39/R/LRq4JtWB
0HNxbpIkumbwfe7nKbsjez63vi5lHk0HOG+xWFR4z9x/qkVddwPogPnFvvW4
VqYVXLZaNF03hg4Yi+kP9Xq58jk9V6wDNyfwO7wUfK97fXu+CJ7r4AR+Yx0C
1263e9pTWPPVddDAtRAdMC72LtPDxPka9NVVBzgG70Kt8I7vbbhs+cJ1UOUE
4wIW9FBSL3u+CJ5r6MDkF2uR+d+Gy8dzfXXAfZP4hChfDB38Dfb6Lrhs+Zq4
JtWBiYMxSvlljvieWw32WF9cXp4r1sG/YE364tL5PLgm0QHXB7WCNoGtCy4M
H8+V6AD7Zu6hbT/hM2J5LvoGXPBXBPZjuBfpisuLawIdABN6CE0CZ1dcOp+P
5zp0wDznuuEzahaCS+cL1AHznvmOmEwmUZ5j+XBN4rnoZQxcGFLPtZ1rPqPg
nsbCFaKD+v11zHrpfB5cw6jXzPT9mLgwfDzXhQv3urFxYUh1YPNXfMazlD5w
Sbnm0iPuifrApbEJPNe1JmH97guXxtaiA5vn98X7+mjimmtNwhrQNy4Ml+fW
tchr0lC4rDoo3WvlULg0NsHedeg+8mjauwKTuacYEhdG036Cefbz1+/Bcbn2
rn8AgmcqHw==
                    "], {{0, 48}, {38, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{38, 48},
                    PlotRange->{{0, 38}, {0, 48}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Naturales\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 1), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]], 
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJztmkFOg0AUhom6cOkVvEHduXXptsYDtBEbN5hQAzIQhlm48QJzDC7BITgE
J3DznKExljrIpBn6Zlpe8reFTJP3hvd/eSRzvXydP595nre+FB/zRXwXhovk
4UpcPAbrl1XgP90Hb/7KD2+X5+LmTOhG6ML7jSzLgFIKeZ63KoqivWaMtb9t
1CbXAmT+cRz78p74BkJIZ53NNWzEYOs5fEVRBCR5b+tLksSC/P6X3F/GPsFD
CIAaSo0cyxqU+VV8ax2vUGqoy+H8edUoc+v+l4NYdvAamooP90nP3kJdaj2n
MQOaCvhgD6n39k//iQIOnb+MTh8fqQf69rbbfzge2O1jtUrRLYoe2um/Pq+P
mr8WR933gB5H1c9p7DDHUSQPaHHUXg/ImDiK6wEtjto8S0wcRfeAFkdtniUM
ctReD2hyFMkD5t7JXOeozR7Q46jzswSSB8xxFMkDJ8FRuz1gjKNIs4Q5jk4e
2Dcmjh6LB5BmCYMcxfKAMY667gHnOYrjARmmOOr8LIHkAedniRPhqM0ecH2W
kMFoPlyDpUrTFAih7dkY7Fz21c85nw/mbg1S8tzJN1kfm2o=
                    "], {{0, 48}, {49, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{49, 48},
                    PlotRange->{{0, 49}, {0, 48}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Enteros\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 2), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]], 
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1: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
69wdGo3/HOjeOIsfv2fxf/+iugE=
                    "], {{0, 60}, {46, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{46, 60},
                    PlotRange->{{0, 46}, {0, 60}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Racionales\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 3), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]]}
           },
           AutoDelete->False,
           FrameStyle->GrayLevel[0.7],
           GridBoxBackground->{"Columns" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "Columns"]], 
             "ColumnsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "ColumnsIndexed"]], 
             "Rows" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "Rows"]], 
             "RowsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "RowsIndexed"]], 
             "ItemsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "ItemsIndexed"]]},
           GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.7}}, "Rows" -> {{0.7}}}],
          "Grid"]},
        {
         FrameBox[
          PaneSelectorBox[{1->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {1, 
                    0}, $CellContext`scale$$ = 20, Typeset`show$$ = True, 
                    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                    Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 20, "m\[AAcute]ximo"}, {20, 
                    60, 100, 200, 1000}}, {{
                    Hold[$CellContext`pos$$], {1, 0}}}}, Typeset`size$$ = {
                    1008., {50., 62.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$6995$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {1, 
                    0}, $CellContext`scale$$ = 20}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$6995$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    Max[1, 
                    Round[
                    Part[$CellContext`pos$$, 1]]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.003], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalN], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{(-0.05) $CellContext`scale$$, \
$CellContext`scale$$}, {-0.5, 0.5}}, Ticks -> {
                    Delete[
                    Range[0, $CellContext`scale$$, $CellContext`scale$$/20], 
                    1], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Max[1, 
                    Round[
                    Part[$CellContext`pos$$, 1]]], TraditionalForm], Red, 30],
                     ImageSize -> {350, 30}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 20, 
                    "m\[AAcute]ximo"}, {20, 60, 100, 200, 
                    1000}}, {{$CellContext`pos$$, {1, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{1067., {104., 111.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"Los \\!\\(\\*StyleBox[\\\"n\[UAcute]meros\\\
\",FontSlant->\\\"Italic\\\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\
\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\\)\\!\\(\\*StyleBox[\\\"naturales\\\",FontSlant->\\\"\
Italic\\\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\\) son aquellos \
que se utilizan para \\!\\(\\*StyleBox[\\\"contar\\\",FontSlant->\\\"Italic\\\
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\\), el conjunto de todos \
los n\[UAcute]meros naturales se denota por \[DoubleStruckCapitalN] y son: \
\\n \[DoubleStruckCapitalN]={1, 2, 3, 4, 5, 6, 7, 8, 9...}\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "83c359fa-2ff8-4a71-9333-88070293a4d4"],
                  TextCell[
                   Style[
                   "Los \!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"\
Italic\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\
\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\) son aquellos que se utilizan para \
\!\(\*StyleBox[\"contar\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\), el conjunto de todos los n\[UAcute]meros naturales se \
denota por \[DoubleStruckCapitalN] y son: \n \[DoubleStruckCapitalN]={1, 2, \
3, 4, 5, 6, 7, 8, 9...}", {FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros naturales \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalN] , + )", "Text",
                    ExpressionUUID->"b1fd786e-aba8-4c69-9201-1c3e9279588d"],
                    TextCell[" ( \[DoubleStruckCapitalN] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros naturales es un n\
\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalN]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text",
                    ExpressionUUID->"0a40e4ab-8fff-4735-8512-0a5096871b75"],
                    TextCell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros naturales es \
un n\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalN]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros naturales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros naturales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero natural da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "584bb758-6ede-4981-9a1b-0004f9b6b3f9"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La sustracci\[OAcute]n es el proceso inverso a la adici\
\[OAcute]n y no se considera una operaci\[OAcute]n porque no es cerrada, lo \
que quiere decir que no siempre se puede realizar la sustracci\[OAcute]n \
entre dos n\[UAcute]meros naturales.\nEn la sustracci\[OAcute]n \
\!\(TraditionalForm\`a - b = c\) el t\[EAcute]rmino \!\(TraditionalForm\`a\) \
se llama \!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\) y \
\!\(TraditionalForm\`c\) la \!\(\*StyleBox[\"diferencia\",FontSlant->\"Italic\
\"]\).\nLa sustracci\[OAcute]n se puede realizar dentro del conjunto de los n\
\[UAcute]meros naturales solo cuando el \
\!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\) es mayor que el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\), por ejemplo: \
\!\(TraditionalForm\`505 - 124 = 381\) , en el caso contrario, la operaci\
\[OAcute]n no da como resultado un n\[UAcute]mero natural: \
\!\(TraditionalForm\`124 - 505 = \(-381\) \[NotElement] \
\[DoubleStruckCapitalN]\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "714d72de-c2c3-4f5b-b5f0-6a1e1032b076"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]meros naturales. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros naturales solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \!\(TraditionalForm\`6\[Divide]2 = 3\) , \
en el caso contrario, la operaci\[OAcute]n no da como resultado un \
n\[UAcute]mero natural: \!\(TraditionalForm\`2\[Divide]6 = \
\(\*FractionBox[\(2\), \(6\)] = \*FractionBox[\(1\), \(3\)] \[NotElement] \
\[DoubleStruckCapitalN]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "ba0037e2-926f-4654-93a2-33a65d06e897"]
                  }], "Multimedia",ExpressionUUID->
                   "41a794dd-e798-4dd9-96da-81ff1637b7f5"],
                  TextCell[
                   Row[{
                    "Operaciones con los n\[UAcute]meros naturales \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalN] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros naturales es un n\
\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalN]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros naturales es \
un n\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalN]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros naturales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros naturales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero natural da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La sustracci\[OAcute]n es el proceso inverso a la adici\
\[OAcute]n y no se considera una operaci\[OAcute]n porque no es cerrada, lo \
que quiere decir que no siempre se puede realizar la sustracci\[OAcute]n \
entre dos n\[UAcute]meros naturales.\nEn la sustracci\[OAcute]n \
\!\(TraditionalForm\`a - b = c\) el t\[EAcute]rmino \!\(TraditionalForm\`a\) \
se llama \!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\) y \
\!\(TraditionalForm\`c\) la \!\(\*StyleBox[\"diferencia\",FontSlant->\"Italic\
\"]\).\nLa sustracci\[OAcute]n se puede realizar dentro del conjunto de los n\
\[UAcute]meros naturales solo cuando el \
\!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\) es mayor que el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\), por ejemplo: \
\!\(TraditionalForm\`505 - 124 = 381\) , en el caso contrario, la operaci\
\[OAcute]n no da como resultado un n\[UAcute]mero natural: \
\!\(TraditionalForm\`124 - 505 = \(-381\) \[NotElement] \
\[DoubleStruckCapitalN]\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]meros naturales. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros naturales solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \!\(TraditionalForm\`6\[Divide]2 = 3\) , \
en el caso contrario, la operaci\[OAcute]n no da como resultado un \
n\[UAcute]mero natural: \!\(TraditionalForm\`2\[Divide]6 = \
\(\*FractionBox[\(2\), \(6\)] = \*FractionBox[\(1\), \(3\)] \[NotElement] \
\[DoubleStruckCapitalN]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}], 2->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {
                    2.0549999999999997`, -0.20500000000000002`}, \
$CellContext`scale$$ = 10, Typeset`show$$ = True, Typeset`bookmarkList$$ = {},
                     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                    Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                    Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 10, "m\[AAcute]ximo"}, {10, 
                    20, 50, 100}}, {{
                    Hold[$CellContext`pos$$], {0, 0}}}}, Typeset`size$$ = {
                    1008., {50., 62.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$7015$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$7015$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    Round[
                    Part[$CellContext`pos$$, 1]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.003], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalZ], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{-$CellContext`scale$$, \
$CellContext`scale$$}, {-0.5, 0.5}}, Ticks -> {
                    
                    Range[-$CellContext`scale$$, $CellContext`scale$$, \
$CellContext`scale$$/10], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Round[
                    Part[$CellContext`pos$$, 1]], TraditionalForm], Red, 30], 
                    ImageSize -> {350, 30}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 10, 
                    "m\[AAcute]ximo"}, {10, 20, 50, 
                    100}}, {{$CellContext`pos$$, {0, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{1067., {104., 111.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"El conjunto de los n\[UAcute]meros enteros \
es una extensi\[OAcute]n del conjunto de los n\[UAcute]meros naturales. Este \
conjunto est\[AAcute] conformado por el conjunto de los n\[UAcute]meros \
naturales, el cero (considerado como un punto de referencia o punto de \
origen) y los opuestos de los naturales (enteros negativos). Los \
n\[UAcute]meros enteros se representan con la letra \[DoubleStruckCapitalZ]: \
\\n \[DoubleStruckCapitalZ]={..., -4, -3 , -2 , -1, 0, 1, 2, 3, 4, ...}\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "8069ba79-7b4e-414c-8247-00b814f12583"],
                  TextCell[
                   Style[
                   "El conjunto de los n\[UAcute]meros enteros es una extensi\
\[OAcute]n del conjunto de los n\[UAcute]meros naturales. Este conjunto est\
\[AAcute] conformado por el conjunto de los n\[UAcute]meros naturales, el \
cero (considerado como un punto de referencia o punto de origen) y los \
opuestos de los naturales (enteros negativos). Los n\[UAcute]meros enteros se \
representan con la letra \[DoubleStruckCapitalZ]: \n \
\[DoubleStruckCapitalZ]={..., -4, -3 , -2 , -1, 0, 1, 2, 3, 4, ...}", {
                    FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros enteros \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalZ] , + )", "Text",
                    ExpressionUUID->"d7ea5904-82c1-4019-ae1a-9be8922d7ed8"],
                    TextCell[" ( \[DoubleStruckCapitalZ] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un n\
\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalZ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros enteros el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
entero existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text",
                    ExpressionUUID->"1698ad80-54c3-422a-b5ae-058228ac3309"],
                    TextCell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un \
n\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalZ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros enteros el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se puede distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "3e548049-d94f-4968-b081-1e19792e3a3d"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] que la sustracci\[OAcute]n es una \
adici\[OAcute]n de un n\[UAcute]mero con el opuesto de otro n\[UAcute]mero, \
sin embargo, es necesario recalcar que la sustracci\[OAcute]n no es \
conmutativa ni asociativa. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"2\", \"-\", \"5\"}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"5\", \"-\", \
\"2\"}]}]},{RowBox[{RowBox[{\"-\", \"3\"}], \"\[AlignmentMarker]\", \"\
\[NotEqual]\", \" \", \"3\"}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"Center\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{\"2\", \"-\", \"3\"}], \")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
\"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{\"2\", \"-\", RowBox[{\"(\", RowBox[{\"3\", \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \
\")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \"1\"}], \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{\"2\", \"-\", \"8\"}]}]},{RowBox[{\"4\", \
\"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"-\", \"6\"}]}]}\n   \
  },GridBoxAlignment->{\"Columns\" -> {{\"\[AlignmentMarker]\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es asociativa.\nSi se desea \
aplicar estas propiedades se debe escribir como una suma, por ejemplo \
\!\(TraditionalForm\`2 - 5\) se puede escribir como \!\(TraditionalForm\`2 + \
\((\(-5\))\)\) y \!\(TraditionalForm\`2 + \((\(-5\))\) = \(\((\(-5\))\) + 2 = \
\(-3\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "5ffb747a-b9c7-4da3-89ee-218e9e32b384"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]mero enteros. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros enteros solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \
\!\(TraditionalForm\`\((\(-6\))\)\[Divide]2 = \(-3\)\) , en el caso \
contrario, la operaci\[OAcute]n no da como resultado un n\[UAcute]mero \
entero: \!\(TraditionalForm\`2\[Divide]\((\(-6\))\) = \
\(\(-\*FractionBox[\(2\), \(6\)]\) = \(-\*FractionBox[\(1\), \(3\)]\) \
\[NotElement] \[DoubleStruckCapitalZ]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "b778e297-f220-49f7-b903-b7d7bbf1f552"]
                  }], "Multimedia",ExpressionUUID->
                   "a723b99f-8955-4a21-ac2f-5170e202c4d0"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros enteros \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalZ] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un n\
\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalZ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros enteros el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
entero existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un \
n\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalZ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros enteros el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se puede distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] que la sustracci\[OAcute]n es una \
adici\[OAcute]n de un n\[UAcute]mero con el opuesto de otro n\[UAcute]mero, \
sin embargo, es necesario recalcar que la sustracci\[OAcute]n no es \
conmutativa ni asociativa. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"2\", \"-\", \"5\"}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"5\", \"-\", \
\"2\"}]}]},{RowBox[{RowBox[{\"-\", \"3\"}], \"\[AlignmentMarker]\", \"\
\[NotEqual]\", \" \", \"3\"}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"Center\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{\"2\", \"-\", \"3\"}], \")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
\"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{\"2\", \"-\", RowBox[{\"(\", RowBox[{\"3\", \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \
\")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \"1\"}], \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{\"2\", \"-\", \"8\"}]}]},{RowBox[{\"4\", \
\"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"-\", \"6\"}]}]}\n   \
  },GridBoxAlignment->{\"Columns\" -> {{\"\[AlignmentMarker]\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es asociativa.\nSi se desea \
aplicar estas propiedades se debe escribir como una suma, por ejemplo \
\!\(TraditionalForm\`2 - 5\) se puede escribir como \!\(TraditionalForm\`2 + \
\((\(-5\))\)\) y \!\(TraditionalForm\`2 + \((\(-5\))\) = \(\((\(-5\))\) + 2 = \
\(-3\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]mero enteros. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros enteros solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \
\!\(TraditionalForm\`\((\(-6\))\)\[Divide]2 = \(-3\)\) , en el caso \
contrario, la operaci\[OAcute]n no da como resultado un n\[UAcute]mero \
entero: \!\(TraditionalForm\`2\[Divide]\((\(-6\))\) = \
\(\(-\*FractionBox[\(2\), \(6\)]\) = \(-\*FractionBox[\(1\), \(3\)]\) \
\[NotElement] \[DoubleStruckCapitalZ]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}], 3->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {
                    26.400000000000006`, -0.01}, $CellContext`scale$$ = 10, 
                    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                    Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                    Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 10, "m\[AAcute]ximo"}, {10, 
                    20, 50, 100}}, {{
                    Hold[$CellContext`pos$$], {0, 0}}}}, Typeset`size$$ = {
                    720., {36., 44.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$7035$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$7035$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    $CellContext`rati$$[
                    Part[$CellContext`pos$$, 1]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.0022], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalQ], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{-$CellContext`scale$$, \
$CellContext`scale$$ 1.1}, {-0.01, 0.01}}, Ticks -> {
                    
                    Range[-$CellContext`scale$$, $CellContext`scale$$, \
$CellContext`scale$$/5], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    $CellContext`rati$$[
                    Part[$CellContext`pos$$, 1]], TraditionalForm], Red, 18], 
                    ImageSize -> {350, 50}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 10, 
                    "m\[AAcute]ximo"}, {10, 20, 50, 
                    100}}, {{$CellContext`pos$$, {0, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{779., {88., 95.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"Los n\[UAcute]meros que se utilizan para \
expresar una parte de un todo son llamados \
\\!\\(\\*StyleBox[\\\"n\[UAcute]meros\\\",FontWeight->\\\"Bold\\\"]\\)\\!\\(\\\
*StyleBox[\\\" \
\\\",FontWeight->\\\"Bold\\\"]\\)\\!\\(\\*StyleBox[\\\"racionales\\\",\
FontWeight->\\\"Bold\\\"]\\) y son todos los n\[UAcute]meros de la forma \
\\!\\(TraditionalForm\\`\\*FractionBox[\\(a\\), \\(b\\)]\\), donde \
\\!\\(TraditionalForm\\`b \[NotEqual] 0\\), \\!\\(TraditionalForm\\`a\\) y \
\\!\\(TraditionalForm\\`b\\) son n\[UAcute]meros enteros. Se representan con \
la letra \[DoubleStruckCapitalQ]:\\n\\!\\(\\*FormBox[GridBox[{{GridBox[{{\
RowBox[{\\\"\[DoubleStruckCapitalQ]\\\", \\\"=\\\", RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"a\\\", \\\"b\\\"], \\\",\\\", \\\"a\\\", \\\",\\\", \
RowBox[{\\\"b\\\", \\\"\[Element]\\\", \\\"\[DoubleStruckCapitalZ]\\\"}], \
\\\",\\\", RowBox[{\\\"b\\\", \\\"\[NotEqual]\\\", \\\"0\\\"}]}], \
\\\"}\\\"}]}]}\\n     },GridBoxAlignment->{\\\"Columns\\\" -> \
{{\\\"=\\\"}}}]}\\n  },GridBoxItemSize->{\\\"Columns\\\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\\)\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "bdbb6aaf-ff62-4e8b-bbed-3b3dc14d53b9"],
                  TextCell[
                   Style[
                   "Los n\[UAcute]meros que se utilizan para expresar una \
parte de un todo son llamados \!\(\*StyleBox[\"n\[UAcute]meros\",FontWeight->\
\"Bold\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\"racionales\",FontWeight->\"Bold\"]\
\) y son todos los n\[UAcute]meros de la forma \
\!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)]\), donde \!\(TraditionalForm\
\`b \[NotEqual] 0\), \!\(TraditionalForm\`a\) y \!\(TraditionalForm\`b\) son \
n\[UAcute]meros enteros. Se representan con la letra \[DoubleStruckCapitalQ]:\
\n\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{\"\[DoubleStruckCapitalQ]\", \
\"=\", RowBox[{\"{\", RowBox[{FractionBox[\"a\", \"b\"], \",\", \"a\", \",\", \
RowBox[{\"b\", \"\[Element]\", \"\[DoubleStruckCapitalZ]\"}], \",\", RowBox[{\
\"b\", \"\[NotEqual]\", \"0\"}]}], \"}\"}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)", {
                    FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros racionales \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalQ] , + )", "Text",
                    ExpressionUUID->"a1075bbd-4ea0-446f-8a22-287aaee9249e"],
                    TextCell[" ( \[DoubleStruckCapitalQ] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros racionales es un n\
\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalQ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros racionales el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalQ] , \[CenterDot] )", "Text",
                    ExpressionUUID->"b5d6d9f0-863c-42de-a46c-45e93b442505"],
                    TextCell[
                    " ( \[DoubleStruckCapitalQ] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros racionales es \
un n\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalQ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros racionales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"inverso\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\" \",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"o\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"rec\[IAcute]\
proco\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"(\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\")\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional a\[NotEqual]0 existe un rec\[IAcute]proco tal que la su multiplicaci\
\[OAcute]n es uno:\n\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \
\" \", \"a\"}], \"\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\", \" \", FractionBox[\"1\", \"a\"], \" \", \
\"tal\", \" \", \"que\", \" \", RowBox[{\"a\", \"(\", FractionBox[\"1\", \
\"a\"], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", FractionBox[\"1\", \
\"a\"], \")\"}], \"a\"}], \"=\", \"1\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "9e34d716-8c3c-4c5f-b734-5e314725bd4f"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] con anticipaci\[OAcute]n que la \
sustracci\[OAcute]n es una adici\[OAcute]n de un n\[UAcute]mero con el \
opuesto de otro n\[UAcute]mero, sin embargo, es necesario recalcar que la \
sustracci\[OAcute]n no es conmutativa ni asociativa en ning\[UAcute]n \
conjunto num\[EAcute]rico. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"2\", \"3\"], \
\"-\", FractionBox[\"5\", \"4\"]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{FractionBox[\"5\", \"4\"], \"-\", FractionBox[\"2\", \
\"3\"]}]}]},{RowBox[{RowBox[{\"-\", FractionBox[\"7\", \"12\"]}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", FractionBox[\"7\", \"12\"]}]}\n \
    },GridBoxAlignment->{\"Columns\" -> {{\"Center\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", FractionBox[\"3\", \"2\"]}], \
\")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \"2\"]}], \
\")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", RowBox[{\"(\", RowBox[{FractionBox[\
\"3\", \"2\"], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \
\"2\"]}], \")\"}]}], \")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \
FractionBox[\"11\", \"10\"]}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
FractionBox[\"5\", \"2\"]}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\
\", \" \", RowBox[{FractionBox[\"2\", \"5\"], \"-\", \
\"4\"}]}]},{RowBox[{FractionBox[RowBox[{\"7\", \"\[AlignmentMarker]\"}], \
\"5\"], \"\[NotEqual]\", \" \", RowBox[{\"-\", FractionBox[\"18\", \
\"5\"]}]}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"\[AlignmentMarker]\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es asociativa.\nSi se desea aplicar estas propiedades se debe \
escribir como una suma, por ejemplo \
\!\(TraditionalForm\`\(\*FractionBox[\(2\), \(3\)]\(-\)\*FractionBox[\(5\), \
\(4\)]\(\[AlignmentMarker]\)\)\) se puede escribir como \!\(TraditionalForm\`\
\(\*FractionBox[\(2\), \(3\)]\(+\)\((\(-\*FractionBox[\(5\), \(4\)]\))\)\(\
\[AlignmentMarker]\)\)\) y \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)] + \
\((\(-\*FractionBox[\(5\), \(4\)]\))\)\[AlignmentMarker] = \
\(\((\(-\*FractionBox[\(5\), \(4\)]\))\) + \*FractionBox[\(2\), \(3\)] = \
\(-\*FractionBox[\(7\), \(12\)]\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "00f228ad-dc51-463d-8aee-e63414a9f29a"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales, la divisi\[OAcute]n \
es una manera diferente de escribir una multiplicaci\[OAcute]n. En general, \
cuando se van a dividir dos n\[UAcute]meros racionales, se tiene que:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\
\"a\", \"b\"], \"\[Divide]\", FractionBox[\"c\", \"d\"]}], \"=\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], RowBox[{FractionBox[\"a\", \
\"b\"], \"\[CenterDot]\", FractionBox[\"d\", \"c\"]}]}], \"=\", \
FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \", \"c\"}]]}]}\n\
  },GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
es decir, en lugar de dividir se multiplica por el rec\[IAcute]proco del \
divisor.\nEs as\[IAcute] como todas las divisiones se pueden expresar como \
multiplicaci\[OAcute]n de racionales, por ejemplo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{\"7\", \"\[Divide]\", \"3\"}], \"=\", \
RowBox[{RowBox[{\"7\", \"\[CenterDot]\", FractionBox[\"1\", \"3\"]}], \"=\", \
FractionBox[\"7\", \"3\"]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "b2416078-75a0-41a5-ac0c-25e895df936b"]
                  }], "Multimedia",ExpressionUUID->
                   "0f8f4edc-1d5c-4de2-bacc-00f472eb2cfe"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros racionales \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalQ] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros racionales es un n\
\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalQ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros racionales el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalQ] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros racionales es \
un n\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalQ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros racionales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"inverso\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\" \",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"o\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"rec\[IAcute]\
proco\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"(\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\")\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional a\[NotEqual]0 existe un rec\[IAcute]proco tal que la su multiplicaci\
\[OAcute]n es uno:\n\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \
\" \", \"a\"}], \"\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\", \" \", FractionBox[\"1\", \"a\"], \" \", \
\"tal\", \" \", \"que\", \" \", RowBox[{\"a\", \"(\", FractionBox[\"1\", \
\"a\"], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", FractionBox[\"1\", \
\"a\"], \")\"}], \"a\"}], \"=\", \"1\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] con anticipaci\[OAcute]n que la \
sustracci\[OAcute]n es una adici\[OAcute]n de un n\[UAcute]mero con el \
opuesto de otro n\[UAcute]mero, sin embargo, es necesario recalcar que la \
sustracci\[OAcute]n no es conmutativa ni asociativa en ning\[UAcute]n \
conjunto num\[EAcute]rico. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"2\", \"3\"], \
\"-\", FractionBox[\"5\", \"4\"]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{FractionBox[\"5\", \"4\"], \"-\", FractionBox[\"2\", \
\"3\"]}]}]},{RowBox[{RowBox[{\"-\", FractionBox[\"7\", \"12\"]}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", FractionBox[\"7\", \"12\"]}]}\n \
    },GridBoxAlignment->{\"Columns\" -> {{\"Center\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", FractionBox[\"3\", \"2\"]}], \
\")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \"2\"]}], \
\")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", RowBox[{\"(\", RowBox[{FractionBox[\
\"3\", \"2\"], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \
\"2\"]}], \")\"}]}], \")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \
FractionBox[\"11\", \"10\"]}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
FractionBox[\"5\", \"2\"]}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\
\", \" \", RowBox[{FractionBox[\"2\", \"5\"], \"-\", \
\"4\"}]}]},{RowBox[{FractionBox[RowBox[{\"7\", \"\[AlignmentMarker]\"}], \
\"5\"], \"\[NotEqual]\", \" \", RowBox[{\"-\", FractionBox[\"18\", \
\"5\"]}]}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"\[AlignmentMarker]\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es asociativa.\nSi se desea aplicar estas propiedades se debe \
escribir como una suma, por ejemplo \
\!\(TraditionalForm\`\(\*FractionBox[\(2\), \(3\)]\(-\)\*FractionBox[\(5\), \
\(4\)]\(\[AlignmentMarker]\)\)\) se puede escribir como \!\(TraditionalForm\`\
\(\*FractionBox[\(2\), \(3\)]\(+\)\((\(-\*FractionBox[\(5\), \(4\)]\))\)\(\
\[AlignmentMarker]\)\)\) y \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)] + \
\((\(-\*FractionBox[\(5\), \(4\)]\))\)\[AlignmentMarker] = \
\(\((\(-\*FractionBox[\(5\), \(4\)]\))\) + \*FractionBox[\(2\), \(3\)] = \
\(-\*FractionBox[\(7\), \(12\)]\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales, la divisi\[OAcute]n \
es una manera diferente de escribir una multiplicaci\[OAcute]n. En general, \
cuando se van a dividir dos n\[UAcute]meros racionales, se tiene que:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\
\"a\", \"b\"], \"\[Divide]\", FractionBox[\"c\", \"d\"]}], \"=\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], RowBox[{FractionBox[\"a\", \
\"b\"], \"\[CenterDot]\", FractionBox[\"d\", \"c\"]}]}], \"=\", \
FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \", \"c\"}]]}]}\n\
  },GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
es decir, en lugar de dividir se multiplica por el rec\[IAcute]proco del \
divisor.\nEs as\[IAcute] como todas las divisiones se pueden expresar como \
multiplicaci\[OAcute]n de racionales, por ejemplo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{\"7\", \"\[Divide]\", \"3\"}], \"=\", \
RowBox[{RowBox[{\"7\", \"\[CenterDot]\", FractionBox[\"1\", \"3\"]}], \"=\", \
FractionBox[\"7\", \"3\"]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}]}, Dynamic[$CellContext`page1$$]],
          FrameMargins->1,
          FrameStyle->GrayLevel[0.7],
          ImageMargins->{{1, 1}, {0, 0}},
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Top}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"],
     ImageSize->{800, Automatic}],
    DynamicModuleValues:>{{DownValues[$CellContext`framePane$$] = {HoldPattern[
           $CellContext`framePane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            $CellContext`style1$$[$CellContext`s$], "Cuadro/Titulo", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPane$$] = {HoldPattern[
           $CellContext`textPane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "EmphasisText", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`style1$$] = {HoldPattern[
           $CellContext`style1$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style2$$] = {HoldPattern[
           $CellContext`style2$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style3$$] = {HoldPattern[
           $CellContext`style3$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`titlePopUp$$] = {HoldPattern[
           $CellContext`titlePopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama2$$, 
             FontFamily -> $CellContext`font1$$, $CellContext`color3$$, 
             Italic], "Text", LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPopUp$$] = {HoldPattern[
           $CellContext`textPopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama1$$, 
             FontFamily -> $CellContext`font1$$], "Text", LineIndent -> 0, 
            TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`rati$$] = {HoldPattern[
           $CellContext`rati$$[
            Pattern[$CellContext`x, 
             Blank[]]]] :> Rationalize[$CellContext`x, 0.1]}}, {
      DownValues[$CellContext`int$$] = {HoldPattern[
           $CellContext`int$$[
            Pattern[$CellContext`x, 
             Blank[]], 
            Pattern[$CellContext`y, 
             Blank[]]]] :> IntegerPart[$CellContext`x/$CellContext`y]}}}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"bb797d71-da87-4eeb-b8e2-8648e6372431"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejercicios de refuerzo", "Section",ExpressionUUID->"b9a14b96-6801-4ccf-ab20-cec0aff50123"],

Cell[CellGroupData[{

Cell["Ejercicios num\[EAcute]ricos", "Subsection",ExpressionUUID->"3dc42486-499a-4f52-bb9c-9b21d0140b51"],

Cell[CellGroupData[{

Cell["\<\
Simplifique completamente cada una de las siguientes expresiones\
\>", "ItemNumbered",ExpressionUUID->"6ca03050-895f-40c6-b9c5-58590eb12b26"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], "-", 
        FractionBox["1", "3"]}], ")"}]}], "+", 
     FractionBox["1", "2"]}], "]"}], "\[Divide]", 
   FractionBox["1", "3"]}], 
  TraditionalForm]],ExpressionUUID->"ae198b9f-8ba9-4cf7-b108-16927e56c456"]], \
"SubitemNumbered",ExpressionUUID->"11c63035-62d6-4dcd-9833-ea6f37853df1"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", "2"], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"{", 
     RowBox[{"2", "-", 
      RowBox[{
       FractionBox["3", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", "3"]}], ")"}], " ", 
       FractionBox["4", "3"]}], "-", 
      FractionBox["4", "3"]}], "}"}], " ", 
    FractionBox["4", "3"]}], "-", 
   FractionBox["4", "3"]}], 
  TraditionalForm]],ExpressionUUID->"8a7205ee-006a-4a8a-aefb-5dc6d33740f3"]], \
"SubitemNumbered",ExpressionUUID->"2875b9e0-5ba9-42aa-b6e7-3cfc37f4c490"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"2", "-", 
   RowBox[{
    FractionBox["1", "3"], "\[Divide]", 
    FractionBox["2", "9"]}], "+", 
   RowBox[{
    FractionBox["1", "2"], "\[CenterDot]", 
    FractionBox["20", "9"]}]}], 
  TraditionalForm]],ExpressionUUID->"ead53b02-1222-41ef-8918-00c7b6ccd0a3"]], \
"SubitemNumbered",ExpressionUUID->"046eb7b0-1a55-48c3-a406-2a1d2d3840df"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "3"}], "-", 
   RowBox[{"2", "\[CenterDot]", 
    RowBox[{
     FractionBox["5", "6"], "\[Divide]", "4"}]}], "+", "3"}], 
  TraditionalForm]],ExpressionUUID->"e94e25e3-34c0-4d34-9282-8e7d3ee6f3fc"]], \
"SubitemNumbered",ExpressionUUID->"901b0b5a-2ffa-418e-9043-4183d8c9d0f4"],

Cell[TextData[{
 "Si ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", 
     FractionBox["2", "3"]}], ",", " ", 
    RowBox[{"b", "=", 
     RowBox[{
      FractionBox["1", "2"], "a"}]}], ",", " ", 
    RowBox[{"c", "=", 
     FractionBox[
      RowBox[{"3", "b"}], "4"]}]}], TraditionalForm]],ExpressionUUID->
  "803abeee-d945-4dd1-a6ae-90b927b0f592"],
 ", encuentre el valor de ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"3", "a"}], "+", 
    RowBox[{"5", "b"}], "-", 
    RowBox[{"2", "c"}]}], TraditionalForm]],ExpressionUUID->
  "45c62879-7438-4be5-9737-84b7f0af17c4"],
 "."
}], "SubitemNumbered",ExpressionUUID->"b27caf68-5d98-4df1-8f98-daea0f2a2c54"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Soluciones a los ejercicios", "Subsubsection",ExpressionUUID->"f856b9e7-79dd-4e43-8185-bf37989a0122"],

Cell["\<\
Simplifique completamente cada una de las siguientes expresiones\
\>", "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"38ed4b5b-ac8a-4ab9-82bb-79e2ff03f44a"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], "-", 
        FractionBox["1", "3"]}], ")"}]}], "+", 
     FractionBox["1", "2"]}], "]"}], "\[Divide]", 
   FractionBox["1", "3"]}], 
  TraditionalForm]],ExpressionUUID->"0280592b-7a72-43ef-8610-23eef33a41a4"]], \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"2cec5b77-6163-43f5-b0a9-fa2331b6fb04"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], "-", 
               FractionBox["1", "3"]}], ")"}]}], "+", 
            FractionBox["1", "2"]}], "]"}], "\[Divide]", 
          FractionBox["1", "3"]}], "=", 
         RowBox[{
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["3", "6"], "-", 
               FractionBox["2", "6"]}], ")"}]}], "+", 
            FractionBox["1", "2"]}], "]"}], "\[Divide]", 
          FractionBox["1", "3"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"(", 
              FractionBox["1", "6"], ")"}]}], "+", 
            FractionBox["1", "2"]}], "]"}], "\[Divide]", 
          FractionBox["1", "3"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"[", 
           RowBox[{
            FractionBox["1", "3"], "+", 
            FractionBox["1", "2"]}], "]"}], "\[Divide]", 
          FractionBox["1", "3"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"[", 
           RowBox[{
            FractionBox["2", "6"], "+", 
            FractionBox["3", "6"]}], "]"}], "\[Divide]", 
          FractionBox["1", "3"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"[", 
           FractionBox["5", "6"], "]"}], "\[CenterDot]", 
          FractionBox["3", "1"]}]}]},
       {
        RowBox[{"=", 
         FractionBox["5", "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"735e2fd9-7e87-42c2-bbb5-9e162ec5a202"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"1bec73b3-0487-45d2-8a03-21f0c03cfbef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", "2"], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"{", 
     RowBox[{"2", "-", 
      RowBox[{
       FractionBox["3", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", "3"]}], ")"}], " ", 
       FractionBox["4", "3"]}], "-", 
      FractionBox["4", "3"]}], "}"}], " ", 
    FractionBox["4", "3"]}], "-", 
   FractionBox["4", "3"]}], 
  TraditionalForm]],ExpressionUUID->"ad65cedc-181e-4e4c-91c9-1e75f348a3d4"]], \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"42676e6f-0297-448a-a676-84e041d2f2b2"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"{", 
            RowBox[{"2", "-", 
             RowBox[{
              FractionBox["3", "4"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox["1", "3"]}], ")"}], " ", 
              FractionBox["4", "3"]}], "-", 
             FractionBox["4", "3"]}], "}"}], " ", 
           FractionBox["4", "3"]}], "-", 
          FractionBox["4", "3"]}], "=", 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"{", 
            RowBox[{"2", "-", 
             RowBox[{
              FractionBox["3", "4"], " ", 
              RowBox[{"(", 
               FractionBox["2", "3"], ")"}], " ", 
              FractionBox["4", "3"]}], "-", 
             FractionBox["4", "3"]}], "}"}], " ", 
           FractionBox["4", "3"]}], "-", 
          FractionBox["4", "3"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"{", 
            RowBox[{"2", "-", 
             FractionBox["2", "3"], "-", 
             FractionBox["4", "3"]}], "}"}], " ", 
           FractionBox["4", "3"]}], "-", 
          FractionBox["4", "3"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"{", "0", "}"}], " ", 
           FractionBox["4", "3"]}], "-", 
          FractionBox["4", "3"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["4", "3"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", 
          FractionBox["5", "6"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"72efcbd8-d044-43bb-b4d2-108525ac3346"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"bc4b7b76-4363-484c-9d15-8126d733d83d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"2", "-", 
   RowBox[{
    FractionBox["1", "3"], "\[Divide]", 
    FractionBox["2", "9"]}], "+", 
   RowBox[{
    FractionBox["1", "2"], "\[CenterDot]", 
    FractionBox["20", "9"]}]}], 
  TraditionalForm]],ExpressionUUID->"0ece2de2-9afd-4939-b153-e209ad534c97"]], \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"81d1c21e-a729-49c3-990f-18d6acbaf47f"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"2", "-", 
          RowBox[{
           FractionBox["1", "3"], "\[Divide]", 
           FractionBox["2", "9"]}], "+", 
          RowBox[{
           FractionBox["1", "2"], "\[CenterDot]", 
           FractionBox["20", "9"]}]}], "=", 
         RowBox[{"2", "-", 
          FractionBox["3", "2"], "+", 
          FractionBox["10", "9"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox["36", "18"], "-", 
          FractionBox["27", "18"], "+", 
          FractionBox["20", "18"]}]}]},
       {
        RowBox[{"=", 
         FractionBox["29", "18"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"498424c5-d47b-4f4f-b20c-24aadd9b5e3b"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"473ad791-35fd-4454-a9e7-d58ed6588d83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", "3"}], "-", 
   RowBox[{"2", "\[CenterDot]", 
    RowBox[{
     FractionBox["5", "6"], "\[Divide]", "4"}]}], "+", "3"}], 
  TraditionalForm]],ExpressionUUID->"ad095c46-3fb5-47cf-966c-0a147f59ce6a"]], \
"SubitemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"d17f6a3f-0b6d-40d8-aef3-0e9304b2b2b1"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          RowBox[{"2", "\[CenterDot]", 
           RowBox[{
            FractionBox["5", "6"], "\[Divide]", "4"}]}], "+", "3"}], "=", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          RowBox[{
           FractionBox["5", "3"], "\[CenterDot]", 
           FractionBox["1", "4"]}], "+", "3"}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          FractionBox["5", "12"], "+", "3"}]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", 
          FractionBox["5", "12"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b37179ee-26f8-43bb-95f9-9c540d0d572f"]], \
"Text",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"da0b41b6-0386-4e81-81a4-8cffe0be3361"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Si ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", 
     FractionBox["2", "3"]}], ",", " ", 
    RowBox[{"b", "=", 
     RowBox[{
      FractionBox["1", "2"], "a"}]}], ",", " ", 
    RowBox[{"c", "=", 
     FractionBox[
      RowBox[{"3", "b"}], "4"]}]}], TraditionalForm]],ExpressionUUID->
  "3af31be6-7aea-47a1-a076-d97e9f49d6e8"],
 ", encuentre el valor de ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"3", "a"}], "+", 
    RowBox[{"5", "b"}], "-", 
    RowBox[{"2", "c"}]}], TraditionalForm]],ExpressionUUID->
  "fb87e388-9c09-46a3-b72f-645f2d5689a1"],
 "."
}], "SubitemNumbered",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 TextAlignment->Left,ExpressionUUID->"773f9723-c1a7-40d4-9de9-44a09d23411e"],

Cell[TextData[{
 "\t\tCon ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", 
    FractionBox["2", "3"]}], TraditionalForm]],ExpressionUUID->
  "9b1c23a0-9da8-4e97-926f-bfda6263c4d8"],
 ", queda que ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", 
       FractionBox["2", "3"], ")"}]}], "=", 
     FractionBox["1", "3"]}]}], TraditionalForm]],ExpressionUUID->
  "fce81bbc-716f-4995-8545-2cf51e30a2f8"],
 ". Con ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    FractionBox["1", "3"]}], TraditionalForm]],ExpressionUUID->
  "81ce4458-8794-4cae-96e2-f613dabb4413"],
 ", queda que ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", 
    RowBox[{
     FractionBox[
      RowBox[{"3", 
       RowBox[{"(", 
        FractionBox["1", "3"], ")"}]}], "4"], "=", 
     FractionBox["1", "4"]}]}], TraditionalForm]],ExpressionUUID->
  "795d201f-9161-454f-b690-d1fae9656b30"],
 ". \n\t\tEntonces\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"3", 
      RowBox[{"(", 
       FractionBox["2", "3"], ")"}]}], "+", 
     RowBox[{"5", 
      RowBox[{"(", 
       FractionBox["1", "3"], ")"}]}], "-", 
     RowBox[{"2", 
      RowBox[{"(", 
       FractionBox["1", "4"], ")"}]}]}], "=", 
    RowBox[{
     RowBox[{"2", "+", 
      FractionBox["5", "3"], "-", 
      FractionBox["1", "2"]}], "=", 
     RowBox[{
      RowBox[{
       FractionBox["12", "6"], "+", 
       FractionBox["10", "6"], "-", 
       FractionBox["3", "6"]}], "=", 
      FractionBox["19", "6"]}]}]}], TraditionalForm]],ExpressionUUID->
  "79146a7a-6265-4154-acba-597e80757e51"],
 "."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 TextAlignment->Left,ExpressionUUID->"503a75db-a4fd-4fa3-94f6-07b910b492b9"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problemas de aplicaci\[OAcute]n", "Subsection",ExpressionUUID->"0a0fe31b-f81b-4636-8ae2-8c0054a84130"],

Cell[CellGroupData[{

Cell["\<\
En la Empresa Tico necesitan un cajero. Para ocupar este puesto se presentan \
5 hombres y 7 mujeres. \[DownQuestion]Cu\[AAcute]l es la probabilidad de que \
la persona escogida para ocupar ese puesto sea una mujer?, \[DownQuestion]qu\
\[EAcute] porcentaje, de las personas que se presentaron a este trabajo, son \
hombres?\
\>", "ItemNumbered",ExpressionUUID->"43f1cd94-e89e-4a47-81c9-b2c8021a01cf"],

Cell["\<\
Luis vende las dos terceras partes de su finca a Juan. Pasados unos \
a\[NTilde]os, Juan vende a su hermano Andr\[EAcute]s la mitad de su propiedad \
a la mitad del precio que la compr\[OAcute]. \[LineSeparator]Andr\[EAcute]s, \
con la parte de propiedad que tiene, le vende a su hijo Pedro la mitad de \
esta a la mitad del precio que la compr\[OAcute]. \[LineSeparator]\
\[DownQuestion]Cu\[AAcute]nto le pag\[OAcute] Pedro a su pap\[AAcute] si se \
sabe que la finca de Luis originalmente ten\[IAcute]a un valor de \
$1,200,000,000?\
\>", "ItemNumbered",ExpressionUUID->"0ec180ee-cd98-41d7-bf50-4fa562ee132a"],

Cell[TextData[{
 "Carlos y Juan deciden realizar una competencia cicl\[IAcute]stica en una \
pista. Cada uno pedalear\[AAcute] por un minuto y el que haya recorrido la \
mayor distancia ser\[AAcute] el ganador. Carlos recorri\[OAcute] ",
 Cell[BoxData[
  FormBox[
   FractionBox["7", "6"], TraditionalForm]],ExpressionUUID->
  "24b38f74-f9c0-47f1-902c-97d7133f978a"],
 " de la pista y Juan ",
 Cell[BoxData[
  FormBox[
   FractionBox["6", "5"], TraditionalForm]],ExpressionUUID->
  "3b403cb3-5696-4ebb-b94a-036dca20b7a3"],
 ". \[DownQuestion]Puede decir quien gan\[OAcute] la carrera?"
}], "ItemNumbered",ExpressionUUID->"235760c2-28ac-4850-bca7-43e60f2e622f"],

Cell["\<\
La raz\[OAcute]n entre la venta diaria de jab\[OAcute]n del almac\[EAcute]n M \
al almac\[EAcute]n K es de 7 a 5. En el almac\[EAcute]n M, la raz\[OAcute]n \
entre la venta diaria del jab\[OAcute]n tipo A con el de tipo B es 4 a 3, en \
tanto que en el almac\[EAcute]n K, la raz\[OAcute]n entre la venta diaria del \
jab\[OAcute]n tipo A con el de tipo B es 7 a 3. \[DownQuestion]Es posible \
establecer la raz\[OAcute]n entre la venta diaria del jab\[OAcute]n tipo A \
del almac\[EAcute]n M y el jab\[OAcute]n tipo B del almac\[EAcute]n K?\
\>", "ItemNumbered",ExpressionUUID->"0fbaad99-14d7-4ec1-afae-88b0f271f521"],

Cell[TextData[{
 "Cristian tiene una colecci\[OAcute]n de 20 canicas entre negras y blancas. \
Si la relaci\[OAcute]n entre las canicas negras con respecto al total es ",
 Cell[BoxData[
  FormBox[
   FractionBox["3", "4"], TraditionalForm]],ExpressionUUID->
  "90eb3eb5-d348-474f-8b70-870f70c1caf6"],
 ", \[DownQuestion]puedes ayudarle a colorearlas en el dibujo que se \
encuentra abajo? \[LineSeparator]",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3e1vFOd6BvCo/dKP/Rf6X/SrJSTUSkjRiRrpSEjoWIfmVJFoeRMtItGJ
KEKHWlaIoAjUGNdJyDHYdUTAuE5sxTIxAmxAW1xeVlg2GIODHROMFtvYcu+T
u7k12vWuZ3dmx899cf20sTbLeua+nrE9z8zO88xfNf7jr/7+z956663dfyFf
fvWbfQ27dv3mX975S/mfv9ux+x/e27H9t3+zY8/297bv+uvGP//T2+S/f5Un
f3q+SkRERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERPTGWHy9fPXOo6OdQx+0fPP+x+ff/ejLhp3/IV/lubwirw/m
xuU9G13m//NVLRER0ZsMe6+NnS4b0kQH2/r/9p//U5qu8mPz3tPSqn03Hiyv
rLBaIiIiqgx7r42dLhu5safSaV+3AUsf25u6hu89ZrVERES0Juy9tq90YZ65
nX1RkLUXtc+2wx2fdg9/d2tsdHz6h7mX8jb5Ks+lQnldWq/o/ftO9ujbWC0R
EREp7L22r3TBnrnNT85ol9jWLg01+eyndb/xyex8a8/Ilv1t9r3vfPiFNDWr
jSPMo5JqYaRQSFmikHJ5zOKxZuW3cjyutwXMXntNjtKFfOZWfoCte7xpd0vz
ucvSw69qCc9fvjrWdUXa3zZE73Ce1VYQ7FFJVTBSKKQsUUi5PGbxWLPyWzke
79sCY69djpd0gZ+5lTXaWt4+8Ln0mWte1N2Hz6RLb0urR2P6qnZNIR+VxIeR
QiFliULK5TGLx5q9V44HYFsA7LUr8JIu8DO3Up7156V7PDE9l3CB0mFuPNJp
YdMt2Fe1pQI/KnmjUuBliULK5TGLx5q9V44HY1t432tX5iVd4GdupRjrJ0sz
yrpSWWxhYcl+I6T/nNYvgq9qSwV+VBITRgqFlCUKKZfHLB5rVn4rx4OxLbzv
tSvzki78M7d2zCXlJe/PR8k2soJ3Hr+YyjJ9VVsk8KOSmDBSKKQsUUi5PGbx
WLPyWzkemG3heq+9Lhfpwj9zK31j+1FP0k8uR1rAfhGGRicSLs1XtUXCPyqJ
AyOFQsoShZTLYxaPNSu/lVfFxTh0mG3heq+9LhfpXJy5tcuh5ZgrlfJKnbpw
3Roh4Zg+X9VGhX9UEgdGCoWUJQopl8csHmtWfiuPz8s4dKRt4XevHYeLdOGf
ubUjL/nhrPbkf3zzhUW7aiXJEZmvaqNcHJWsCyOFQsoShZTLYxaPNSu/lcfk
aBw60rbwu9eOw0U6F2du5QhRl/Bp93C65RXpGLitK9pzorvmhfiqNir8o5I4
MFIopCxRSLk8ZvFYs/JbeZwCfI1DR9oWfvfacbhIF/6Z28XXy/YpQJxxeUnI
r4D1zOXorIYl+Ko2ysVRybowUiikLFFIuTxm8Viz8lt5nFX7GoeOtC387rXj
cJHOxZnbq3ceWVe2HuUV2fHJ1zWXuuqt2qjwj0riwEihkLJEIeXymMVjzcpv
5ZV5HIeOtC387rXjcJHOxZnbo51D2RSpPuu9qatrah+s4dt9VWtcHJWsCyOF
QsoShZTLYxaPNSu/lVfmcRw62LZwuteOKfx0Ls7crkYuSvnu1lidyou6mZ+q
udu86q1a4+KoZF0YKRRSliikXB6zeKxZ+a28Aqfj0MG2hdO9dkzhp3Nx5nY1
8llANtM7jE39qKvb3tRVw7f7qlZ5OSqpDCOFQsoShZTLYxaPNSu/lVdekcdx
6HjbwuNeO77w04V/5lbZb2tmM7To6mS9NXy7r2qVl6OSyjBSKKQsUUi5PGbx
WLPyW3kFTseh420Lj3vt+MJPF/6ZW9Xwy9UvdSos3TX6qlZ5OSqpDCOFQsoS
hZTLYxaPNSu/lZfjdxw63rbwuNcOc121rTH8M7dqo3r1clxZw7f7qlZ5OSqp
DCOFQsoShZTLYxaPNSu/lZfjdxw63rbwuNeOL/x04Z+5VRvVZ2480lnDt/uq
Vnk5KqkMI4VCyhKFlMtjFo81K7+Vr8n1OHSwbbHqc68dX/jpwj9zq+woTH5/
61RYlB2F1XaZja9qlZejksowUiikLFFIuTxm8Viz8lv5mlyPQwfbFqs+99rx
hZ8u/DO3qvnc5Wx+bVV7f64hwdUpvqpVXo5Ksl/mRq0RKUv2a8lmjR6zeKw5
3eWEsEbv49CRtoXyuNeOL/x04Z+5VfZxRjYTINiovUvX7tfw7b6qVV6OSirD
SKGQskQh5fKYxWPNym/lpbyPQ0faFsrjXju+8NOFf+ZWyVGkjQd8Mjtfp/LU
85ev5PhRjyJrm+3NV7XKy1FJZRgpFFKWKKRcHrN4rFn5rbyU93HoSNtCedxr
xxd+uvDP3BrrNrf2jNSjNmNX1yS5kMNXtat+jkoqw0ihkLJEIeXymMVjzcpv
5aW8j0NH2hbG3V67KoGnC//Mrem78UC/d8v+tvnCYj3KW/35dhU2P3DX4GjN
y/FV7aqro5IKMFIopCxRSLk8ZvFYs/JbeSnv49CRtoVxt9euSuDpwj9za5ZX
VuymZse6rtSjQiGHDLqKrYfOJpmNzVe1q66OSirASKGQskQh5fKYxWPNym/l
pbyPQ0faFsbdXrsq4acL/Mxt1PC9x7oE6T/fffgs3fLExPScjW1M/tGJr2od
HZVUgJFCIWWJQsrlMYvHmpXfyktpiga349CRtkWUr712tQJPF/iZ2yL7Tvbo
QmRp6R5RypGj9OR14XIUlsoyfVXr6KikAowUCilLFFIuj1k81qz8Vl4EYBw6
zLYo4muvXa2Q04V/5jZKWs/6tI1HOtOaLU2WY58CSJ9cuvepLNZXtb6OSsrB
SKGQskQh5fKYxWPNym/lRQDGocNsiyK+9trVCjxd4Gdui8gvr306IL3o5HdP
kyVYM27a3SKtkXCBUY6q9XVUUg5GCoWUJQopl8csHmtWfisvAjAOHWZblHK0
165B4OlCPnNbqnc43/DL1S9ScH5ypuZFST/ZypPH+e/vpFJhlKNqfR2VlIOR
QiFliULK5TGLx5qV38qjMMahY2yLNTnaa9cg5HSBn7ktdenafb2eWX8RTl24
Xu3HBFKbHHPZj7osrX4/JI6q9XVUUg5GCoWUJQopl8csHmtWfis3MOPQAbZF
OY722jUIOV3gZ25L5caeWv9Z+7odA7fjjLOT98g7i7633qfNvVTr7qhkTRgp
FFKWKKRcHrN4rFn5rdzAjEMH2BYVeNlr1ybkdCGfuV2T/BbvPH7R1mLHUGe+
vXUzPzU29aP2qOWrPJdX2vtz8q92OGDvz+ZH3Uu17o5K1oSRQiFliULK5TGL
x5qV38oNzDh0gG1RgZe9dm1CThfymdtyhkYnth3uKGrPOA/pLWc/x5eLat0d
lawJI4VCyhKFlMtjFo81K7+VK6Rx6N63xbpc7LVrFmy6kM/clrO8siK96D0n
uot67Gs+5D1yLCC/mFne9cBdtR6PSkphpFBIWaKQcnnM4rFm5bfyVbhx6K63
RRwu9to1CzZdyGduK5OfZzlGa2oflPobj3Rqx1i+ynN5RV6XBq/3vRviC7xa
j0clpTBSKKQsUUi5PGbxWLPyW/kq3Dh019sivsD32gmFmS7YM7eUGb9HJXgp
8LJEIeXymMVjzd4rX4Ubh+56W1DIgj1zS1nCOCrBSKGQskQh5fKYxWPNriuH
HIfudFuQC2GeuaXMYByV1JCiY+B/rvzvxNHOoQ9avnn/4/N6I2n5Ks/lFXl9
MDe++HrZT5aHAWZJmKu2nzRJevXOo7q2xgb+1tScLvDf9Aq5DrT07jrR/dt/
+68wKy8Hchx64D9FROQdxlFJnBT/ff3+wbZ+u+CqwkN2JbJn7LvxYEP+lsbK
ci3vIku1uWr7SZNuWMatkeVvTVrpQvtNryLXntPvNX+169+7/+nYhRAqXxfw
OPTQfoqIiLzIjT19/+Pz6+7ySh/bm7pCu+QeKUty2K2Bmg41VxT8OHQiIopp
9kXB5qC2x7bDHZ92D/fdeHAzPzX57Kcns/PyVZ5/d2tMXreJWeyx72RPusMQ
mCU57NZATYeaa01vyDh0IiKqID85o5ef2dkJ2bXJbm7db5S9YWvPiPz9t++V
/cLo+HQGNZeDlCU57NZATYeaqwKOQyciepMN5sajH281n7tc7SCC5y9fHeu6
YsMQ5EnvcL5O1VaGlCU57NZATYeaKw6OQyciegPJjs/+nr994PPc2NOaF3X3
4bPoh2XZ7/6QsiSH3Rqo6VBzxcdx6EREb5T85Iydgdl2uCP5x1s/zL1sPNJp
Z2Oy/HAQKUty2K2Bmg41V204Dp2ICN7si4JdkyY7vrT+qssexMZQpH5HlXKQ
siSH3Rqo6VBzERERlWOjdN8+8Hm6F/zLXtU+HNx5/GKKSy4HKUty2K2Bmg41
FxER0ZpyY0/tgqsk16SVk5+csaETQ6MTqS8/CilLctitgZoONRcREVE5NoF2
87nLdVrFqQvX7QPHuo4sQMqSHHZroKZDzUVERLQmG6u7ee/p5PeALme+sGjz
HNZvDC9SluSwWwM1HWouIiKicg629esu6dPu4bquqGPgtq5oz4nuOq0CKUty
2K2Bmg41FxER0ZoWXy/bvDFx7uSSxOyLgl0FV1hYSn35SFmSw24N1HSouZKT
lrl659HRzqEPWr55/+PzOsmAfJXn8oq8Ppgbl/dsdJlERFQ1+fNul41lsLod
n3xdv48FkbIkh90aqOlQcyUhncyDbf3WRa/w2Lz3tPRL+2484BWwRESOHO0c
yuYDQfVZ701dXVP7YOoLR8qSHHZroKZDzVWb3NhTG8ZV1WN7U9fwvccbXT4R
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
iIiIiIiIiIiIiIiIKEv/B+//wjw=
     "], {{0, 115}, {900, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{900.1000000000082, Automatic},
   ImageSizeRaw->{900, 115},
   PlotRange->{{0, 900}, {0, 115}}]], "Text",
  TextAlignment->Center,ExpressionUUID->"ca48a576-f83d-451c-a1f5-f35d1a64ec05"]
}], "ItemNumbered",ExpressionUUID->"1eda6b5e-b470-4a83-9bde-0c5556ad8c58"],

Cell["\<\
Juan decide donar la mitad de la tercera parte de su salario mensual. Si el \
salario mensual de Juan asciende a $4,200,000, \[DownQuestion]a \
cu\[AAcute]nto equivale la donaci\[OAcute]n de Juan? \
\>", "ItemNumbered",ExpressionUUID->"143cd452-392b-447c-8827-46e5b7d3fe02"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Soluciones a los ejercicios", "Subsubsection",ExpressionUUID->"7b3dde16-bbc9-487e-8258-c6452b8601e2"],

Cell["\<\
En la Empresa Tico necesitan un cajero. Para ocupar este puesto se presentan \
5 hombres y 7 mujeres. \[DownQuestion]Cu\[AAcute]l es la probabilidad de que \
la persona escogida para ocupar ese puesto sea una mujer?, \[DownQuestion]qu\
\[EAcute] porcentaje, de las personas que se presentaron a este trabajo, son \
hombres?\
\>", "ItemNumbered",ExpressionUUID->"2e69dff6-b4fd-454b-85d9-e83746d469c5"],

Cell["\<\
Observe que la probabilidad se puede establecer como una raz\[OAcute]n, as\
\[IAcute]: \
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"368f6eb0-c545-47f6-ba39-aa52974149bc"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"P", "=", 
   FractionBox[
    StyleBox[
     RowBox[{"N\[UAcute]mero", " ", "de", " ", "casos", " ", "favorables"}],
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"N\[UAcute]mero", " ", "de", " ", "casos", " ", "posible"}],
     FontSlant->"Italic"]]}], 
  TraditionalForm]],ExpressionUUID->"6e1b5d87-334a-42ad-902a-aef6dd488210"]], \
"ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"148bd60a-31cf-481f-b618-12c088f4c625"],

Cell["\<\
Para saber cu\[AAcute]l es la probabilidad de que ese cargo sea ocupado por \
una mujer, establecemos la raz\[OAcute]n:\
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"17badced-6c54-417f-b30c-9508d675f986"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "=", 
    RowBox[{
     FractionBox[
      StyleBox[
       RowBox[{"N\[UAcute]mero", " ", "de", " ", "casos", " ", "favorables"}],
       FontSlant->"Italic"], 
      StyleBox[
       RowBox[{"N\[UAcute]mero", " ", "de", " ", "casos", " ", "posible"}],
       FontSlant->"Italic"]], "=", 
     FractionBox["7", "12"]}]}], TraditionalForm]],ExpressionUUID->
  "b4f0c9bf-36c9-423e-943e-a6187e4826db"],
 "      "
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"96a12d4a-e3e9-4f6b-acc5-8c52914e764c"],

Cell["\<\
Para saber qu\[EAcute] porcentaje de los candidatos al puesto son hombres, \
establecemos la raz\[OAcute]n:\
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"564c3c40-6326-4bf8-b226-c96a7170dd5b"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "=", 
    RowBox[{
     FractionBox[
      StyleBox[
       RowBox[{"N\[UAcute]mero", " ", "de", " ", "hombres"}],
       FontSlant->"Italic"], 
      StyleBox[
       RowBox[{"Total", " ", "de", " ", "candidatos"}],
       FontSlant->"Italic"]], "=", 
     RowBox[{
      FractionBox["5", "12"], "=", 
      RowBox[{"0.4157", "=", 
       RowBox[{"41.67", "%"}]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "002a1480-cee7-461f-bd9c-aa78e5ff6984"],
 "      "
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"85e01b76-787f-48ed-bad8-e8b5c64309ca"],

Cell["\<\
Luis vende las dos terceras partes de su finca a Juan. Pasados unos \
a\[NTilde]os, Juan vende a su hermano Andr\[EAcute]s la mitad de su propiedad \
a la mitad del precio que la compr\[OAcute]. \[LineSeparator]Andr\[EAcute]s, \
con la parte de propiedad que tiene, le vende a su hijo Pedro la mitad de \
esta a la mitad del precio que la compr\[OAcute]. \[LineSeparator]\
\[DownQuestion]Cu\[AAcute]nto le pag\[OAcute] Pedro a su pap\[AAcute] si se \
sabe que la finca de Luis originalmente ten\[IAcute]a un valor de \
$1,200,000,000?\
\>", "ItemNumbered",ExpressionUUID->"7274faa5-ce56-4eaa-ba9b-f13a77f9780b"],

Cell["\<\
Existen diferentes formas de abordar este problema, todas trabajando con \
operadores racionales, veamos una de ellas:\
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"74bd5675-f6bd-4df6-aba0-449786754b5b"],

Cell["Juan compra las 2/3 partes de la finca de Luis.", "Item",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"48b2763e-f72c-4dc3-890d-1e0e4edaf49d"],

Cell[TextData[{
 "Andr\[EAcute]s compra la mitad de la propiedad de Juan, es decir ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     FractionBox["2", "3"], ")"}]}], TraditionalForm]],ExpressionUUID->
  "7969574d-5b49-4313-93d1-82fe1885c383"],
 " partes de la finca de Luis."
}], "Item",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"fedd6438-2458-4431-8b8b-9c7ba0a0bbd8"],

Cell[TextData[{
 "Pedro compra la mitad de la propiedad de Andr\[EAcute]s, es decir ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", 
       FractionBox["2", "3"], ")"}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"61738b3e-c355-4c72-86ba-afcd63904043"],
 " partes de la finca de Luis."
}], "Item",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"d5d7f7ae-be4c-49f6-8f3b-76cf8c2b5ee9"],

Cell[TextData[{
 "Si la finca tiene un valor de ",
 Cell[BoxData[
  FormBox["1200000000", TraditionalForm]],ExpressionUUID->
  "b26adaa4-e972-48f3-b669-1a3443d0adfb"],
 ", Pedro pag\[OAcute] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        FractionBox["2", "3"], ")"}]}], ")"}], "1200000000"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "6"], 
      RowBox[{"(", "1200000000", ")"}]}], "=", "200000000"}]}], 
   TraditionalForm]],ExpressionUUID->"d2988fd6-1e4d-4e7d-9713-f1b63cbe5b4e"],
 "."
}], "Item",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"c5c9b629-ed4b-4539-bdda-441fc076c91c"],

Cell[TextData[{
 "Pedro pag\[OAcute] $200,000,000 y tiene ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "6"], TraditionalForm]],ExpressionUUID->
  "18d1c93e-8740-45cb-9253-29df7c2e5655"],
 " de la finca."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"62185706-bd7c-47c3-bd62-59854c3c7c6a"],

Cell["\<\
Escribe otra forma de abordar este problema y ver\[AAcute]s que puedes llegar \
a la misma respuesta.\
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10001.},ExpressionUUID->"9abdb937-548f-4bac-9780-f36d7d53f7d4"],

Cell[TextData[{
 "Carlos y Juan deciden realizar una competencia cicl\[IAcute]stica en una \
pista. Cada uno pedalear\[AAcute] por un minuto y el que haya recorrido la \
mayor distancia ser\[AAcute] el ganador. Carlos recorri\[OAcute] ",
 Cell[BoxData[
  FormBox[
   FractionBox["7", "6"], TraditionalForm]],ExpressionUUID->
  "9d9addcf-d937-4fe6-afbb-8fc1157b1005"],
 " de la pista y Juan ",
 Cell[BoxData[
  FormBox[
   FractionBox["6", "5"], TraditionalForm]],ExpressionUUID->
  "d0d47f24-8c1a-42ac-b7d2-49d9c0a1c284"],
 ". \[DownQuestion]Puede decir quien gan\[OAcute] la carrera?"
}], "ItemNumbered",ExpressionUUID->"ea1ee2bb-5e0b-476d-90ef-5fb77b49bafa"],

Cell[CellGroupData[{

Cell["\<\
La estrategia para comparar fracciones y establecer cu\[AAcute]l es mayor o \
menor que otra, es buscar fracciones equivalentes de tal manera que tengan el \
mismo denominador.\
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"7b562138-cc6c-4334-bd48-b22905395dd0"],

Cell[TextData[{
 "Lo primero es encontrar el m\[IAcute]nimo com\[UAcute]n multiplo de los \
denominadores para saber c\[OAcute]mo amplificarlas:\[LineSeparator]",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", ".", "c", ".", 
     RowBox[{"m", "(", 
      RowBox[{"6", ",", "5"}], ")"}]}], "=", "30"}], TraditionalForm]],
  ExpressionUUID->"2471712e-60ec-4a82-a89a-33b73ae398e7"]
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"5ac1af79-5dfe-470f-aa70-8704d268c0a9"],

Cell[TextData[{
 "Luego: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["7", "6"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"7", " ", "5"}], 
      RowBox[{"6", " ", "5"}]], "=", 
     FractionBox["35", "30"]}]}], TraditionalForm]],ExpressionUUID->
  "efc3666b-0948-45f3-be67-b56f12dbe407"],
 " y ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["6", "5"], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"6", " ", "6"}], 
      RowBox[{"5", " ", "6"}]], "=", 
     FractionBox["36", "30"]}]}], TraditionalForm]],ExpressionUUID->
  "39adb9c9-b75e-4184-863b-e7665abb5919"],
 ", por tanto, ",
 Cell[BoxData[
  FormBox[
   FractionBox["6", "5"], TraditionalForm]],ExpressionUUID->
  "b4f6fed7-b2bc-4ce9-aab7-30475eded350"],
 " es mayor que ",
 Cell[BoxData[
  FormBox[
   FractionBox["7", "6"], TraditionalForm]],ExpressionUUID->
  "84deaae4-8bd7-4d05-9885-28bea9a10587"],
 "."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"736ccfd4-f019-4c4b-a4f9-fe0c02dd818a"],

Cell["\<\
Juan gan\[OAcute] la competencia al recorrer mayor distancia que Carlos.\
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10002.},ExpressionUUID->"7b837bba-9053-4fa7-b9ee-13a519ce45c2"]
}, Open  ]],

Cell["\<\
La raz\[OAcute]n entre la venta diaria de jab\[OAcute]n del almac\[EAcute]n M \
al almac\[EAcute]n K es de 7 a 5. En el almac\[EAcute]n M, la raz\[OAcute]n \
entre la venta diaria del jab\[OAcute]n tipo A con el de tipo B es 4 a 3, en \
tanto que en el almac\[EAcute]n K, la raz\[OAcute]n entre la venta diaria del \
jab\[OAcute]n tipo A con el de tipo B es 7 a 3. \[DownQuestion]Es posible \
establecer la raz\[OAcute]n entre la venta diaria del jab\[OAcute]n tipo A \
del almac\[EAcute]n M y el jab\[OAcute]n tipo B del almac\[EAcute]n K?\
\>", "ItemNumbered",ExpressionUUID->"e4d78ded-668f-4f14-a2a5-4486e9710b3c"],

Cell[TextData[{
 "Como el problema hace referencia a la venta de jab\[OAcute]n en los dos \
almacenes M y K, vamos a escribir, por acortar, que la raz\[OAcute]n entre M \
y K es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"7", ":", "5"}], TraditionalForm]],ExpressionUUID->
  "94305d72-199a-4cdd-adad-8fbc882157c8"],
 ", lo que significa que por cada 7 jabones que vende el almac\[EAcute]n M, \
el almac\[EAcute]n K vende 5. Gr\[AAcute]ficamente se puede representar as\
\[IAcute]:"
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"99ddde0f-8028-4124-8e8b-6a76ea089a30"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQdsVNfW76OXT+hFQuIhhCJQLIromBoTg0MgBPjoNfQWMB3TTQCHEgKh
l0BIIJQASeiEEDq44IJ7b9i4917AGFcw6621z+wzZ8bjmKvkMtw76yf9Gc+c
mXP2bM7M7P9aa+/Tyn7F+AX/55133nH8v/jP+DnrBqxePcfp8/+HdyYud1y8
cPn8ecOWr5m/cP7q3vbv4oNDUIfwj//BW2AYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhvkPoyI3F8pSU+FVdbW5m8IwDMMwDMMwDGM5vHpl7hb8y5B3jPn2
W4jesAGqi4rM3RyGYRiGYRiGYZj/el48ewYZly9BsL09pJ45Ay+ePjXYnnb+
HEShR6sqKDBTC01TU1EBcXv3gv/kyZBy6hS8LCv72/tLwfcff+AAPI2Ohlc1
Nfpt5eVQ6OsLj3ftgpy7d/9u0xmGYRiGYRiGYf5jIb8UOHMm3GjYEPzGjYXi
4GCD7aELFsBdKyt4npRkphbWTdaNG5B9+zbU/AN1rOSlfUaPgpvNm0HMjh3C
U0rK0tIgePZsuNGkCUR95fS3j8UwDMMwf0V1VQ34+RWDu3sBVFXW1P8ChmEY
hnmDZFy6CN7Dh0EQeiQfvE0+ftxge/jKFeDSqaPwUURlfr7wk5SXLI2PhyL0
nKUJCSIP+OrFCyjPyoLikBB4EhEB1cXFtY5HNafkW8mrPgkLg/LMzFpzGcm/
0T6fhIZCWXq62K8Wev7z5GRlH+HhYk6klpfPn8PzxESoyM6G8owMKMb91NUe
CXlIr4ED4eI774DfxAlQjsdVDvYKCr29wblDe7EtwnH1a/ctwzAMYz5oikZe
XiXExpZCQX5VrSkbOTmVkJpaDjVvmUWjnzxPzyJYuDAcNm6MgdLSF/W/qJ79
paaUQW5upcntz0peQHZ2xd8+DsMwDGM5PPr6a/D6tD/k3L8PvqNGQtjSpQbb
I1avAtcu1lCB3pCI/+478OrfD+L274fA6dPhbpvW4DtuLGTdvAlPIyMhdtcu
cOnYQfjOBHyutgaW/FzCoUPgia93btdW+LKwxYuhyNfXoHY039NT5ETvt20D
IQsXCk+q/fEnD0rtdOvZAzxsbSH222+hIidH3V7k5yeOEb5iOURv2giuXbuA
q3XnWu3R8qKkBLwGDIBrDRpAyNy5kOviAjXoi8l3pl+4AA+H/C9cRQ9Jnpph
GIZ5+8nKqoStW+Ogl40n7NoVL/ykls2bY2HSxCAoKqwyUwtNQ16O2rZsWST4
+hb9bY9L73vC54GwbVucyW0XLmTAvn0J4O9fd5yVYRiGYSSUM4xYtRJC7O3F
+jThDg4Q9MUX8Bz/lqgeMjtbub/GUXgpmodIfjJ661ZRC0vzKcmPJh0/LuYp
BkydCu7o75KOHhWvo1zio2++Ad8xoyF640aI271b+ED3Pr0hFH1ktW4eJuUe
o9avE/sn/+g9YjiELloE1U+eiO1PIyIg+cQJSDxyRMxdJI9Iz089+5vqc3Od
neE6ekE39I4JBw9CHD6P/K62PcbQ8T3RSzujb6V1epJw/+X4nktiYsRxqJ9u
NW5cy2MzDMMwbyceHoUwdkwgtLRygQkTAsHb29AjTZ8WDJ06uEFOTkUdezAf
ERElkJjw/B/ZV2ZGObRt7QL29mEGj+fnV8Ivv6QLr3ruXAakpZX/I8djGIZh
/nuhvF/2zZsQ+eUayPj9ings689rEL5smVhjR9aPGntImg94E73U4z171HVs
6Pku1p1F3o9qU4mSR4+EHyPvJo6H+yM/R95Mm1Mkz+qC+y/X+b+Ew4fBe/Bg
yLl1S/jG9EsXIXbHDnWtn8Qff4SQefMM5ivSOjcB06ZBvru7uJ/r6gp3mzcT
3lbW4JIX1LbHGDqW5yd9xbFpjR6qWaV8J+2L+igR20W5U/KzDMMwzNvPgQOJ
MHSIH2zd+ljc/vBDssF2qhXtbeul5iEDA5/An39mQ3h4CVy8mImvT4Br17JF
DSjlBj09C8U+jx1Lhfj4UoN90c8ave7kyVTYvz9RHMvLq6hWfSjVz166lAnf
f58E7u6FUFH+0mD70yfVcPNmDpw4kQq//poOISGG69xlpJfDlStZ4ONTBG5u
BXDoUBIcP167PVqysirA5kNPWLo0Un2M3vPJkymwaFGEaHNRIV8fi2EYhqmf
mqoqkTf0GTtG5OYK/f0h+eRJ8B0/Tvinl+VKPLJWHhK3UZ1qSWysuq+ce/fg
XosWkHL6tPoYeT6qMw1CH2d8XJoTSfujeZWBM2aI/Zfr9h+5fh08sPkQylJS
1Ndo61yjN28Gt+7dRK6RamdJlJO836Y1ZFy5rG9PyxZindX62iOhmlWPj+2E
p82+cUPU59I8yNRffgH/qVNFra677UfCvzIMwzBvNy+qX4GDQySMGxsIwcFP
YfQof1i1Kko8LpEesqRE8XmrV0dBSytnWLfuEXw+LhDatnYW3vPnn9Pg3r08
+OqrR9CxvZvI6dFz4uOVPCH9RD18WAgrV0aJ/XVo5yqeM+HzILh+PUetRaV5
h+QL+9o9hFYtXWDihCC4fTtX3V5W9hIePCgU+cJuXT3ApqeHOCYdRy4LcONG
Dlg1d4bJk4PE8bp1ca/VHmOkh6TnE8/R1549mw5zZoeKGtayMp4HyTAMw7we
tO6M/5TJcK1hQ7hr9YHI0ZEPpPs090/WjpJnNPCQ5Cm7dlHzjYT0kHQdEAnN
L/Sw6yM8mRZa24bmJVJtqP+kiSKnSZ5RzlOkx4Wn1OxfS8y2bXD13XfhbqtW
os3O7drBLSsruNmoEWTfuqVvD3pImsdYX3skwkP26S3eX8HDh2I+JeVn6Xje
w4aKOZkPBw+G4Dlz/rWOZhiGYd4olBOMiioRHnLLlsdivZj16x/BkiUR+Pgz
9XnGHpLydO++cx0WL44QOb4HDwrAyekRjBkdAI6OUcJH0pzB7dvjoKu1u5hj
STwvfYnHioCZM0Lg1q0ckc8kr9jvE2+YMjlYbCfI/82bGwYbNsTAmTPp8MWs
UJg/L0zdfudOHuzdmyBqcENDn4r7u3fHi7xmcrIS16W8aMP3bsGAT33E/uhY
xu0xhjwkzQn98stoscYr5THJg+7cGS/WGmIYhmGY14HWNaX1TH1GDAcv9Edx
+/aJtXDo1nv8OOGfKC9JRK5dC27GHhLvyxpRIufOHeHZaE6iRHoyrWdLO3dW
1MpGrnGER1u2iPpQmqP4oEd3qMzLU/aPntWtW1eoqMND0lzK2++/D5FOThC7
cyfE7dkDCUeOQCb6PbkPqm19nfZoUT0kHp/qcP0mTIBI/JvqYal+ldagJW/N
HpJhGObthupDT51KhTVrokX9KXHvXj6sWBEFp0+nqdMpjD0kzQts1cIFrl/P
VvdF6820b+sCe/bEizwhQfm+dm1cxesJ8mXkHb29iwzaMQs9ok1PT1GfSmza
FAuDB/mKmlfKK9K1O+h18tod5HfpNVooTzlyhL9Yp5X4449ssGp+D7Zteyzy
iabaYwzVz9p+5AVTpwSJ4y1YEA4z0O/KvmEYhmGY14FyfsnHjgk/lHX9usG2
PDc3cS1E8ncvS0uFZzPpITXr7ryOh6QaVu+hQ8CzXz+R5xO1rOjLfEaNVDyj
bl3VmO3bweOTvvCE1mJF6PoftH9ZW0tzI2nN1peV+vX16LWFvr7qNT5e19Nq
kdtpzZxK3A+9b8+P7UR7k7CvyDN7fTaAPSTDMMxbDtVmUi7RrrcH+sZIUa9J
OUbbj9xFvlBCXkrrIcmD2fX2gsICfW7u99+z0Fc6izmKElrLlPJ62vmFBNXJ
hoWVgItLAVy9mgX9Pnko6lblnEiae0j3i4tNzz0kz0t1qTt3xol5jocPJ4G9
fQg0bXJXeEmCcoht8DmUo6yvPdrtdn0ein3TOrX79iWKNVpdXQvgBZexMgzD
MK8JzSEkL0R+jK6zqIWuv0HrkNL2p1FRwku5tGunrnka5uAg1pbRzlektXko
N6idD0lzHh907ybWZyVq0PP5fT5eXD+E/B7lQWl9nDv4OteOHVSPmn37trLG
67ZtkHn1qlizlXKBVYVKvJTmQVK78zw84FlsLOSi541ct1bMqywKCFD2cetW
ve0xRm6n9/2yskLMpaT6XPLLeQ8eiPbRfMi61uRhGIZh3g6odnXYUD/0Xreg
fVtXVU0a34ARw/3UvOCiRXV5SH2M8vLlTOHZtLlJ2j/NL6S8pfYx8ptUM0v1
quPGBkDjRrdhwKfeUK7LX86fpxyvuMh0/Si99r0Gf4p5mJT7pLmXnTs5Q7++
3mJOJyE9ZH3t0UJrAtn1fijmUZ4/nynW06G2HjyYqO6XYRiGYeqjwMtLXAuR
5gu+MgpCivVa794Fr0GDIM/dXcwHpGsrqnnIVSvBpXMnwzwk+r67VlaQ+uuv
6mOU1yPPFTRrlm7HryD7zh0IXbBAzEuk9WsivlwDD2xshHeT67K+ePZM1Lx6
9P1Y5BLJd2ZduybymATN46R20do2dO2O+61bifVvaO4izXkU7cHj1NseI+R2
ujYkUejjI7wytYN8NnlYajflaBmGYZi3E/Jrd+/mwehRAWI9GpovSHMYg4Ke
wNq10TBqpL9YD5XqWclzGXtIuq+9jqT0kLReq0SuUSM9G9XO0hzHqVOCxfxF
uk6Gs3M+DB3iC30/1uchKU9IcyTz8kx7SFrzh9bRoddSu0khIU8gJqZU9aGv
0x5jyGNSnpLaJ3Og9J4pz/nNN4/FdTQZhmEYpj5ovZrMP64azGnUUpGXB5l/
XoOy9HRxvUaaayiv41Ho56f4tVL9OuLl+DxaT4fmDEoo70jXCsnTXW9DPFZR
IXKQdF1JEtW00txFagt5Q/X4OTmiDpXmaObev68eW0Lr/dBraDvNiSRvqn39
67ZHi9ye7+mpHAM9Ja3zSnlR2ia2X78u8p8MwzDM20lqShns2BEv/FhgoGGO
zdf3ifBZVNtK9aq0Dus/4SHJl9n28oIRw/3FNRYrK2vAx6dYPKb1kDt2xIm5
jb6+xegJX4i5lpQLlNf32LMnAdugr7VV2lwsrr1B74uQech/xUOK7T09wdEx
2uDx6OhnYl0dul4JzZlkGIZhGIZhGIaxNGhNU/JpP/2Uol73UUK+ka7bSNft
oOsuLlsWAZ07PoCnTxSPR+vMdOrwAP2U/vrDdA2MJo3vCC8pycwoh3ZtXMQ1
OAhaV5XmOk6aGCSu1Uieb+PGWGjc6A706O6h1s7SNR3Jx9nbh4qcKNW7ko+V
OUbKOx49mgInTqSI282bY0XukOZwxsaW6tqTUW97jPmr7dQm2j9djzI5uczE
qxmGYRiGYRiGYf57oTrVKZODhJc0BV2zg67BQbWttNYq+clS3bU1qB6V7mu9
J61l07+ft6gvldD8QqqVpXVUJWFhT8XrbXt5ivmLtC7OxAmBMHlysOpRqX6W
9kc1rp06uKF/jIbo6BKD9gUFFYv5lHStDvKzy5dHQWRkibqW7Ou2R8tfbS8u
qoarV7NFTSv1DcMwDMMwDMMwjCVBdal0rQt5HQ5j6HoYiQnPxS3Vb9LfNcql
NSAzo0Lc1y4TQDlEygE+K9E/SOuv0jEyM/X5StoH3Q8IUOZe0t+U10tMNNwf
5SzpGpU0R5PqXqU3lFRWvhTHoxpWuvZHaorhc163PVrq2077Sk0tF36SYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYZi3m+rqasjKyoKkpCSIj4+vpcTEREhPT4fKykpz
N9WsFBYWQkpKisk+IqWmpkJJSUn9O/ovhfuHYRiGYRiGYSyDmJgYGDFiOHTr
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
PWQujjGOHj2Kn+PN+Fn7spY24Lh23759Yq0kS6UGx6B//vknfvdtM9lHVIe8
fft28MTfeEuE1qK+du1avf3jheMhS4b6ga41MG7cOPy+n11LdH3Ntjimo7XJ
LBlaA+VDGxto+v77MNveXtHcuYrw7yk49qe4lqWuGUPr1lJcpknz5mC/aJGi
xYsV4d9TvvhCxGzmWui1TyTL6POG58kk/GzNW74c5q1YYaBm+FvbumtXKCgv
N3dTzcKCNWvqmQ+5QsyHrKz8z54PSSElWfcmRbVzqqpfQXVVjaoqXY0diV6b
kpINNjZ26B/WmNx/cXEF9lN/mDdvGdCpVFZWI+r9SkqqhWRtoKwZlDWERYVS
Sr2hrEEkUU2irE+UtYvaesbsbFqfsUIV1URmZpYryiiHjHRDUU2lttZSrb9M
0dVkamo1KeeRmFCm1nWq9Z5x+jpQmTNJTKzE3/Uk6Nx5CHqdzUBL+BYV0jpE
AHTJHLofEfEUunUbhX5kLcQ8KoOoqFKRqzGuZQ0LeyokczuU6yEFBysKCpJS
ckMyTxQQIGtvFWlzSjLPRLW72npeJSdVKER5Km1dMOWwZE6LpK0rJlHeS1uH
THXJFHORNcuyhvnevTyh+/cL8LYAhg79CvtpFt4vhNAQwPfwSigoiG4BvdU2
aNduOpw9+xhu3cpT83gkU7EXbdxFG3+RMRiZN5RxFxlvoRpy45iLtvZcibWk
CxnHWmS85cwZvSjneeqUXjInKvOklDfVSomvaGMsqfDTT6m6POxikYc9ciRF
xFWkKK7Sp/c2aNnSAXbujITDh5NNxFT00sZSlHhKgsk4ioyl7N6tlXEMRZuj
1sdPpCiXTbltKZnvlqIcOOXDpQzjJrG1Yib6WIleMlYyetQVaNRoOfr2GyJe
8uWXkeIY9JkmzOEhGYZ5M1CtOq0RT3XRpjRo0CBYg+M6uv6fJVNZWQlfb9ki
5ofX1VdDhgzB37JfzN1Us1COA1WK+dXXP7/9E3PY/4Oh2hnqh779+tX5eVu/
fr3Ia1siDg4O4noM33//PZw9dw51VoxBpCjX37lzJ4tfl7WwkNZl7Yz90RvH
3GdR5zQ6i2Pcw9iPjWHJEstcM6awMBesrTvgZ6o3fubOoWchnRei+0ePUv80
gmXLFpu7qWZl0SJ7eL9ZY/RVR9Dnna8lWk+n54fWUFZmmb//ixbN1q05ZHpS
4/LlC/Acs8HfP8vsH+KPP2g+5AcQGGg6X0W5HFrf5k3Oh2QY5s1A12Km8Spd
T8uU6LpQ5RaaEzGGfCT1R119Rf34Jq+B9LbB/VM//Hn7a6i+6P3334dWrVqJ
2LWxaJ2E8ePHW/z1IUtKnsCECZ+L/mjTpnUttW7dCprRuuR795i7qWaB+mf8
+HHwwQfYP21b69RGJ+ojpX/2799n7qaald27d4p+oD5pi31jLOq/KZMnooe0
zJjW/Pn2YG3dESIjwyArK62WJkwYB7a2Nha9LivFZJo1awpnzpyE7OwMoays
DEhLSxVr2ezfv198T3EekmEYhmGYfxcZGRng4eEhxhu3bt2qJVqzPSoqSsxV
sGTo/VM/UH+Y6ifqP+pHS52D8Lr9Q+ebJUPnR32ft+joaDF3yhJZtWqVmOtj
bW0trnNorIYNG0I/Wvuf5v9bKDSnrkGDBmLek6k++uCDD6ARrRPn7m7upjIM
wzAMwzAMw/xbofUytm7dCo6OjsJPGovmb1y+fNmi62voWhB79+4VczBM9ZGT
kxMcPHgQsrKyzN1UhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmGYN8L/B0wbbkA=
    "], {{0, 71}, {913, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{913, 71},
  PlotRange->{{0, 913}, {0, 
   71}}]], "Input",ExpressionUUID->"1f1b4501-dea4-4177-9624-09612467b3ee"]], \
"ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"6a0033d5-9b1e-4a29-b0ac-dc7adfd46c78"],

Cell[TextData[{
 "Por otra parte, en el almac\[EAcute]n M, la raz\[OAcute]n entre la venta de \
los jabones tipo A y B es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", ":", "3"}], TraditionalForm]],ExpressionUUID->
  "cdd15610-efe4-47c2-aede-169ade0d6339"],
 ". Gr\[AAcute]ficamente y con la informaci\[OAcute]n anterior, se tiene:"
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"19e6c36c-4b7b-4d1b-b533-bafea1c3c990"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
YajMYX0mzkHzI+ncFG916deXPeTfwPt6yMePH1c7lmKK1tbWag9JazaSTwzS
Ub+XavTQvlSNMRFd1/6z+ZB0DLWF2kTvhWGYugV5KfJUffs8gb19Bi5cSEaf
/zyR/k3J1azqIaOj8tGi+UO0b+sgveKkSX4Y0N9NbnfsiJF+bc2aMOHXPNDz
Gxf88kswoqNVcx0SEwplLqiJibf0jiZjvNH3uycyd/T8+WR1u/z9c+U5+n7n
iv7Gbhgy2EPOe1SIjS2QczeV69N5fv01VLZbiRFSTm79erfRq6cLNmyIwJQp
fuj9rYv0h9eu6R4fo/c87EdP6TUJmgu6b18cpguPSh6Z448Mw/xTeFcPGfg8
QD6ecnmCVk1UqnOzz3U3jI/0hmeyh3yO4o+0jqNV4EW5X6H4dTFmXJks/OU3
NXpIWiOEaryST7wffU/nMfRaWuNjrd0qxL6MeZ+3/1GheYPkA2nu3/22bWDf
vr3UvZYtcbdRIxlzI7Jq8JDk2zTxmjBBzpEszclRP0f+S3pI4efkNYuKZA5r
7MGDCFy4UPoxiuvdrF8ffrNmqV9Hz7kNH1Zj233Fsdfq1ZPtkO0WPviBkZGs
dZMTGCiPeXbtmrx2soZ/pXmU5HNpHmVNfeI6ZLBcb5JyWN2G/SjzY6N27sRj
4Rup/hDNiaT82DKN98l8GN7XQz7SmEuroHhIylMlMjIy5LmDxb9rVRQPWWsc
8i3rsgaIzzfFO7kuK8PUPWJj8rFnT4zwX2FITCyEn18O5s8PkjVOnz1T1TLw
9c3R8pCxMQXo1NERX3Z2hp3dC5nzGRubj1kzA9Cn9xMZM8zKKpV5oxs3RsKg
xUPxXaEaj6JaNDPFceTHlFxRD48sdO/6GFOn+KvbtWlTJH4e7yvnHYaE5Eqv
uH59hDo2ePBgvHyseLrc3FKcOpUo455BQaq4p61tGpo2thOe0AuBgaq/Ty4u
maLtTlrX0oQ8JMU9yUdSLJbioxS/pDxeXjuEYZh/EjfDbuDr3e1xJdha536X
hEfotqcjjngdko9DX4RIz2m4zQAH3PfhZeFL6Qndkp5g6Z1Fcg0OWnuDiHkZ
jZ2Pt+H3B2vwKN5JHldQViC9JdXaGXV2KNLz03Vel85Ha4LsfbILSTlJOo8h
X0prUi69vUjmzZaV1+HxO6pRKbxgwIIFsr5NhqurzFGl+Ykpd+/K+Fvo+nUo
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
jEZTynhN1XEbleKwf79uKWM5muM5mlLGdjTHeDRF4z3KGM+YMcfRuPFU8flx
ks8dORKHCxeS8TJTVfuBcrZat279QeKQ9LesVatW0pO2a9tO5rXKdQ/bqNY+
bNW6lfD93eEt7kf+Cm/+Af+V039vyqHrPzd3N3z19Vdo2aql7JOqatm6pVxb
88bNGzpf/8H+e6MSra2hT5WVl1XT5SuXYdDaAAatalb3nt3h6eNZ7bW0Tmd2
UTaScpKQkB2PxJyEj6aknEQk5MTLNVN8nnnDNdEF7kmuH1weT90Qmh2MrWe3
oGGXBphlOhM27tY4ef8ETtgdl6LHK/etQMPODbBi73KEZAXBM9ld4zxucvs4
3hm3I2/J+qdU+7Qu6lqoqmYsrfND9W7fVYe8DsDcdQ+MpndC8x+bYJbldPxy
ZgFmH52B3y+uxS23mwgJC8GIYSPQQ3xHZbx48R5fTH/jIKIySPmhVANpz5+L
+7CvxX3wcIQLH6uW8LO09RV+kvaPobqsVc755kNKY86glpQ5he8qem3FuUtL
S+XcvLyKOZLvIppPSXWJ8sXPPw4dip7is+Iv/p7JXM4KhQrvTfpxyBB826MH
MkSflpeU1Cqar5mZkYHn4ljS284tJdG8w/j4eDnXNSYmRiqZ5tLSPNbiIpQX
/UXR/EfRvhdpabKOY3R0tLyWovDw8Gpzg2ltzCdPnsjakKZmZvI4em1KShoK
C8vkZy0/rxTGxkMwatQEOYZP4/evckvVyhXKyVYpK0voZaXo/uVlZonoM5Uy
XpTIGAPFGxRR/IGUmqqKT1CsQqoifkGxDEUU20hMrFCCSkochGIiMkZSES9R
YihKTIXiKxRnCQ/XlCoOQ/EYisuEhORKBQdrx3EothMcnCfOX45VqyxhYGAs
7s88RDshft9KEBZaLLdJScDWrVdk7GjPntvi3OUypkSxJXf3l1Jubi/h6lop
iku5uLzE48cqUexKiWUpcnJSxbpIFPeyt89Qx8QoPkZxMoqbkSiGpoqnpUlR
jO3u3crYG0mJx926pZISs6P43fXrqVqxPYr1UcyPRHFAigcqscHLl5PVorih
jc1zcVw6/jfwD3G/Ol3c20aKNhSIc2SK5zPE+bLE9fNhYnIYTZtOFp7BXbw2
Q9zfJuHkSe2Y5vHjiTLWSXFPEt0n072xpWW8lCpeWnk/TffYFhYqKffldJ9O
9/CKlHt8uu9X+QGVPyC/QB5CFd+t9ByKHyHPsnVrtPA2KlX1PeSHFJ9E3knT
VyneS/Fn69aFy+2mTfEY0P8MGjVcKvy1i7huqnguQa3t21MwauQN4SGXCn9w
R7wuVvpP8qSVflXlYRWPu2RJdV9MXlkVn1f5a/Ldmp6cfLri4SnWT15f0ayK
sQFl7EBzXEEZb5gqxyRUYxOTtcY1VGMdyhgIjY2Ml+MpvupxlZ/GVorGYExI
yriNia8ct2nd6jgaNNiBQYMeief95LjQ8GGeFeNDPmjb5iy++GI7+vW1F8/7
yLEoRcpYlTKGpYx5DRyg0oD+blL9ScZuMP6vIlf8t5+rOGel+n73RKU+T9Dn
Pxrq/QS9vxXqpVKvni5SPb+pUI/H4l7lMbp3q1DXR1rq9vUjfP3VI3xl5Cxl
9KVQl0p92dkZXTqp1NnQCZ06VsqwgxM6tneUatL4Kup9fhwGLe6ifVsHtGtj
J9sdHp4vv8c/pIekGua+vr7yb8ejR4/g6iLuU5+4w+OJh9x6uXshOCAYJQUl
f/la/2RKC0oR7BcMH3cfeLt5VxM97+/lj/zsfH03VW8UZBXAz8OvVoX4heBN
UR0M/mtQ0zjCh/iPsHtghwYNG6BpsybobNQZHQ07ooNhByl63MKghax9ePbc
WXm8enxD4z/y8UWvi1BQWoCCsrqpwrJC2b6c4hy8LHz5zsouzpbb8dPH4/P6
n6NJyyZo1qYZmrRqguZtm8PwS0N89dVXsoZk3759pV/4FMkWHqlPv76o36AB
vhT9ISU8o6LORkb4vF49TJs1S99N1Tvjp0wRn6X66CJ8pBFJ+EWpip+pD/sN
HID8v6FWryZvKmr2SolrkWqvvvv+vBb+mTy4+npCVEOHau1oio5JTEyU9TNp
jUylNrA2ZRgw4DuuqVPBvn3mcrzdzc1d5/5z5y6gZcvWwpup5kNSd2rmxKnz
5DSk5NApKimuruJqei1Fnl5ThQXaKtApVW5ffp628qpIMy9QUa6WStWiMQTV
c68xe/ZSGBn1FvevT0GlrF7lllfojbgO8Ouvm9G2bVfhoYOQnfVajjNUlTLu
oDn+oKn0dEWV+Y+aYxOa4xNVVZlDWaSWkmOpSD2WoalkRYVa0hznUMY6qko9
9lGhpKQi4QsPwMCgh/Du7uL8peK1JWo9Sy4V/vYCmjfvJvy1rWq8JE5jrEQq
X6WYmqUeS1GPqVSOq2iOr2hKM7e1+riLtmj8RVOaubKqcRndonGaqqqag0sa
N241DA2Hwt4+Vo7jkIKCKjVnzlbhjQbg2rUArbxeEuX6asrXV1uUF6xL3t7V
5eWlLU/PLJ2i8SJNUX6ypiiPWZc0x5U0x5eqisabNEW50qSFCw+hRYvBOHrU
VRyXJfd5e+eI7wDVvTfVivhQHpJhmI9LWmoajlkew/at27Fp4yZsNt2sFj3e
9sc2WJhbID42Xt9NrRO4OLrAfJc5tm/ertbWTVthttFMrhm/c+dO3L59W94D
f4rQ/f+tW7dkP1B/VNXGjRvlHLfHjx/ru6l6x8nJSfaFrn4i7dq1C3fu3Plk
P0tU693Q0FDWN5w0aZIUrd9Ha3nQ+nS0xh/NfaH1EBla2+OgXI/B2Liv6Kfx
or9+Vosed+1mJOtI2tvf13dT9cby5b/IPhozZhimTp2AadMmVmiCVJu2Bmhh
0BTx8Z/22h5Hj+6X/TRkiDFmzZooNElDE9GzJ32WPhOe4NNdJ2bp0tno3dtI
/KQ7prV37yZ0+bI1kpOjPm7D6hiWltvRubMB0tJidO7/kPMhGYZhGIZhKJZv
ZmaGYcN+lGtB6tKIEcPlOmwMZP4W+Wpl7cyqGjJkiFwn5VNe+/Dq1asYOXIk
BgwcoLOPaA3SlStX4sWLdH03Va+4uLiIz9JoWfe4ps8S5ZlHRX26/ojyIxo0
aIBt27bh2LGj1WRsbIwWBgYyL/9Thuqy0ljfqlUrtfrn6FGVaDyQ+tHOzk7f
TWUYhmEY5l8CxWALCwtrnF9K+ygfllHlJNN6mzXN1S2U62sW67uZeoXyoamP
avw8iT6i3OpPHf4s/Tm0jgSta0h5mLJmSxUZCP9IXjs5OVnfTdUrtA4XeWml
1k1VtWzZUta5ofW0GYZhGIZhGIZh/q1QPTIvLy9Zu4XmJVSVm5ubrBf2qY9J
UJ0bqoNK81d09RPlT1AdNRqvYBiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG0Qf/
D6CWyIk=
    "], {{0, 65}, {913, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{913, 65},
  PlotRange->{{0, 913}, {0, 
   65}}]], "Input",ExpressionUUID->"f44789a9-c032-4381-9fd2-48f26be986a3"]], \
"ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"d7dfef7e-4b33-4ca1-b7ea-cc99b91207df"],

Cell[TextData[{
 "Finalmente, en el almac\[EAcute]n K, la raz\[OAcute]n entre la venta de los \
jabones tipo A y B es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"7", ":", "3"}], TraditionalForm]],ExpressionUUID->
  "0119358a-d4cd-4c72-8950-cbb491fa8da1"],
 ". Observe que solo tenemos en el almac\[EAcute]n K una divisi\[OAcute]n de \
5 pedazos, y se quieren tomar 10, ya que la relaci\[OAcute]n es de 7 a 3, la \
\[UAcute]nica forma es dividir cada segmento en dos pedazos, observe:\n"
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"9494bbc1-e625-4f5e-a427-112ab257ab38"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvQdQVVcX9s/8/cb5nHHGv+M4jI6O6IC9JhgTX6Mx6puYqFGDokZRERV7
x4aKvVBtWLBRFMWCYgFEQFGK9CaIgkqzUFVEBdTn22tf7uUCF8QG5nX9Mk/O
Pfe0fY+Xe85z1tprtzaeN3La/6elpbXo/4r/jZy8tP/ChZOX//3/i5lRcxfN
mD53qsnguYunTp+68EfjeuLN/wptFC/+j5iCYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiG+aLEPo7BlJNGGOdogHGuo6QmHDfEDHcTTDllpHpv3LFR
GHvEAEciD+FB/n2s8DLDhdseddr25Ny7WO+7Bpv81+F+/r06bQvDMAzDMAzD
MMy/kehHUdIDGhwaBgNnhf44OACtVjZGN0td1Xukvx2G4mD4ftzLS4HZpYU4
l+BeZ+1+UfxCtMUB+rYd0cuuK1yinPDqzas6aw/DfO08fvwYUVFRiImJQWxs
rNStW7eQlJSE+Ph41XvR0dFy+uzZM+Tl5eHOnTt4/fp1rba1uLgYDx48ULVJ
qbi4OClqU1ZWFt69e1er7WIYhmEYhvlf5e27t3jz7o1Kd3PuoPfOHljjs7Lc
+6R3+DruwVKfpmLa6cmYfHI8jE6Mxayz0/H4xeO6btY3R1FODl6mpeGtuIdn
vm7IU7m4uMDV1RUnTpyQcnZ2hoODA44ePap6T/k6IyMD9+/fh6enJ/Lz82u1
rXQ8agO1TdkukpubG06ePInz588jMDAQjx49QklJSa22jWEYhmEY5lvgUcEj
9LX/AZuvrv+o7ZUe873rQbEerf+hhGaE4DeHfjgccRB7Qnbhd4f+iHkU/THN
ZT6SV5mZSLKyQtyypXj1mP34187LwkIZW8vOzlYpNDQUjo6OSEhIUL2nXKe4
qAhFRa9lvPDt2w//G/0UcnJypDe9fv16ufaSaBnFEENCQuTy1NTUWm0bwzAM
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
MNxBTun5Cj1b8Ug8h3MJ7l+lqG1+KVcQlHoDgQ+uf5DCHt7EsWsuaNy1EZrp
a2PgpAHoO66P0M8YM8MQ6yzWwWiCEbS0tLB37966/smsdSi21a9fPzRv3hwr
VqyopHnz5qFBgwaYNm1aXTe1zjh37hzq168vfZ+mc0R+sWHDhvD396/rptY6
z549g42Njfx+jB8/HhOMJmHi5KmYZDxNTKfB2MQUM2bNQ3hkbK21KT//OTZu
2oqp02bCaNIUTCRNNpEymjhFtGk65s5bhLj42vPwj59kY+269TAxKT1P4jdH
KZo3nmKCJUvMkJR0p1bac/36dcyZMwcTJ06Ux68oU1NT+XtYVPTlcycoDk/P
nOiYmtpiZGQk21qbf18vCwuxa9cuTJ8+XWOb6LxRm4KCgmqlPbdu3cKiRYsw
efJkje2ZOnUqNm3ahKysrFppD8N8DBSfoHzRzQc2YYa3CVosaoSWZkLLFGq1
sjF0LBqj1Qoxv7Ts/Rpr6Vcus2q0RDHVWa04B1UuF8toHTm/5D37/BQp979Y
7XVtabFm6Zg3Ruu1pedG0/JVpcs17cNMsb2uhTbaWDStVdEx221sjm6Wuvje
ugN6WLX77NK364hu2/TQcmFjdFjbEv0P98Ivh3qh38EfpH498hN+su8GnSVN
oLuymVz/O+v2qu27W7VV7Me2E/rZ98Kg/T9j4N4+X51+3dtbtm2E4x/y+YXh
0ZEfJKNTY/HHnoFoYdwEfTb3xFyfGZh+0RjzPWfBPnQnMl6mIzg0CD/07IU9
9nvw8uVLmSepFN0bUE5pVXol1v8SOYPvhN6+fYu3JSWK6SeoOii7/Zfff4eh
uMepqh29+vaF8YwZn/sj/ms4d/48dHR1cfnKFY3L3U6L65yeLnyvfXvjeFPe
rI6ODppqa2PQb3+gf/+++KFHe3zXuRV+6K6HDrpNUb+eFvbYbcDL/Aw8z3mA
59k107Ps+yjITcfL51l4VZArlPNelRQ9Q0xEINq0aobmzRrh59498FPPrvhR
X6Gfe3+PDm1byTY5HbLHm9fP8epFxX3nyrHZS4peir+/ok8WcTMkEE2bUB8R
XQz+cygGDvoNA4RoOnjIUHTo1AVaWvXgftajVv7d1m6wlM/B/tNvkDj+35XU
sJE2uvb4EbVR6uG1+Pnsrt8HDRo1lcf+fchI/P7nCKnfhH4WbaS2rli1/ss3
ppS8/EK079gdjZs0w38HD8Vvg4epRPO9eveTbdqyza5W2uN64ow8Xtdu+uLv
7E8M+l1NYr5FqzZo0rQ5biXerZX2REXH4ZjrSRx2PCrkIqeHjjjhwIGDQgdw
/PhxREdH10pb6Dp9+fJlODs7w8HBoZKOHDkia088evSoVtpD0LMyqqVSVZsc
HR3ls0aquVIbJCcnw83NDYcOHdLYHqrZERgY+N77hU/F/ZQ7Wuq0xFzb2Rjj
PkLhCYVXarW8UZknXF3qCZcp3v/WRL6G9LHL/2e0orLI08nPrmFZTZbXqcR3
uzYkz4H4G2pj0aSSWgvJ7495Dfbxb9Cqj1Tp9nQ+dNc2hd46bfTa3A0GNn9h
u7stnE44yufB+/btR2RUFIJDQhAUHCynEZGRiI2NrVLRMTFIiI9HpvjNLUgX
968ZGQplZlbSq4cPK0tcpyrqmdg+4949pKSkIFko5SOVXKqM1FQ8e/wYRTk5
5VScm4sC0YYhv/yCCcOHA8+fS70rlbjYIlds279nT8yaNAkl+fkoFnohtsvJ
ypJ96KifnbroPaWU83l5efK6XSj8tbpelE5fiWXFQm+ESkqnb1680CyxfiUJ
X056K1Qi9LrC/j9FRcL3nxbXUr3WreEh7is04Syu73rCM/r5+Mj5d+K6qhTe
vSsn8vi0z1f0uTVJtL8qvSapPY+g/ZSI/X1O6BkAPeOg+FDR6zJRLKdEvK8u
un+4ffs2unTtgqXLliM3+yFuh7nD//gKeB6cDv9jC+C01QDjBzSErVl/hJ9f
jcBTZrhxsma67rYYQWfMEellhegrO4S2v1d3ghxw0dEMI/s2wcYFgxB52RZB
5zbjxtmNUlE+dnC2nYJhvRthz3pD3A0+gBhf9X3byWPFXd2HO6GuSIk4g+Tw
U5+kJ0neOO+yEf31m2Dn5nl49CAM9+L8kBzjg5RYXzxKDYPL/g3o2akpnPat
Q0HebTy5dxOPU0I+k4KFbiInPU7sO13KfNkcfN+1DUJveONRWkIlTZs8Gn17
d0Nqcoxqmy+ljHvx+KVPdxiPHymOfRuP05LwJOMOnmQmS0WHBeD7bnowWzgD
hc8eK/T0C0ns+9XzbNy/G4cf9Dthlulk5DxORfajByrRfMgNX3Ru3xrrVi/F
a3qmIJ8rVKEX9IwhH0Uvnwk9/2AVvy7A4QP20G3dAh7uJ5An/s5yszJKlSnn
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
4zQEuc3HCRsDmPzeCHaLeyP41EL4u8yU/atqJJdZuHJkCi7t+RsXdw4T+uu9
urxvFI5t7I/5wxrAdk5HOX9x13DZT4zkI+Yd1/wH84Y2wO5F3eCzf7RcXraP
4fJY52x/h9umn+BKfd7W63+STm3+CQeXdcCq0fVhZdwQRxa3wIGFzVQ6LOZ3
z2yMjeOEfzRtLOcPLmr2GdVcTvcJT06+dPsHxhZrRf/W9tS0TV8q9ltH2lnq
CcmH0nStoRbm/aYFyxltccZxC37s1VPGpsLCbgqFlE4/XaGhFRUCZ2dHtGzV
AosWLUB4uPAYEWWi+X379gjf2Fz8Rq3CzZshcpsPFW1XU5HXobFVWrRoIccq
Iv9D7VCK5qmPI3nVzZs3y/Xft79P1YQJE6QP9PDwkMcnqcfiaByY2vCEDMN8
Od6WvIPnRU/Y77SH9TZrWFuWyWqbFWytbbF/z34kJSTVdVPrlJKXJXA/6Y49
O/Zgh/UOlWytbLF1y1ZZk4vqMVN85FuExv2iXJItW7ZU0rZt2+Q4ZZGRkXXd
zDqD6qdSPSFbW1uN58jOzk4+T8jJyanrptY6qamp8t6HntUbjB6HYcP+xK99
uuHnnm3xa+/O+K5jCzSoJ+4hrVehIDsF+Y+ShG7XUEnIzbyFrAfhsg7nk3uh
71VOagSCfY+jm14j6Darhz49WuCnbs3Qq6tCNN9VtyGaNtDCoV1rkJsWqWE/
N/EoOQhpCX5IvXVZyOeTlJHoiytnd6O7bn20bqKFLi210Kl5mTqL+XbaCh21
X4KUiNO4G37qM0qxv6Sbx5Bw47CsM7LVbDj0GmtVK4MBLRDuvUvWFPmSivDZ
jdEDW6qO20Gco27ivHzXQkhMuzQV50ho4/xfcMt/O6K8tyH80uYvo4ubEOW1
Ed6HTDHx1wbQF/8mfdtooV8F9W6lhT6ttWC9sDfCPVbihtsiBBxfoEELEeA6
X9ab8T4wHl77x8Hb4Z+aS2wT4GKCPct/wl/dtTConRb+7FxZA3S1MP5nLRzf
9geuOU8ptw+v/WNwfucwnLUeiLNWQtaDPlrnt/+Oszb/xdoJTbF+UjNcOzQa
wS7jEXp0NOLPzsab9LPiV6EIf//9N8b9M75WfoMoZ6JDhw44evSoxuWU89C+
fXtZ66y2oDybdu3ayfxMTURERMi8SS8vr1ppz5o1X0d/QoZhGIZh/jfJz8+H
hYUFRhsYyFrmQ4cNx18jDDB85Gg5HWlgiDHjjBAUElZrbcrNK8DipSthYDgO
w/82xAg10fzfo8bhHyNjREbF11qbHj3Jx5z5S0SbjPD36PGVZGA4HkaTTZFw
+36ttOey7w0YjDGqVhu22KKaMhqflU3bdqiOS98XGhPeePJETBYaP94I4/8x
wqVLF8o2ePf2i+jdWxprthjZmcmw3boGxkZGmGM6EXNmlNcMk4mYNW0i/LzO
4F3RU7yi8THyH2rQI7zIy8TTrBRkp8cgKzUS2WnRNVd6NF5kJyHE/xRWmxlj
yZyJWLGwshbOnAjL9fNxJ8YfBVm3y+0j60EEMpICkBrvhdQ4oXjvjxY930iN
vwxjg5/QRaceZhsNxEKTwZg7eSCWzh0LG8tN2LbNSsbARowYUSvfHXpeSTma
VDuTnu9WFPV7oLxJGqewtqCx/qiu6NChQzS2ifI2qU21WXeUarssp/prGtrT
uXNndO/eXf6eMwzDMAzDfAqUY0r5reW6gNZxm95pEMMwn4bF2rVo16492rfv
UEn0PsXI1op1agPq7zx48GB5zKpEY2P4+vrWSnsIyqmnfvrVtUlfXx/BwcG1
0h4aq766tpCmTp2Kl4WFtdIehmEYhmEYhmH+3TzJysGtBKo7dUsovnQah6jo
aERFRUtPlJVVO3UwqK/z/fv3ER8fL44dVUmUx3nnzh1Z36S2oP7W5FXj4uKq
bBPltCprvHxpKP5H/Qej5b9P5fZQ3ZfMzEz5TI9hGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhiP8H/U6ONw==
    "], {{0, 70}, {901, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{901, 70},
  PlotRange->{{0, 901}, {0, 
   70}}]], "Input",ExpressionUUID->"7002ecbf-21ac-468c-9e86-ed3f0c399c02"]], \
"ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"294003e4-21cf-4a91-8d95-6822635409b6"],

Cell["\<\
Como se quiere establecer la raz\[OAcute]n entre el jab\[OAcute]n del tipo A \
del almac\[EAcute]n M con el de tipo B del almac\[EAcute]n K, es necesario \
que la magnitud de medida sea la misma, por tanto, se debe dividir en dos \
cada segmento, quedando finalmente:
\
\>", "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"c72f33d3-3271-42c4-b12b-6e3b86828d97"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
+UnyjGfPnpX5P+rPPHr0KPdwDx8+5GMtaUwm+T7ylHl5ebLX0mvi4uJ4Pipt
9+jRI/6cclRj2PehoRxbqZ8MCAiod5tXr17x/knylI3p8xQI/hfIexEJv9Pz
4XNiLnyd58L/jAUCL1qydeZ82fu4MR5essb7vAwkP7mAsFs7UVGmnHzwspJ3
SAu/jOArNgj198LB/XHYvv0ZEhKKagyLyM0txd69z3D7dq5S4moKoaFvYWER
hQULotjv1rfnPT18mI9du5KRkVH3b/DqVSlu3XoNH5/X7Pey4puP9d+Og4MD
jI2NZVq6dCmX/Do6X6WlpWEDu/6ge5vfGzpvrVixAqamprIYzMzMsJVd59A5
TyAQ1KWpfpLqrFLOauKbhBrb0XhGWr/VbxNfzn6fjTEuw7DT/+86+6T+zF8P
90Bgev3jpCgXlo5BfZ67H+yo0UY+dP4VE7hHX/ih85g0FfJxNP6QfNvb6GgE
DhqEOPb7+EluHJjUT8qWx47BDQ0N7uVCJk7A3R6GPB82+eBBPD91ClFWq3Cv
9y/w7dgB4YsW8X4/gjxhmqMjHv01FQF/DIAfbdOlM4JGjkDmJXfZ/j+w32jy
gn5sv3e7dkEQO16m+0VZO+W2Zpw/hzD2e3q/f388YPuK27SJ5+1Wlku+E+R3
PZkvpPjIu/rTsTp34jG/i49X+FnQ+7/dTp9vF79lC17dusXHVL5lnpj2R3Fe
V1dHqr19s/4NBF/2k1T/htql/X+RkZH8nE/1VaW1VakWTmJiIl9H7VKobzMw
MBDPnz+XraMcWfKS3t7efPxjfVBeLe2PclmTk5N5LSF50XGoX5R8LNUMEvOG
CP4tvEoJxrX9Q3B+y+/w2Pk7XK3b4pCxCs7YduLL5zb9Dm/7qXibk4z4hy4I
9liHilLljI/OTX+KO46TcGKxJg5azYJR19Noq/cA9vYZeP+uevxLfPx7tNW9
g9Wr45QSV1OIjy/CoUMp7Dem4RyKxrJv3zO01vZGUFB+jfX5eWVwccng/aDn
z2eiIP/Hzuv9T4A8Wr9+/bj69u0LNTU1Luk6kj27DqBzwrJly/g9x+/N7t27
oaKiAkNDwxqx9WfXQJaWlvwcKRAIatJUP0m5p9S3WNvHPS9M435y870NfDnj
bQZ+P/ozttzdUGefp8Nd0ftgdwQ8v1+nTUpReRGcQh35WEmHx8eR/vY532fm
2xe4n+bHx2Cu9bH6Yh/nPwXKX825exfh8+fjuYsLzxul8YjRlitRIHc9XttP
Ppo8CddbtED8tm0oZt7vA7uujrG15X2b1F9J/Xwf2TU++UtvXV08O3SIv66Y
XbeHzpnD+wmptk0F8w45vr7wMzLCkxkzZPun7R9Pm8bzSl/7++OpmRnv65RC
/Y2JO3fi48uX3PfS8ZLYby15QGmtnGd2dvBsocaPV8h8Q2luLpL27OHxUF+q
IgrZe75j0A4hkybxGMhD0v6yPT0R//ffiFplyfsoU44ebda/g6DpfpL6J2nO
EfJ08h6O2snfydfPofqr5Cepr1Ee8pG0T7omqA8an0me8zj7zp07d47PGyIv
iuHkyZP8mBkZGcJPCv41fGbn39LiQnxkKv1QiOh7R+CySgcpYR58mdZTPyHb
EMVvc3g/Japq6JWVvOevrSj/iOJ3OSgqyEJ5qeL7sLQPai/Kz2T7LZDtoyHi
ApzgfWw0bh2bjH2Lh2DhzIMYMzYWZmbRSEut9rTUX9mx/V3Y2EjuMVIKDvkr
6qN7z5T5ooSrqEjSZ1dWWomcnFL2b72Yb1cben1Bfhl/TXp6Cd+2tLRuTYYP
bH9ZmR/x8qXi9pLiT0h/Xszje/nyIx9HKQ/FR8enuKhvkfocFcUjD3nTtnp3
avR10tjMU6deYPHiKDg6ZvDjip8w8JyVgoICLrpfOXDgQAwbNky2jkTj90mp
qal8maD7j5QbQ6+nvJgXL17w15eX1/XodD6iNjpvZGdny8Zy1MfmzZuhr6/P
83CkMdD+6RxE3tLa2rrB1wsE/0a+xk/S2MnSipq5ZumFz+v4yX5HjXhebG1c
w535nJcPnvvXG1d+ST4WXDFDl516fFvat1RU26f77nboZ9eL15b9b4D8I40T
pNzOAnY9TzVMMy9fQri5OdLkxgjW9pPU53evhyH3cVKoJg6NPcxir5eekKgu
LNX4iWO/gwR5v8LwcJ4XK0/gkCE19k8ekPpAyQPSvt4nJMj6OGk5zMQE4cxj
ykMeM+DPgbK+x+T9+/mxszyq5xGhHFjv1tpIYF5UEQUstjvtDRCzZjXPb41Y
sIDX6CFfGcV+q1PYMXz0dCW1ZAXNSlP9JG3v7u4uO49LIf/n5eXFc1kJ8nfU
v6iong7N73HhwgXep1kf0v5Jyqul835tUZ8nxUJ+kvJulT2fiUDwT+FZqDvO
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
49y/TZs2TSnx0PUZee4ePXoojOfo0aPQ0tLinlMZfGQeiLzrsGHD0L9//zoa
MGAARowYATc3N6XEQ9f3GzduxNChQ6uOPxADBw7GwEFDmdg5dvBQDBs+Eucu
XFJKPFLczl3kxx04aDAGUDy1NHTYCNhu2ITSMuVdd4dHRGHS5CkYxGLq338A
/6ykouXBQ4ZgJvseJSYmKSWe0NAwTGK/RYMGDVL4XRo8eDDmzDHm+QLKICTk
EcaPH8/+ZvXEM2Qw5pqYICUlRSnxELm5uVi2bDmGsL+NopgGDhyIkSNHwNvb
Rynx5OTkYPHixV+M586dO0qJRyD4Hnh7efN7tWsOrMbCO/PQxrIldFYxrWay
bgnddcyXbNLgj7TM1zdF1lWyapz01mtAe6E6VLRVoNZDBbo2GtBZ0/j2r9Yq
xeKfB4u/7WYNfmzZ59PI9uYWvV+teS2g0oq9fyNV6K6VxE/HJdHfScuMtWsq
bv8mrazSCvUaorjabmHv31ajTltj2yluaqf39y1qt0MT2gvU+fsnf6a/XRN6
G2q1W1S195e0t9vSCh23t0GXnbrovKP5Jd2v3mp2rA1a6OtoiH7OP6HvyR5c
0ucGm7Shu1oDnbbroMsuxfuh+zm9DxryezT0+LXqY2eI/s5G0BmrhRbaavht
qxHG3RiGkecGSXRhEMZdH4pOMw2g1koNXVa249t/ed/d+T0auvcxzHEghjr+
0SSNOT0Uv+0zQhsLDfy6pyfm3pqOmZ6TYX5jLnYHbkdiYQIehYXgD3Ytd/Dg
QX5Pl/I6KdeUHqX3eevXexSXFONTE34jn0RFoX3Hjjhz4YLC9meZWejYqRP2
7dvHl6mP6atVVvbFe9SBT55At317nLmk+Fo/9tkz6HXogOPOzk14l99GyadP
7Pp/IEzmzat3myHMu8xQkn/7wP7Gffv1g/nChfVuM4Bd/840NlZOPMy/kb+l
fnUTU1N+fT1n7lzMZsefPWcOpkydClVVVcyfP18p8VCfSJcuXaDF4jGdZ4E5
s2di7PB+GD6gO0YP/gmD+naEZgsVrFwwFQXZscjPisGbF1GNVCTyMqPx9nUK
ivJf4H0j9KEwCyVvs7HEYibU2XGHD+6NyeOHYNzIAVwTRv+JiWMGQUdbHX2N
OiIjJQql71/V2U9RfiZK3ueivOQ9+7dUhPLSbxB7PVCBC26uUFNV4d7RfOFi
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
2y6YKaiWHrL9PWLtsb6+SPf0xEuPy8i9dhWJZ8+gd+fOmMo8bDk7VgU75sd7
d7kq/P2Qe90T/Q27Y+yvv+LFOTdkMaWfPo0M5nXS3M4i5vp1PGave8jeO+Us
32ev5znMTdRd9jqKL5Dt16K9AXb17Yu3bm4oZJ9JATse6S1TFvN0qwzaYXMP
QyQz/5zEvksJO3dKxHx3wrZtEjH/HsvWhZx0xB32fr1u38Ytb+9Gi8bf3GNx
nT5zBh06dMCfQ4fy/QSdsMfTdesQvXwZElauwIMFFujO/PaELl0Qu3QpYpYs
QQTz4VzMm0cwjx6xYAFXOPPi4cyTc5mY4MmSxbi3exc8L1yAB/scr169KtG1
a7h06RLOnz9fQ+5s3Vm3c9i77yAO7dkEp7/HcA+4769qD0h+8niVn6TlAzO/
zlcebKQOVOmIqcR7HJxT8/Vfaq+hOc3nTWhfdswDHWXHtDOt9kTyIr90xEzy
qKi9WWQiOf5/hUx+wOcjJ6mPPVp1TEV/04ba6/seNPa7rOi7Tfug+zN0vNrf
2y+1y77/Tf33V4+4358j+fdN3+0j7NhbJ6tgbE8VDDRQwfBf2qCv0R9o0aIl
OnXqh8mTVmPM6KVMS2QaO2YJxo0jLeUaP34pJkyo1sSJS5nPIi3jmlxLU6Ys
Y75nOZeJiQ3zSbOgrm6Anj1HwMzMBjNmWDKt5DI3t2E+idr1YWQ0AhYWtpgz
xxKzZ1vyR6mMjas1d64l22+1TE2t2H6rNW+eFdtvtebPl8jCwppr2TJbtn4l
2rShGurtsWjRGqxYYcserbksLW2xYIEla9djvrsD234trKxs2eMaruXLJVqx
olorV65hr1sr06pV9Jp1MllbV2v16nW8r1YqGj+6apU1dHX12N+kM1+WisZU
EtR/Sf2pf/1AP0nzmFFtKcq/pdp83bsbwlBOPQx7oH+//njy+InSYiouKuZ1
CejYPborEFvfs0dPODo4KiWeondFMDOdh56GPSUxKRC1uTq7KiWed4XvYDLX
hH8G9cVCbWfPnFVKPAV5BZg9Y7bkuA3ovNt5ha+neSIKPxby+UrflLz5JpWy
/+LT4jFl6hT+GdQbD2tzPuOEj+y/lx+yEfc6FpGvIhCdE9XsSsxPQExONAZO
/QN6v+jiwNn9cLh6AnYXDnOduGLPHzv83h69R/2Mp5lhSCpMrLOfiFfhCEoP
hE/yLXgne/HHr9WdFB8EvHoA87XmvH7rrDUzsfXCZqx1XM1lc3ItX+4//ne0
1GwJO4/DfPsv7veZD7ySbvK5eKjOq0uYU5N0Ps4Nmzw2QLN/S/w0yxDzj5hh
zt6ZMNlvjK2um+Ef4Ifjx+2hoaGhvPquzPtRHZWF7Lr+QQDzs8yvyMSWqc+K
4rGzU04uTgDzW620tbCY+Y4asVTpwKFDaMnisXdwUEo8RHFJCfr168elKCZv
Hx+0b98e06ZPb9T+6NxINVEbI6rDLy8iv6AARr178xpBiuK5eesW9JmfnDm7
/nvP8pSyeKhmBM15SrWfGisaC/r23Tuei9SzZ0/MnDmT76vO+62o4J/d146f
fF9UxMe8Uv4TjY2UKjU1FQkJCTVE62gs8ew5xti0cSPiH13GnaPDcdG2A87b
6uHiBn2cXauDAyYtsN9ETdZXQv0zjZHjUsm2lH9qv0C9caLcWCZpn9HpVVo4
t7Y1zlpL5LZaomMW6thvrMofFe2f8nKpT+nIPNVmEfVz2Zmy52aqcFioBpcl
LeAsJ1p2ZOvJC3zP/jfyM+QDqM+U94daqPI+wfpE/ankQ3gf7ndW7XjoOfXX
Ugz0SMv25pL+23r7lJtZ0vshJ6qOXVsnquIjP7W/KfdKZn+FZlX7N3t2zOPm
dSWNi+JRdKyv9bKN8bf27HH9BBV01FaBppoKdFupQVdHm4/FoxrYXbt24d6g
+dVFpnbt9NnxVOWOV1M0xxO1a2srbv8e6ty5Mx+rqK6uzpdpfKK0jZ431C6/
XXOpU6dOsuPJr9++fTs/B1Advx/tJ2mMZ2ZmJs+/pXzg5KRkpCSnIDU5lT+m
paQhMyMTFaXKnReHzsPpaelIfZaKtGdpMlFc9EjnTaphoLR4XrF4UtPx/Nnz
ukp5jozUDBS/K1ZePK9zkfE8A+kp6XXF4sxIz0BJcYnS4nmd/Zp/Bg3p4/uP
Sosn51UO/3wyUmrFIV1mnw/VqlAmFhYW/LeAfhtpfkzKM+eqet6yZUvMmDGj
wfqeNK+jdB7Kb1FFZQU+sf9cXF34bxTNQanXTk827yTN90jLNC8F/Y5Fx0bz
7RuzX3qk+USLKyRzizZFNB9oREw4uhh2RstWLdGa5uXU1eaimKiPR1dXl8dM
4/mUAdXIoeNqsXNZOwMDGDBfJBUt01yP9He9UE/91+YmMjqaeSEDXpvTgMVV
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
/wHbdOpq
    "], {{0, 63}, {916, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{916, 63},
  PlotRange->{{0, 916}, {0, 
   63}}]], "Input",ExpressionUUID->"fe7bd2f6-1fd5-4f4d-bc26-38c3ac1a086e"]], \
"ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"240d7ace-fe87-471e-bdc1-49d11c41b0c4"],

Cell[TextData[{
 "Lo que significa que la raz\[OAcute]n entre la venta diaria del \
jab\[OAcute]n tipo A del almac\[EAcute]n M y el jab\[OAcute]n tipo B del \
almac\[EAcute]n K es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"8", ":", "3"}], TraditionalForm]],ExpressionUUID->
  "4e984aad-c2f2-42e7-8b35-868a88ae0437"],
 ". \[DownQuestion]Cu\[AAcute]l es la raz\[OAcute]n entre la venta diaria del \
jab\[OAcute]n tipo B del almac\[EAcute]n K y el jab\[OAcute]n tipo A del \
almac\[EAcute]n M? Establezca otras razones."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10003.},ExpressionUUID->"a6ea9130-c798-43aa-8ed5-d4a253c93c75"],

Cell[CellGroupData[{

Cell[TextData[{
 "Cristian tiene una colecci\[OAcute]n de 20 canicas entre negras y blancas. \
Si la relaci\[OAcute]n entre las canicas negras con respecto al total es ",
 Cell[BoxData[
  FormBox[
   FractionBox["3", "4"], TraditionalForm]],ExpressionUUID->
  "89acb96a-38e7-4ad4-985e-ee89122ba05a"],
 ", \[DownQuestion]puedes identificar cuantas canicas son negras y cuantas \
blancas? \[LineSeparator]",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3e1vFOd6BvCo/dKP/Rf6X/SrJSTUSkjRiRrpSEjoWIfmVJFoeRMtItGJ
KEKHWlaIoAjUGNdJyDHYdUTAuE5sxTIxAmxAW1xeVlg2GIODHROMFtvYcu+T
u7k12vWuZ3dmx899cf20sTbLeua+nrE9z8zO88xfNf7jr/7+z956663dfyFf
fvWbfQ27dv3mX975S/mfv9ux+x/e27H9t3+zY8/297bv+uvGP//T2+S/f5Un
f3q+SkRERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERPTGWHy9fPXOo6OdQx+0fPP+x+ff/ejLhp3/IV/lubwirw/m
xuU9G13m//NVLRER0ZsMe6+NnS4b0kQH2/r/9p//U5qu8mPz3tPSqn03Hiyv
rLBaIiIiqgx7r42dLhu5safSaV+3AUsf25u6hu89ZrVERES0Juy9tq90YZ65
nX1RkLUXtc+2wx2fdg9/d2tsdHz6h7mX8jb5Ks+lQnldWq/o/ftO9ujbWC0R
EREp7L22r3TBnrnNT85ol9jWLg01+eyndb/xyex8a8/Ilv1t9r3vfPiFNDWr
jSPMo5JqYaRQSFmikHJ5zOKxZuW3cjyutwXMXntNjtKFfOZWfoCte7xpd0vz
ucvSw69qCc9fvjrWdUXa3zZE73Ce1VYQ7FFJVTBSKKQsUUi5PGbxWLPyWzke
79sCY69djpd0gZ+5lTXaWt4+8Ln0mWte1N2Hz6RLb0urR2P6qnZNIR+VxIeR
QiFliULK5TGLx5q9V44HYFsA7LUr8JIu8DO3Up7156V7PDE9l3CB0mFuPNJp
YdMt2Fe1pQI/KnmjUuBliULK5TGLx5q9V44HY1t432tX5iVd4GdupRjrJ0sz
yrpSWWxhYcl+I6T/nNYvgq9qSwV+VBITRgqFlCUKKZfHLB5rVn4rx4OxLbzv
tSvzki78M7d2zCXlJe/PR8k2soJ3Hr+YyjJ9VVsk8KOSmDBSKKQsUUi5PGbx
WLPyWzkemG3heq+9Lhfpwj9zK31j+1FP0k8uR1rAfhGGRicSLs1XtUXCPyqJ
AyOFQsoShZTLYxaPNSu/lVfFxTh0mG3heq+9LhfpXJy5tcuh5ZgrlfJKnbpw
3Roh4Zg+X9VGhX9UEgdGCoWUJQopl8csHmtWfiuPz8s4dKRt4XevHYeLdOGf
ubUjL/nhrPbkf3zzhUW7aiXJEZmvaqNcHJWsCyOFQsoShZTLYxaPNSu/lcfk
aBw60rbwu9eOw0U6F2du5QhRl/Bp93C65RXpGLitK9pzorvmhfiqNir8o5I4
MFIopCxRSLk8ZvFYs/JbeZwCfI1DR9oWfvfacbhIF/6Z28XXy/YpQJxxeUnI
r4D1zOXorIYl+Ko2ysVRybowUiikLFFIuTxm8Viz8lt5nFX7GoeOtC387rXj
cJHOxZnbq3ceWVe2HuUV2fHJ1zWXuuqt2qjwj0riwEihkLJEIeXymMVjzcpv
5ZV5HIeOtC387rXjcJHOxZnbo51D2RSpPuu9qatrah+s4dt9VWtcHJWsCyOF
QsoShZTLYxaPNSu/lVfmcRw62LZwuteOKfx0Ls7crkYuSvnu1lidyou6mZ+q
udu86q1a4+KoZF0YKRRSliikXB6zeKxZ+a28Aqfj0MG2hdO9dkzhp3Nx5nY1
8llANtM7jE39qKvb3tRVw7f7qlZ5OSqpDCOFQsoShZTLYxaPNSu/lVdekcdx
6HjbwuNeO77w04V/5lbZb2tmM7To6mS9NXy7r2qVl6OSyjBSKKQsUUi5PGbx
WLPyW3kFTseh420Lj3vt+MJPF/6ZW9Xwy9UvdSos3TX6qlZ5OSqpDCOFQsoS
hZTLYxaPNSu/lZfjdxw63rbwuNcOc121rTH8M7dqo3r1clxZw7f7qlZ5OSqp
DCOFQsoShZTLYxaPNSu/lZfjdxw63rbwuNeOL/x04Z+5VRvVZ2480lnDt/uq
Vnk5KqkMI4VCyhKFlMtjFo81K7+Vr8n1OHSwbbHqc68dX/jpwj9zq+woTH5/
61RYlB2F1XaZja9qlZejksowUiikLFFIuTxm8Viz8lv5mlyPQwfbFqs+99rx
hZ8u/DO3qvnc5Wx+bVV7f64hwdUpvqpVXo5Ksl/mRq0RKUv2a8lmjR6zeKw5
3eWEsEbv49CRtoXyuNeOL/x04Z+5VfZxRjYTINiovUvX7tfw7b6qVV6OSirD
SKGQskQh5fKYxWPNym/lpbyPQ0faFsrjXju+8NOFf+ZWyVGkjQd8Mjtfp/LU
85ev5PhRjyJrm+3NV7XKy1FJZRgpFFKWKKRcHrN4rFn5rbyU93HoSNtCedxr
xxd+uvDP3BrrNrf2jNSjNmNX1yS5kMNXtat+jkoqw0ihkLJEIeXymMVjzcpv
5aW8j0NH2hbG3V67KoGnC//Mrem78UC/d8v+tvnCYj3KW/35dhU2P3DX4GjN
y/FV7aqro5IKMFIopCxRSLk8ZvFYs/JbeSnv49CRtoVxt9euSuDpwj9za5ZX
VuymZse6rtSjQiGHDLqKrYfOJpmNzVe1q66OSirASKGQskQh5fKYxWPNym/l
pbyPQ0faFsbdXrsq4acL/Mxt1PC9x7oE6T/fffgs3fLExPScjW1M/tGJr2od
HZVUgJFCIWWJQsrlMYvHmpXfyktpiga349CRtkWUr712tQJPF/iZ2yL7Tvbo
QmRp6R5RypGj9OR14XIUlsoyfVXr6KikAowUCilLFFIuj1k81qz8Vl4EYBw6
zLYo4muvXa2Q04V/5jZKWs/6tI1HOtOaLU2WY58CSJ9cuvepLNZXtb6OSsrB
SKGQskQh5fKYxWPNym/lRQDGocNsiyK+9trVCjxd4Gdui8gvr306IL3o5HdP
kyVYM27a3SKtkXCBUY6q9XVUUg5GCoWUJQopl8csHmtWfisvAjAOHWZblHK0
165B4OlCPnNbqnc43/DL1S9ScH5ypuZFST/ZypPH+e/vpFJhlKNqfR2VlIOR
QiFliULK5TGLx5qV38qjMMahY2yLNTnaa9cg5HSBn7ktdenafb2eWX8RTl24
Xu3HBFKbHHPZj7osrX4/JI6q9XVUUg5GCoWUJQopl8csHmtWfis3MOPQAbZF
OY722jUIOV3gZ25L5caeWv9Z+7odA7fjjLOT98g7i7633qfNvVTr7qhkTRgp
FFKWKKRcHrN4rFn5rdzAjEMH2BYVeNlr1ybkdCGfuV2T/BbvPH7R1mLHUGe+
vXUzPzU29aP2qOWrPJdX2vtz8q92OGDvz+ZH3Uu17o5K1oSRQiFliULK5TGL
x5qV38oNzDh0gG1RgZe9dm1CThfymdtyhkYnth3uKGrPOA/pLWc/x5eLat0d
lawJI4VCyhKFlMtjFo81K7+VK6Rx6N63xbpc7LVrFmy6kM/clrO8siK96D0n
uot67Gs+5D1yLCC/mFne9cBdtR6PSkphpFBIWaKQcnnM4rFm5bfyVbhx6K63
RRwu9to1CzZdyGduK5OfZzlGa2oflPobj3Rqx1i+ynN5RV6XBq/3vRviC7xa
j0clpTBSKKQsUUi5PGbxWLPyW/kq3Dh019sivsD32gmFmS7YM7eUGb9HJXgp
8LJEIeXymMVjzd4rX4Ubh+56W1DIgj1zS1nCOCrBSKGQskQh5fKYxWPNriuH
HIfudFuQC2GeuaXMYByV1JCiY+B/rvzvxNHOoQ9avnn/4/N6I2n5Ks/lFXl9
MDe++HrZT5aHAWZJmKu2nzRJevXOo7q2xgb+1tScLvDf9Aq5DrT07jrR/dt/
+68wKy8Hchx64D9FROQdxlFJnBT/ff3+wbZ+u+CqwkN2JbJn7LvxYEP+lsbK
ci3vIku1uWr7SZNuWMatkeVvTVrpQvtNryLXntPvNX+169+7/+nYhRAqXxfw
OPTQfoqIiLzIjT19/+Pz6+7ySh/bm7pCu+QeKUty2K2Bmg41VxT8OHQiIopp
9kXB5qC2x7bDHZ92D/fdeHAzPzX57Kcns/PyVZ5/d2tMXreJWeyx72RPusMQ
mCU57NZATYeaa01vyDh0IiKqID85o5ef2dkJ2bXJbm7db5S9YWvPiPz9t++V
/cLo+HQGNZeDlCU57NZATYeaqwKOQyciepMN5sajH281n7tc7SCC5y9fHeu6
YsMQ5EnvcL5O1VaGlCU57NZATYeaKw6OQyciegPJjs/+nr994PPc2NOaF3X3
4bPoh2XZ7/6QsiSH3Rqo6VBzxcdx6EREb5T85Iydgdl2uCP5x1s/zL1sPNJp
Z2Oy/HAQKUty2K2Bmg41V204Dp2ICN7si4JdkyY7vrT+qssexMZQpH5HlXKQ
siSH3Rqo6VBzERERlWOjdN8+8Hm6F/zLXtU+HNx5/GKKSy4HKUty2K2Bmg41
FxER0ZpyY0/tgqsk16SVk5+csaETQ6MTqS8/CilLctitgZoONRcREVE5NoF2
87nLdVrFqQvX7QPHuo4sQMqSHHZroKZDzUVERLQmG6u7ee/p5PeALme+sGjz
HNZvDC9SluSwWwM1HWouIiKicg629esu6dPu4bquqGPgtq5oz4nuOq0CKUty
2K2Bmg41FxER0ZoWXy/bvDFx7uSSxOyLgl0FV1hYSn35SFmSw24N1HSouZKT
lrl659HRzqEPWr55/+PzOsmAfJXn8oq8Ppgbl/dsdJlERFQ1+fNul41lsLod
n3xdv48FkbIkh90aqOlQcyUhncyDbf3WRa/w2Lz3tPRL+2484BWwRESOHO0c
yuYDQfVZ701dXVP7YOoLR8qSHHZroKZDzVWb3NhTG8ZV1WN7U9fwvccbXT4R
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
iIiIiIiIiIiIiIiIKEv/B+//wjw=
     "], {{0, 115}, {900, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{778.1, Automatic},
   ImageSizeRaw->{900, 115},
   PlotRange->{{0, 900}, {0, 115}}]], "Text",ExpressionUUID->
  "11bf228c-dd15-49c1-b8a0-44b8863de2dd"]
}], "ItemNumbered",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"3442f842-4ab5-4f4f-b81f-0ec5b2d7c1bc"],

Cell[TextData[{
 "La relaci\[OAcute]n es ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     StyleBox[
      RowBox[{"canicas", " ", "negras"}],
      FontSlant->"Italic"], 
     StyleBox[
      RowBox[{"total", " ", "canicas"}],
      FontSlant->"Italic"]], "=", 
    FractionBox["3", "4"]}], TraditionalForm]],ExpressionUUID->
  "41a51882-e000-402f-9962-1ec1efea7ec1"],
 ", como la colecci\[OAcute]n es de 20 canicas, se tiene que"
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"710fb614-ea68-4067-bf55-6bf0ffaed8c2"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     StyleBox[
      RowBox[{"canicas", " ", "negras"}],
      FontSlant->"Italic"], 
     StyleBox["20",
      FontSlant->"Italic"]], "=", 
    FractionBox["3", "4"]}], TraditionalForm]],ExpressionUUID->
  "dffcbae5-0caa-44a0-8e65-b78c8430512c"],
 ", para encontrar la cantidad de canicas negras se puede amplificar la \
segunda fracci\[OAcute]n hasta que el denominador sea el mismo, por tanto:"
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"4cb29f36-79c9-4e80-a572-03695044ff7a"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    StyleBox[
     RowBox[{"canicas", " ", "negras"}],
     FontSlant->"Italic"], 
    StyleBox["20",
     FontSlant->"Italic"]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"3", " ", "5"}], 
     RowBox[{"4", " ", "5"}]], "=", 
    FractionBox["15", "20"]}]}], 
  TraditionalForm]],ExpressionUUID->"707bde93-5b62-4015-9c35-21766f0a507a"]], \
"ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"8b768377-b937-4eca-806d-5d4fad57346d"],

Cell["La colecci\[OAcute]n tiene 15 canicas negras y 5 blancas.", \
"ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10004.},ExpressionUUID->"58bb7d8c-2c8f-407d-8d29-d974ef4b2091"]
}, Open  ]],

Cell["\<\
Juan decide donar la mitad de la tercera parte de su salario mensual. Si el \
salario mensual de Juan asciende a $4,200,000, \[DownQuestion]a \
cu\[AAcute]nto equivale la donaci\[OAcute]n de Juan? \
\>", "ItemNumbered",ExpressionUUID->"6c29d342-6700-4933-a98b-76400bb86ddf"],

Cell["\<\
La frase \[OpenCurlyDoubleQuote]la mitad de la tercera parte de su salario \
mensual\[CloseCurlyDoubleQuote] se expresa como:\
\>", "ItemParagraph",ExpressionUUID->"8117e6c2-8d7e-4a4f-a3b7-aea0c0b97dc4"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "3"], 
      RowBox[{"(", "4200000", ")"}]}], ")"}]}], TraditionalForm]],
  ExpressionUUID->"0dd7de52-3456-4cee-8f4f-502836a18606"],
 ", al simplificar la expresi\[OAcute]n se obtiene:"
}], "ItemParagraph",ExpressionUUID->"f6433b83-cb28-49c5-9367-c5b8b4f2d6e3"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "3"], 
       RowBox[{"(", "4200000", ")"}]}], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "6"], 
      RowBox[{"(", "4200000", ")"}]}], "=", "700000"}]}], TraditionalForm]],
  ExpressionUUID->"6833c2cd-0f7b-4d89-9a3c-df30a2210a13"],
 ". Por tanto, Juan decide donar $700,000 pesos."
}], "ItemParagraph",ExpressionUUID->"da56c835-43b0-4e5d-960b-181e239b8415"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ". N\[UAcute]meros irracionales"
}], "Chapter",ExpressionUUID->"24ec93b5-fb99-41fe-89e3-f4dc4d416bd7"],

Cell[CellGroupData[{

Cell["Un poco de historia...", "Subchapter",ExpressionUUID->"ad0a0915-7cdb-46d0-a01e-7c47817227fc"],

Cell[TextData[{
 "Como vimos en el cap\[IAcute]tulo anterior, los pitag\[OAcute]ricos \
consideraban que todos los fen\[OAcute]menos de la naturaleza pod\[IAcute]an \
reducirse a n\[UAcute]meros (naturales) o a razones entre ellos, de esta \
manera se originaron los racionales positivos. Por desgracia esto no es \
verdad y, para la escuela pitag\[OAcute]rica fue un duro golpe a sus \
creencias; cuenta la leyenda (con base dudosa) que Hippassus de Metapontun de \
la escuela pitag\[OAcute]rica demostr\[OAcute] que la diagonal de un cuadrado \
es una longitud que no se pod\[IAcute]a expresar como una raz\[OAcute]n entre \
dos n\[UAcute]meros (naturales); la interpretaci\[OAcute]n moderna es que la \
longitud de la diagonal de un cuadrado con lado de longitud 1 es ",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]],ExpressionUUID->
  "2a9ee68b-2925-4b06-b4f2-2ff6e873434d"],
 "  y este es irracional, \[EAcute]l dedujo logicamente que hay \
n\[UAcute]meros que no se pueden expresar mediante razones y abri\[OAcute] el \
camino a los n\[UAcute]meros irracionales. Seg\[UAcute]n la leyenda, este \
descubrimiento hizo que fuera tirado al mar por sus compa\[NTilde]eros y caus\
\[OAcute] todo un rompimiento dentro de la escuela pitag\[OAcute]rica, que \
los asumi\[OAcute] posteriormente.  \nHind\[UAcute]es, \[AAcute]rabes, \
trataron los n\[UAcute]meros irracionales por medio de aproximaciones y para \
el a\[NTilde]o 1500 en Europa se usaban libremente por matem\[AAcute]ticos \
como Pacioli, Stifel, Stevin y Cardano.  En 1684, John Wallis en su libro ",
 StyleBox["\[CapitalAAcute]lgebra",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " los reconoc\[IAcute]a como n\[UAcute]meros en su pleno sentido.\n\nAlgunos \
n\[UAcute]meros irracionales tienen su propia historia, entre ellos se \
destacan ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["2"], ",", " ", "\[Pi]", ",", " ", "\[ExponentialE]"}], 
   TraditionalForm]],ExpressionUUID->"72fc7ada-5eb6-4e56-b2aa-828bf3630713"],
 " y ",
 Cell[BoxData[
  FormBox["\[Phi]", TraditionalForm]],ExpressionUUID->
  "8d3fcc95-db6d-4384-b677-a99cdc353bf9"],
 " (el n\[UAcute]mero \[AAcute]ureo)."
}], "Resumen",ExpressionUUID->"0b31464f-daf9-4a41-bea9-d2dedaeffbcb"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]],ExpressionUUID->
  "fca74577-dc40-45c7-b6a3-4c2c9c26de66"],
 " aparece al relacionar la diagonal con el lado de un cuadrado unitario. Su \
historia consiste en  hallar m\[EAcute]todos para hacer c\[AAcute]lculos cada \
vez m\[AAcute]s aproximados a su valor."
}], "Resumen",ExpressionUUID->"1eec7e06-8a37-47eb-84a0-2bbc3247eb82"],

Cell[TextData[{
 "\[Pi] es el n\[UAcute]mero que establece la relaci\[OAcute]n entre una \
circunferencia y su di\[AAcute]metro; es el n\[UAcute]mero que m\[AAcute]s ha \
inquietado a los seres humanos. Matem\[AAcute]ticos y aficionados a la matem\
\[AAcute]tica dedicaron muchos esfuerzos a tratar de calcularlo exactamente. \
Apenas en 1766 Lambert prob\[OAcute] que era irracional y Lindemann en 1882 \
que era trascendente, lo que lo hace a\[UAcute]n m\[AAcute]s particular, es \
que el 14 de marzo se celebra el d\[IAcute]a de ",
 Cell[BoxData[
  FormBox["\[Pi]", TraditionalForm]],ExpressionUUID->
  "abae7671-f730-4172-a5c8-57b73abb0c72"],
 "."
}], "Resumen",ExpressionUUID->"aa4a0ccd-d83d-4311-9310-b3b0bb1f6b81"],

Cell[TextData[{
 "El escoc\[EAcute]s John Napier public\[OAcute] en 1614 el libro titulado ",
 StyleBox["Mirifici Logarithmorum Canonis Descriptio",
  FontSlant->"Italic"],
 " en el cual introduce el m\[EAcute]todo de c\[AAcute]lculo mediante \
logaritmos  para facilitar las operaciones aritm\[EAcute]ticas con \
n\[UAcute]meros grandes. La base de los logaritmos que utiliz\[OAcute] Napier \
es un n\[UAcute]mero muy cercano al n\[UAcute]mero \[ExponentialE] cuyo valor \
es aproximadamente 2.718281828. Pero se adjudica a Jacob Bernouilli el \
descubrimiento de la constante cuando estudiaba un problema particular del \
llamado ",
 StyleBox["inter\[EAcute]s compuesto",
  FontSlant->"Italic"],
 ", \[ExponentialE] es un n\[UAcute]mero trascendente."
}], "Resumen",ExpressionUUID->"93a2959f-59bf-415a-a2fd-9ffa1465f251"],

Cell["\<\
El n\[UAcute]mero \[AAcute]ureo \[Phi] (Phi), llamado as\[IAcute] en honor al \
escultor griego Fidias, fue descubierto en la antig\[UDoubleDot]edad no como \
una unidad sino como una proporci\[OAcute]n que se encuentra presente en la \
naturaleza, por ejemplo en las caracolas, en las nervaduras de las hojas de \
algunos \[AAcute]rboles, en el grosor de las ramas, entre otras. Observando \
esa proporci\[OAcute]n, a este n\[UAcute]mero se le atribuye un \
car\[AAcute]cter est\[EAcute]tico especial, aplicado en la \
antig\[UDoubleDot]edad en la arquitectura. Por ejemplo, en el \
Parten\[OAcute]n las ventanas y toda la construcci\[OAcute]n mantienen entre \
s\[IAcute] que la relaci\[OAcute]n entre el lado mayor y el lado menor es el \
n\[UAcute]mero \[AAcute]ureo; esta proporci\[OAcute]n tambi\[EAcute]n se \
observa en cuadros, en esculturas e incluso en el cuerpo humano, por ejemplo, \
Leonardo Da Vinci, en su dibujo el \[OpenCurlyDoubleQuote]Homo Vitruvio\
\[CloseCurlyDoubleQuote], plasma dicha proporci\[OAcute]n. Por tantas \
aplicaciones y la belleza de la proporci\[OAcute]n, es conocido como n\
\[UAcute]mero de oro o divina proporci\[OAcute]n. Actualmente, esta proporci\
\[OAcute]n est\[AAcute] presente en las tarjetas de cr\[EAcute]dito y \
documentos de identificaci\[OAcute]n entre otros.\
\>", "Resumen",ExpressionUUID->"eae281a1-7d83-462c-9c7c-01eea32bf652"]
}, Closed]],

Cell[CellGroupData[{

Cell["Actividad: verificar el Teorema de Pit\[AAcute]goras.", "Subchapter",ExpressionUUID->"25189776-b51d-4f21-bd36-b1dfa95e26fe"],

Cell["\<\
En esta actividad usted va a profundizar sobre un teorema de gran importancia \
en la evoluci\[OAcute]n de la historia matem\[AAcute]tica y en particular de \
los n\[UAcute]meros irracionales: \[OpenCurlyDoubleQuote]el Teorema de Pit\
\[AAcute]goras\[CloseCurlyDoubleQuote]. Para ello es necesario que construya \
en el centro de un octavo de cartulina un tri\[AAcute]ngulo \
rect\[AAcute]ngulo (uno de los \[AAcute]ngulos es de 90 grados). \
\>", "Text",ExpressionUUID->"ece4b8c1-034a-49dd-b606-ba07181da630"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
V5yVb+A+KiBzQ28KELdAKTGgeaWEGCSs5OF9LK89dnUbzt24xqzRanr5Bk6+
zZDdCJkbfJ696XIcFbBJDL0pQHwZpcTwx0oJ0S+8ltJNnp475V7WaV9et5q/
/3yTGM16xBmtLeTOM9++xG57fL8hT1eTVQbN0UK9PVl8DqXEo8wrJUS/sLsd
e8uznzx3z4b2TdH8NUmySyrIE22eq/peBZsMaZ5kd24XOczSAvJJ9qpw9n09
iiGilHiOeaWEuB2sreI77+ZTC3mNXV6TGj/ieBeXsOm/Ny+hP6ngeHQaj5r9
z9WsgMnGQvbJUb2WaKOUeO6xUkJ8HT5JtF46uQ+2DS08DOAuWvPfO8/+e3wn
0WZVQp6rNk+y129S5s7namHhfptDm1uoqq1XRinxOvNKCfE5WFuVhE7efzb1
ORfXm8ZPNd7/MFqXkP33+OaF5hn22tkEYVKy/+ExsVD9914NpcSLjpUS4nrq
far9JoOsrQrnBravq7aaf+75c/8958IrYNPXt9YbW8j+e/Eqh+y8p5rwJ0cp
oXmlhLiCPM4hr4fALyDrgQd0h6zxHcd0v3fuohIyGRZ+BbkybbtdGniIC1gc
LNRZ6vOhlNBYKSG6YZ02317H+0zW+r53/Wj+Ned3cQW3Gydzgz0HWKPFCnC+
YTlaObPEQPXfew6UEpq/Zl4p8crYg4HB3ML5tITx1jmEu1+Nhzlu1iP13yas
0eJzZP70BM/vJHI273HYGmgOFqpG6xFRSmislBDd2KOB26CA7GTC9+EeBnCX
q/khz7dlbrBGa72q4GxqId8yyVUJa8I3KydzozIF7PsbIP4cpYTmPzffVinx
3PAOcLc2cOrarp74/NcQ7mw1fshxXft9fr7MrV7ZxZf9jnjmzvc7sC9fvMxg
cbTFH/33VKM1MJQSGislxDUcoxzy/nA1M/DyGmirec1fM9+Wb1IOVxVk76Pp
2Hk+S3UV4OzSvNsYWBwKqFPU4aCU0Pwt5tsqJR6dPMmhNz3BpV8sz3Xal9eA
xhp/ZUzbvXybN1HyrQGTE2S9Ftcj66WFrNEqTQl1ltoXSgmNlRKiG5MayNqY
hWdhu1Pue79rzWv+6/M03VVwE5ZwOa8gu+KMRxXknidrtHYb5zExUIlxT5QS
mldKiG5Yp32+9ythvHFe/n411vjWY56lspfvdn2CrMjieoS7nXyagM+dpWEG
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
    "], {{0, 200}, {354, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{171., Automatic},
  ImageSizeRaw->{354, 200},
  PlotRange->{{0, 354}, {0, 200}}]], "Text",
 TextAlignment->Center,ExpressionUUID->"f35c5a4e-4f1e-437b-a62a-eff252c3214b"],

Cell["\<\
Una vez dibujado el tri\[AAcute]ngulo atienda las siguientes instrucciones:\
\>", "Text",ExpressionUUID->"b1b17f23-c919-4423-a1bb-b8a89e93060b"],

Cell[CellGroupData[{

Cell["\<\
Sobre cada cateto (los lados adyacentes al \[AAcute]ngulo recto, cuya medida \
es menor que la de la hipotenusa) construya un cuadrado, de tal manera que \
uno de los lados del cuadrado sea un cateto.\
\>", "Item",ExpressionUUID->"d0efc809-d811-4c0f-8ca7-2e0c9624bdaf"],

Cell["\<\
Sobre la hipotenusa (el lado que esta opuesto al \[AAcute]ngulo de 90 grados) \
construya un cuadrado, de tal manera que uno de los lados del cuadrado sea la \
hipotenusa.\
\>", "Item",ExpressionUUID->"339884bb-f0bc-413b-9aec-d541494024f0"]
}, Open  ]],

Cell[BoxData[
 FormBox[
  RotationBox[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
v1+d+03P7uen85POP3506cSE12u4qXsldUee++iBuy5tyv06+rWF9W8PPfYj
558COtPzNdzUvdK67UH9mWtf/eTL9qC+53f+I//Przn/RLDS+r+Gm7oT1W09
9t2rn1r/1sxBffrQF1+Ynvil808HK6f/a7ipexV1Ww98YWxTVXRQr1373nPf
/4nzzwgroZ2d6/kabupedd3GM89O7b1l9qC+dWT8H192/nlhGdWyhpu606i7
eFD/3pt3bMjbxg/V/+vUy286/+ywLNo13N5epsVQd3p1W7vu/sUnqqI3mtWu
+d+BB4edf4KYsorWcFN32nVHB/XjHzbXjdkX8aaa0dHjP3f+aWJq7t4dfV9V
rOGm7jLUbX36kfydH7tqG+/6/I+mfnbF+SeLq1XXGm7qLlvd1kf3XvrEmmv2
oH5yP7/6otl4Dbfnl2kx1F3muu1B/d7biwf1ho2vMNlJq+rWcFN3+eu29ndP
1m9+3Tbe8Zkfc1BX5siIvjXc1F2puq1HWi7bg3pN1a+Y7KRJjWu4qbuydQ/O
THa6d+cr8WSni8dedP5FwGWM13DrgrorXrf1+BOT9R//L3tQb/v0Bd4w7q96
13BTt6O6rY+3jm9b+z6Tnbz28OGZ4XoK13BTt9O6BxdMdmIEq1+qXsNN3a7r
tp566v25Eay3cFD3RruGW9dlWgx1+1F38aB+/xUmO3mk9jXc1O1T3ZElk512
3vQGI1idmc+rX8NN3b7VPeOpZ67d/clxJju51J813Imhbi/rtj554I14slP3
l5nsVEHjNdwaL9NiqNvjuq0HGi7ZyU51695islOF9GoNd2Ko2/u6B2cO6kx2
qpyDnq3hTgx1a6jbGk92YgRrefVtDXdiqFtP3daHvnK5OIKVyU7l0K7hVn2Z
FkPd2uoeXDDZafwf/tP5lzEQ/VzDnRjqVli39enH3rrjt345N4KVN4yvXj/X
cCeGutXWbe362qtMdkpHb9dwJ4a6ldc9OG+y0+bLo8++5PyrqlK7hjuAy7QY
6tZft7W/e/LOjW8w2SmhPq/hTgx1h1K39dFvvBZPduq/53nnX14der6GOzHU
HVbdgzNvGI8nO0UjWJnstKyer+FODHUHV7c1GsFaOtnpxavOv9SeGq/hDuYy
LYa6A63b+vj9V+LJTn17/sX5V9tH/V/DnRjqDrruwZmDuvnsiiNYq8eZ7HSd
KtZwJ4a6Q6/bevwHHzRsnShOdvrdf2eyU6SWNdyJoe5s1G2NJztFI1iZ7KRl
DXdiqDtLdQ/aEax3Xbop939Zn+ykaA13Yqg7Y3VbSyc7tdz80ywe1BWt4U4M
dWeybuuTB96YHcGasclOutZwJ4a6M1y39YEvvFqc7LT+7aHHMvA+lOAv02Ko
O/N1D84c1L+6/dV4slP+n8acf1/KqLo13Imhbuqe9dj33vzUhv8JfLKTxjXc
iaFu6r7eh75yeePsZKfnOoNbXKhxDXdiqJu6F3jm+Id7614LcLJTRi7TYqib
upfw2PffDmqyk9413Imhbuq+oaWTnQb+4rzz71dy9a7hTgx1U/dyRiNYb391
brLT8Z87/66tWNVruBND3dQt8+kj78aTnbo+d17ZQT1Tl2kx1E3dK/HRe67M
HtTf6//WC86/fSK1r+FODHVT9wo9c0rVZKcA1nAnhrqpO5Glk506fv8Ffw/q
AazhTgx1U/cqPNJ6dXYE67W+r/v3qy/ZvEyLoW7qXp3zJjv5dVAPYw13Yqib
utPw+FPX6muu+jXZaTCUNdyJoW7qTs9oBOu6D+LJTo6/ucGs4U4MdVN3qp47
Vyid7GS+vG6+s1m+TIuhbuoug6eeudbw21eKk522v1Tpg3pga7gTQ93UXTYf
b8vfuv5d+4bxaARrxd4wHtga7sRQN3WX2XiyUzSCtQKTncJbw50Y6qbu8huN
YN1+pUKTnbhMi6Fu6q6UpZOdur9UnoN6kGu4E0Pd1F1ZD/zRa8XJTmvfS3my
U6hruBND3dRdcU89OzfZyRzUU5vsFOoa7sRQN3U7Mp7sVJ37TTTZ6eU3V/Wt
5DJtIdRN3U596E+ubKz6MIXJTgGv4U4MdVO3a0snOzVt+UWSg3rYa7gTQ93U
7YdPH3n3jo1vJZnslJ3NQSuFuqnbJ7u+cTWe7HTyPtn7ULhMWwrqpm7PtJOd
iiNYN74y+uxLN/oOZmENd2Kom7q9tP+JD+7cnF9+slMW1nAnhrqp22NLJzv1
31M8qA+dPt3a3NzU2Nhy110DmdoctFKom7r99tyZj+69czye7LTvy3+eu54W
8/INi0Ld1K3B/h/8amay00BuMfqytoZAiK374MHM+sUtn87lqjZU3WECR8/d
tG7PonXv4nC+KLbuDFs194w4/1hwWWsXrTv65sFCzJGmuzvLbl63wTwba6vW
dn/pefTcuo//4aJp15kXKYCFDA9HrwrmlO76BgCXtefw4UXr7uJXWWBRqFuP
0/l8Q339whfuqakp148ReAl1q9IEfqizs7a62nRds2lTR0cHacOSULdG7Qoh
870DuAHUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHq
BgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnU
rVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHq
BgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnU
rVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHq
BgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnU
rVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHq
BgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnU
rVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHq
BgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnU
rVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHq
BgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnU
rVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHq
BgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnU
rVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHq
BgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnU
rVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHq
BgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnU
rVHqBgnUrVHqBgnUrVHqBgnUrVHqBgnUrVHqBgm27h07Co2NqMZt26gblsfW
jRqlbgAAAAAAAAAAAAAAAAAAAAAAj/l/aFKTFw==
      "], {{0, 396}, {330, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{330, 396},
    PlotRange->{{0, 330}, {0, 396}}],
   BoxRotation->0.17453292519943295`], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"ea8d238a-5683-4eda-b1f6-7d740a97e0a8"],

Cell[CellGroupData[{

Cell["Recorte los cuadrados que tienen como lado los catetos.", "Item",ExpressionUUID->"1bd0a800-59ce-4c9f-bc7e-25c9783011a9"],

Cell["\<\
Con las regiones de estos dos cuadrados cubra la regi\[OAcute]n del cuadrado \
mayor (el que tiene como lado la hipotenusa). \
\>", "Item",ExpressionUUID->"9ba314cb-2d9d-40d8-8ab1-0d20f7be2f12"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problema 1  ", "Section",ExpressionUUID->"323857d0-e000-4c77-b4ce-1cbe62234a15"],

Cell["\<\
\[DownQuestion]Qu\[EAcute] relaci\[OAcute]n encuentra entre las dos \
\[AAcute]reas de los cuadrados de los catetos con el \[AAcute]rea del \
cuadrado de la hipotenusa?\
\>", "Ejercicio",
 TextAlignment->Right,
 FontSlant->"Italic",ExpressionUUID->"58e384cb-d67b-437f-a0f2-2e0ad727d173"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"61dba381-ada5-492d-9fbc-4182cb5a1f0a"],

Cell["\<\
La siguiente animaci\[OAcute]n muestra una de las formas de cubrir el \
\[AAcute]rea del cuadrado mayor con las \[AAcute]reas de los otros dos \
cuadrados. Puede dar clic en los pasos 1 a 7 y manipular dos v\[EAcute]rtices \
del tri\[AAcute]ngulo.\
\>", "Text",ExpressionUUID->"2d27742e-1839-462a-b5c3-b49548090082"],

Cell[BoxData[
 FormBox[
  DynamicModuleBox[{$CellContext`m$$ = -0.3571428571428571, $CellContext`mp$$ \
= 2.8000000000000003`, $CellContext`p1$$ = {0, 0}, $CellContext`p2$$ = {
   9.5, 0}, $CellContext`p3$$ = {14., 0}, $CellContext`p4$$ = {
   0, -4.5}, $CellContext`p5$$ = {7., -7.}, $CellContext`p6$$ = {
   14., -9.5}, $CellContext`p7$$ = {0, -14.}, $CellContext`p8$$ = {
   4.5, -14.}, $CellContext`p9$$ = {14., -14.}, $CellContext`pol1$$ = 
   Polygon[{{0, 0}, {9.5, 0}, {7., -7.}, {0, -4.5}}], $CellContext`pol2$$ = 
   Polygon[{{9.5, 0}, {14., 0}, {14., -9.5}, {
     7., -7.}}], $CellContext`pol3$$ = 
   Polygon[{{14., -9.5}, {14., -14.}, {4.5, -14.}, {
    7., -7.}}], $CellContext`pol4$$ = 
   Polygon[{{0, -4.5}, {7., -7.}, {4.5, -14.}, {
     0, -14.}}], $CellContext`pol5$$ = 
   Polygon[{{0, 0}, {0, 5.}, {-5., 5.}, {-5., 0}}]}, 
   TagBox[
    FormBox[
     StyleBox[
      DynamicModuleBox[{$CellContext`a$$ = 1, $CellContext`p$$ = {
       14., 0}, $CellContext`q$$ = {0, 5.}, Typeset`show$$ = True, 
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{{
          Hold[$CellContext`p$$], {8, 0}}, {5, 0}, {14, 0}}, {{
          Hold[$CellContext`q$$], {0, 4}}, {0, 0.2}, {0, 5}}, {{
          Hold[$CellContext`a$$], 1, "Pasos:"}, {1, 2, 3, 4, 5, 6, 7}}}, 
       Typeset`size$$ = {984., {274., 286.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`p$1129$$ = {0, 0}, $CellContext`q$1130$$ = {0, 
       0}, $CellContext`a$1131$$ = 0}, 
       DynamicBox[Manipulate`ManipulateBoxes[
        1, TraditionalForm, 
         "Variables" :> {$CellContext`a$$ = 
           1, $CellContext`p$$ = {8, 0}, $CellContext`q$$ = {0, 4}}, 
         "ControllerVariables" :> {
           Hold[$CellContext`p$$, $CellContext`p$1129$$, {0, 0}], 
           Hold[$CellContext`q$$, $CellContext`q$1130$$, {0, 0}], 
           Hold[$CellContext`a$$, $CellContext`a$1131$$, 0]}, 
         "OtherVariables" :> {
          Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
           Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
           Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
           Typeset`initDone$$, Typeset`skipInitDone$$}, 
         "Body" :> ($CellContext`m$$ = (Part[$CellContext`q$$, 2] - 
             Part[$CellContext`p$$, 2])/(Part[$CellContext`q$$, 1] - 
            Part[$CellContext`p$$, 
             1]); $CellContext`mp$$ = -((Part[$CellContext`q$$, 1] - 
              Part[$CellContext`p$$, 1])/(Part[$CellContext`q$$, 2] - 
             Part[$CellContext`p$$, 2])); $CellContext`p1$$ = {0, 
            0}; $CellContext`p2$$ = {(1/$CellContext`mp$$) (
               Part[$CellContext`p$$, 1]/2) + Part[$CellContext`p$$, 1]/2, 
             0}; $CellContext`p3$$ = {
             Part[$CellContext`p$$, 1], 0}; $CellContext`p4$$ = {
            0, (-$CellContext`m$$) (Part[$CellContext`p$$, 1]/2) - 
             Part[$CellContext`p$$, 1]/2}; $CellContext`p5$$ = {
            Part[$CellContext`p$$, 1]/
             2, -(Part[$CellContext`p$$, 1]/2)}; $CellContext`p6$$ = {
             
             Part[$CellContext`p$$, 1], $CellContext`m$$ 
              Part[$CellContext`p$$, 1] - $CellContext`m$$ (
              Part[$CellContext`p$$, 1]/2) - Part[$CellContext`p$$, 1]/
             2}; $CellContext`p7$$ = {
            0, -Part[$CellContext`p$$, 1]}; $CellContext`p8$$ = {(
               1/$CellContext`mp$$) (-Part[$CellContext`p$$, 1] + 
               Part[$CellContext`p$$, 1]/2) + Part[$CellContext`p$$, 1]/2, -
             Part[$CellContext`p$$, 1]}; $CellContext`p9$$ = {
             Part[$CellContext`p$$, 1], -
             Part[$CellContext`p$$, 1]}; $CellContext`pol1$$ = 
           Polygon[{$CellContext`p1$$, $CellContext`p2$$, $CellContext`p5$$, \
$CellContext`p4$$}]; $CellContext`pol2$$ = 
           Polygon[{$CellContext`p2$$, $CellContext`p3$$, $CellContext`p6$$, \
$CellContext`p5$$}]; $CellContext`pol3$$ = 
           Polygon[{$CellContext`p6$$, $CellContext`p9$$, $CellContext`p8$$, \
$CellContext`p5$$}]; $CellContext`pol4$$ = 
           Polygon[{$CellContext`p4$$, $CellContext`p5$$, $CellContext`p8$$, \
$CellContext`p7$$}]; $CellContext`pol5$$ = 
           Polygon[{{0, 0}, $CellContext`q$$, {-Part[$CellContext`q$$, 2], 
                Part[$CellContext`q$$, 1]} + $CellContext`q$$, {-
               Part[$CellContext`q$$, 2], 
               Part[$CellContext`q$$, 1]}}]; Row[{
             Show[
              If[$CellContext`a$$ >= 1, 
               Graphics[{
                 EdgeForm[{Thick, Red}], 
                 FaceForm[{
                   Opacity[0.1], Red}], $CellContext`pol5$$, 
                 Polygon[{{0, 0}, $CellContext`p$$, {
                    Part[$CellContext`p$$, 2], -
                    Part[$CellContext`p$$, 1]} + $CellContext`p$$, {
                    Part[$CellContext`p$$, 2], -Part[$CellContext`p$$, 1]}}], 
                 
                 Polygon[{$CellContext`p$$, $CellContext`q$$, {-
                    Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`q$$, {-
                    Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`p$$}], 
                 EdgeForm[{Thick, Blue}], 
                 FaceForm[{
                   Opacity[0.3], Blue}], 
                 Polygon[{{0, 0}, $CellContext`p$$, $CellContext`q$$}], 
                 AbsolutePointSize[10], 
                 Point[{$CellContext`p$$, $CellContext`q$$}]}], 
               Graphics[{
                 Point[{0, 0}]}]], 
              If[$CellContext`a$$ >= 2, 
               Graphics[{
                 EdgeForm[{Thick, Blue}], 
                 FaceForm[{
                   Opacity[0.3], Brown}], $CellContext`pol1$$, 
                 FaceForm[{
                   Opacity[0.3], Green}], $CellContext`pol2$$, 
                 FaceForm[{
                   Opacity[0.3], Orange}], $CellContext`pol3$$, 
                 FaceForm[{
                   Opacity[0.3], Gray}], $CellContext`pol4$$, 
                 Text[
                  Style[
                  "\!\(\*Cell[TextData[Cell[BoxData[\nFormBox[\nSubscriptBox[\
\"R\", \"1\"], TraditionalForm]]]]]\)", 
                   20], {(Part[$CellContext`p1$$, 1] + 
                    Part[$CellContext`p2$$, 1])/
                   2, (Part[$CellContext`p1$$, 2] + 
                    Part[$CellContext`p5$$, 2])/2}], 
                 Text[
                  Style[
                  "\!\(\*Cell[TextData[Cell[BoxData[\nFormBox[\nSubscriptBox[\
\"R\", \"2\"], TraditionalForm]]]]]\)", 
                   20], {(Part[$CellContext`p5$$, 1] + 
                    Part[$CellContext`p3$$, 1])/
                   2, (Part[$CellContext`p3$$, 2] + 
                    Part[$CellContext`p6$$, 2])/2}], 
                 Text[
                  Style[
                  "\!\(\*Cell[TextData[Cell[BoxData[\nFormBox[\nSubscriptBox[\
\"R\", \"3\"], TraditionalForm]]]]]\)", 
                   20], {(Part[$CellContext`p4$$, 1] + 
                    Part[$CellContext`p5$$, 1])/
                   2, (Part[$CellContext`p4$$, 2] + 
                    Part[$CellContext`p7$$, 2])/2}], 
                 Text[
                  Style[
                  "\!\(\*Cell[TextData[Cell[BoxData[\nFormBox[\nSubscriptBox[\
\"R\", \"4\"], TraditionalForm]]]]]\)", 
                   20], {(Part[$CellContext`p8$$, 1] + 
                    Part[$CellContext`p9$$, 1])/
                   2, (Part[$CellContext`p5$$, 2] + 
                    Part[$CellContext`p8$$, 2])/2}], 
                 Text[
                  Style[
                  "\!\(\*Cell[TextData[Cell[BoxData[\nFormBox[\nSubscriptBox[\
\"R\", \"5\"], TraditionalForm]]]]]\)", 20], {-(Part[$CellContext`q$$, 2]/2), 
                   Part[$CellContext`q$$, 2]/2}]}], 
               Graphics[{
                 Point[{0, 0}]}]], 
              If[$CellContext`a$$ >= 3, 
               Graphics[{
                 EdgeForm[{Thick, Blue}], 
                 FaceForm[{
                   Opacity[0.3], Brown}], 
                 
                 Polygon[{$CellContext`p1$$ + $CellContext`p$$ - \
$CellContext`p5$$, $CellContext`p2$$ + $CellContext`p$$ - $CellContext`p5$$, \
$CellContext`p5$$ + $CellContext`p$$ - $CellContext`p5$$, $CellContext`p4$$ + \
$CellContext`p$$ - $CellContext`p5$$}], 
                 Text[
                  Style[
                  "\!\(\*Cell[TextData[Cell[BoxData[\nFormBox[\nSubscriptBox[\
\"R\", \"1\"], TraditionalForm]]]]]\)", 
                   20], {(Part[$CellContext`p1$$, 1] + 
                    Part[$CellContext`p2$$, 1])/
                    2, (Part[$CellContext`p1$$, 2] + 
                    Part[$CellContext`p5$$, 2])/
                    2} + $CellContext`p$$ - $CellContext`p5$$]}], 
               Graphics[{
                 Point[{0, 0}]}]], 
              If[$CellContext`a$$ >= 4, 
               Graphics[{
                 EdgeForm[{Thick, Blue}], 
                 FaceForm[{
                   Opacity[0.3], Green}], 
                 
                 Polygon[{$CellContext`p2$$ + $CellContext`q$$ - \
$CellContext`p5$$, $CellContext`p3$$ + $CellContext`q$$ - $CellContext`p5$$, \
$CellContext`p6$$ + $CellContext`q$$ - $CellContext`p5$$, $CellContext`p5$$ + \
$CellContext`q$$ - $CellContext`p5$$}], 
                 Text[
                  Style[
                  "\!\(\*Cell[TextData[Cell[BoxData[\nFormBox[\nSubscriptBox[\
\"R\", \"2\"], TraditionalForm]]]]]\)", 
                   20], {(Part[$CellContext`p5$$, 1] + 
                    Part[$CellContext`p3$$, 1])/
                    2, (Part[$CellContext`p3$$, 2] + 
                    Part[$CellContext`p6$$, 2])/
                    2} + $CellContext`q$$ - $CellContext`p5$$]}], 
               Graphics[{
                 Point[{0, 0}]}]], 
              If[$CellContext`a$$ >= 5, 
               Graphics[{
                 EdgeForm[{Thick, Blue}], 
                 FaceForm[{
                   Opacity[0.3], Gray}], 
                 
                 Polygon[{$CellContext`p4$$ + {-
                    Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`p$$ - $CellContext`p5$$, \
$CellContext`p5$$ + {-Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`p$$ - $CellContext`p5$$, \
$CellContext`p8$$ + {-Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`p$$ - $CellContext`p5$$, \
$CellContext`p7$$ + {-Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`p$$ - $CellContext`p5$$}], 
                 Text[
                  Style[
                  "\!\(\*Cell[TextData[Cell[BoxData[\nFormBox[\nSubscriptBox[\
\"R\", \"3\"], TraditionalForm]]]]]\)", 
                   20], {(Part[$CellContext`p4$$, 1] + 
                    Part[$CellContext`p5$$, 1])/
                    2, (Part[$CellContext`p4$$, 2] + 
                    Part[$CellContext`p7$$, 2])/2} + {-
                    Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`p$$ - $CellContext`p5$$]}], 
               Graphics[{
                 Point[{0, 0}]}]], 
              If[$CellContext`a$$ >= 6, 
               Graphics[{
                 EdgeForm[{Thick, Blue}], 
                 FaceForm[{
                   Opacity[0.3], Orange}], 
                 
                 Polygon[{$CellContext`p6$$ + {-
                    Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`q$$ - $CellContext`p5$$, \
$CellContext`p9$$ + {-Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`q$$ - $CellContext`p5$$, \
$CellContext`p8$$ + {-Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`q$$ - $CellContext`p5$$, \
$CellContext`p5$$ + {-Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`q$$ - $CellContext`p5$$}], 
                 Text[
                  Style[
                  "\!\(\*Cell[TextData[Cell[BoxData[\nFormBox[\nSubscriptBox[\
\"R\", \"4\"], TraditionalForm]]]]]\)", 
                   20], {(Part[$CellContext`p8$$, 1] + 
                    Part[$CellContext`p9$$, 1])/
                    2, (Part[$CellContext`p5$$, 2] + 
                    Part[$CellContext`p8$$, 2])/2} + {-
                    Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`q$$ - $CellContext`p5$$]}], 
               Graphics[{
                 Point[{0, 0}]}]], 
              If[$CellContext`a$$ >= 7, 
               Graphics[{
                 EdgeForm[{Thick, Blue}], 
                 FaceForm[{
                   Opacity[0.3], Red}], Null, 
                 Text[
                  Style[
                  "\!\(\*Cell[TextData[Cell[BoxData[\nFormBox[\nSubscriptBox[\
\"R\", \"5\"], TraditionalForm]]]]]\)", 
                   20], {-(Part[$CellContext`q$$, 2]/2), 
                    Part[$CellContext`q$$, 2]/
                    2} + ($CellContext`q$$ + {-
                    Part[$CellContext`p$$ - $CellContext`q$$, 2], 
                    
                    Part[$CellContext`p$$ - $CellContext`q$$, 
                    1]} + $CellContext`p$$)/2 + {
                   Part[$CellContext`q$$, 2]/
                    2, -(Part[$CellContext`q$$, 2]/2)}]}], 
               Graphics[{
                 Point[{0, 0}]}]], PlotRange -> {{-5, 21}, {-15, 20}}, 
              AspectRatio -> Automatic, ImageSize -> {300, 400}], 
             If[1 <= $CellContext`a$$ <= 3, 
              Pane[
               Column[{
                 If[$CellContext`a$$ >= 1, 
                  Style[
                   Text[
                   "1. Dibuje tres cuadrados, cada uno debe tener como lado \
la medida de uno de los catetos y de la hipotenusa."], "Text", 16], 
                  Text[""]], 
                 If[$CellContext`a$$ >= 2, 
                  Style[
                   Text[
                   "2. Luego, en el cuadrado \!\(\*\nStyleBox[\"del\",\n\
FontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\" \",\nFontWeight->\"Bold\"]\)\!\(\*\
\nStyleBox[\"cateto\",\nFontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\" \",\n\
FontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\"mayor\",\nFontWeight->\"Bold\"]\) \
divida la regi\[OAcute]n en 4 regiones como indica la figura, tenga en cuenta \
que:\n\[DoubleRightArrow] Uno de los segmentos es paralelo a la hipotenusa y \
pasa por el centro del cuadrado\n\[DoubleRightArrow] El otro segmento es \
perpendicular al primer segmento y tambi\[EAcute]n pasa por el centro del \
cuadrado.\nLa idea es acomodar cada una de las regiones en el cuadrado \!\(\*\
\nStyleBox[\"de\",\nFontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\" \",\n\
FontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\"la\",\n\
FontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\" \",\nFontWeight->\"Bold\"]\)\!\(\*\
\nStyleBox[\"hipotenusa\",\nFontWeight->\"Bold\"]\). Note como cada una de \
las regiones \!\(TraditionalForm\`\*SubscriptBox[\(R\), \(1\)], \
\*SubscriptBox[\(R\), \(2\)], \*SubscriptBox[\(R\), \(3\)]\) y \
\!\(TraditionalForm\`\*SubscriptBox[\(R\), \(4\)]\) se puede colocar en las \
esquinas."], "Text", 16], 
                  Text[""]], 
                 If[$CellContext`a$$ >= 3, 
                  Style[
                   Text[
                   "3. La regi\[OAcute]n \!\(TraditionalForm\`\*SubscriptBox[\
\(R\), \(1\)]\) se acomoda en la esquina inferior derecha."], "Text", 16], 
                  Text[""]]}], ImageSize -> {400, 400}]], 
             If[4 <= $CellContext`a$$ <= 7, 
              Pane[
               Column[{
                 If[$CellContext`a$$ >= 4, 
                  Style[
                   Text[
                   "4. La regi\[OAcute]n \!\(TraditionalForm\`\*SubscriptBox[\
\(R\), \(2\)]\) se acomoda en la esquina inferior izquierda."], "Text", 16], 
                  Text[""]], 
                 If[$CellContext`a$$ >= 5, 
                  Style[
                   Text[
                   "5. La regi\[OAcute]n \!\(TraditionalForm\`\*SubscriptBox[\
\(R\), \(3\)]\) se acomoda en la esquina superior derecha."], "Text", 16], 
                  Text[""]], 
                 If[$CellContext`a$$ >= 6, 
                  Style[
                   Text[
                   "6. La regi\[OAcute]n \!\(TraditionalForm\`\*SubscriptBox[\
\(R\), \(4\)]\) se acomoda en la esquina superior izquierda."], "Text", 16], 
                  Text[""]], 
                 If[$CellContext`a$$ >= 7, 
                  Style[
                   Text[
                   "7. Finalmente, la regi\[OAcute]n del cuadrado \!\(\*\n\
StyleBox[\"del\",\nFontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\" \",\n\
FontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\"cateto\",\n\
FontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\" \",\nFontWeight->\"Bold\"]\)\!\(\*\
\nStyleBox[\"menor\",\nFontWeight->\"Bold\"]\) \
\!\(TraditionalForm\`\((\*SubscriptBox[\(R\), \(5\)])\)\) se acomoda en el \
centro."], "Text", 16], 
                  Text[""]]}], ImageSize -> {400, 400}]]}]), 
         "Specifications" :> {{{$CellContext`p$$, {8, 0}}, {5, 0}, {14, 0}, 
            ControlType -> Locator, Appearance -> 
            None}, {{$CellContext`q$$, {0, 4}}, {0, 0.2}, {0, 5}, ControlType -> 
            Locator, Appearance -> None}, {{$CellContext`a$$, 1, "Pasos:"}, {
            1, 2, 3, 4, 5, 6, 7}, ControlType -> SetterBar}}, "Options" :> {},
          "DefaultOptions" :> {}],
        ImageSizeCache->{1043., {328., 335.}},
        SingleEvaluation->True],
       Deinitialization:>None,
       DynamicModuleValues:>{},
       SynchronousInitialization->True,
       UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
       UnsavedVariables:>{Typeset`initDone$$},
       UntrackedVariables:>{Typeset`size$$}], "Manipulate",
      Deployed->True,
      StripOnInput->False],
     TraditionalForm],
    Manipulate`InterpretManipulate[1]],
   DynamicModuleValues:>{}], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"411ed81a-2536-40ce-8904-5a63acdc1565"],

Cell[TextData[{
 "Se puede verificar que los dos cuadrados ",
 StyleBox["del lado los catetos",
  FontWeight->"Bold"],
 " cubren completamente el cuadrado ",
 StyleBox["del lado de la hipotenusa",
  FontWeight->"Bold"],
 ". Por tanto, la suma de las regiones de los cuadrados ",
 StyleBox["de los catetos",
  FontWeight->"Bold"],
 " es igual al cuadrado ",
 StyleBox["de la hipotenusa",
  FontWeight->"Bold"],
 "; si ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "d99470e3-bc95-464c-86f4-4dbeecdaf433"],
 " y ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "e5c8e154-be19-4d46-bdbe-b730c9e809ae"],
 " son las medidas de los catetos y ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "fa81ec6e-362b-4518-b4e9-1dfa7b97a98d"],
 " es la medida de la hipotenusa se tiene la siguiente relaci\[OAcute]n:\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         StyleBox[
          RowBox[{
           SuperscriptBox["c", "2"], "=", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["b", "2"]}]}],
          FontWeight->"Bold"]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "5b63c683-1084-453a-81dd-9e366eebfe12"]
}], "Answer",ExpressionUUID->"e190f9a0-907e-46d0-a266-b473bdfb5f89"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["El Teorema de Pit\[AAcute]goras", "Section",ExpressionUUID->"ee6efc1a-fbe9-495e-8241-c110a130b5b9"],

Cell[TextData[StyleBox["Teorema de Pit\[AAcute]goras",
 FontWeight->"Bold"]], "Cuadro/Titulo",ExpressionUUID->"57a85bd4-a35b-49fe-\
a5ab-655c8d048366"],

Cell[TextData[{
 "Los pitag\[OAcute]ricos descubrieron que n\[UAcute]meros como 3, 4 y 5 no \
solo eran la longitud de los lados de un tri\[AAcute]ngulo \
rect\[AAcute]ngulo, sino que adem\[AAcute]s ten\[IAcute]an la propiedad de \
que la suma de de los ",
 StyleBox["cuadrados",
  FontSlant->"Italic"],
 " de los lados m\[AAcute]s peque\[NTilde]os (llamados catetos) igualaba el ",
 StyleBox["cuadrado",
  FontSlant->"Italic"],
 " del lado mayor (llamado hipotenusa). Es decir:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["3", "2"], "+", 
     SuperscriptBox["4", "2"]}], "=", 
    SuperscriptBox["5", "2"]}], TraditionalForm]],ExpressionUUID->
  "50964876-0fab-4352-b9d4-b429e4174019"],
 ".\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAADc5P88BhCb
     "], {{0, 257}, {399, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{225., Automatic},
   ImageSizeRaw->{399, 257},
   PlotRange->{{0, 399}, {0, 257}}]], "Input",
  TextAlignment->Center,ExpressionUUID->
  "71f7b797-38e0-43d1-a434-fc156f3aefac"],
 "\nGeneralizando, el Teorema de Pit\[AAcute]goras enuncia que en un tri\
\[AAcute]ngulo rect\[AAcute]nguo:\n\[OpenCurlyDoubleQuote]",
 StyleBox["La suma de los cuadrados de los catetos es igual al cuadrado de la \
hipotenusa",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote]\nEn otras palabras, si ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "18190452-0496-40f1-a795-cba8a4b7d8c8"],
 " y ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "004ca716-a5f8-4ee5-a5c9-7b68210cf283"],
 " son los catetos y ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "4eb70363-e18e-4c5e-92a5-7999096cd6d1"],
 " es la hipotenusa, el Teorema de Pit\[AAcute]goras resulta en la expresi\
\[OAcute]n:\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         StyleBox[
          RowBox[{
           SuperscriptBox["c", "2"], "=", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["b", "2"]}]}],
          FontWeight->"Bold"]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "c8d91f83-0798-4d02-b64c-0c50330ea19a"]
}], "Cuadro/Contenido",
 TextAlignment->Left,ExpressionUUID->"97277eac-f508-4f85-8176-e10661970b3c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Problema 2  ", "Section",ExpressionUUID->"88c99d76-d36e-41ab-904d-4809dc9c55a0"],

Cell["\<\
\[DownQuestion]Qu\[EAcute] relaci\[OAcute]n existe entre la diagonal de un \
cuadrado y un lado?\
\>", "Ejercicio",
 TextAlignment->Right,
 FontSlant->"Italic",ExpressionUUID->"03aebb68-39eb-4d45-b327-0c5a9c4bb82f"],

Cell["\<\
Como sugerencia puede dibujar varios cuadrados, calcular la medida del lado y \
de la diagonal (aproxime con dos o m\[AAcute]s cifras decimales), finalmente \
encontrar la relaci\[OAcute]n de estas medidas. \
\>", "Text",ExpressionUUID->"f6b27ab3-cf4e-4c7f-833c-796291b1a744"],

Cell[BoxData[
 FormBox[
  DynamicModuleBox[{}, 
   TagBox[
    FormBox[
     StyleBox[
      DynamicModuleBox[{$CellContext`a$$ = {10., 0}, Typeset`show$$ = True, 
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{{
          Hold[$CellContext`a$$], {1, 0}}, {0.1, 0}, {10, 0}}}, 
       Typeset`size$$ = {360., {176., 184.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`a$48218$$ = {0, 0}}, 
       DynamicBox[Manipulate`ManipulateBoxes[
        1, TraditionalForm, "Variables" :> {$CellContext`a$$ = {1, 0}}, 
         "ControllerVariables" :> {
           Hold[$CellContext`a$$, $CellContext`a$48218$$, {0, 0}]}, 
         "OtherVariables" :> {
          Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
           Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
           Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
           Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Show[
           Graphics[{
             EdgeForm[{Thick, Blue}], 
             FaceForm[{
               Opacity[0.3], Blue}], 
             Rectangle[{0, 0}, {
               Part[$CellContext`a$$, 1], 
               Part[$CellContext`a$$, 1]}], 
             AbsolutePointSize[5], 
             Point[$CellContext`a$$], Thick, Red, 
             Line[{{0, 0}, {
                Part[$CellContext`a$$, 1], 
                Part[$CellContext`a$$, 1]}}], 
             Line[{{0, 0}, $CellContext`a$$}], 
             Text[
              Style[
               Round[
                Part[$CellContext`a$$, 1], 0.001], 12], {
              Part[$CellContext`a$$, 1]/2, -0.3}], 
             Text[
              Style[
               Round[Part[$CellContext`a$$, 1] Sqrt[2], 0.001], 12], {
              Part[$CellContext`a$$, 1]/2, Part[$CellContext`a$$, 1]/2}, {-1, 
              1}]}], PlotRange -> {{-0.4, 10.4}, {-0.4, 10.4}}], 
         "Specifications" :> {{{$CellContext`a$$, {1, 0}}, {0.1, 0}, {10, 0}, 
            ControlType -> Locator, Appearance -> None}}, "Options" :> {}, 
         "DefaultOptions" :> {}],
        ImageSizeCache->{419., {213., 220.}},
        SingleEvaluation->True],
       Deinitialization:>None,
       DynamicModuleValues:>{},
       SynchronousInitialization->True,
       UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
       UnsavedVariables:>{Typeset`initDone$$},
       UntrackedVariables:>{Typeset`size$$}], "Manipulate",
      Deployed->True,
      StripOnInput->False],
     TraditionalForm],
    Manipulate`InterpretManipulate[1]],
   DynamicModuleValues:>{}], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"887ba9b4-e86d-4738-96a0-181bba478d6a"],

Cell["Consigne los resultados en la siguiente tabla:", "Text",ExpressionUUID->"82f1aebc-cf34-4cbe-93da-12e313f7b6c6"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {"\<\"\"\>", 
       StyleBox["\<\"Longitud del \\nlado\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"Longitud de \\nla diagonal \
(\\!\\(\\*\\nStyleBox[\\\"aproximado\\\",\\nFontSlant->\\\"Italic\\\"]\\))\"\>\
",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"Relaci\[OAcute]n entre la longitud de la\\n diagonal y \
el lado (\\!\\(\\*\\nStyleBox[\\\"aproximado\\\",\\nFontSlant->\\\"Italic\\\"]\
\\))\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {
       StyleBox["\<\"Cuadrado 1\"\>",
        StripOnInput->False,
        FontWeight->Bold], "10", "14.142`", 
       TemplateBox[{
        "\"\\!\\(\\*Cell[TextData[{\\nCell[BoxData[\\nFormBox[\\nFractionBox[\
\\\"14.142\\\", \\\"10\\\"], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"],\\n\\\"\[TildeTilde]\
\\\"\\n}]]\\)\"","1.414`"},
        "RowDefault"]},
      {
       StyleBox["\<\"Cuadrado 2\"\>",
        StripOnInput->False,
        FontWeight->Bold], "8.5`", "", ""},
      {
       StyleBox["\<\"Cuadrado 3\"\>",
        StripOnInput->False,
        FontWeight->Bold], "6", "", ""},
      {
       StyleBox["\<\"Cuadrado 4\"\>",
        StripOnInput->False,
        FontWeight->Bold], "5.5`", "", ""},
      {
       StyleBox["\<\"Cuadrado 5\"\>",
        StripOnInput->False,
        FontWeight->Bold], "4", "", ""},
      {
       StyleBox["\<\"Cuadrado 6\"\>",
        StripOnInput->False,
        FontWeight->Bold], "2.8`", "", ""}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"4a6c261a-2bbe-4f25-80d8-c5d4e8b1c7e5"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"64404e76-e514-423b-8a1a-418e46672ad5"],

Cell[CellGroupData[{

Cell["Parte 1: tabla", "Subsubsection",ExpressionUUID->"26130554-14c1-47a7-b4d8-2b4b7465a9fd"],

Cell["Puede completar la tabla con el siguiente aplicativo", "Text",ExpressionUUID->"a6a97fb9-0ed3-413c-ba5d-8edbac482ed2"],

Cell[BoxData[
 FormBox[
  DynamicModuleBox[{}, 
   TagBox[
    FormBox[
     StyleBox[
      DynamicModuleBox[{$CellContext`a$$ = {8.735, 0}, Typeset`show$$ = True, 
       Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
       Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
       "\"untitled\"", Typeset`specs$$ = {{{
          Hold[$CellContext`a$$], {1, 0}}, {0.1, 0}, {10, 0}}}, 
       Typeset`size$$ = {840., {204., 216.}}, Typeset`update$$ = 0, 
       Typeset`initDone$$, Typeset`skipInitDone$$ = 
       True, $CellContext`a$81879$$ = {0, 0}}, 
       DynamicBox[Manipulate`ManipulateBoxes[
        1, TraditionalForm, "Variables" :> {$CellContext`a$$ = {1, 0}}, 
         "ControllerVariables" :> {
           Hold[$CellContext`a$$, $CellContext`a$81879$$, {0, 0}]}, 
         "OtherVariables" :> {
          Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
           Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
           Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
           Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Row[{
            Show[
             Graphics[{
               EdgeForm[{Thick, Blue}], 
               FaceForm[{
                 Opacity[0.3], Blue}], 
               Rectangle[{0, 0}, {
                 Part[$CellContext`a$$, 1], 
                 Part[$CellContext`a$$, 1]}], 
               AbsolutePointSize[5], 
               Point[$CellContext`a$$], Thick, Red, 
               Line[{{0, 0}, {
                  Part[$CellContext`a$$, 1], 
                  Part[$CellContext`a$$, 1]}}], 
               Line[{{0, 0}, $CellContext`a$$}], 
               Text[
                Style[
                 Round[
                  Part[$CellContext`a$$, 1], 0.001], 12], {
                Part[$CellContext`a$$, 1]/2, -0.3}], 
               Text[
                Style[
                 Round[Part[$CellContext`a$$, 1] Sqrt[2], 0.001], 12], {
                Part[$CellContext`a$$, 1]/2, Part[$CellContext`a$$, 1]/
                 2}, {-1, 1}]}], PlotRange -> {{-0.6, 10.4}, {-0.6, 10.4}}, 
             ImageSize -> {300, 300}], 
            Pane[
             Grid[{{
                Style["Longitud del lado", Bold], 
                Item[
                 Part[$CellContext`a$$, 1], Alignment -> Center]}, {
                Style[
                "Longitud de la diagonal \n(\!\(\*\nStyleBox[\"aproximado\",\n\
FontSlant->\"Italic\"]\))", Bold], 
                Column[{Null, 
                  Item[
                   Round[Part[$CellContext`a$$, 1] Sqrt[2], 0.001], Alignment -> 
                   Center]}]}, {
                Style[
                "Relaci\[OAcute]n entre la longitud\n de la diagonal y el \
lado\n(\!\(\*\nStyleBox[\"aproximado\",\nFontSlant->\"Italic\"]\))", Bold], 
                Column[{Null, 
                  Item[
                   DisplayForm[
                    FractionBox[
                    Round[Part[$CellContext`a$$, 1] Sqrt[2], 0.001], 
                    Part[$CellContext`a$$, 1]]], Alignment -> Center]}]}, {
                Item["\!\(\*Cell[\"\[TildeTilde]\"]\)", Alignment -> Right], 
                Round[Part[$CellContext`a$$, 1] Sqrt[2], 0.001]/
                Part[$CellContext`a$$, 1]}}, Alignment -> Left, Frame -> All],
              ImageSize -> {300, 250}]}], 
         "Specifications" :> {{{$CellContext`a$$, {1, 0}}, {0.1, 0}, {10, 0}, 
            ControlType -> Locator, Appearance -> None}}, "Options" :> {}, 
         "DefaultOptions" :> {}],
        ImageSizeCache->{899., {243., 250.}},
        SingleEvaluation->True],
       Deinitialization:>None,
       DynamicModuleValues:>{},
       SynchronousInitialization->True,
       UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
       UnsavedVariables:>{Typeset`initDone$$},
       UntrackedVariables:>{Typeset`size$$}], "Manipulate",
      Deployed->True,
      StripOnInput->False],
     TraditionalForm],
    Manipulate`InterpretManipulate[1]],
   DynamicModuleValues:>{}], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"d4c23366-63c4-4dca-8bf0-05efb87722b4"],

Cell["Dando algunos valores al lado del cuadrado, la tabla queda:", "Text",ExpressionUUID->"3ed00e8f-52c4-4a8f-83cf-da357dee88a5"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[GridBox[{
      {"\<\"\"\>", 
       StyleBox["\<\"Longitud del \\nlado\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"Longitud de \\nla diagonal \
(\\!\\(\\*\\nStyleBox[\\\"aproximado\\\",\\nFontSlant->\\\"Italic\\\"]\\))\"\>\
",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"Relaci\[OAcute]n entre la longitud de la\\n diagonal y \
el lado (\\!\\(\\*\\nStyleBox[\\\"aproximado\\\",\\nFontSlant->\\\"Italic\\\"]\
\\))\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {
       StyleBox["\<\"Cuadrado 1\"\>",
        StripOnInput->False,
        FontWeight->Bold], "10", "14.142`", 
       TemplateBox[{
        "\"\\!\\(\\*Cell[TextData[{\\nCell[BoxData[\\nFormBox[\\nFractionBox[\
\\\"14.142\\\", \\\"10\\\"], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"],\\n\\\"\[TildeTilde]\
\\\"\\n}]]\\)\"","1.4142000000000001`"},
        "RowDefault"]},
      {
       StyleBox["\<\"Cuadrado 2\"\>",
        StripOnInput->False,
        FontWeight->Bold], "8.5`", "12.021`", 
       TemplateBox[{
        "\"\\!\\(\\*Cell[TextData[{\\nCell[BoxData[\\nFormBox[\\nFractionBox[\
\\\"12.021\\\", \\\"8.5\\\"], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"],\\n\\\"\[TildeTilde]\
\\\"\\n}]]\\)\"","1.4142400000000002`"},
        "RowDefault"]},
      {
       StyleBox["\<\"Cuadrado 3\"\>",
        StripOnInput->False,
        FontWeight->Bold], "6", "8.485`", 
       TemplateBox[{
        "\"\\!\\(\\*Cell[TextData[{\\nCell[BoxData[\\nFormBox[\\nFractionBox[\
\\\"8.485\\\", \\\"6\\\"], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"],\\n\\\"\[TildeTilde]\
\\\"\\n}]]\\)\"","1.4141700000000001`"},
        "RowDefault"]},
      {
       StyleBox["\<\"Cuadrado 4\"\>",
        StripOnInput->False,
        FontWeight->Bold], "5.5`", "7.778`", 
       TemplateBox[{
        "\"\\!\\(\\*Cell[TextData[{\\nCell[BoxData[\\nFormBox[\\nFractionBox[\
\\\"7.778\\\", \\\"5.5\\\"], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"],\\n\\\"\[TildeTilde]\
\\\"\\n}]]\\)\"","1.4141800000000002`"},
        "RowDefault"]},
      {
       StyleBox["\<\"Cuadrado 5\"\>",
        StripOnInput->False,
        FontWeight->Bold], "4", "5.657`", 
       TemplateBox[{
        "\"\\!\\(\\*Cell[TextData[{\\nCell[BoxData[\\nFormBox[\\nFractionBox[\
\\\"5.657\\\", \\\"4\\\"], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"],\\n\\\"\[TildeTilde]\
\\\"\\n}]]\\)\"","1.41425`"},
        "RowDefault"]},
      {
       StyleBox["\<\"Cuadrado 6\"\>",
        StripOnInput->False,
        FontWeight->Bold], "2.8`", "3.96`", 
       TemplateBox[{
        "\"\\!\\(\\*Cell[TextData[{\\nCell[BoxData[\\nFormBox[\\nFractionBox[\
\\\"3.96\\\", \\\"2.8\\\"], \
TraditionalForm]],\\nFormatType->\\\"TraditionalForm\\\"],\\n\\\"\[TildeTilde]\
\\\"\\n}]]\\)\"","1.41429`"},
        "RowDefault"]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"8d1f2e12-75da-458f-9289-caf3a68ff9ce"],

Cell["\<\
Note que la aproximaci\[OAcute]n es similar en todos los cuadrados; al \
parecer, la relaci\[OAcute]n entre la longitud de la diagonal y el lado es la \
misma sin depender de las medidas del cuadrado. La demostraci\[OAcute]n sigue \
a continuaci\[OAcute]n.\
\>", "Text",ExpressionUUID->"35a4308d-046d-4837-a31d-23b31a5ddce1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Parte 2: caso espec\[IAcute]fico", "Subsubsection",ExpressionUUID->"06b3c4a1-f343-4e7b-b7ea-3e5ffe663ecf"],

Cell["Suponga que la longitud del cuadrado es de 5 unidades,", "Text",ExpressionUUID->"aebd37b9-59d8-41d9-b382-4e7c34469cca"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3b9vHGkBx+HhaChTXhkQBRWCLnKBQomERHRAnztd9kSTmBzShY6KFv8H
aelfaUXnjjZclcJILlNaVC6XtTfxr/WuZ3Zn3p/PV0+iy8Znj6x8MrMzJ92P
v3r1xeyzruu+/dHypy++/O7Xr19/+dffP1r+4o8vv/3TNy9ffP2bl3958c2L
10+++uHyxV/+oOt+vvxx8c8LMzMzMzMzMzMzMzMzMzMzMxt789mi6245OEp9
TGbt7ehAiWapd7I46BazeerDMGt884uT4NFJ6sMwa3snRxclzufXl6aqNIu/
9ds1nYtVs+hb3a65eR68eOVg4cRolnar61XXqGZpp0Sz2Lt8hHHn6eHHeziJ
jsisza3eJ97sbtYtulmy4zFrdPN77p1eX5rO3Uo1i7XLa9SrDG9lp0QzMzMz
MzMzMzMzMzMzs7Q7O1ucnqY+iG1b/88/oDKPurN33S9Ou8c5x5j8uwSTWmX4
8RePHy/Oz1M3d/+Sf6NgOrcyXHr7NnVwG3d1jCFAVf71z7P//eQ6w+fd29S1
bZsSqdJ6hl3e/1NuJVKfezNUIsR0J8P/HL69+kOe85RITdYzXL6oRIjp3gyD
EiGiTRkGJUIsWzIMSoQotmcYlAjTezDDoESYWJ8MgxJhSj0zDEqEyfTPMCgR
pjEow6BEmMDQDIMSYWw7ZBiUCKPaLcOgRBjPzhkGJcJI9skwKBHGsGeGQYmw
t/0zDEqE/YySYVAi7GGsDIMSYVcjZhiUCDsZN8OgRBhu9AyDEmGgKTIMSoQh
JsowKBF6my7DoEToZ9IMgxKhh6kzDEqEh0TIMCgRtoqTYVAibBYtw6BE2CBm
hkGJcJ/IGQYlwpr4GQYlwm1JMgxKhBtSZRiUCJ8kzDAoES6lzTAoETLIMCiR
5uWQYVAibcskw6BEGpZPhkGJtCqrDIMSaVJuGQYl0p4MMwxKpDF5ZhiUSEuy
zTAokWbknGFQIm3IPMOgRBqQf4ZBidSuiAyDEqlaKRkGJVKvgjIMSqRSZWUY
lEiNisswKJHqlJhhUCJ1KTTDoEQqUm6GQYnUougMgxKpQukZBiVSvgoyDEqk
cHVkGJRIyarJMCiRYtWUYVAiZaosw6BEClRfhkGJlKbKDIMSKUqtGQYlUo6K
MwxKpBB1ZxiUSAmqzzAokey1kGFQInlrJMOgRDLWToZBieSqqQyDEslSaxkG
JZKfBjMMSiQzbWYYlEhOms0wKJFstJxhUCJ5aDzDoEQyIMOgRFKT4YoSSUiG
V5RIKjK8SYkkIcM7lEh8MlynRCKT4b2USEwy3ESJRCPDLZRIHDLcTolEIMMH
KZGpybAPJTIpGfakRKYjw/6UyERkOIgSmYIMh1Iio5PhDpTIuGS4GyUyIhnu
TImMRYb7UCKjkOGelMj+ZLg/JbInGY5CiexDhmNRIjuT4YiUyG5kOC4lsgMZ
jk6JDCXDKSiRQWQ4ESXSnwyno0R6kuGkUpU4n11/6ZWDo40frMTkZDi17SUO
6mXQjg6UWAwZRrC9xEG9DNjJ4qBbzOZ9P1yJCckwjm0lDuxlwOYXX/HopO+H
KzEVGUazrcSBvfTfydHFZ57Pr7/69q+ixCRkGNOWEof20n/rbz+7rSdfJcYn
w8i2lDi0l/5bvf282fXFKweLTaErMTIZxrelxKG97LPV+XfTOVeJMckwiUHP
E7f3ss+UmAkZppKgxMtbsneehnx8T7rh31BiHDJMaGOJw3vpv9V1783PM1se
w2zjxysxAhmm9eD7xP69DNiN+7H33Jid3701pMSpyTC5B58n9u9l2C7PuVef
9tanUWJcMszBA+8Th/Qy3ZQ4HRlmYtAdm1RT4kRkmA8lNkuGWVFim2SYGyU2
SIYZUmJrZJgnJTZFhtlSYjtkmDMlNkKGmVNiC2SYPyVWT4ZFUGLdZFgKJVZM
hgVRYq1kWBYlVkmGxVFifWRYIiVWRoaFUmJNZFguJVZDhkVTYh1kWDolVkCG
FVBi6WRYByUWTYbVUGK5ZFgTJRZKhpVRYolkWB8lFkeGVVJiWWRYKyUWRIYV
U2IpZFg3JRZBhtVTYv5k2AIlZk6GjVBizmTYDiVmS4ZNUWKeZNgaJWZIhg1S
Ym5k2CYlZkWGzVJiPmTYMiVmQoaNU2IOZIgSk5MhQYmpyZAVJSYkQ64oMRUZ
cpMSk5AhdygxPhmyTomRyZB7KTEmGbKJEqORIVsoMQ4Zsp0SI5AhD1Li1GRI
H0qclAzpSYnTkSH9KXEiMmQQJU5BhgylxNHJkB0ocVwyZDdKHJEM2ZkSxyJD
9qHEUciQPSlxfzJkf0rckwwZhRL3IUPGosSdyZARKXE3MmRcStyBDBmdEoeS
IVNQ4iAyZCJK7E+GTEeJPcmQSSmxDxkyNSU+SIZEoMTtZEgcStxChkSjxE1k
SExKvJcMiUyJ62RIfEq8Q4YkocSbZEgqSrwiQxJS4ooMSUuJQYZkQIkyJAeN
lyhDMtFyiTIkH82WKEOy0maJMiQ3DZYoQzLUWokyJE9NlShDstVOiTIkZ42U
KEMy10KJMiR/1ZcoQ4pQd4kypBQVlyhDClJriTKkLFWWKEOKU1+JMqRElZUo
QwpVU4kypFzVlChDilZHiTKkdBWUKEMqUHqJMqQORZcoQ6pRbokypCaFlihD
KlNiiTKkPsWVKEOqVFaJMqRWBZX4qJMh1SqlxGWG7zoZUqfDw7dd93l3sUdv
3rw5Pz9P3dx9Oz//bRdOup9eZfjfP3z3778fQx3+8bs/P+26K4+77vDwMHV1
9+3776/P3FC7v12eGs/OzlKHt7ZXr5J/cyCaVYnHx8epw1vbhw8fus+XR/i+
+9lx9xTq8qvj7rPjZXqfPL8s8fT0NHV4G5bhXxFmY+z581V813v69GnqgzJr
bsu3hM+ePbvK8MmTJ/meEM1q3/v375fvDd+9e5f6QMzMzMzMzD5ttvZs6+gk
9TGZtbaTxYESzVLv5OgivXnqwzBrfPPZojtYOAeapd3RwaKbXfa4ujRVpVmK
rd+ucbFqFnur2zU3z4OXrxwcJTwmM7vYxfWqa1Sz1FOiWeStHmHceXq4uodj
ZvG2ep94s7v5RZszt2zM4u76+UV3z4OM1e/q0izCVteoH92+LlWimZmZmZmZ
mZnZ3vs/2ofDDQ==
    "], {{0, 305}, {302, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{217., Automatic},
  ImageSizeRaw->{302, 305},
  PlotRange->{{0, 302}, {0, 305}}]], "Text",
 TextAlignment->Center,ExpressionUUID->"0a5886df-7a20-4031-a166-8ac59fd5f312"],

Cell[TextData[{
 "Si se quiere encontrar la medida de la hipotenusa se puede utilizar el \
enunciado del ",
 StyleBox["Teorema de ",
  FontSlant->"Italic"],
 "Pit\[AAcute]goras",
 StyleBox[":",
  FontSlant->"Italic"]
}], "Text",ExpressionUUID->"a59dc7ee-ec2c-4497-842a-e78e3bc0b9ed"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SuperscriptBox["c", "2"], "=", 
         RowBox[{
          SuperscriptBox["5", "2"], "+", 
          SuperscriptBox["5", "2"]}]}]},
       {
        RowBox[{
         SuperscriptBox["c", "2"], "=", 
         RowBox[{"25", "+", "25"}]}]},
       {
        RowBox[{
         SuperscriptBox["c", "2"], "=", "50"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"733f04b3-0512-4484-a165-4ae4ba5e77eb"]], \
"Text",ExpressionUUID->"759ed06d-5219-4957-a920-32787aea75b4"],

Cell["\<\
Esto quiere decir que el cuadrado de la hipotenusa es 50, por tanto, la \
hipotenusa es la ra\[IAcute]z cuadrada positiva de 50\
\>", "Text",ExpressionUUID->"509c252e-cb3c-414f-aa27-80727b213338"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SuperscriptBox["c", "2"], "=", "50"}]},
       {
        RowBox[{"c", "=", 
         SqrtBox["50"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"175cacac-b749-4ab9-8fcc-01eb2bfd8d50"]], \
"Text",ExpressionUUID->"71195e2a-d162-41b4-a02d-340481e3af2e"],

Cell[TextData[{
 "Este es un ",
 StyleBox["n\[UAcute]mero irracional",
  FontWeight->"Bold"],
 " y su representaci\[OAcute]n decimal es infinita no peri\[OAcute]dica, por \
tanto, se suele utilizar una aproximaci\[OAcute]n tomando algunas cifras \
decimales:"
}], "Text",ExpressionUUID->"11e1a80b-aa62-418d-80c7-8a4568b8b08c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"c", "\[AlignmentMarker]", "=", 
         SqrtBox["50"]}]},
       {
        RowBox[{"c", "\[AlignmentMarker]", "\[TildeTilde]", "7.07107"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"1d2d7ddf-7e54-40cb-9c07-ae903b80536a"]], \
"Text",ExpressionUUID->"d30c031b-4cd8-42fe-9f0c-4c16b260ecb1"],

Cell["La relaci\[OAcute]n entre la longitud de la hipotenusa y el lado es:", \
"Text",ExpressionUUID->"5f7e04c1-3132-4503-b4a7-bad2868ea2da"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        FractionBox[
         SqrtBox["50"], "5"]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"e0a1c37c-8bfe-44cb-8ccc-a17daa92bf24"]], \
"Text",ExpressionUUID->"0b535d26-bb35-4ac5-91c5-9299e5d92eb7"],

Cell["\<\
Este n\[UAcute]mero tambi\[EAcute]n es un n\[UAcute]mero irracional, cuya \
aproximaci\[OAcute]n es:\
\>", "Text",ExpressionUUID->"7114a5ed-4212-44cd-8e09-97cfc9b0076e"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         FractionBox[
          SqrtBox["50"], "5"]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}], "\[TildeTilde]", "1.41421"}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"e0a41e3c-b181-41d9-a280-ab99cea5417c"]], \
"Text",ExpressionUUID->"78a0f2be-f9d7-49fa-9a61-c74f9a2ce718"],

Cell[TextData[{
 "Por otro lado, si se tiene cuenta que ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["50"], "=", 
    RowBox[{
     SqrtBox[
      RowBox[{"5", " ", "5", " ", "2"}]], "=", 
     RowBox[{"5", 
      SqrtBox["2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "43609a2b-537b-46fa-b7f8-0c3f8ea7739d"],
 ", entonces la relaci\[OAcute]n entre la longitud de la hipotenusa y el lado \
queda:"
}], "Text",ExpressionUUID->"1e26be50-7d7d-46ad-863c-7d8099d07345"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         FractionBox[
          SqrtBox["50"], "5"]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}], "=", 
      RowBox[{
       FractionBox[
        RowBox[{"5", 
         SqrtBox["2"]}], "5"], "=", 
       SqrtBox["2"]}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"97ec429e-af84-4ab6-8c34-d9984af83381"]], \
"Text",ExpressionUUID->"7eb53a90-0244-4f6b-8534-7aee6f3fc967"],

Cell[TextData[{
 "Note que las dos respuestas son equivalentes, pues",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SqrtBox["2"]}], TraditionalForm]],ExpressionUUID->
  "132f34a9-7f07-4f5e-abb4-90d8a59afaa5"],
 " es un ",
 StyleBox["n\[UAcute]mero irracional",
  FontWeight->"Bold"],
 " cuya aproximaci\[OAcute]n es:"
}], "Text",ExpressionUUID->"2d37129b-8bd2-4654-bcf9-7e8aa9c4cb3c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         SqrtBox["2"]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}], "\[TildeTilde]", "1.41421"}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"63591b30-dc16-40e9-927f-bb1032a63cc9"]], \
"Text",ExpressionUUID->"271b1187-d3cf-4d70-a8cd-fc4ee865a58f"],

Cell[TextData[{
 "Lo invitamos a ensayar otros cuadrados (por ejemplo de longitud 1, 4, 7 o \
20 unidades) para que verifique que la relaci\[OAcute]n entre la longitud de \
la hipotenusa y el lado de ",
 StyleBox["cualquier",
  FontWeight->"Bold"],
 " cuadrado es ",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]],ExpressionUUID->
  "243714a1-f99f-47ee-8d8a-247ff77f1391"],
 "."
}], "Text",ExpressionUUID->"ec52bdb3-f04b-4cd8-86c7-02bdfa1d3320"]
}, Closed]],

Cell[CellGroupData[{

Cell["Parte 3: caso general", "Subsubsection",ExpressionUUID->"71e60012-2c68-4195-84aa-ff456de6d999"],

Cell[TextData[{
 "Suponga ahora que la longitud del cuadrado es de ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "8a56e709-ab49-4df3-aa85-cb94b47a14bf"],
 " unidades,"
}], "Text",ExpressionUUID->"51ad64cc-1f2b-4f86-9894-f1552068a156"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 218}, {214, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{151.14285714285631`, Automatic},
  ImageSizeRaw->{214, 218},
  PlotRange->{{0, 214}, {0, 218}}]], "Text",
 TextAlignment->Center,ExpressionUUID->"39fb5089-0e0e-4491-b0c9-cdf2b670591f"],

Cell[TextData[{
 "Si se quiere encontrar la medida de la hipotenusa se puede utilizar el \
enunciado del ",
 StyleBox["Teorema de ",
  FontSlant->"Italic"],
 "Pit\[AAcute]goras",
 StyleBox[":",
  FontSlant->"Italic"]
}], "Text",ExpressionUUID->"95ab402c-89b6-4603-8848-18dd223b67d8"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SuperscriptBox["c", "2"], "=", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["a", "2"]}]}]},
       {
        RowBox[{
         SuperscriptBox["c", "2"], "=", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"6ff0a2a5-c170-4538-8f11-7e4a9cad1cf5"]], \
"Text",ExpressionUUID->"fc01fc91-b235-450f-9b52-45377f16cf4d"],

Cell[TextData[{
 "por tanto, la hipotenusa es la ra\[IAcute]z cuadrada de ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SuperscriptBox["a", "2"]}], TraditionalForm]],ExpressionUUID->
  "163bcd8a-1622-4b46-bb03-5855868d130b"]
}], "Text",ExpressionUUID->"166e4a45-e3d6-4867-9dc9-b544a3df559c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SuperscriptBox["c", "2"], "=", 
         RowBox[{"2", 
          SuperscriptBox["a", "2"]}]}]},
       {
        RowBox[{"c", "=", 
         RowBox[{
          SqrtBox["2"], "a"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"d019fc8f-10fa-4b2e-9d32-ccdd70d9ba93"]], \
"Text",ExpressionUUID->"deeec4f0-89f2-42cf-a806-6b0439c272eb"],

Cell["\<\
entonces la relaci\[OAcute]n entre la longitud de la hipotenusa y el lado \
queda:\
\>", "Text",ExpressionUUID->"c8b74010-e78b-46ac-8115-48f664b6e3b3"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{GridBox[{
        {
         FractionBox[
          RowBox[{
           SqrtBox["2"], "a"}], "a"]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}], "=", 
      SqrtBox["2"]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"fc8b3605-fc5c-439e-83e8-e453dfa1ca5a"]], \
"Text",ExpressionUUID->"ff02c077-69f3-406c-8536-0e4d2b16d0a6"],

Cell[TextData[{
 "La relaci\[OAcute]n entre la longitud de la ",
 StyleBox["hipotenusa",
  FontWeight->"Bold"],
 " y el ",
 StyleBox["lado",
  FontWeight->"Bold"],
 " de un cuadrado (sin importar su medida) es ",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]],ExpressionUUID->
  "28caf787-7a64-430d-81ad-edc6c258fd52"],
 "."
}], "Answer",ExpressionUUID->"c0af8962-7835-4868-8314-02329de4b90c"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Actividad: significado del n\[UAcute]mero Pi ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "\[Pi]", ")"}], TraditionalForm]],ExpressionUUID->
  "03060c7f-c7b4-4737-9d8b-bb50beabbb07"],
 "."
}], "Subchapter",ExpressionUUID->"368590f4-59cb-4037-a378-487afad6d1a4"],

Cell["\<\
En esta actividad usted va a desarrollar problemas que involucran al n\
\[UAcute]mero irracional \[Pi] . Para ello es necesario que consiga como m\
\[IAcute]nimo 5 objetos que tengan forma circular, lo m\[AAcute]s perfectos \
posibles, ya que no funciona con elementos de forma ovalada o \
el\[IAcute]ptica.  Los elementos puedes ser platos, botellas, etc.\
\>", "Text",ExpressionUUID->"9e3b8cf7-8e74-478b-8c36-b8773742d5d7"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[{RGBColor[0, 0, 1], Thickness[Large]}], FaceForm[{RGBColor[
   0, 0, 1], Opacity[0.3]}], DiskBox[{0, 0}]},
  ImageSize->{250., Automatic}]], "Output",
 TextAlignment->Center,ExpressionUUID->"cd1afad0-a6c2-4f7d-9724-d1973c080c67"],

Cell[TextData[{
 "Se llama ",
 StyleBox["radio de la circunferencia",
  FontWeight->"Bold"],
 " al segmento que va desde el centro de la circunferencia hasta el extremo \
de esta, el ",
 StyleBox["di\[AAcute]metro de la circunferencia",
  FontWeight->"Bold"],
 " es dos veces el radio: es el segmento que va desde un extremo a otro y \
pasa por el centro. Se llama ",
 StyleBox["per\[IAcute]metro de la circunferencia",
  FontWeight->"Bold"],
 " a la medida del contorno del c\[IAcute]rculo; como es dif\[IAcute]cil \
medirlo, con la ayuda de la cuerda se bordea el c\[IAcute]rculo lo \
m\[AAcute]s firme posible y luego se mide esta longitud sobre el metro, lo m\
\[AAcute]s preciso posible. "
}], "Text",ExpressionUUID->"1ac77b54-e76d-4213-96e1-0ef2a7260317"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[{RGBColor[1, 0, 0], Thickness[Large]}], FaceForm[{RGBColor[
    0, 0, 1], Opacity[0.3]}], DiskBox[{0, 0}]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
    CircleBox[{0, 0.4}, 1.5, 
     NCache[{Rational[-11, 10] Pi, Rational[1, 10] Pi}, {-3.455751918948773, 
      0.3141592653589793}]], 
    CircleBox[{0, 0.8}, 2, 
     NCache[{Rational[-19, 20] Pi, Rational[-1, 20] 
       Pi}, {-2.9845130209103035`, -0.15707963267948966`}]], 
    CircleBox[{0, 1.7}, 3, 
     NCache[{Rational[-4, 5] Pi, Rational[-1, 5] 
       Pi}, {-2.5132741228718345`, -0.6283185307179586}]], 
    {GrayLevel[0], AbsolutePointSize[8], PointBox[{0, 0}], 
     {Thickness[Large], LineBox[{{0, 0}, {1, 0}}], 
      LineBox[{{-1, 0.01}, {1, 0.01}}]}}}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    LineBox[NCache[{{Pi, -1.4}, {-Pi, -1.4}}, {{
      3.141592653589793, -1.4}, {-3.141592653589793, -1.4}}]]}, {InsetBox[
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"r\\\", \
TraditionalForm]]]]]\\)\"\>", "Text",
      StripOnInput->False], {0.5, 0}, {0, 1}], InsetBox[
     StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\"d\\\", \
TraditionalForm]]]]]\\)\"\>", "Text",
      StripOnInput->False], {0, 0}, {0, -1}], InsetBox[
     StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"per\[IAcute]metro\\\",\\\
nFontSlant->\\\"Italic\\\"]\\)\"\>", "Text",
      StripOnInput->False], {0, -1.4}, {0, 1}]}},
  ImageSize->{841., Automatic}]], "Text",
 TextAlignment->Center,ExpressionUUID->"62a0df88-6087-41cb-987b-093895d54c62"],

Cell[CellGroupData[{

Cell["Problema 1  ", "Section",ExpressionUUID->"968e0fc8-89a6-4de1-beaf-f7739d46e5fe"],

Cell["\<\
Tome la medida del di\[AAcute]metro y radio de la circunferencia, mida el per\
\[IAcute]metro de cada uno de los objetos circulares y escriba los resultados \
obtenidos en la siguiente tabla:\
\>", "Text",ExpressionUUID->"a7f4aa6e-7013-453f-9a76-74de2f2f0e12"],

Cell[BoxData[
 TagBox[
  StyleBox[
   TagBox[GridBox[{
      {"\<\"\"\>", 
       StyleBox["\<\"di\[AAcute]metro\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"radio\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"per\[IAcute]metro\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"\\!\\(\\*FractionBox[\\(per\[IAcute]metro\\), \\(di\
\[AAcute]metro\\)]\\)\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"\\!\\(\\*FractionBox[\\(per\[IAcute]metro\\), \
\\(radio\\)]\\)\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {
       StyleBox["\<\"Objeto 1\"\>",
        StripOnInput->False,
        FontWeight->Bold], "", "", "", "", ""},
      {
       StyleBox["\<\"Objeto 2\"\>",
        StripOnInput->False,
        FontWeight->Bold], "", "", "", "", ""},
      {
       StyleBox["\<\"Objeto 3\"\>",
        StripOnInput->False,
        FontWeight->Bold], "", "", "", "", ""},
      {
       StyleBox["\<\"Objeto 4\"\>",
        StripOnInput->False,
        FontWeight->Bold], "", "", "", "", ""},
      {
       StyleBox["\<\"Objeto 5\"\>",
        StripOnInput->False,
        FontWeight->Bold], "", "", "", "", ""}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], "Text",
   StripOnInput->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 TextAlignment->Center,ExpressionUUID->"77de0cad-6df6-4932-812a-540486309226"],

Cell["\<\
\[DownQuestion]Qu\[EAcute] relaci\[OAcute]n existe entre el di\[AAcute]metro \
y el per\[IAcute]metro de la circunferencia?
\[DownQuestion]Qu\[EAcute] relaci\[OAcute]n existe entre el radio y el per\
\[IAcute]metro de la circunferencia?\
\>", "Ejercicio",
 TextAlignment->Right,
 FontSlant->"Italic",ExpressionUUID->"e764b4bf-40e9-40fb-be2a-c2c0226cc185"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"7c0f7ac9-589a-49cc-86e8-63785a0f307a"],

Cell[CellGroupData[{

Cell["Tabla", "Subsubsection",ExpressionUUID->"b2ccffdb-3720-4b62-9cfe-384255641b21"],

Cell["Puede completar la tabla con el siguiente simulador.", "Text",ExpressionUUID->"55d2627c-a0d0-4e65-877e-89d234a0052e"],

Cell[BoxData[
 DynamicModuleBox[{}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`a$$ = {5., 0}, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`a$$], {1, 0}}, {0.1, 0}, {5, 0}}}, 
     Typeset`size$$ = {711., {160., 167.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
     True, $CellContext`a$192419$$ = {0, 0}}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`a$$ = {1, 0}}, 
       "ControllerVariables" :> {
         Hold[$CellContext`a$$, $CellContext`a$192419$$, {0, 0}]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Grid[{{
           Show[
            Graphics[{
              EdgeForm[{Thick, Blue}], 
              FaceForm[{
                Opacity[0.3], Blue}], 
              Disk[{0, 0}, 
               Part[$CellContext`a$$, 1]], 
              AbsolutePointSize[5], 
              Point[$CellContext`a$$], Thick, Red, 
              Line[{{0, 0}, $CellContext`a$$}], 
              Text[
               Style[
                Round[
                 Part[$CellContext`a$$, 1], 0.001], 12], {
               Part[$CellContext`a$$, 1]/2, -0.3}]}], 
            PlotRange -> {{-5.3, 5.3}, {-5.3, 5.3}}, ImageSize -> {300, 300}], 
           Style[
            Pane[
             Grid[{{
                Style["Longitud del di\[AAcute]metro\n", Bold], 
                Column[{Null, 
                  Item[2 Part[$CellContext`a$$, 1], Alignment -> Center]}]}, {
                Style["Longitud del radio\n", Bold], 
                Column[{Null, 
                  Item[
                   Part[$CellContext`a$$, 1], Alignment -> Center]}]}, {
                Style[
                "Longitud del per\[IAcute]metro\n (\!\(\*\n\
StyleBox[\"aproximado\",\nFontSlant->\"Italic\"]\))", Bold], 
                Column[{Null, 
                  Item[
                   Round[(2 Pi) Part[$CellContext`a$$, 1], 0.001], Alignment -> 
                   Center]}]}, {
                Style[
                "\!\(\*FractionBox[\(per\[IAcute]metro\), \
\(di\[AAcute]metro\)]\) (\!\(\*\nStyleBox[\"aproximado\",\n\
FontSlant->\"Italic\"]\))", Bold], 
                Column[{Null, 
                  Item[
                   Round[
                   Round[(2 Pi) Part[$CellContext`a$$, 1], 0.001]/Round[
                    2 Part[$CellContext`a$$, 1], 0.001], 0.00001], Alignment -> 
                   Center]}]}, {
                Style[
                "\!\(\*FractionBox[\(per\[IAcute]metro\), \(radio\)]\) \
(\!\(\*\nStyleBox[\"aproximado\",\nFontSlant->\"Italic\"]\))", Bold], 
                Column[{Null, 
                  Item[
                   Round[Round[(2 Pi) Part[$CellContext`a$$, 1], 0.001]/Round[
                    Part[$CellContext`a$$, 1], 0.001], 0.00001], Alignment -> 
                   Center]}]}}, Alignment -> Left, Frame -> All, ItemSize -> {{
                 Scaled[0.7], 
                 Scaled[0.2]}}], ImageSize -> {400, 300}], "Text"]}, {
           Show[
            Graphics[{Thick, Blue, 
              
              Line[{{(-Pi) Part[$CellContext`a$$, 1], 0}, {
                Pi Part[$CellContext`a$$, 1], 0}}], 
              Text[
               Style[
                Round[(2 Pi) Part[$CellContext`a$$, 1], 0.001], 16], {0, 0}, {
               0, -1}]}], PlotRange -> {{(-5.5) Pi, 5.5 Pi}, {-0.2, 1}}, 
            ImageSize -> {600, 20}], $CellContext`\[SpanFromLeft]}}], 
       "Specifications" :> {{{$CellContext`a$$, {1, 0}}, {0.1, 0}, {5, 0}, 
          ControlType -> Locator, Appearance -> None}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{770., {197., 204.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 TextAlignment->Center,ExpressionUUID->"3aff32df-2661-4c83-8b72-77c729b38b32"],

Cell["La tabla queda:", "Text",
 TextAlignment->Left,ExpressionUUID->"3c92dca9-58a0-40d4-a6df-d9b0aff6c585"],

Cell[BoxData[
 TagBox[
  StyleBox[
   TagBox[GridBox[{
      {"\<\"\"\>", 
       StyleBox["\<\"di\[AAcute]metro\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"radio\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"per\[IAcute]metro\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"\\!\\(\\*FractionBox[\\(per\[IAcute]metro\\), \\(di\
\[AAcute]metro\\)]\\)\"\>",
        StripOnInput->False,
        FontWeight->Bold], 
       StyleBox["\<\"\\!\\(\\*FractionBox[\\(per\[IAcute]metro\\), \
\\(radio\\)]\\)\"\>",
        StripOnInput->False,
        FontWeight->Bold]},
      {
       StyleBox["\<\"Objeto 1\"\>",
        StripOnInput->False,
        FontWeight->Bold], "2", "1", "6.283`", "3.1415`", "6.283`"},
      {
       StyleBox["\<\"Objeto 2\"\>",
        StripOnInput->False,
        FontWeight->Bold], "3.5`", "1.75`", "10.97`", "3.14147`", "6.28293`"},
      {
       StyleBox["\<\"Objeto 3\"\>",
        StripOnInput->False,
        FontWeight->Bold], "4.2`", "2.1`", "13.195`", "3.14167`", "6.28333`"},
      {
       StyleBox["\<\"Objeto 4\"\>",
        StripOnInput->False,
        FontWeight->Bold], "6.7`", "3.35`", "21.086`", "3.13154`", "6.28308`"},
      {
       StyleBox["\<\"Objeto 5\"\>",
        StripOnInput->False,
        FontWeight->Bold], "9", "4.5`", "28.488`", "3.1416`", "6.28319`"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], "Text",
   StripOnInput->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 TextAlignment->Center,ExpressionUUID->"bc31bf10-6f62-49e6-95ff-6300be47b502"]
}, Closed]],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Subsubsection",ExpressionUUID->"071d5ba5-b1f2-4f71-bee2-946a66cc2a2f"],

Cell["\<\
Note que las aproximaciones de las \[UAcute]ltimas columnas son similares en \
todos los objetos; al parecer, la relaci\[OAcute]n entre la longitud del per\
\[IAcute]metro y el di\[AAcute]metro es la misma sin depender de las medidas \
del circunferencia, lo mismo sucede con la relaci\[OAcute]n del \
per\[IAcute]metro y el radio.\
\>", "Text",ExpressionUUID->"41c1ffd3-22ba-458a-9b2f-084062df79cd"],

Cell[TextData[{
 "La relaci\[OAcute]n entre la longitud de la ",
 StyleBox["circunferencia",
  FontWeight->"Bold"],
 " y su ",
 "di\[AAcute]metro",
 " (sin importar su medida) es aproximadamente ",
 Cell[BoxData[
  FormBox["3.1416", TraditionalForm]],ExpressionUUID->
  "3f35849b-2b0b-4843-a603-216b91a84863"],
 ".\nLa relaci\[OAcute]n entre la longitud de la ",
 StyleBox["circunferencia",
  FontWeight->"Bold"],
 " y su ",
 StyleBox["radio",
  FontWeight->"Bold"],
 " (sin importar su medida) es aproximadamente ",
 Cell[BoxData[
  FormBox["6.283", TraditionalForm]],ExpressionUUID->
  "b67f0ce3-1d5a-42a7-8a35-0b060a3e2cbb"],
 ", el doble de la anterior relaci\[OAcute]n."
}], "Answer",ExpressionUUID->"17936ae7-3030-4cab-9092-3d59ccd0c087"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["El n\[UAcute]mero \[Pi]", "Section",ExpressionUUID->"32650f26-486b-4f8e-b584-f8748d18995a"],

Cell["\<\
Hacia el siglo III antes de Cristo, los griegos observaron que, sin importar \
la circunferencia, al establecer la relaci\[OAcute]n entre su longitud y di\
\[AAcute]metro, el resultado siempre era el mismo. Ellos llamaron a ese valor \
\[Pi], que significa periferia. \
\>", "Text",ExpressionUUID->"f4e05c50-bc3e-4c97-93aa-a7c4fef9af1a"],

Cell[TextData[{
 "Inicialmente se cre\[IAcute]a que el valor de \[Pi] era el resultado de una \
divisi\[OAcute]n entre enteros, por ejemplo, Arqu\[IAcute]medes, en el siglo \
III a. C. encontr\[OAcute] que ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Pi]", "=", 
    RowBox[{
     FractionBox["22", "7"], "=", 
     RowBox[{"3.1428", "..."}]}]}], TraditionalForm]],ExpressionUUID->
  "1d1c3292-b898-4f7e-abd0-94a3573d4bd4"],
 ". Sin embargo, a pesar de aplicar todas las operaciones posibles entre \
enteros, no fue posible obtener el valor exacto \[Pi],  es decir, no era un n\
\[UAcute]mero algebraico. Euler, en el siglo XVII, denomin\[OAcute] a estos n\
\[UAcute]meros que no eran algebraicos como n\[UAcute]meros trascendentes, ya \
que trascienden m\[AAcute]s all\[AAcute] de las operaciones que se realizan \
com\[UAcute]nmente, pero solo hasta 1882, Lindemann demostr\[OAcute] que \
\[Pi] es trascendente."
}], "Text",ExpressionUUID->"a9e0b634-5327-437e-b725-ed3e557d5352"],

Cell["Hasta la fecha, el valor de \[Pi], con algunos decimales, es:", "Text",ExpressionUUID->"4487aa88-3c25-48fd-a92f-536884618d7c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      RowBox[{GridBox[{
         {
          RowBox[{"\[Pi]", "\[TildeTilde]"}]}
        },
        GridBoxAlignment->{"Columns" -> {{"="}}}], 
       "3.1415926535897932384626433832795028841971693993751058151208`30."}], 
      "..."}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"41daa05f-4aa1-4ced-a93a-84b4f8a669e2"]], \
"Text",ExpressionUUID->"47d8ede1-788d-427a-a181-6bfe5eab07a4"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Actividad: operando n\[UAcute]meros irracionales.", "Subchapter",ExpressionUUID->"8d75dfbc-2d4e-424b-9435-9f9f3ebdd3cb"],

Cell["\<\
Para terminar esta secci\[OAcute]n se proponen tres ejercicios de operaciones \
con n\[UAcute]meros irracionales, estos servir\[AAcute]n como introducci\
\[OAcute]n para el desarrollo del cap\[IAcute]tulo de expresiones algebraicas.\
\>", "Text",ExpressionUUID->"2b0bd7c8-a465-492d-af68-552623145ae4"],

Cell[CellGroupData[{

Cell["Ejercicio 1", "Section",ExpressionUUID->"c84d16c6-5483-40d5-b0e6-bf5020afabb2"],

Cell[TextData[{
 "Operar y simplificar la expresi\[OAcute]n ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "+", 
    SqrtBox["3"], "+", "3", "-", 
    RowBox[{"4", 
     SqrtBox["3"]}]}], TraditionalForm]],ExpressionUUID->
  "9d8943db-30ed-43a3-8036-40496c1ccbb6"]
}], "Text",ExpressionUUID->"cd1d4dbd-b8af-477f-bbbd-146f1c4945fb"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"00f8955e-26df-4bcb-bfbe-4f89fada3255"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"2", "+", 
          SqrtBox["3"], "+", "3", "-", 
          RowBox[{"4", 
           SqrtBox["3"]}]}], "=", 
         RowBox[{"5", "-", 
          RowBox[{"3", 
           SqrtBox["3"]}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"c9b0beeb-fbc8-4474-be82-dba44c56e1e2"]], \
"Text",ExpressionUUID->"bd6c80dd-05b5-43d9-87d4-5a95751996e4"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejercicio 2", "Section",ExpressionUUID->"97ca66b1-3602-4417-b457-53f8e428c828"],

Cell[TextData[{
 "Operar y simplificar la expresi\[OAcute]n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     FractionBox["3", 
      RowBox[{"3", "-", 
       SqrtBox["2"]}]], ")"}], 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"-", "3"}], 
      RowBox[{"3", "+", 
       SqrtBox["2"]}]], ")"}]}], TraditionalForm]],ExpressionUUID->
  "8ad68064-5818-4dd8-8700-6463383a9c41"]
}], "Text",ExpressionUUID->"f7d6c6fc-19fe-42dd-8a79-2a046c431abc"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"219b281f-0802-417b-b093-6e8208e945e5"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           FractionBox["3", 
            RowBox[{"3", "-", 
             SqrtBox["2"]}]], ")"}], 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"-", "3"}], 
            RowBox[{"3", "+", 
             SqrtBox["2"]}]], ")"}]}], "=", 
         FractionBox[
          RowBox[{
           RowBox[{"(", "3", ")"}], 
           RowBox[{"(", 
            RowBox[{"-", "3"}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "-", 
             SqrtBox["2"]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             SqrtBox["2"]}], ")"}]}]]}]},
       {
        RowBox[{"=", 
         FractionBox[
          RowBox[{"-", "9"}], 
          RowBox[{"9", "+", 
           RowBox[{"3", 
            SqrtBox["2"]}], "-", 
           RowBox[{"3", 
            SqrtBox["2"]}], "-", "2"}]]}]},
       {
        RowBox[{"=", 
         RowBox[{"-", 
          FractionBox["9", "7"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"0907a369-8261-488c-8bd6-007d2b73e03c"]], \
"Text",ExpressionUUID->"86fe65aa-8da6-48d2-81e5-c468a1a45fbd"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejercicio 3", "Section",ExpressionUUID->"bca53e32-bb9c-43a7-82cf-6df6dc348704"],

Cell[TextData[{
 "Operar y simplificar la expresi\[OAcute]n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "+", "\[Pi]"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"2", "-", "\[Pi]"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "b70069e5-cff2-4220-86f5-252c9429a6e8"]
}], "Text",ExpressionUUID->"bc9827a3-5c99-42be-b7d6-49b9e9c950e8"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"1e6cbb28-9811-4507-8938-28fbe5c832ff"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "+", "\[Pi]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Pi]"}], ")"}]}], "=", 
         RowBox[{"6", "-", 
          RowBox[{"3", "\[Pi]"}], "+", 
          RowBox[{"2", "\[Pi]"}], "-", 
          SuperscriptBox["\[Pi]", "2"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{"6", "-", "\[Pi]", "-", 
          SuperscriptBox["\[Pi]", "2"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"149ec5a8-ac48-4035-ac6f-f82564ce8a62"]], \
"Text",ExpressionUUID->"21e1ab57-9ea3-4653-90a1-78c25c7e24d5"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAeiIWBGMT+TxD8+/t7ocbvRRr/7m79/+8fYfVw8PXV7+l8QPRrGh/QhP+/
vxGp79/TE7/AuiAk0Gpi9P57cw2oEqQLjH5P54fai9fNIF0LNWBaYBrBjL93
tqJ55/+Pj////QE6BuhCuC64O+GGgCyFgb/H2+AmY0UwS2GhBAMg88Ghh1Mv
2CKgS/4BHfbvL1YbQSSGIaCofHMNS1h8fYXVbZAwAel6jU0XxLXb41DVIwwB
uhBftP39hRyAyKEBlMKv8e/1NdAARw0i5NBAA/8+Pvo1V+3/62sQveg2AiMX
u7a/kOgGRRDQVf/+okUrLhtByqaDEzAwjuDgx8e/lxcCjfp7dytWXUBHgmQv
LyQtuwEdiWYRkfqAEUSSRaNgFAw1AAB1Yza7
     "], {{0, 31}, {19, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{19, 31},
   PlotRange->{{0, 19}, {0, 31}}]],ExpressionUUID->
  "fc772c71-001e-422d-9261-a406c5918f0e"],
 "Resumen"
}], "Section",ExpressionUUID->"d0e1d613-dd78-408c-b00d-02f7b2a49ef8"],

Cell[TextData[{
 "A los n\[UAcute]meros que no pueden ser expresados como fracci\[OAcute]n de \
dos n\[UAcute]meros enteros se les llam\[OAcute] ",
 StyleBox["n\[UAcute]meros irracionales",
  FontWeight->"Bold"],
 ". Este conjunto se denomina con la letra \[DoubleStruckCapitalI]."
}], "Text",ExpressionUUID->"70fc07e7-cc24-4d6c-929b-bd4289c6eb83"],

Cell[CellGroupData[{

Cell[TextData[{
 "Los n\[UAcute]meros irracionales son aquellos que tienen notaci\[OAcute]n \
decimal infinita no peri\[OAcute]dica, por ejemplo, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.101001000100001", "\[Ellipsis]"}], TraditionalForm]],
  ExpressionUUID->"67761d94-48f7-4fbc-ad2a-00556abe3680"],
 " donde cada vez se va agregando un cero antes de cada uno."
}], "Item",ExpressionUUID->"8f5fed36-bc01-4cbb-bfcf-3e78d0f1306f"],

Cell[TextData[{
 "Los n\[UAcute]meros irracionales m\[AAcute]s conocidos utilizan letras \
especiales como notaci\[OAcute]n, por ejemplo:\[LineSeparator]",
 StyleBox["Pi",
  FontSlant->"Italic"],
 ", cuya notaci\[OAcute]n es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Pi]", "\[TildeTilde]", 
    RowBox[{"3.14159", "\[Ellipsis]"}]}], TraditionalForm]],ExpressionUUID->
  "e2b8586b-d91d-40a4-a6e3-377562718dbe"],
 " que es la raz\[OAcute]n entre una circunferencia y su di\[AAcute]metro.\
\[LineSeparator]",
 StyleBox["N\[UAcute]mero de Euler",
  FontSlant->"Italic"],
 ", cuya notaci\[OAcute]n es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ExponentialE]", "\[TildeTilde]", 
    RowBox[{"2.7182", "\[Ellipsis]"}]}], TraditionalForm]],ExpressionUUID->
  "8e9c3601-99fd-411e-ab53-4422949cbb87"],
 " que es la base de los logaritmos naturales.\n",
 StyleBox["N\[UAcute]mero \[AAcute]ureo",
  FontSlant->"Italic"],
 ", cuya notaci\[OAcute]n es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", "\[TildeTilde]", 
    RowBox[{"1.6180", "\[Ellipsis]"}]}], TraditionalForm]],ExpressionUUID->
  "cba03c5e-6a24-4e09-938c-0adad5aa8f0c"],
 " tambi\[EAcute]n llamado n\[UAcute]mero de oro o la divina \
proporci\[OAcute]n. Es el valor num\[EAcute]rico de la proporci\[OAcute]n que \
guardan entre s\[IAcute] dos segmentos de recta ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "9a1a5f3c-0455-4252-9638-ff5e2fe18ffc"],
 " y ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "45e7859a-2a4e-4ada-b724-b3f9256a455b"],
 " (",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "935980ec-3fdf-42d9-89b3-0ae6f6c40a12"],
 " m\[AAcute]s largo que ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "a81da56d-2af2-4ed2-9f31-261ca9531744"],
 "), donde: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}], "a"], "=", 
    FractionBox["a", "b"]}], TraditionalForm]],ExpressionUUID->
  "72c2cc3e-3c06-4d96-b3e7-ede99e8222bd"],
 "."
}], "Item",ExpressionUUID->"e61e856b-d3ec-4200-9fdf-6a6e21f3c91a"]
}, Open  ]],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`framePane$$, $CellContext`textPane$$, \
$CellContext`tabImage$$, $CellContext`tabText$$, $CellContext`style1$$, \
$CellContext`style2$$, $CellContext`style3$$, $CellContext`color1$$ = 
    RGBColor[0, 0, 
     Rational[1, 2]], $CellContext`color2$$ = RGBColor[
    0.2, 0.08, 0.28], $CellContext`color3$$ = RGBColor[
    0.796078431372549, 0.07058823529411765, 0.], $CellContext`tama1$$ = 
    15, $CellContext`tama2$$ = 18, $CellContext`tama3$$ = 
    25, $CellContext`font1$$ = "Georgia", $CellContext`page1$$ = 
    4, $CellContext`page2$$ = 4, $CellContext`page3$$ = 
    4, $CellContext`page4$$ = 4, $CellContext`page5$$ = 
    4, $CellContext`titlePopUp$$, $CellContext`textPopUp$$, \
$CellContext`panelWidth$$ = 750, $CellContext`bodyWidth$$ = 
    600, $CellContext`rati$$, $CellContext`int$$}, 
    PaneBox[
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJy9WEuS0zAQTQELllyBDWuWbFmyHYoDzBRhiixCxSFf5+eZgtmwYOdj+BI+
RA6ROzR6GnqQjWS3LNmq6nwcx/3U/d6T7Nc3366+PBuNRvOX6uXqevU+Sa43
H1+pL5+m86+30/HnD9Pv49tx8u7muTr4VsUbFS9UrFYrOp1OAZFTeSEaRRi4
3uFwoEP2QGmaUji2gs4Ujg3XAp403dFyudQYw3CpyMsouI7Ho47tdhuhXo+R
q4aG4uJAvYCvbc5lLsNWnLv307wO6mX20TVnUgwqetYB/p9lGe33e30tfm+b
M11KynvUAdcJ/UOt1uu1eM50LmR8U5Prggu8Qp2Y/z76Ohf96AD/mc/numbs
Zdxb6Zz70AHOhzcAD/cSx+5/PFC9FkPqAOfPZjPabDYVPWZ39/R/LRq4JtWB
0HNxbpIkumbwfe7nKbsjez63vi5lHk0HOG+xWFR4z9x/qkVddwPogPnFvvW4
VqYVXLZaNF03hg4Yi+kP9Xq58jk9V6wDNyfwO7wUfK97fXu+CJ7r4AR+Yx0C
1263e9pTWPPVddDAtRAdMC72LtPDxPka9NVVBzgG70Kt8I7vbbhs+cJ1UOUE
4wIW9FBSL3u+CJ5r6MDkF2uR+d+Gy8dzfXXAfZP4hChfDB38Dfb6Lrhs+Zq4
JtWBiYMxSvlljvieWw32WF9cXp4r1sG/YE364tL5PLgm0QHXB7WCNoGtCy4M
H8+V6AD7Zu6hbT/hM2J5LvoGXPBXBPZjuBfpisuLawIdABN6CE0CZ1dcOp+P
5zp0wDznuuEzahaCS+cL1AHznvmOmEwmUZ5j+XBN4rnoZQxcGFLPtZ1rPqPg
nsbCFaKD+v11zHrpfB5cw6jXzPT9mLgwfDzXhQv3urFxYUh1YPNXfMazlD5w
Sbnm0iPuifrApbEJPNe1JmH97guXxtaiA5vn98X7+mjimmtNwhrQNy4Ml+fW
tchr0lC4rDoo3WvlULg0NsHedeg+8mjauwKTuacYEhdG036Cefbz1+/Bcbn2
rn8AgmcqHw==
                    "], {{0, 48}, {38, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{38, 48},
                    PlotRange->{{0, 38}, {0, 48}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Naturales\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 1), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]], 
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJztmkFOg0AUhom6cOkVvEHduXXptsYDtBEbN5hQAzIQhlm48QJzDC7BITgE
J3DznKExljrIpBn6Zlpe8reFTJP3hvd/eSRzvXydP595nre+FB/zRXwXhovk
4UpcPAbrl1XgP90Hb/7KD2+X5+LmTOhG6ML7jSzLgFIKeZ63KoqivWaMtb9t
1CbXAmT+cRz78p74BkJIZ53NNWzEYOs5fEVRBCR5b+tLksSC/P6X3F/GPsFD
CIAaSo0cyxqU+VV8ax2vUGqoy+H8edUoc+v+l4NYdvAamooP90nP3kJdaj2n
MQOaCvhgD6n39k//iQIOnb+MTh8fqQf69rbbfzge2O1jtUrRLYoe2um/Pq+P
mr8WR933gB5H1c9p7DDHUSQPaHHUXg/ImDiK6wEtjto8S0wcRfeAFkdtniUM
ctReD2hyFMkD5t7JXOeozR7Q46jzswSSB8xxFMkDJ8FRuz1gjKNIs4Q5jk4e
2Dcmjh6LB5BmCYMcxfKAMY667gHnOYrjARmmOOr8LIHkAedniRPhqM0ecH2W
kMFoPlyDpUrTFAih7dkY7Fz21c85nw/mbg1S8tzJN1kfm2o=
                    "], {{0, 48}, {49, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{49, 48},
                    PlotRange->{{0, 49}, {0, 48}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Enteros\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 2), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]], 
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1: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
69wdGo3/HOjeOIsfv2fxf/+iugE=
                    "], {{0, 60}, {46, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{46, 60},
                    PlotRange->{{0, 46}, {0, 60}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Racionales\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 3), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]], 
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJzNl81OwkAQx4lePHr25t0H8OrRK8YHgIjExFBSSj/olm0liMaPeNHEqFGB
COrRxIOP4c038Kh3E5zuSGy7La1hDv6TEtid/namnZldFotKfnMml8vV5uAj
XzBWVLVgrc3Dj/VKbatcKW2sVrRSuaQuF2dhcAmuBbj87zVJjuPoui6PZxFr
/MpmzGly13UtyzINI3YqKNng6q7f6wr1+t3Ls+M9T1EUoDHG5KkIUDYYBfX5
9tLdhYXAknMuT1l2MwBrRgxGcfI8D0y9Vic4+PX++nzdDtG4HXt7RE2ho9On
FJpjZaT5YfCdFJptZqHB8/eD9chowjdOQkNbTasT0jipb7YdSoB/4htmL22k
kHWENM5dEhrEKKxDDWFqWouENs4QRkLD/sYch4SGVd85uCChQW4ArX3YS6FF
mnOCxrZp79R1kwhBwQ6YKd+y+QYbFmH2GoaRmr2QkzxcekmCjV4U/iSavw+F
UyhJmG9UvtXr9dTnhtWXhWaaJljqujGB5kotK0m47oRdBg2iR4sE4dKKUiXx
Dde1rEYSDdM7Y/bivqCqtSTaTwPM3N8gigm+/akW/OYmRELjQoQ0OA9DRZDQ
8K1R0TBSTdOmpX3AUbkN3QGSJFJZOJVKu318GA6EhveDm/OTfQ/C9Bum146Z
Cp7wbVM2sBuhvxBoL/oNi50K0mQDTRLayuNRVbflsW9tKH/2
                    "], {{0, 44}, {26, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{26, 44},
                    PlotRange->{{0, 26}, {0, 44}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Irracionales\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 4), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]]}
           },
           AutoDelete->False,
           FrameStyle->GrayLevel[0.7],
           GridBoxBackground->{"Columns" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "Columns"]], 
             "ColumnsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "ColumnsIndexed"]], 
             "Rows" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "Rows"]], 
             "RowsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "RowsIndexed"]], 
             "ItemsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "ItemsIndexed"]]},
           GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.7}}, "Rows" -> {{0.7}}}],
          "Grid"]},
        {
         FrameBox[
          PaneSelectorBox[{1->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {1, 
                    0}, $CellContext`scale$$ = 20, Typeset`show$$ = True, 
                    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                    Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 20, "m\[AAcute]ximo"}, {20, 
                    60, 100, 200, 1000}}, {{
                    Hold[$CellContext`pos$$], {1, 0}}}}, Typeset`size$$ = {
                    1008., {50., 62.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$7262$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {1, 
                    0}, $CellContext`scale$$ = 20}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$7262$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    Max[1, 
                    Round[
                    Part[$CellContext`pos$$, 1]]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.003], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalN], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{(-0.05) $CellContext`scale$$, \
$CellContext`scale$$}, {-0.5, 0.5}}, Ticks -> {
                    Delete[
                    Range[0, $CellContext`scale$$, $CellContext`scale$$/20], 
                    1], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Max[1, 
                    Round[
                    Part[$CellContext`pos$$, 1]]], TraditionalForm], Red, 30],
                     ImageSize -> {350, 30}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 20, 
                    "m\[AAcute]ximo"}, {20, 60, 100, 200, 
                    1000}}, {{$CellContext`pos$$, {1, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{1067., {104., 111.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"Los \\!\\(\\*StyleBox[\\\"n\[UAcute]meros\\\
\",FontSlant->\\\"Italic\\\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\
\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\\)\\!\\(\\*StyleBox[\\\"naturales\\\",FontSlant->\\\"\
Italic\\\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\\) son aquellos \
que se utilizan para \\!\\(\\*StyleBox[\\\"contar\\\",FontSlant->\\\"Italic\\\
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\\), el conjunto de todos \
los n\[UAcute]meros naturales se denota por \[DoubleStruckCapitalN] y son: \
\\n \[DoubleStruckCapitalN]={1, 2, 3, 4, 5, 6, 7, 8, 9...}\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "230230eb-1319-4827-adb8-c0734e9c4ffb"],
                  TextCell[
                   Style[
                   "Los \!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"\
Italic\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\
\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\) son aquellos que se utilizan para \
\!\(\*StyleBox[\"contar\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\), el conjunto de todos los n\[UAcute]meros naturales se \
denota por \[DoubleStruckCapitalN] y son: \n \[DoubleStruckCapitalN]={1, 2, \
3, 4, 5, 6, 7, 8, 9...}", {FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros naturales \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalN] , + )", "Text",
                    ExpressionUUID->"127ec6d5-a64c-48e3-9a32-2a464cb084a5"],
                    TextCell[" ( \[DoubleStruckCapitalN] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros naturales es un n\
\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalN]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text",
                    ExpressionUUID->"44bf0bc4-effd-43f3-baf5-820a319ceb7a"],
                    TextCell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros naturales es \
un n\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalN]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros naturales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros naturales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero natural da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "f4ce9e5a-9b5e-4bbe-ab24-73c37b74aed2"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La sustracci\[OAcute]n es el proceso inverso a la adici\
\[OAcute]n y no se considera una operaci\[OAcute]n porque no es cerrada, lo \
que quiere decir que no siempre se puede realizar la sustracci\[OAcute]n \
entre dos n\[UAcute]meros naturales.\nEn la sustracci\[OAcute]n \
\!\(TraditionalForm\`a - b = c\) el t\[EAcute]rmino \!\(TraditionalForm\`a\) \
se llama \!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\) y \
\!\(TraditionalForm\`c\) la \!\(\*StyleBox[\"diferencia\",FontSlant->\"Italic\
\"]\).\nLa sustracci\[OAcute]n se puede realizar dentro del conjunto de los n\
\[UAcute]meros naturales solo cuando el \
\!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\) es mayor que el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\), por ejemplo: \
\!\(TraditionalForm\`505 - 124 = 381\) , en el caso contrario, la operaci\
\[OAcute]n no da como resultado un n\[UAcute]mero natural: \
\!\(TraditionalForm\`124 - 505 = \(-381\) \[NotElement] \
\[DoubleStruckCapitalN]\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "dcb8ac21-1d66-4065-8432-e941d213016b"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]meros naturales. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros naturales solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \!\(TraditionalForm\`6\[Divide]2 = 3\) , \
en el caso contrario, la operaci\[OAcute]n no da como resultado un \
n\[UAcute]mero natural: \!\(TraditionalForm\`2\[Divide]6 = \
\(\*FractionBox[\(2\), \(6\)] = \*FractionBox[\(1\), \(3\)] \[NotElement] \
\[DoubleStruckCapitalN]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "7f2832ac-abed-4e38-b236-f5a6da8eeb93"]
                  }], "Multimedia",ExpressionUUID->
                   "fb6c5b56-f3d4-4c01-8d56-1f4967e849dd"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros naturales \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalN] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros naturales es un n\
\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalN]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros naturales es \
un n\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalN]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros naturales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros naturales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero natural da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La sustracci\[OAcute]n es el proceso inverso a la adici\
\[OAcute]n y no se considera una operaci\[OAcute]n porque no es cerrada, lo \
que quiere decir que no siempre se puede realizar la sustracci\[OAcute]n \
entre dos n\[UAcute]meros naturales.\nEn la sustracci\[OAcute]n \
\!\(TraditionalForm\`a - b = c\) el t\[EAcute]rmino \!\(TraditionalForm\`a\) \
se llama \!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\) y \
\!\(TraditionalForm\`c\) la \!\(\*StyleBox[\"diferencia\",FontSlant->\"Italic\
\"]\).\nLa sustracci\[OAcute]n se puede realizar dentro del conjunto de los n\
\[UAcute]meros naturales solo cuando el \
\!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\) es mayor que el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\), por ejemplo: \
\!\(TraditionalForm\`505 - 124 = 381\) , en el caso contrario, la operaci\
\[OAcute]n no da como resultado un n\[UAcute]mero natural: \
\!\(TraditionalForm\`124 - 505 = \(-381\) \[NotElement] \
\[DoubleStruckCapitalN]\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]meros naturales. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros naturales solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \!\(TraditionalForm\`6\[Divide]2 = 3\) , \
en el caso contrario, la operaci\[OAcute]n no da como resultado un \
n\[UAcute]mero natural: \!\(TraditionalForm\`2\[Divide]6 = \
\(\*FractionBox[\(2\), \(6\)] = \*FractionBox[\(1\), \(3\)] \[NotElement] \
\[DoubleStruckCapitalN]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}], 2->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10, Typeset`show$$ = True, 
                    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                    Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 10, "m\[AAcute]ximo"}, {10, 
                    20, 50, 100}}, {{
                    Hold[$CellContext`pos$$], {0, 0}}}}, Typeset`size$$ = {
                    1008., {50., 62.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$7282$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$7282$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    Round[
                    Part[$CellContext`pos$$, 1]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.003], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalZ], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{-$CellContext`scale$$, \
$CellContext`scale$$}, {-0.5, 0.5}}, Ticks -> {
                    
                    Range[-$CellContext`scale$$, $CellContext`scale$$, \
$CellContext`scale$$/10], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Round[
                    Part[$CellContext`pos$$, 1]], TraditionalForm], Red, 30], 
                    ImageSize -> {350, 30}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 10, 
                    "m\[AAcute]ximo"}, {10, 20, 50, 
                    100}}, {{$CellContext`pos$$, {0, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{1067., {104., 111.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"El conjunto de los n\[UAcute]meros enteros \
es una extensi\[OAcute]n del conjunto de los n\[UAcute]meros naturales. Este \
conjunto est\[AAcute] conformado por el conjunto de los n\[UAcute]meros \
naturales, el cero (considerado como un punto de referencia o punto de \
origen) y los opuestos de los naturales (enteros negativos). Los \
n\[UAcute]meros enteros se representan con la letra \[DoubleStruckCapitalZ]: \
\\n \[DoubleStruckCapitalZ]={..., -4, -3 , -2 , -1, 0, 1, 2, 3, 4, ...}\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "807b7fc2-0cde-4eec-b50b-78ed3a910fe3"],
                  TextCell[
                   Style[
                   "El conjunto de los n\[UAcute]meros enteros es una extensi\
\[OAcute]n del conjunto de los n\[UAcute]meros naturales. Este conjunto est\
\[AAcute] conformado por el conjunto de los n\[UAcute]meros naturales, el \
cero (considerado como un punto de referencia o punto de origen) y los \
opuestos de los naturales (enteros negativos). Los n\[UAcute]meros enteros se \
representan con la letra \[DoubleStruckCapitalZ]: \n \
\[DoubleStruckCapitalZ]={..., -4, -3 , -2 , -1, 0, 1, 2, 3, 4, ...}", {
                    FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros enteros \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalZ] , + )", "Text",
                    ExpressionUUID->"651ce710-5999-4fea-b3b3-dd09ca637bff"],
                    TextCell[" ( \[DoubleStruckCapitalZ] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un n\
\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalZ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros enteros el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
entero existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text",
                    ExpressionUUID->"793537c3-a9c3-45dd-ba09-3dc2fcfe3c20"],
                    TextCell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un \
n\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalZ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros enteros el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se puede distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "6ffda7b8-932b-45de-b22f-f3b4193a6879"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] que la sustracci\[OAcute]n es una \
adici\[OAcute]n de un n\[UAcute]mero con el opuesto de otro n\[UAcute]mero, \
sin embargo, es necesario recalcar que la sustracci\[OAcute]n no es \
conmutativa ni asociativa. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"2\", \"-\", \"5\"}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"5\", \"-\", \
\"2\"}]}]},{RowBox[{RowBox[{\"-\", \"3\"}], \"\[AlignmentMarker]\", \"\
\[NotEqual]\", \" \", \"3\"}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"Center\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{\"2\", \"-\", \"3\"}], \")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
\"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{\"2\", \"-\", RowBox[{\"(\", RowBox[{\"3\", \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \
\")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \"1\"}], \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{\"2\", \"-\", \"8\"}]}]},{RowBox[{\"4\", \
\"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"-\", \"6\"}]}]}\n   \
  },GridBoxAlignment->{\"Columns\" -> {{\"\[AlignmentMarker]\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es asociativa.\nSi se desea \
aplicar estas propiedades se debe escribir como una suma, por ejemplo \
\!\(TraditionalForm\`2 - 5\) se puede escribir como \!\(TraditionalForm\`2 + \
\((\(-5\))\)\) y \!\(TraditionalForm\`2 + \((\(-5\))\) = \(\((\(-5\))\) + 2 = \
\(-3\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "5b782a06-e3da-413e-8184-4a57a96161a0"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]mero enteros. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros enteros solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \
\!\(TraditionalForm\`\((\(-6\))\)\[Divide]2 = \(-3\)\) , en el caso \
contrario, la operaci\[OAcute]n no da como resultado un n\[UAcute]mero \
entero: \!\(TraditionalForm\`2\[Divide]\((\(-6\))\) = \
\(\(-\*FractionBox[\(2\), \(6\)]\) = \(-\*FractionBox[\(1\), \(3\)]\) \
\[NotElement] \[DoubleStruckCapitalZ]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "7829a4dd-50a1-4a10-8a19-c63783a62242"]
                  }], "Multimedia",ExpressionUUID->
                   "86b7dd37-5bf5-4be7-ae0d-3c8b8b0383de"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros enteros \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalZ] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un n\
\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalZ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros enteros el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
entero existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un \
n\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalZ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros enteros el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se puede distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] que la sustracci\[OAcute]n es una \
adici\[OAcute]n de un n\[UAcute]mero con el opuesto de otro n\[UAcute]mero, \
sin embargo, es necesario recalcar que la sustracci\[OAcute]n no es \
conmutativa ni asociativa. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"2\", \"-\", \"5\"}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"5\", \"-\", \
\"2\"}]}]},{RowBox[{RowBox[{\"-\", \"3\"}], \"\[AlignmentMarker]\", \"\
\[NotEqual]\", \" \", \"3\"}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"Center\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{\"2\", \"-\", \"3\"}], \")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
\"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{\"2\", \"-\", RowBox[{\"(\", RowBox[{\"3\", \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \
\")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \"1\"}], \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{\"2\", \"-\", \"8\"}]}]},{RowBox[{\"4\", \
\"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"-\", \"6\"}]}]}\n   \
  },GridBoxAlignment->{\"Columns\" -> {{\"\[AlignmentMarker]\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es asociativa.\nSi se desea \
aplicar estas propiedades se debe escribir como una suma, por ejemplo \
\!\(TraditionalForm\`2 - 5\) se puede escribir como \!\(TraditionalForm\`2 + \
\((\(-5\))\)\) y \!\(TraditionalForm\`2 + \((\(-5\))\) = \(\((\(-5\))\) + 2 = \
\(-3\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]mero enteros. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros enteros solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \
\!\(TraditionalForm\`\((\(-6\))\)\[Divide]2 = \(-3\)\) , en el caso \
contrario, la operaci\[OAcute]n no da como resultado un n\[UAcute]mero \
entero: \!\(TraditionalForm\`2\[Divide]\((\(-6\))\) = \
\(\(-\*FractionBox[\(2\), \(6\)]\) = \(-\*FractionBox[\(1\), \(3\)]\) \
\[NotElement] \[DoubleStruckCapitalZ]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}], 3->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10, Typeset`show$$ = True, 
                    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                    Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 10, "m\[AAcute]ximo"}, {10, 
                    20, 50, 100}}, {{
                    Hold[$CellContext`pos$$], {0, 0}}}}, Typeset`size$$ = {
                    1008., {50., 62.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$7302$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$7302$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    $CellContext`rati$$[
                    Part[$CellContext`pos$$, 1]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.0022], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalQ], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{-$CellContext`scale$$, \
$CellContext`scale$$ 1.1}, {-0.01, 0.01}}, Ticks -> {
                    
                    Range[-$CellContext`scale$$, $CellContext`scale$$, \
$CellContext`scale$$/5], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    $CellContext`rati$$[
                    Part[$CellContext`pos$$, 1]], TraditionalForm], Red, 18], 
                    ImageSize -> {350, 50}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 10, 
                    "m\[AAcute]ximo"}, {10, 20, 50, 
                    100}}, {{$CellContext`pos$$, {0, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{1067., {104., 111.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"Los n\[UAcute]meros que se utilizan para \
expresar una parte de un todo son llamados \
\\!\\(\\*StyleBox[\\\"n\[UAcute]meros\\\",FontWeight->\\\"Bold\\\"]\\)\\!\\(\\\
*StyleBox[\\\" \
\\\",FontWeight->\\\"Bold\\\"]\\)\\!\\(\\*StyleBox[\\\"racionales\\\",\
FontWeight->\\\"Bold\\\"]\\) y son todos los n\[UAcute]meros de la forma \
\\!\\(TraditionalForm\\`\\*FractionBox[\\(a\\), \\(b\\)]\\), donde \
\\!\\(TraditionalForm\\`b \[NotEqual] 0\\), \\!\\(TraditionalForm\\`a\\) y \
\\!\\(TraditionalForm\\`b\\) son n\[UAcute]meros enteros. Se representan con \
la letra \[DoubleStruckCapitalQ]:\\n\\!\\(\\*FormBox[GridBox[{{GridBox[{{\
RowBox[{\\\"\[DoubleStruckCapitalQ]\\\", \\\"=\\\", RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"a\\\", \\\"b\\\"], \\\",\\\", \\\"a\\\", \\\",\\\", \
RowBox[{\\\"b\\\", \\\"\[Element]\\\", \\\"\[DoubleStruckCapitalZ]\\\"}], \
\\\",\\\", RowBox[{\\\"b\\\", \\\"\[NotEqual]\\\", \\\"0\\\"}]}], \
\\\"}\\\"}]}]}\\n     },GridBoxAlignment->{\\\"Columns\\\" -> \
{{\\\"=\\\"}}}]}\\n  },GridBoxItemSize->{\\\"Columns\\\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\\)\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "fd832b6a-0974-4370-9dc8-f318b2c2ae75"],
                  TextCell[
                   Style[
                   "Los n\[UAcute]meros que se utilizan para expresar una \
parte de un todo son llamados \!\(\*StyleBox[\"n\[UAcute]meros\",FontWeight->\
\"Bold\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\"racionales\",FontWeight->\"Bold\"]\
\) y son todos los n\[UAcute]meros de la forma \
\!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)]\), donde \!\(TraditionalForm\
\`b \[NotEqual] 0\), \!\(TraditionalForm\`a\) y \!\(TraditionalForm\`b\) son \
n\[UAcute]meros enteros. Se representan con la letra \[DoubleStruckCapitalQ]:\
\n\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{\"\[DoubleStruckCapitalQ]\", \
\"=\", RowBox[{\"{\", RowBox[{FractionBox[\"a\", \"b\"], \",\", \"a\", \",\", \
RowBox[{\"b\", \"\[Element]\", \"\[DoubleStruckCapitalZ]\"}], \",\", RowBox[{\
\"b\", \"\[NotEqual]\", \"0\"}]}], \"}\"}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)", {
                    FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros racionales \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalQ] , + )", "Text",
                    ExpressionUUID->"aee9c439-f46a-4b32-8135-d68c7fc6d645"],
                    TextCell[" ( \[DoubleStruckCapitalQ] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros racionales es un n\
\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalQ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros racionales el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalQ] , \[CenterDot] )", "Text",
                    ExpressionUUID->"f5d66ae1-1fb9-4449-9401-d8595a9b4361"],
                    TextCell[
                    " ( \[DoubleStruckCapitalQ] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros racionales es \
un n\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalQ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros racionales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"inverso\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\" \",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"o\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"rec\[IAcute]\
proco\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"(\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\")\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional a\[NotEqual]0 existe un rec\[IAcute]proco tal que la su multiplicaci\
\[OAcute]n es uno:\n\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \
\" \", \"a\"}], \"\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\", \" \", FractionBox[\"1\", \"a\"], \" \", \
\"tal\", \" \", \"que\", \" \", RowBox[{\"a\", \"(\", FractionBox[\"1\", \
\"a\"], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", FractionBox[\"1\", \
\"a\"], \")\"}], \"a\"}], \"=\", \"1\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "f1951f84-819e-4d95-8517-8cb9deba1b83"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    
                    "Ya se mencion\[OAcute] con anticipaci\[OAcute]n que la \
sustracci\[OAcute]n es una adici\[OAcute]n de un n\[UAcute]mero con el \
opuesto de otro n\[UAcute]mero, sin embargo, es necesario recalcar que la \
sustracci\[OAcute]n no es conmutativa ni asociativa en ning\[UAcute]n \
conjunto num\[EAcute]rico. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"2\", \"3\"], \
\"-\", FractionBox[\"5\", \"4\"]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{FractionBox[\"5\", \"4\"], \"-\", FractionBox[\"2\", \
\"3\"]}]}]},{RowBox[{RowBox[{\"-\", FractionBox[\"7\", \"12\"]}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", FractionBox[\"7\", \"12\"]}]}\n \
    },GridBoxAlignment->{\"Columns\" -> {{\"Center\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", FractionBox[\"3\", \"2\"]}], \
\")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \"2\"]}], \
\")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", RowBox[{\"(\", RowBox[{FractionBox[\
\"3\", \"2\"], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \
\"2\"]}], \")\"}]}], \")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \
FractionBox[\"11\", \"10\"]}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
FractionBox[\"5\", \"2\"]}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\
\", \" \", RowBox[{FractionBox[\"2\", \"5\"], \"-\", \
\"4\"}]}]},{RowBox[{FractionBox[RowBox[{\"7\", \"\[AlignmentMarker]\"}], \
\"5\"], \"\[NotEqual]\", \" \", RowBox[{\"-\", FractionBox[\"18\", \
\"5\"]}]}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"\[AlignmentMarker]\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es asociativa.\nSi se desea aplicar estas propiedades se debe \
escribir como una suma, por ejemplo \
\!\(TraditionalForm\`\(\*FractionBox[\(2\), \(3\)]\(-\)\*FractionBox[\(5\), \
\(4\)]\(\[AlignmentMarker]\)\)\) se puede escribir como \!\(TraditionalForm\`\
\(\*FractionBox[\(2\), \(3\)]\(+\)\((\(-\*FractionBox[\(5\), \(4\)]\))\)\(\
\[AlignmentMarker]\)\)\) y \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)] + \
\((\(-\*FractionBox[\(5\), \(4\)]\))\)\[AlignmentMarker] = \
\(\((\(-\*FractionBox[\(5\), \(4\)]\))\) + \*FractionBox[\(2\), \(3\)] = \
\(-\*FractionBox[\(7\), \(12\)]\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "35699c64-73ad-4c9d-a8b5-07b473f5f25e"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales, la divisi\[OAcute]n \
es una manera diferente de escribir una multiplicaci\[OAcute]n. En general, \
cuando se van a dividir dos n\[UAcute]meros racionales, se tiene que:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\
\"a\", \"b\"], \"\[Divide]\", FractionBox[\"c\", \"d\"]}], \"=\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], RowBox[{FractionBox[\"a\", \
\"b\"], \"\[CenterDot]\", FractionBox[\"d\", \"c\"]}]}], \"=\", \
FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \", \"c\"}]]}]}\n\
  },GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
es decir, en lugar de dividir se multiplica por el rec\[IAcute]proco del \
divisor.\nEs as\[IAcute] como todas las divisiones se pueden expresar como \
multiplicaci\[OAcute]n de racionales, por ejemplo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{\"7\", \"\[Divide]\", \"3\"}], \"=\", \
RowBox[{RowBox[{\"7\", \"\[CenterDot]\", FractionBox[\"1\", \"3\"]}], \"=\", \
FractionBox[\"7\", \"3\"]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "14c5e712-db9a-4d9e-81f5-93383c2ca1c0"]
                  }], "Multimedia",ExpressionUUID->
                   "b67f6b8c-dad0-41b5-ace6-62c14e96caa4"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros racionales \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalQ] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros racionales es un n\
\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalQ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros racionales el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalQ] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros racionales es \
un n\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalQ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros racionales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"inverso\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\" \",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"o\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"rec\[IAcute]\
proco\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"(\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\")\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional a\[NotEqual]0 existe un rec\[IAcute]proco tal que la su multiplicaci\
\[OAcute]n es uno:\n\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \
\" \", \"a\"}], \"\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\", \" \", FractionBox[\"1\", \"a\"], \" \", \
\"tal\", \" \", \"que\", \" \", RowBox[{\"a\", \"(\", FractionBox[\"1\", \
\"a\"], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", FractionBox[\"1\", \
\"a\"], \")\"}], \"a\"}], \"=\", \"1\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] con anticipaci\[OAcute]n que la \
sustracci\[OAcute]n es una adici\[OAcute]n de un n\[UAcute]mero con el \
opuesto de otro n\[UAcute]mero, sin embargo, es necesario recalcar que la \
sustracci\[OAcute]n no es conmutativa ni asociativa en ning\[UAcute]n \
conjunto num\[EAcute]rico. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"2\", \"3\"], \
\"-\", FractionBox[\"5\", \"4\"]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{FractionBox[\"5\", \"4\"], \"-\", FractionBox[\"2\", \
\"3\"]}]}]},{RowBox[{RowBox[{\"-\", FractionBox[\"7\", \"12\"]}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", FractionBox[\"7\", \"12\"]}]}\n \
    },GridBoxAlignment->{\"Columns\" -> {{\"Center\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", FractionBox[\"3\", \"2\"]}], \
\")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \"2\"]}], \
\")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", RowBox[{\"(\", RowBox[{FractionBox[\
\"3\", \"2\"], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \
\"2\"]}], \")\"}]}], \")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \
FractionBox[\"11\", \"10\"]}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
FractionBox[\"5\", \"2\"]}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\
\", \" \", RowBox[{FractionBox[\"2\", \"5\"], \"-\", \
\"4\"}]}]},{RowBox[{FractionBox[RowBox[{\"7\", \"\[AlignmentMarker]\"}], \
\"5\"], \"\[NotEqual]\", \" \", RowBox[{\"-\", FractionBox[\"18\", \
\"5\"]}]}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"\[AlignmentMarker]\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es asociativa.\nSi se desea aplicar estas propiedades se debe \
escribir como una suma, por ejemplo \
\!\(TraditionalForm\`\(\*FractionBox[\(2\), \(3\)]\(-\)\*FractionBox[\(5\), \
\(4\)]\(\[AlignmentMarker]\)\)\) se puede escribir como \!\(TraditionalForm\`\
\(\*FractionBox[\(2\), \(3\)]\(+\)\((\(-\*FractionBox[\(5\), \(4\)]\))\)\(\
\[AlignmentMarker]\)\)\) y \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)] + \
\((\(-\*FractionBox[\(5\), \(4\)]\))\)\[AlignmentMarker] = \
\(\((\(-\*FractionBox[\(5\), \(4\)]\))\) + \*FractionBox[\(2\), \(3\)] = \
\(-\*FractionBox[\(7\), \(12\)]\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales, la divisi\[OAcute]n \
es una manera diferente de escribir una multiplicaci\[OAcute]n. En general, \
cuando se van a dividir dos n\[UAcute]meros racionales, se tiene que:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\
\"a\", \"b\"], \"\[Divide]\", FractionBox[\"c\", \"d\"]}], \"=\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], RowBox[{FractionBox[\"a\", \
\"b\"], \"\[CenterDot]\", FractionBox[\"d\", \"c\"]}]}], \"=\", \
FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \", \"c\"}]]}]}\n\
  },GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
es decir, en lugar de dividir se multiplica por el rec\[IAcute]proco del \
divisor.\nEs as\[IAcute] como todas las divisiones se pueden expresar como \
multiplicaci\[OAcute]n de racionales, por ejemplo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{\"7\", \"\[Divide]\", \"3\"}], \"=\", \
RowBox[{RowBox[{\"7\", \"\[CenterDot]\", FractionBox[\"1\", \"3\"]}], \"=\", \
FractionBox[\"7\", \"3\"]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}], 4->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = \
{-0.09999999999999964, -0.01}, Typeset`show$$ = True, 
                    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                    Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`pos$$], {0, 0}}}}, Typeset`size$$ = {
                    1008., {50., 62.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {0, 0}}, 
                    "ControllerVariables" :> {}, 
                    "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{
                    AbsolutePointSize[6], Orange, 
                    Point[
                    
                    Table[{Pi $CellContext`i, 0.2}, {$CellContext`i, -3, 3, 
                    1}]], Green, 
                    Point[
                    
                    Table[{Sqrt[2] $CellContext`i, 0.2}, {$CellContext`i, -6, 
                    6, 1}]], Purple, 
                    Point[
                    
                    Table[{E $CellContext`i, 0.2}, {$CellContext`i, -3, 3, 
                    1}]], Blue, 
                    Point[
                    
                    Table[{Sqrt[3] $CellContext`i, 0.2}, {$CellContext`i, -5, 
                    5, 1}]], 
                    AbsolutePointSize[7], White, 
                    Point[{{0, 0.2}}], Red, 
                    AbsolutePointSize[10], 
                    Point[{{
                    $CellContext`rati$$[
                    Part[$CellContext`pos$$, 1]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.003], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalI], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{-10, 11}, {-0.01, 0.01}}, Ticks -> {
                    Range[-10, 10, 10/5], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Row[{"Algunos irracionales:                  ", 
                    If[Abs[
                    Part[$CellContext`pos$$, 1]] <= 0.2, "", 
                    If[Abs[$CellContext`int$$[
                    Part[$CellContext`pos$$, 1], Pi] - 
                    Part[$CellContext`pos$$, 1]/Pi] <= 
                    0.05, $CellContext`int$$[
                    Part[$CellContext`pos$$, 1], Pi] Pi, 
                    If[Abs[$CellContext`int$$[
                    Part[$CellContext`pos$$, 1], 
                    Sqrt[2]] - Part[$CellContext`pos$$, 1]/Sqrt[2]] <= 
                    0.05, $CellContext`int$$[
                    Part[$CellContext`pos$$, 1], 
                    Sqrt[2]] Sqrt[2], 
                    If[Abs[$CellContext`int$$[
                    Part[$CellContext`pos$$, 1], 
                    Sqrt[3]] - Part[$CellContext`pos$$, 1]/Sqrt[3]] <= 
                    0.05, $CellContext`int$$[
                    Part[$CellContext`pos$$, 1], 
                    Sqrt[3]] Sqrt[3], 
                    If[Abs[$CellContext`int$$[
                    Part[$CellContext`pos$$, 1], E] - 
                    Part[$CellContext`pos$$, 1]/E] <= 0.05, $CellContext`int$$[
                    Part[$CellContext`pos$$, 1], E] E, ""]]]]]}], 
                    TraditionalForm], Red, 18], ImageSize -> {350, 50}, 
                    Alignment -> Center, ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`pos$$, {0, 0}}, 
                    ControlType -> Locator, Appearance -> Graphics[{}]}}, 
                    "Options" :> {}, "DefaultOptions" :> {}],
                    ImageSizeCache->{1067., {89., 96.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"N\[UAcute]meros que no se pueden expresarr \
mediante la raz\[OAcute]n de n\[UAcute]meros enteros, como por ejemplo \[Pi] \
(relaci\[OAcute]n entre una circunferencia y su di\[AAcute]metro) o \
\[ExponentialE] (n\[UAcute]mero de Euler utilizado frecuentemente en \
problemas de crecimiento y financieros).\\nSe caracterizan por tener cola \
decimal infinita y no peri\[OAcute]dica y su conjunto se representa con la \
letra \[DoubleStruckCapitalI].\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "d57fb73d-1ef4-40ab-8959-c2626b079a17"],
                  TextCell[
                   Style[
                   "N\[UAcute]meros que no se pueden expresarr mediante la \
raz\[OAcute]n de n\[UAcute]meros enteros, como por ejemplo \[Pi] (relaci\
\[OAcute]n entre una circunferencia y su di\[AAcute]metro) o \[ExponentialE] \
(n\[UAcute]mero de Euler utilizado frecuentemente en problemas de crecimiento \
y financieros).\nSe caracterizan por tener cola decimal infinita y no peri\
\[OAcute]dica y su conjunto se representa con la letra \
\[DoubleStruckCapitalI].", {FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros irracionales \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalI] , + )", "Text",
                    ExpressionUUID->"32c05133-2690-4d6d-95cc-d1a92365fbf9"],
                    TextCell[" ( \[DoubleStruckCapitalI] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros irracionales y la adici\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "La operaci\[OAcute]n de la adici\[OAcute]n en los n\
\[UAcute]meros irracionales no es cerrada, ya que no siempre dan como \
resultado un n\[UAcute]mero irracional. Por ejemplo, al sumar \
\!\(TraditionalForm\`3 \*SqrtBox[\(2\)]\) con \!\(TraditionalForm\`\(-3\) \
\*SqrtBox[\(2\)]\) da como resultado \!\(TraditionalForm\`0\) y \
\!\(TraditionalForm\`0 \[NotElement] \[DoubleStruckCapitalI]\).\nPara sumar n\
\[UAcute]meros irracionales se tienen en cuenta los t\[EAcute]rminos \
semejantes, es decir, solo se operan los t\[EAcute]rminos que tengan el mismo \
irracional, por ejemplo, al simplificar la siguiente expresi\[OAcute]n: \
\!\(TraditionalForm\`3 \*SqrtBox[\(5\)] - \[Pi] + 4 \*SqrtBox[\(5\)] - 7  \
\[Pi] + 2\), se obtiene como resultado, \!\(TraditionalForm\`7 \
\*SqrtBox[\(5\)] - 8  \[Pi] + 2\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalI] , \[CenterDot] )", "Text",
                    ExpressionUUID->"ab1c545f-87b1-42ef-8e3d-fdd98cb1b0bb"],
                    TextCell[
                    " ( \[DoubleStruckCapitalI] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros irracionales y la multiplicaci\
\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "La operaci\[OAcute]n de la multiplicaci\[OAcute]n en los \
n\[UAcute]meros irracionales no es cerrada, ya que no siempre dan como \
resultado un n\[UAcute]mero irracional. Por ejemplo, al multiplicar \
\!\(TraditionalForm\`3 \*SqrtBox[\(2\)]\) con \!\(TraditionalForm\`\(-3\) \
\*SqrtBox[\(2\)]\) da como resultado \!\(TraditionalForm\`\(-9\) \
\*SqrtBox[\(4\)] = \(\(-9\) \((2)\) = \(-18\)\)\) y -\!\(TraditionalForm\`18 \
\[NotElement] \[DoubleStruckCapitalI]\).\nAl multiplicar n\[UAcute]meros \
irracionales, se realizan las multiplicaciones posibles, las otras se quedan \
indicadas, por ejemplo, al realizar la operaci\[OAcute]n \
\!\(TraditionalForm\`\((\[Pi] - 3 \*SqrtBox[\(2\)])\) \((\*SqrtBox[\(2\)] - 4 \
+ 2  \[Pi])\)\) se tiene:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"\
\[Pi]\", \"-\", RowBox[{\"3\", SqrtBox[\"2\"]}]}], \")\"}], RowBox[{\"(\", \
RowBox[{SqrtBox[\"2\"], \"-\", \"4\", \"+\", RowBox[{\"2\", \"\[Pi]\"}]}], \
\")\"}]}], \"=\", RowBox[{RowBox[{SqrtBox[\"2\"], \"\[Pi]\"}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", RowBox[{\"3\", SuperscriptBox[RowBox[{\"(\", SqrtBox[\"2\"], \
\")\"}], \"2\"]}], \"+\", RowBox[{\"12\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"6\", \"\[Pi]\", SqrtBox[\"2\"]}]}]}]},{RowBox[{\"=\", \
RowBox[{RowBox[{RowBox[{\"-\", \"5\"}], \"\[Pi]\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", RowBox[{\"3\", RowBox[{\"(\", \"2\", \")\"}]}], \"+\", \
RowBox[{\"12\", SqrtBox[\"2\"]}]}]}]},{RowBox[{\"=\", \
RowBox[{RowBox[{RowBox[{\"-\", \"5\"}], \"\[Pi]\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", \"6\", \"+\", RowBox[{\"12\", SqrtBox[\"2\"]}]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "1cb6ec2f-d963-41cd-baad-3d49aa7fb137"]
                  }], "Multimedia",ExpressionUUID->
                   "ea78ae3f-8fa4-4d3d-bb16-5f1dcbf5ad46"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros irracionales \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalI] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros irracionales y la adici\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "La operaci\[OAcute]n de la adici\[OAcute]n en los n\
\[UAcute]meros irracionales no es cerrada, ya que no siempre dan como \
resultado un n\[UAcute]mero irracional. Por ejemplo, al sumar \
\!\(TraditionalForm\`3 \*SqrtBox[\(2\)]\) con \!\(TraditionalForm\`\(-3\) \
\*SqrtBox[\(2\)]\) da como resultado \!\(TraditionalForm\`0\) y \
\!\(TraditionalForm\`0 \[NotElement] \[DoubleStruckCapitalI]\).\nPara sumar n\
\[UAcute]meros irracionales se tienen en cuenta los t\[EAcute]rminos \
semejantes, es decir, solo se operan los t\[EAcute]rminos que tengan el mismo \
irracional, por ejemplo, al simplificar la siguiente expresi\[OAcute]n: \
\!\(TraditionalForm\`3 \*SqrtBox[\(5\)] - \[Pi] + 4 \*SqrtBox[\(5\)] - 7  \
\[Pi] + 2\), se obtiene como resultado, \!\(TraditionalForm\`7 \
\*SqrtBox[\(5\)] - 8  \[Pi] + 2\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalI] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros irracionales y la multiplicaci\
\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "La operaci\[OAcute]n de la multiplicaci\[OAcute]n en los \
n\[UAcute]meros irracionales no es cerrada, ya que no siempre dan como \
resultado un n\[UAcute]mero irracional. Por ejemplo, al multiplicar \
\!\(TraditionalForm\`3 \*SqrtBox[\(2\)]\) con \!\(TraditionalForm\`\(-3\) \
\*SqrtBox[\(2\)]\) da como resultado \!\(TraditionalForm\`\(-9\) \
\*SqrtBox[\(4\)] = \(\(-9\) \((2)\) = \(-18\)\)\) y -\!\(TraditionalForm\`18 \
\[NotElement] \[DoubleStruckCapitalI]\).\nAl multiplicar n\[UAcute]meros \
irracionales, se realizan las multiplicaciones posibles, las otras se quedan \
indicadas, por ejemplo, al realizar la operaci\[OAcute]n \
\!\(TraditionalForm\`\((\[Pi] - 3 \*SqrtBox[\(2\)])\) \((\*SqrtBox[\(2\)] - 4 \
+ 2  \[Pi])\)\) se tiene:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"\
\[Pi]\", \"-\", RowBox[{\"3\", SqrtBox[\"2\"]}]}], \")\"}], RowBox[{\"(\", \
RowBox[{SqrtBox[\"2\"], \"-\", \"4\", \"+\", RowBox[{\"2\", \"\[Pi]\"}]}], \
\")\"}]}], \"=\", RowBox[{RowBox[{SqrtBox[\"2\"], \"\[Pi]\"}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", RowBox[{\"3\", SuperscriptBox[RowBox[{\"(\", SqrtBox[\"2\"], \
\")\"}], \"2\"]}], \"+\", RowBox[{\"12\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"6\", \"\[Pi]\", SqrtBox[\"2\"]}]}]}]},{RowBox[{\"=\", \
RowBox[{RowBox[{RowBox[{\"-\", \"5\"}], \"\[Pi]\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", RowBox[{\"3\", RowBox[{\"(\", \"2\", \")\"}]}], \"+\", \
RowBox[{\"12\", SqrtBox[\"2\"]}]}]}]},{RowBox[{\"=\", \
RowBox[{RowBox[{RowBox[{\"-\", \"5\"}], \"\[Pi]\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", \"6\", \"+\", RowBox[{\"12\", SqrtBox[\"2\"]}]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}]}, Dynamic[$CellContext`page1$$]],
          FrameMargins->1,
          FrameStyle->GrayLevel[0.7],
          ImageMargins->{{1, 1}, {0, 0}},
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Top}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"],
     ImageSize->{800, Automatic}],
    DynamicModuleValues:>{{DownValues[$CellContext`framePane$$] = {HoldPattern[
           $CellContext`framePane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            $CellContext`style1$$[$CellContext`s$], "Cuadro/Titulo", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPane$$] = {HoldPattern[
           $CellContext`textPane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "EmphasisText", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`style1$$] = {HoldPattern[
           $CellContext`style1$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style2$$] = {HoldPattern[
           $CellContext`style2$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style3$$] = {HoldPattern[
           $CellContext`style3$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`titlePopUp$$] = {HoldPattern[
           $CellContext`titlePopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama2$$, 
             FontFamily -> $CellContext`font1$$, $CellContext`color3$$, 
             Italic], "Text", LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPopUp$$] = {HoldPattern[
           $CellContext`textPopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama1$$, 
             FontFamily -> $CellContext`font1$$], "Text", LineIndent -> 0, 
            TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`rati$$] = {HoldPattern[
           $CellContext`rati$$[
            Pattern[$CellContext`x, 
             Blank[]]]] :> Rationalize[$CellContext`x, 0.1]}}, {
      DownValues[$CellContext`int$$] = {HoldPattern[
           $CellContext`int$$[
            Pattern[$CellContext`x, 
             Blank[]], 
            Pattern[$CellContext`y, 
             Blank[]]]] :> IntegerPart[$CellContext`x/$CellContext`y]}}}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"1a0a6e37-e5fa-42a5-8d05-27ffc85c2388"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejercicios de refuerzo", "Section",ExpressionUUID->"96e3774f-d2a4-4b43-8d62-302214b5c34a"],

Cell[CellGroupData[{

Cell["Ejercicios num\[EAcute]ricos", "Subsection",ExpressionUUID->"339fd1dd-c1f5-4f87-aa38-2ce14b3079ad"],

Cell["Simplifique las siguientes expresiones", "Text",ExpressionUUID->"83dd5f51-3425-410f-bf07-839a34e0d555"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", 
      RadicalBox["3", "3"]}], "+", "5", "-", 
     RowBox[{"2", "\[Pi]"}]}], ")"}], "-", 
   RowBox[{"(", 
    RowBox[{"4", "-", 
     RadicalBox["3", "3"]}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"5", "\[Pi]"}], "-", "2"}], ")"}]}], 
  TraditionalForm]],ExpressionUUID->"e3f525ad-2105-4d84-8cff-ff8c0a1e1dee"]], \
"ItemNumbered",ExpressionUUID->"efb16166-6960-4b98-b33e-e805b2b22e0f"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", "-", 
     RowBox[{"3", "\[Pi]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", "3"}], ")"}]}], 
  TraditionalForm]],ExpressionUUID->"a6721754-6a71-478a-8c97-3e2e64096c83"]], \
"ItemNumbered",ExpressionUUID->"2c45318a-5a47-4ee7-8e1d-d5c9acdd9da0"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "3"], "-", 
     SuperscriptBox["\[ExponentialE]", "2"]}], ")"}], "\[Divide]", 
   "\[ExponentialE]"}], 
  TraditionalForm]],ExpressionUUID->"2e25ec2d-cfd7-422a-ba8b-6c72d13c0d1a"]], \
"ItemNumbered",ExpressionUUID->"2ffa0a8b-82b7-407d-b45d-53b42065eb1f"],

Cell[TextData[Cell[BoxData[
 FormBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", "2"}], ")"}], "2"], 
  TraditionalForm]],ExpressionUUID->"ad242546-595e-406d-bd9d-e61a6ab8bb85"]], \
"ItemNumbered",ExpressionUUID->"b9e2130d-05cf-4434-b28e-05be6db015d3"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"3", 
    SqrtBox["2"]}], "-", 
   RowBox[{"4", 
    SqrtBox["8"]}], "+", 
   RowBox[{"5", 
    SqrtBox["32"]}], "-", "1"}], 
  TraditionalForm]],ExpressionUUID->"d43aa51e-e135-4242-ab4d-02352d38b357"]], \
"ItemNumbered",ExpressionUUID->"cdd0969b-97bc-4bd2-8bc4-032b6f1df413"],

Cell[CellGroupData[{

Cell["Soluciones a los ejercicios", "Subsubsection",ExpressionUUID->"663da399-cf5d-4858-a8d2-713ce79e6d0e"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", 
      RadicalBox["3", "3"]}], "+", "5", "-", 
     RowBox[{"2", "\[Pi]"}]}], ")"}], "-", 
   RowBox[{"(", 
    RowBox[{"4", "-", 
     RadicalBox["3", "3"]}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"5", "\[Pi]"}], "-", "2"}], ")"}]}], 
  TraditionalForm]],ExpressionUUID->"3aa7ac00-6022-4d25-bf2f-e97d0d9f7534"]], \
"ItemNumbered",ExpressionUUID->"bb6901b1-f3fa-4d75-a086-6c338c4a0d5f"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RadicalBox["3", "3"]}], "+", "5", "-", 
            RowBox[{"2", "\[Pi]"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{"4", "-", 
            RadicalBox["3", "3"]}], ")"}], "+", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"5", "\[Pi]"}], "-", "2"}], ")"}]}], "\[AlignmentMarker]",
          "=", 
         RowBox[{
          RowBox[{"2", 
           RadicalBox["3", "3"]}], "+", "5", "-", 
          RowBox[{"2", "\[Pi]"}], "-", "4", "+", 
          RadicalBox["3", "3"], "+", 
          RowBox[{"5", "\[Pi]"}], "-", "2"}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           RowBox[{"3", 
            RadicalBox["3", "3"]}], "+", 
           RowBox[{"3", "\[Pi]"}], "-", "1"}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"\[TildeTilde]", "12.751"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"fab88878-a206-41e4-91e1-e5c74230d9d9"]], \
"Text",ExpressionUUID->"385cb4b7-9d0c-4694-a590-0f3865afdc52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"4", "-", 
     RowBox[{"3", "\[Pi]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", "3"}], ")"}]}], 
  TraditionalForm]],ExpressionUUID->"54c788fb-463a-4428-bf95-e001094f1fd4"]], \
"ItemNumbered",ExpressionUUID->"4fcc8032-c43c-45c1-9208-3b635e597ba3"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"4", "-", 
            RowBox[{"3", "\[Pi]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"\[Pi]", "-", "3"}], ")"}]}], "\[AlignmentMarker]", "=", 
         RowBox[{
          RowBox[{"4", "\[Pi]"}], "-", "12", "-", 
          RowBox[{"3", 
           SuperscriptBox["\[Pi]", "2"]}], "+", 
          RowBox[{"9", "\[Pi]"}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           RowBox[{"13", "\[Pi]"}], "-", "12", "-", 
           RowBox[{"3", 
            SuperscriptBox["\[Pi]", "2"]}]}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"\[TildeTilde]", 
          RowBox[{"-", "0.768"}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"05c5ec33-b604-4a38-83a2-b4e9ac2b4a3d"]], \
"Text",ExpressionUUID->"b7fda0b5-7a4d-40cd-aa46-8c9bd73bd857"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "3"], "-", 
     SuperscriptBox["\[ExponentialE]", "2"]}], ")"}], "\[Divide]", 
   "\[ExponentialE]"}], 
  TraditionalForm]],ExpressionUUID->"de8bae7a-4753-4d86-951b-e25540710225"]], \
"ItemNumbered",ExpressionUUID->"70fad394-493b-4273-bbbb-5e66c6020376"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "3"], "-", 
            SuperscriptBox["\[ExponentialE]", "2"]}], ")"}], "\[Divide]", 
          "\[ExponentialE]"}], "\[AlignmentMarker]", "=", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "3"], "-", 
           SuperscriptBox["\[ExponentialE]", "2"]}], "\[ExponentialE]"]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           FractionBox[
            SuperscriptBox["\[ExponentialE]", "3"], "\[ExponentialE]"], "-", 
           FractionBox[
            SuperscriptBox["\[ExponentialE]", "2"], "\[ExponentialE]"]}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "2"], "-", 
           "\[ExponentialE]"}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"\[TildeTilde]", "4.671"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"6a46afdf-9d62-4233-9e2b-687b8a15c47f"]], \
"Text",ExpressionUUID->"f7279bf4-2c3f-4343-aa66-e824007edcb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", "2"}], ")"}], "2"], 
  TraditionalForm]],ExpressionUUID->"bfcfa671-07cf-4142-965c-23550d2dfd4b"]], \
"ItemNumbered",ExpressionUUID->"a5b3e5dd-20f0-4f0d-ae82-8042d5ef853b"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\[Pi]", "-", "2"}], ")"}], "2"], "\[AlignmentMarker]", 
         "=", 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], "-", 
          RowBox[{"4", "\[Pi]"}], "+", "4"}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"\[TildeTilde]", "1.303"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"13377a2d-2cc4-45c7-8b8d-bcae59d285fa"]], \
"Text",ExpressionUUID->"67bbbe92-10b8-4e64-adec-0c2bc8d279b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"3", 
    SqrtBox["2"]}], "-", 
   RowBox[{"4", 
    SqrtBox["8"]}], "+", 
   RowBox[{"5", 
    SqrtBox["32"]}], "-", "1"}], 
  TraditionalForm]],ExpressionUUID->"319b62d8-30b0-42c8-a1dc-87ed7885776a"]], \
"ItemNumbered",ExpressionUUID->"e78aeaeb-f8db-456f-975c-f6e3338c3448"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", "3"], "-", 
            SuperscriptBox["\[ExponentialE]", "2"]}], ")"}], "\[Divide]", 
          "\[ExponentialE]"}], "\[AlignmentMarker]", "=", 
         RowBox[{
          RowBox[{"3", 
           SqrtBox["2"]}], "-", 
          RowBox[{"4", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", "4", ")"}], 
             RowBox[{"(", "2", ")"}]}]]}], "+", 
          RowBox[{"5", 
           SqrtBox[
            RowBox[{
             RowBox[{"(", "16", ")"}], 
             RowBox[{"(", "2", ")"}]}]]}], "-", "1"}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           RowBox[{"3", 
            SqrtBox["2"]}], "-", 
           RowBox[{"4", 
            RowBox[{"(", 
             RowBox[{"2", 
              SqrtBox["2"]}], ")"}]}], "+", 
           RowBox[{"5", 
            RowBox[{"(", 
             RowBox[{"4", 
              SqrtBox["2"]}], ")"}]}], "-", "1"}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           RowBox[{"3", 
            SqrtBox["2"]}], "-", 
           RowBox[{"8", 
            SqrtBox["2"]}], "+", 
           RowBox[{"20", 
            SqrtBox["2"]}], "-", "1"}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           RowBox[{"15", 
            SqrtBox["2"]}], "-", "1"}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"\[TildeTilde]", "20.213"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"d90c5b01-4b35-4056-9a4e-0a764999ec1b"]], \
"Text",ExpressionUUID->"e24cfb62-2c3b-49b9-98e3-9c15dd303934"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problemas de aplicaci\[OAcute]n", "Subsection",ExpressionUUID->"267eda7d-26fa-414b-a7ec-ad686846ad71"],

Cell["\<\
Verifique que se cumple el teorema de Pit\[AAcute]goras, cuando se construye \
un tri\[AAcute]ngulo rect\[AAcute]ngulo de catetos 3 y 4 cms.\
\>", "ItemNumbered",ExpressionUUID->"05514859-83c0-4fcb-9392-9098026fe374"],

Cell["\<\
Encuentre el valor de la diagonal de un cuadrado de lado 1 cm.\
\>", "ItemNumbered",ExpressionUUID->"f9ce881b-74d8-48ba-a9bf-d197312ba7e3"],

Cell["\<\
Encuentre el valor del lado de un cuadrado si la diagonal mide 5 cms.\
\>", "ItemNumbered",ExpressionUUID->"3904ab2b-bc78-4ce9-8505-df041850e0d3"],

Cell["\<\
Encuentre el valor de la diagonal de un cuadrado de lado 4 cms.\
\>", "ItemNumbered",ExpressionUUID->"80a3d296-539d-43a0-bf11-627a5b61be16"],

Cell["\<\
Encuentre la longitud de la hipotenusa de un tri\[AAcute]ngulo \
rect\[AAcute]ngulo cuyos catetos miden 3 y 6 cms.\
\>", "ItemNumbered",ExpressionUUID->"b5e389be-a327-45c5-9997-9e838826bca2"],

Cell[CellGroupData[{

Cell["Soluciones a los ejercicios", "Subsubsection",ExpressionUUID->"fb3d85f6-c540-478e-8815-e63ec2c8b6ec"],

Cell["\<\
Verifique que se cumple el teorema de Pit\[AAcute]goras, cuando se construye \
un tri\[AAcute]ngulo rect\[AAcute]ngulo de catetos 3 y 4 cms.\
\>", "ItemNumbered",ExpressionUUID->"69a169a8-07f1-4bc2-a258-3989999992ac"],

Cell[TextData[{
 "Al realizar la construcci\[OAcute]n se puede medir la longitud de la \
hipotenusa, la cual es de 5 cms, al hallar los cuadrados se prueba que ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["3", "2"], "+", 
     SuperscriptBox["4", "2"]}], "=", 
    SuperscriptBox["5", "2"]}], TraditionalForm]],ExpressionUUID->
  "6d5de35f-a0af-479a-ba7b-78ab23931a86"],
 ", ya que ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"9", "+", "16"}], "=", "25"}], TraditionalForm]],ExpressionUUID->
  "5b6687ee-2f71-4965-aa9f-453eee18abab"],
 ". Intente realizar esta prueba de forma geom\[EAcute]trica."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"46f04e3c-5ad9-4319-956f-11a44b4ba2d4"],

Cell["\<\
Encuentre el valor de la diagonal de un cuadrado de lado 1 cm.\
\>", "ItemNumbered",ExpressionUUID->"a2bf950a-7e52-4700-85b6-efc3b463c11f"],

Cell[TextData[{
 "Si se llama ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],ExpressionUUID->
  "536d07de-a5d1-40f8-a82d-9724f3e9ce2f"],
 " el valor de la diagonal, se tiene por Teorema de Pit\[AAcute]goras que ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["1", "2"], "+", 
     SuperscriptBox["1", "2"]}], "=", 
    SuperscriptBox["d", "2"]}], TraditionalForm]],ExpressionUUID->
  "ebcba200-d6d5-4302-96e9-593d46936a8b"],
 ", por lo que ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "+", "1"}], "=", 
    SuperscriptBox["d", "2"]}], TraditionalForm]],ExpressionUUID->
  "e7b3f47f-5fc8-4e04-b854-2376d54fd2af"],
 ", es decir, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "=", 
    SuperscriptBox["d", "2"]}], TraditionalForm]],ExpressionUUID->
  "d63c1030-a954-42ac-ac2a-57ba71843da2"],
 ", en otras palabras ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", 
    SqrtBox["2"]}], TraditionalForm]],ExpressionUUID->
  "6795c667-8be3-4ba6-ab99-e6660260f39b"],
 ", aproximando queda: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "\[TildeTilde]", "1.414"}], TraditionalForm]],ExpressionUUID->
  "7ce5ec41-4586-4eab-9798-254ae53d46ca"],
 "."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"ddbb12fc-6f74-4eca-a63d-9e34b1621a2e"],

Cell["\<\
Encuentre el valor del lado de un cuadrado si la diagonal mide 5 cms.\
\>", "ItemNumbered",ExpressionUUID->"de703737-417a-4a96-8533-01b2baf7261c"],

Cell[TextData[{
 "Si se llama ",
 Cell[BoxData[
  FormBox["l", TraditionalForm]],ExpressionUUID->
  "727801ec-aae9-4ac5-a083-d672b7e2de86"],
 " el valor del lado del cuadrado, se tiene por Teorema de Pit\[AAcute]goras \
que ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["l", "2"], "+", 
     SuperscriptBox["l", "2"]}], "=", 
    SuperscriptBox["5", "2"]}], TraditionalForm]],ExpressionUUID->
  "cfd0b8f6-f068-46d5-a28d-f4572b7dee31"],
 ", por lo que ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["l", "2"]}], "=", "25"}], TraditionalForm]],
  ExpressionUUID->"69d69c1f-10eb-4726-82d0-ef1450bca756"],
 ", es decir ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["l", "2"], "=", 
    FractionBox["25", "2"]}], TraditionalForm]],ExpressionUUID->
  "70d122cb-46e0-4c28-b7a1-875bf8b49157"],
 ", en otras palabras ",
 Cell[BoxData[
  FormBox[
   RowBox[{"l", "=", 
    RowBox[{
     SqrtBox[
      FractionBox["25", "2"]], "=", 
     FractionBox["5", 
      SqrtBox["2"]]}]}], TraditionalForm]],ExpressionUUID->
  "035d0b43-6502-4220-bba1-a62e46811c64"],
 ", aproximando queda: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"l", "\[TildeTilde]", "3.535"}], TraditionalForm]],ExpressionUUID->
  "b92cfa44-c079-401c-9e6b-c96788240ba1"],
 "."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"e2f735ea-c5f3-49b7-9859-415b24ebc0f7"],

Cell["\<\
Encuentre el valor de la diagonal de un cuadrado de lado 4 cms.\
\>", "ItemNumbered",ExpressionUUID->"dbe238e3-887d-4aad-99c8-b833ba4b099a"],

Cell[TextData[{
 "Si se llaman ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],ExpressionUUID->
  "b693c8e0-ea20-4a1c-a050-3125bedad6a3"],
 " el valor de la diagonal, se tiene por Teorema de Pit\[AAcute]goras que ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["4", "2"], "+", 
     SuperscriptBox["4", "2"]}], "=", 
    SuperscriptBox["d", "2"]}], TraditionalForm]],ExpressionUUID->
  "19a9dc16-fd2f-4cd3-9a6e-6215073cb14b"],
 ", por lo que ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"16", "+", "16"}], "=", 
    SuperscriptBox["d", "2"]}], TraditionalForm]],ExpressionUUID->
  "30b9119f-296d-43d4-8211-2458a5f923a4"],
 ", es decir, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"32", "=", 
    SuperscriptBox["d", "2"]}], TraditionalForm]],ExpressionUUID->
  "e69a4b32-2fe6-4c6f-8d20-a52de44501b8"],
 ", en otras palabras ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", 
    RowBox[{
     SqrtBox["32"], "=", 
     RowBox[{"4", 
      SqrtBox["2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "0a3093bf-2106-4198-bbcd-4f401862c239"],
 ", aproximando queda: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "\[TildeTilde]", "5.657"}], TraditionalForm]],ExpressionUUID->
  "747602a4-67fb-401d-9924-e89333ed497f"],
 "."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"eabbc238-96f9-4e16-bc96-ee4c58da29ff"],

Cell["\<\
Encuentre la longitud de la hipotenusa de un tri\[AAcute]ngulo \
rect\[AAcute]ngulo cuyos catetos miden 3 y 6 cms.\
\>", "ItemNumbered",ExpressionUUID->"a43f4aa4-90c5-4915-b3f3-4c65726e6f37"],

Cell[TextData[{
 "Si se llama ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]],ExpressionUUID->
  "ff151b50-3392-44b7-9391-e2d134731c5c"],
 " el valor de la hipotenusa, ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "88576c8a-8764-4664-934b-c113ba752a2c"],
 " el cateto de lado 3 cms y ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "bad6da36-1954-4934-b326-8db516bbbe10"],
 " el cateto de lado 6 cms, se tiene por Teorema de Pit\[AAcute]goras que ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["a", "2"], "+", 
     SuperscriptBox["b", "2"]}], "=", 
    SuperscriptBox["h", "2"]}], TraditionalForm]],ExpressionUUID->
  "b247358a-098d-44be-8ed7-f1c157e090a2"],
 ", por lo que ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["3", "2"], "+", 
     SuperscriptBox["6", "2"]}], "=", 
    SuperscriptBox["h", "2"]}], TraditionalForm]],ExpressionUUID->
  "325f6497-9e00-49aa-944c-483e916f294a"],
 ", es decir ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"9", "+", "36"}], "=", 
    SuperscriptBox["h", "2"]}], TraditionalForm]],ExpressionUUID->
  "81e0ce74-7c7d-4ffb-988e-04469c8a72b6"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["h", "2"], "=", "45"}], TraditionalForm]],ExpressionUUID->
  "043d1bda-208e-48b9-bd66-f3994056ee49"],
 ", en otras palabras ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "=", 
    SqrtBox["45"]}], TraditionalForm]],ExpressionUUID->
  "9fa9bde7-7638-4cb5-9932-d93a70f8d06c"],
 ", aproximando queda: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", "\[TildeTilde]", "6.708"}], TraditionalForm]],ExpressionUUID->
  "28ce93a0-10f0-464a-8108-2cceaa691fb5"],
 "."
}], "ItemParagraph",
 CellGroupingRules->{
  GroupTogetherGrouping, 
   10000.},ExpressionUUID->"75376f7c-8913-4148-bb72-30ad8f1ff647"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ". N\[UAcute]meros reales"
}], "Chapter",ExpressionUUID->"7ace26c7-4d49-466c-a986-59fd3d4d883a"],

Cell[CellGroupData[{

Cell["Un poco de historia...", "Subchapter",ExpressionUUID->"ad804378-7210-4fef-b71f-674c82bbfcb4"],

Cell[TextData[{
 "La uni\[OAcute]n entre los n\[UAcute]meros racionales y los n\[UAcute]meros \
irracionales construyen el gran conjunto de los n\[UAcute]meros reales. \
Anteriormente, se escribi\[OAcute] acerca de cada uno de los subconjuntos que \
forman este conjunto, sin embargo, no se puede hacer un cierre a este cap\
\[IAcute]tulo sin mencionar un n\[UAcute]mero que parece muy familiar pero \
que no fue aceptado tan f\[AAcute]cilmente como parece, el cero.\nAparece \
inicialmente como un espacio vac\[IAcute]o en el sistema de \
numeraci\[OAcute]n de los babilonios. Ptolomeo en el Almagesto us\[OAcute] el \
s\[IAcute]mbolo \[OpenCurlyDoubleQuote]0\[CloseCurlyDoubleQuote] para indicar \
que hab\[IAcute]a un vac\[IAcute]o entre las cifras. El cero fue introducido \
en Europa por los \[AAcute]rabes quienes los conoc\[IAcute]an de los Hind\
\[UAcute]es. Los mayas lo conocieron y usaron el s\[IAcute]mbolo ",
 Cell[GraphicsData["Metafile", "\<\
CF5dJ6E]HGAYHf4PEfU^I6mgLb15CDHPAVmbKF5d0@0000iX0@0006`000000000000004L0000S0000
00000000001J1`00W`<00215CDH00040J0h001<0000100000000000000000000P0L003P4003m0@00
7P40000000000000000004S41`0`G@@0AP0002`0000P0000ADe6:`500@0L00004000008@`=/10000
H000060000160000^0L00:`70015CDH[<4020100000400000020?bY0000T000060000000P3l00000
00000000P3l0000000000390004L00004000000000000000002@@P00448Z@000900001P00000080o
000000000000080o00000000000U@000400000@0000000007d0300`0000000008T0400`000000000
7T0900`000000000940400`0000000008D0700`000000000:T0002@0000H0000IRcL>00000000000
IRcL>0000000000024001F06001D1P000Q30f`400000000000000000000000000@0008U@CTL=2QX:
00003DU8A5800018000090P60000:]]lIP00005cDTM20:k>7>T00004Id5=@@00/Hl;o64500002G18
FG<000k3000>``77KjQT0005bTU4@EAX@ngJ1HQ/EAc7lKFk^k/3>k1AK1@3^a^k2k]K/C4`/1<K^a/3
ADC5kVh5@OCg^K>;^o/fkYVImmkjN3oh/_O<c/jLncoWo>]^afP=?HdOYPjcQOW3DV7U/5YH[_?WjV65
/5RH9l`D9PmSQe56S>06M`fWQP_3kN7Ul7Yh;C`O7PYgMO9?N3_L6^h;S`G_meioleBh=Y`KSPdKQ[W3
N678bbY_7TclTO1/^2NhfM?3KV7]`6RcQjW2A:5[Ei`E_P`cEj>>SS72^66B<5f`TiH=Vh@3`ZGQcW1o
N28`oZ71k[=;Qh@F32K;42KI]@^/m5bQ[YH<oVkMJUBV2L:ghHEPImUeChM[`VIQbS12IMFg3HaRfelA
C6BJ/43h9/`GB_ATN:1aFJcm`Ro1S^bBQM/gg1fN2iN7iL=`eACQZ?1Bl<DkM;kFGBKRMbEJ=?`M5Zm6
IK9H5^B@J]Bg;=IaPJ7^3A^4]V^?`57N4_R1_/BGO1Pf[DKeaGUca<eXbo13V;@J3BanbLio=33DRZ5U
FEfnaJh@PPLB?o95V:4JeA=7;6XMEXg:IEkG=bj;]4_P7_R/YR?PS^7=/7/e6UcNmf[S/[KV33n7YJ]A
VLH9WhBMZU6i^8L[0hLn[aM:M48@5CSM^SXiR68UFRMl7W[k/SXB9AUgVF[D_;H?KhCJWg=T42Y;9bfJ
gMBh[2f>WY>e6d[5Qg`FIZa6[FV]l5HH=53`l<iV<b]j@kR^LEUK@_AGSL]R[ATn3TZ@MVRS`4GdNnlR
PMAo<6OLWaRWe64bd=N=bf;9V1VXNokCZTh;<_Xn]ELh[g7IU2h9dX0B:CmT`F=FXc8]4AQG2M8^fBCb
?6GC<58cfKK=j_PP_bRA35cm=F4e:Y?<oKO@bYbkY=hCn^ESOhEQ8R?;RBHLiVFQ_fA`8:WJnJlB[ACT
CWf^f22B@dU3e8;=J^5`CW3_ghDcPf>_^>hQjOQ]@EBAT_lIg:`gZkc[B?o6K]3VZ:_YPcZ:?fU6iVcW
UfSJH8OX=_`N>6K^YF_NS7Inho8obBVj7`mI<L]n6Wh=dW?6VbGdYlT2YkU:=JZ_El;ASL]R:Af/oV3]
3@^aEM1SnS68W>Y6SK[N<WoggT>nP85j6d0oAP]2TlY4O;PLJOn`D>P]IoSPaVE]>M:ZnFK43mV1_M/T
W;ki>@4?1lN7DN`fOVoRd9of3:Ld;W_:nM^WLMVWn2TCTIi;lAF9k`OAbiJeBRN5ad>972nkE5>/6EdM
M2Fi0^D>PglD_PoVNEGH>=C=kAcK?Tn1C]lcHB3[MTWV:cEGI=YA9_AC/<<d_Th<ETX?a]4KC>l5Zee7
RV56MKc>3^l4gjW/l3T?1S]L[k/d@mO2eJ7/=ng`QLiVZHAYa]PjJ8EbP8kT7h5OT/IcnRIoDCPRf<Yf
gQK1`RPKo?ef@LSEl=;7LK`EU>XUUKnXig<o23X=fRE^S=m/YJT_hCA7TKEOlDDLLZTOjD^JFG<4Tmlk
Z?7LS<ngdP`X2>3MX9OTVZ7Pml;h7N6<X2WV2:dA7>Mf=^Ym5UmEZndR3>XYJkh?ClUS[;Q5<D4o^ji7
i><MhMe31X]@Fa[MX][=@J@HENDIW4jY8mnD?<nBB<V1ARF9J;Z9O<ijGVQ5TRUiRRB[7GG?b9ADQBmS
6<6RWIf0:Z`bU32hCE3PoElTAcXVJ>L<m>2QIHdEQ6F]ECFKm/RZXIdAYEfBN78==`J6^CQ81DJHY?8B
@^5ARB6Se]mEecGCgfUEM[AVgh51=Va>5U:GXMT/_BdB[Zf<]X>LAO:Vg=2Om][j`E>;M[E6JMJP7?0<
C]dTh_Y>gbgAi@:lIdQ:;/>ajaJ:57cFRd6^hCTF8c:N;Fl77QBd6kaoib2;mZ1BGGQhd9]AobTdoK<2
HlR/IN_B4?VJB[gT2Lb@Tgl`d2UH97P`X5IR73O?R?X_gKVPljNfPeB34AR@_m>kLVA6aS4N[M4ZDTO7
_oE2<nUn9ZN5000004U5CTB^@V220000240122@0000H00000Q30f`40000400000000000000000000
6d000400000d00000@0000800000002o0000_`00T48001120`00000008000020P6hWB@0008000020
P6jWB24000080000HP0000`0000100008@0000P0000N00006000000000000000B00002@0000E0000
300000@0000E0000300000@000160000500000P0001DCU1@1P400540000`0P000000000000170000
8`00000000000000000000000018000090000500000`0000P0000;0100000000QP3^04P0000T0000
:00004P0000T00000@01000000000000000000000000000000000000003oool0000000000000<f5_
0000000000001m<A00001EE0000082H00002oZ[nX0000000000E0000D000000000;P00002h0005Q0
00D000000400000003P0000003P000000400000000@000000800000000>000000@00000000300000
3P000800003P000000005gM@000@FV5_200_n^[oX00Hool0405l0401m000L73o80n80<00ch08B4So
070@0400PG04ool08n0H0800P3h8ool01@0@0<0100G40000>00`0801P03/0000000@0@01000H003o
800`08030008ool0400@0H01000@0000200P0803P00hnW`K100@0@01000PGjj_0P0`0803P03PN@00
0@0@08010040FF5_0>0h0801P0:0ool0010@040100@0N`0000X80600P3P0000000E80400@D000000
003l0200KX0005Q0000E@101D00000D00000_o_j0000000000000000000000000000000000000000
D@00030200000000000004L0000S00000000000000000000000004P0000T0000D000030000200000
/0400000003608P0B00002@0000X0000B00002@00001004000000000000000000000008000000000
00000?ooo`3oooooooooool10@7oooooooooool10@7oooojZ[ooool10@7oood1E@5Oool10@7oon[o
oon_ool10@7ooAooooodOol10@7on_oooooo_ol10@7oaoooooooaol10@7o_ooooooonol10@7oOooo
ooooo7l10@7nooooooooocl10@7aooooOooooal10@7ooooXR:ooonl10@7gom055@1OonL10@7_oX?o
_oh;ool00@3Ol7Oo?ol`OoL10@7oSnoo_omnSo/10@7L7nOoOomo`OL10@7jonoo?okonS/10@77oloo
Ooiooa<1007oononookoonL1007OolooOocoooL0007_ononOokoonl10@7gomooOoaoolL10@7konon
ookooml10@7molooOoaooal00@3nonooOokoo_l10@7o7lOoOoiooGl10@7oknoo_okonol10@7omOOo
Womoaol10@7on[Oo_onn_ol10@7oo`?ogonAOol10@7oonZokoj_ool10@7ooom010Goool10@7ooooo
ooooool10@7oooooooooool10@560000500000P0001DCU1@1`400280000<0000ooooodH0002H0000
S00004E=AR/T@00030000000000Z@000900001P00000080o000000000000080o00000000000Z@000
900001P00000080o000000000000080o00000000000V@000400000@000000000240211P0000<0000
0Q30f`000003000@=40200`000000000C00006@000000000000004L0000S00000000000000180000
900002T0ZP00000000000000P3l0000000000000P3l0000000000000000000000000000000000000
00000280000<0000ooooodH0000L0000400004E=AR/2@00030000000000>000050000000000@0000
5000
\>"], "Graphics",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  ImageSize->{41.00000000000001, 20.211267605633825`},
  ImageMargins->{{0, 0}, {0, 5}},ExpressionUUID->
  "d35b49b8-392b-438c-919c-5f9b25adecb8"],
 " en su sistema de numeraci\[OAcute]n. Fibonacci, en el siglo XII, fue quien \
lo utiliz\[OAcute] por primera vez en su libro Liber Abaci. Sin embargo, fue \
Peano en su sistema axiom\[AAcute]tico para los n\[UAcute]meros naturales, \
quien postula al cero (0) como n\[UAcute]mero en el a\[NTilde]o 1889.\nLos \
reales cumplen todas las propiedades mencionadas dentro de los \
n\[UAcute]meros racionales e irracionales, por lo que a continuaci\[OAcute]n \
aparecen algunos ejercicios num\[EAcute]ricos que se pueden solucionar."
}], "Resumen",ExpressionUUID->"aa943cfb-ced1-4019-84cd-0512338a2016"]
}, Closed]],

Cell[CellGroupData[{

Cell["Actividad", "Subchapter",ExpressionUUID->"db4e7cbc-2951-46d8-91b4-274e2c40c8dd"],

Cell[TextData[{
 "Dado el siguiente gr\[AAcute]fico, en donde el lado de cada cuadrado mide 2 \
unidades, halle las longitudes de los segmentos ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HB", "_"], TraditionalForm]],ExpressionUUID->
  "12c60d1d-df53-4aa4-aa8f-a7d661ec8061"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HC", "_"], TraditionalForm]],ExpressionUUID->
  "33bcfd8e-ef98-4931-ac5c-c17b9a17a76b"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HD", "_"], TraditionalForm]],ExpressionUUID->
  "8db81888-f7ae-43ae-a7ec-e27cda24121d"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["GI", "_"], TraditionalForm]],ExpressionUUID->
  "ec7a42ae-8ae9-472f-bacb-1f410582adb9"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["FJ", "_"], TraditionalForm]],ExpressionUUID->
  "c29f3831-ddd2-4f53-b6a6-9f8cda6a9f82"],
 "  y clasifique sus resultados como n\[UAcute]meros racionales o \
irracionales, escriba sus resultados en la tabla."
}], "Text",
 TextAlignment->Left,ExpressionUUID->"aa90bb58-fcae-416d-9149-d531a30473a8"],

Cell[TextData[{
 "Pista: Tenga en cuenta que el segmento ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["BG", "_"], TraditionalForm]],ExpressionUUID->
  "04f129a7-7168-4bae-9432-94268c52ce9d"],
 " divide a ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HC", "_"], TraditionalForm]],ExpressionUUID->
  "cd6988f4-73af-4c2d-b62e-9cc7a49e662b"],
 " en ",
 StyleBox["dos partes iguales",
  FontWeight->"Bold"],
 " y los segmentos ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["BG", "_"], TraditionalForm]],ExpressionUUID->
  "5de3e78c-e6d2-4d7c-a811-652b7a731da5"],
 " y ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["CF", "_"], TraditionalForm]],ExpressionUUID->
  "e1c5c563-35eb-474b-959c-54f6f8bcba0f"],
 " dividen a ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HD", "_"], TraditionalForm]],ExpressionUUID->
  "b2c3210a-a478-4c18-be9c-44df64bc4282"],
 " en ",
 StyleBox["tres partes iguales",
  FontWeight->"Bold"]
}], "Text",
 TextAlignment->Right,
 FontSize->16,
 FontSlant->"Italic",ExpressionUUID->"38af4fd2-d1ea-4e67-b2fd-ff4ae5c3b4a5"],

Cell[BoxData[
 FormBox[
  TagBox[
   GraphicsBox[{
     {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[{GrayLevel[0], Thickness[
      Large]}], RectangleBox[{0, 0}, {2, 2}], RectangleBox[{2, 0}, {4, 2}], 
      RectangleBox[{4, 0}, {6, 2}]}, 
     {Thickness[Large], LineBox[{{0, 0}, {2, 2}}], LineBox[{{0, 0}, {4, 2}}], 
      LineBox[{{0, 0}, {6, 2}}]}, 
     {RGBColor[0, 0, 1], AbsolutePointSize[10], Opacity[0.8], 
      PointBox[{0, 0}], PointBox[{2, 0}], PointBox[{4, 0}], PointBox[{6, 0}], 
      PointBox[{0, 2}], PointBox[{2, 2}], PointBox[{4, 2}], PointBox[{6, 2}], 
      PointBox[{2, 1}], 
      PointBox[NCache[{4, Rational[4, 3]}, {4, 1.3333333333333333`}]]}, {
      StyleBox[{InsetBox["\<\"A\"\>", {0, 2.05}, {1, -1}], 
        InsetBox["\<\"B\"\>", {2, 2.05}, {1, -1}], 
        InsetBox["\<\"C\"\>", {4, 2.05}, {1, -1}], 
        InsetBox["\<\"D\"\>", {6, 2.05}, {1, -1}], 
        InsetBox["\<\"I\"\>", {1.9, 1}, {1, -1}], 
        InsetBox["\<\"J\"\>", 
         NCache[{3.9, Rational[4, 3]}, {3.9, 1.3333333333333333`}], {1, -1}]},
       StripOnInput->False,
       FontSize->16,
       FontWeight->Bold], 
      StyleBox[{InsetBox["\<\"H\"\>", {0, -0.1}, {1, 1}], 
        InsetBox["\<\"G\"\>", {2, -0.1}, {1, 1}], 
        InsetBox["\<\"F\"\>", {4, -0.1}, {1, 1}], 
        InsetBox["\<\"E\"\>", {6, -0.1}, {1, 1}]},
       StripOnInput->False,
       FontSize->16,
       FontWeight->Bold]}},
    ImageSize->{600, 300}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"db1e8061-8e22-4c72-87b6-29eda12e0818"],

Cell[BoxData[
 FormBox[
  TagBox[
   StyleBox[
    TagBox[GridBox[{
       {
        StyleBox["\<\"segmento\"\>",
         StripOnInput->False,
         FontWeight->Bold], 
        StyleBox["\<\"medida\"\>",
         StripOnInput->False,
         FontWeight->Bold], 
        StyleBox["\<\"racional\"\>",
         StripOnInput->False,
         FontWeight->Bold], 
        StyleBox["\<\"irracional\"\>",
         StripOnInput->False,
         FontWeight->Bold]},
       {
        StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\
nOverscriptBox[\\\"HB\\\", \\\"_\\\"], TraditionalForm]]]]]\\)\"\>", "Text",
         StripOnInput->False], "", "", ""},
       {
        StyleBox["\<\"\\!\\(TraditionalForm\\`\\*OverscriptBox[\\(HC\\), \\(_\
\\)]\\)\"\>", "Text",
         StripOnInput->False], "", "", ""},
       {
        StyleBox["\<\"\\!\\(TraditionalForm\\`\\*OverscriptBox[\\(HD\\), \\(_\
\\)]\\)\"\>", "Text",
         StripOnInput->False], "", "", ""},
       {
        StyleBox["\<\"\\!\\(TraditionalForm\\`\\*OverscriptBox[\\(GI\\), \\(_\
\\)]\\)\"\>", "Text",
         StripOnInput->False], "", "", ""},
       {
        StyleBox["\<\"\\!\\(TraditionalForm\\`\\*OverscriptBox[\\(FJ\\), \\(_\
\\)]\\)\"\>", "Text",
         StripOnInput->False], "", "", ""}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Center}}},
      GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "Text",
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"f1be0690-b36a-41e4-a6ce-cbf251b0d065"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n", "Solucion",
 CellMargins->{{35, Inherited}, {20, 
   0}},ExpressionUUID->"07bf8129-1003-4b13-899e-3df21a470ea6"],

Cell[CellGroupData[{

Cell[TextData[{
 "Longitud del segmento ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HB", "_"], TraditionalForm]],ExpressionUUID->
  "d89f4cea-febb-40d6-90b5-52f285adfc09"]
}], "Subsubsection",ExpressionUUID->"a9d6b2cd-e7ac-4b45-a1f9-8b526592f217"],

Cell[TextData[{
 "En el tri\[AAcute]ngulo HBG, la medida de los catetos ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HG", "_"], TraditionalForm]],ExpressionUUID->
  "fa90653b-942f-4788-ae52-3a5234e01dd0"],
 " y ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["GB", "_"], TraditionalForm]],ExpressionUUID->
  "f4967261-f392-43e7-82a5-6a1e7e9dd717"],
 " es 2, por lo que el valor de la hipotenusa ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HB", "_"], TraditionalForm]],ExpressionUUID->
  "a7c1bdcf-8cca-446c-8a9c-c1ca84c8f510"],
 ", seg\[UAcute]n el teorema de ",
 "Pit\[AAcute]goras",
 " es:"
}], "Text",ExpressionUUID->"db011e2f-0a26-4b54-88f7-201efe8ac1d8"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         OverscriptBox["HB", "_"], "=", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["2", "2"], "+", 
           SuperscriptBox["2", "2"]}]]}]},
       {
        RowBox[{"=", 
         SqrtBox[
          RowBox[{"4", "+", "4"}]]}]},
       {
        RowBox[{"=", 
         SqrtBox["8"]}]},
       {
        RowBox[{"=", 
         SqrtBox[
          RowBox[{"4", 
           RowBox[{"(", "2", ")"}]}]]}]},
       {
        RowBox[{"=", 
         RowBox[{"2", 
          SqrtBox["2"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b6768f6e-485b-4492-a395-945e3dce73bd"]], \
"Text",ExpressionUUID->"b5da9cdb-681c-4bca-9a6e-bc2a58d860cc"],

Cell[TextData[{
 "adem\[AAcute]s, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SqrtBox["2"]}], TraditionalForm]],ExpressionUUID->
  "ed115308-ed3a-4433-a9e8-000acbc5bdc5"],
 " es un n\[UAcute]mero irracional."
}], "Text",ExpressionUUID->"563104da-3828-445d-88f4-bc2048a81187"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Longitud del segmento ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HC", "_"], TraditionalForm]],ExpressionUUID->
  "ea2d0791-17f6-45e8-bf41-0dc6e89fce4b"]
}], "Subsubsection",ExpressionUUID->"73ca23bd-d39a-4365-96a8-606a9f338e9e"],

Cell[TextData[{
 "En el tr\[AAcute]ngulo HFC, la medida del cateto ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HF", "_"], TraditionalForm]],ExpressionUUID->
  "fd153348-76d5-4ad5-8877-acff2bc87b81"],
 " es 4 y la de ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["FC", "_"], TraditionalForm]],ExpressionUUID->
  "62aceb10-6e52-407d-9b44-61b4e5285f1e"],
 " es 2, por lo que el valor de la hipotenusa ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HC", "_"], TraditionalForm]],ExpressionUUID->
  "4266ee41-2f34-4f24-9c6c-da7283ba6fa7"],
 ", seg\[UAcute]n el teorema de ",
 "Pit\[AAcute]goras",
 " es:"
}], "Text",ExpressionUUID->"471ee864-0a39-4483-9abe-bcbf05de2f1c"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         OverscriptBox["HC", "_"], "=", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["4", "2"], "+", 
           SuperscriptBox["2", "2"]}]]}]},
       {
        RowBox[{"=", 
         SqrtBox[
          RowBox[{"16", "+", "4"}]]}]},
       {
        RowBox[{"=", 
         SqrtBox["20"]}]},
       {
        RowBox[{"=", 
         SqrtBox[
          RowBox[{"4", 
           RowBox[{"(", "5", ")"}]}]]}]},
       {
        RowBox[{"=", 
         RowBox[{"2", 
          SqrtBox["5"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"3b697ec7-86dc-4f6b-9e35-fd52ef46228b"]], \
"Text",ExpressionUUID->"3980c956-ccd7-4aff-90f4-e1b58df3f741"],

Cell[TextData[{
 "adem\[AAcute]s, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SqrtBox["5"]}], TraditionalForm]],ExpressionUUID->
  "aba07197-ae00-41cc-acc1-e72a3a2abd3e"],
 " es un n\[UAcute]mero irracional."
}], "Text",ExpressionUUID->"d41fd7e6-db03-467d-a56e-d821a6b9ad75"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Longitud del segmento ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HD", "_"], TraditionalForm]],ExpressionUUID->
  "1af4ce75-be30-4ffd-92a5-02aa19916cea"]
}], "Subsubsection",ExpressionUUID->"fb1fbbc6-6806-44be-a72b-4b60c5d29c49"],

Cell[TextData[{
 "En el tri\[AAcute]ngulo HED, la medida del cateto ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HE", "_"], TraditionalForm]],ExpressionUUID->
  "5ff7474e-e92c-4cb2-a908-e5f6f46d6c58"],
 " es 6 y la de ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["ED", "_"], TraditionalForm]],ExpressionUUID->
  "2dc6c9b3-4929-488f-8966-3175b636ed77"],
 " es 2, por lo que el valor de la hipotenusa ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HD", "_"], TraditionalForm]],ExpressionUUID->
  "6afbb9e9-a1ac-4c15-915e-9953f8f0005b"],
 ", seg\[UAcute]n el teorema de ",
 "Pit\[AAcute]goras",
 " es:"
}], "Text",ExpressionUUID->"8f446119-3c07-4ee8-9d3f-8b9da7a7e1dc"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         OverscriptBox["HD", "_"], "=", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["6", "2"], "+", 
           SuperscriptBox["2", "2"]}]]}]},
       {
        RowBox[{"=", 
         SqrtBox[
          RowBox[{"36", "+", "4"}]]}]},
       {
        RowBox[{"=", 
         SqrtBox["40"]}]},
       {
        RowBox[{"=", 
         SqrtBox[
          RowBox[{"4", 
           RowBox[{"(", "10", ")"}]}]]}]},
       {
        RowBox[{"=", 
         RowBox[{"2", 
          SqrtBox["10"]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"4fddaf53-1a22-4025-a767-a70fcdc7ff87"]], \
"Text",ExpressionUUID->"950eba52-7dd5-426b-8b1c-d5694888d581"],

Cell[TextData[{
 "adem\[AAcute]s, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SqrtBox["10"]}], TraditionalForm]],ExpressionUUID->
  "d8ce3175-eb4d-40db-8056-412bde88dd90"],
 " es un n\[UAcute]mero irracional."
}], "Text",ExpressionUUID->"58a924c7-c23f-4c28-8767-15cbb1913d54"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Longitud del segmento ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["GI", "_"], TraditionalForm]],ExpressionUUID->
  "5eb08a3e-b787-4449-b8b9-b9752cb30aed"]
}], "Subsubsection",ExpressionUUID->"31cd1eff-fa28-41a9-9101-e3f6f2ba4cad"],

Cell[TextData[{
 "Para encontrar la longitud del segmento ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["GI", "_"], TraditionalForm]],ExpressionUUID->
  "de1ee4f0-ff5d-430e-814c-4f6d25334121"],
 ", se sabe que la hipotenusa ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HI", "_"], TraditionalForm]],ExpressionUUID->
  "95803125-7792-426f-b327-4f45ff74b4df"],
 " es la mitad del segmento ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HC", "_"], TraditionalForm]],ExpressionUUID->
  "3fed4894-6163-4688-a565-4a1ef622ee1f"],
 ", como ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HC", "_"], TraditionalForm]],ExpressionUUID->
  "bb7cdfaf-2f6b-4a78-a535-7f3cc31b636c"],
 " mide ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SqrtBox["5"]}], TraditionalForm]],ExpressionUUID->
  "8ea80d4d-313b-4144-9637-1a849019e8b6"],
 ", entonces ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HI", "_"], TraditionalForm]],ExpressionUUID->
  "813c4241-1f27-4350-adc7-c0ee95c63a78"],
 " mide ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"2", 
      SqrtBox["5"]}], "2"], "=", 
    SqrtBox["5"]}], TraditionalForm]],ExpressionUUID->
  "f664634e-8ea3-4942-abf0-cdd7fc65ba30"],
 ". Adem\[AAcute]s, en el tri\[AAcute]ngulo HGI, la medida del cateto ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HG", "_"], TraditionalForm]],ExpressionUUID->
  "56ea4075-1604-4121-9c0d-c759715534c4"],
 " es 2, por lo que, aplicando el teorema de ",
 "Pit\[AAcute]goras",
 ", se tiene que:"
}], "Text",ExpressionUUID->"f11b046d-9d92-4d81-bc28-aedfcd078839"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         OverscriptBox["GI", "_"], "=", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            SqrtBox["5"], "2"], "-", 
           SuperscriptBox["2", "2"]}]]}]},
       {
        RowBox[{"=", 
         SqrtBox[
          RowBox[{"5", "-", "4"}]]}]},
       {
        RowBox[{"=", 
         SqrtBox["1"]}]},
       {
        RowBox[{"=", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"c07428ab-b641-4939-85fa-7549ed636342"]], \
"Text",ExpressionUUID->"f861d1ea-b80a-4b5a-94e0-93d763c0247b"],

Cell[TextData[{
 "adem\[AAcute]s, ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]],ExpressionUUID->
  "55cb5cb1-c2cf-4207-8611-f4eaf2e4fd69"],
 " es un n\[UAcute]mero racional."
}], "Text",ExpressionUUID->"76574bae-e185-4a4f-8d05-dcc7ec112ae9"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Longitud del segmento ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["FJ", "_"], TraditionalForm]],ExpressionUUID->
  "022bded1-2f0e-40db-be8f-4bc831de9736"]
}], "Subsubsection",ExpressionUUID->"a9f32bc9-fd2c-4bdf-a6ef-77829e4b0498"],

Cell[TextData[{
 "Para encontrar la longitud del segmento ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["FJ", "_"], TraditionalForm]],ExpressionUUID->
  "6283bf3d-b493-4866-9c2b-e93e3f1bb73d"],
 ", se sabe que la hipotenusa ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HJ", "_"], TraditionalForm]],ExpressionUUID->
  "7b0af32f-5557-4e9a-862a-87fa338b6a28"],
 " es las dos terceras partes del segmento ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HD", "_"], TraditionalForm]],ExpressionUUID->
  "0a2556db-cce1-4b35-a411-7a40b70cefd0"],
 ", como ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HD", "_"], TraditionalForm]],ExpressionUUID->
  "d9c02c23-ddf7-49fb-9020-f6d7c4d0ff1d"],
 " mide ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SqrtBox["10"]}], TraditionalForm]],ExpressionUUID->
  "2830add4-8313-4137-8aa7-0df06e7002e6"],
 ", entonces ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HJ", "_"], TraditionalForm]],ExpressionUUID->
  "00407fc0-7130-42fb-b79a-0f3b66345b20"],
 " mide ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["2", "3"], 
     RowBox[{"(", 
      RowBox[{"2", 
       SqrtBox["10"]}], ")"}]}], "=", 
    FractionBox[
     RowBox[{"4", 
      SqrtBox["10"]}], "3"]}], TraditionalForm]],ExpressionUUID->
  "91beb151-0973-473e-b865-bb5ee75a9a29"],
 ". Adem\[AAcute]s, en el tri\[AAcute]ngulo HFJ, la medida del cateto ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["HF", "_"], TraditionalForm]],ExpressionUUID->
  "695fb2f8-ee36-42ee-9c48-223143c09b87"],
 " es 4, por lo que, aplicando el teorema de ",
 "Pit\[AAcute]goras",
 ", se tiene que:"
}], "Text",ExpressionUUID->"7863af7d-3cb6-4f24-8a81-9904f866fc43"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         OverscriptBox["FJ", "_"], "=", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"4", 
               SqrtBox["10"]}], "3"], ")"}], "2"], "-", 
           SuperscriptBox["4", "2"]}]]}]},
       {
        RowBox[{"=", 
         SqrtBox[
          RowBox[{
           RowBox[{
            FractionBox["16", "9"], 
            RowBox[{"(", "10", ")"}]}], "-", "16"}]]}]},
       {
        RowBox[{"=", 
         SqrtBox[
          RowBox[{
           FractionBox["160", "9"], "-", 
           FractionBox["144", "9"]}]]}]},
       {
        RowBox[{"=", 
         SqrtBox[
          FractionBox["16", "9"]]}]},
       {
        RowBox[{"=", 
         FractionBox["4", "3"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"02ade905-f10a-4113-801a-bc4131217016"]], \
"Text",ExpressionUUID->"9502cd87-fb6c-45c4-a87a-1d8dec9a5249"],

Cell[TextData[{
 "adem\[AAcute]s, ",
 Cell[BoxData[
  FormBox[
   FractionBox["4", "3"], TraditionalForm]],ExpressionUUID->
  "a738e64a-a431-4c8d-85e0-19b718a21e00"],
 " es un n\[UAcute]mero racional."
}], "Text",ExpressionUUID->"db2d05c0-1f6e-40e8-9109-0b8723ef12a2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tabla", "Subsubsection",ExpressionUUID->"372f8b1b-f705-4c8e-895c-64326843d55a"],

Cell[BoxData[
 FormBox[
  TagBox[
   StyleBox[
    TagBox[GridBox[{
       {
        StyleBox["\<\"segmento\"\>",
         StripOnInput->False,
         FontWeight->Bold], 
        StyleBox["\<\"longitud\"\>",
         StripOnInput->False,
         FontWeight->Bold], 
        StyleBox["\<\"racional\"\>",
         StripOnInput->False,
         FontWeight->Bold], 
        StyleBox["\<\"irracional\"\>",
         StripOnInput->False,
         FontWeight->Bold]},
       {
        StyleBox["\<\"\\!\\(\\*Cell[TextData[Cell[BoxData[\\nFormBox[\\\
nOverscriptBox[\\\"HB\\\", \\\"_\\\"], TraditionalForm]]]]]\\)\"\>", "Text",
         StripOnInput->False], 
        RowBox[{"2", " ", 
         SqrtBox["2"]}], "", "\<\"\[Times]\"\>"},
       {
        StyleBox["\<\"\\!\\(TraditionalForm\\`\\*OverscriptBox[\\(HC\\), \\(_\
\\)]\\)\"\>", "Text",
         StripOnInput->False], 
        RowBox[{"2", " ", 
         SqrtBox["5"]}], "", "\<\"\[Times]\"\>"},
       {
        StyleBox["\<\"\\!\\(TraditionalForm\\`\\*OverscriptBox[\\(HD\\), \\(_\
\\)]\\)\"\>", "Text",
         StripOnInput->False], 
        RowBox[{"2", " ", 
         SqrtBox["10"]}], "", "\<\"\[Times]\"\>"},
       {
        StyleBox["\<\"\\!\\(TraditionalForm\\`\\*OverscriptBox[\\(GI\\), \\(_\
\\)]\\)\"\>", "Text",
         StripOnInput->False], "1", "\<\"\[Times]\"\>", ""},
       {
        StyleBox["\<\"\\!\\(TraditionalForm\\`\\*OverscriptBox[\\(FJ\\), \\(_\
\\)]\\)\"\>", "Text",
         StripOnInput->False], 
        FractionBox["4", "3"], "\<\"\[Times]\"\>", ""}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Center}}},
      GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "Text",
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"27cba75e-5d1f-4e72-b926-7219baf8c8b8"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAeiIWBGMT+TxD8+/t7ocbvRRr/7m79/+8fYfVw8PXV7+l8QPRrGh/QhP+/
vxGp79/TE7/AuiAk0Gpi9P57cw2oEqQLjH5P54fai9fNIF0LNWBaYBrBjL93
tqJ55/+Pj////QE6BuhCuC64O+GGgCyFgb/H2+AmY0UwS2GhBAMg88Ghh1Mv
2CKgS/4BHfbvL1YbQSSGIaCofHMNS1h8fYXVbZAwAel6jU0XxLXb41DVIwwB
uhBftP39hRyAyKEBlMKv8e/1NdAARw0i5NBAA/8+Pvo1V+3/62sQveg2AiMX
u7a/kOgGRRDQVf/+okUrLhtByqaDEzAwjuDgx8e/lxcCjfp7dytWXUBHgmQv
LyQtuwEdiWYRkfqAEUSSRaNgFAw1AAB1Yza7
     "], {{0, 31}, {19, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{19, 31},
   PlotRange->{{0, 19}, {0, 31}}]],ExpressionUUID->
  "b40ae33a-a9c4-4659-aa70-c312b4d2913a"],
 "Resumen"
}], "Section",ExpressionUUID->"144c9443-485c-451c-9295-6cf4077b7257"],

Cell[TextData[{
 "La uni\[OAcute]n de los conjuntos num\[EAcute]ricos ",
 StyleBox["Racionales",
  FontWeight->"Bold"],
 " e ",
 StyleBox["Irracionales",
  FontWeight->"Bold"],
 " se llam\[OAcute] conjunto de los ",
 StyleBox["n\[UAcute]meros reales",
  FontWeight->"Bold"],
 ".",
 StyleBox[" ",
  FontWeight->"Bold"],
 "Este conjunto se denomina con la letra \[DoubleStruckCapitalR]."
}], "Text",ExpressionUUID->"f1c7b079-3243-43f9-8af7-ca42e4628eb3"],

Cell[BoxData[
 FormBox[
  TagBox[
   DynamicModuleBox[{$CellContext`framePane$$, $CellContext`textPane$$, \
$CellContext`tabImage$$, $CellContext`tabText$$, $CellContext`style1$$, \
$CellContext`style2$$, $CellContext`style3$$, $CellContext`color1$$ = 
    RGBColor[0, 0, 
     Rational[1, 2]], $CellContext`color2$$ = RGBColor[
    0.2, 0.08, 0.28], $CellContext`color3$$ = RGBColor[
    0.796078431372549, 0.07058823529411765, 0.], $CellContext`tama1$$ = 
    15, $CellContext`tama2$$ = 18, $CellContext`tama3$$ = 
    25, $CellContext`font1$$ = "Georgia", $CellContext`page1$$ = 
    5, $CellContext`page2$$ = 1, $CellContext`page3$$ = 
    1, $CellContext`page4$$ = 1, $CellContext`page5$$ = 
    1, $CellContext`titlePopUp$$, $CellContext`textPopUp$$, \
$CellContext`panelWidth$$ = 750, $CellContext`bodyWidth$$ = 
    600, $CellContext`rati$$, $CellContext`int$$}, 
    PaneBox[
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJy9WEuS0zAQTQELllyBDWuWbFmyHYoDzBRhiixCxSFf5+eZgtmwYOdj+BI+
RA6ROzR6GnqQjWS3LNmq6nwcx/3U/d6T7Nc3366+PBuNRvOX6uXqevU+Sa43
H1+pL5+m86+30/HnD9Pv49tx8u7muTr4VsUbFS9UrFYrOp1OAZFTeSEaRRi4
3uFwoEP2QGmaUji2gs4Ujg3XAp403dFyudQYw3CpyMsouI7Ho47tdhuhXo+R
q4aG4uJAvYCvbc5lLsNWnLv307wO6mX20TVnUgwqetYB/p9lGe33e30tfm+b
M11KynvUAdcJ/UOt1uu1eM50LmR8U5Prggu8Qp2Y/z76Ohf96AD/mc/numbs
Zdxb6Zz70AHOhzcAD/cSx+5/PFC9FkPqAOfPZjPabDYVPWZ39/R/LRq4JtWB
0HNxbpIkumbwfe7nKbsjez63vi5lHk0HOG+xWFR4z9x/qkVddwPogPnFvvW4
VqYVXLZaNF03hg4Yi+kP9Xq58jk9V6wDNyfwO7wUfK97fXu+CJ7r4AR+Yx0C
1263e9pTWPPVddDAtRAdMC72LtPDxPka9NVVBzgG70Kt8I7vbbhs+cJ1UOUE
4wIW9FBSL3u+CJ5r6MDkF2uR+d+Gy8dzfXXAfZP4hChfDB38Dfb6Lrhs+Zq4
JtWBiYMxSvlljvieWw32WF9cXp4r1sG/YE364tL5PLgm0QHXB7WCNoGtCy4M
H8+V6AD7Zu6hbT/hM2J5LvoGXPBXBPZjuBfpisuLawIdABN6CE0CZ1dcOp+P
5zp0wDznuuEzahaCS+cL1AHznvmOmEwmUZ5j+XBN4rnoZQxcGFLPtZ1rPqPg
nsbCFaKD+v11zHrpfB5cw6jXzPT9mLgwfDzXhQv3urFxYUh1YPNXfMazlD5w
Sbnm0iPuifrApbEJPNe1JmH97guXxtaiA5vn98X7+mjimmtNwhrQNy4Ml+fW
tchr0lC4rDoo3WvlULg0NsHedeg+8mjauwKTuacYEhdG036Cefbz1+/Bcbn2
rn8AgmcqHw==
                    "], {{0, 48}, {38, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{38, 48},
                    PlotRange->{{0, 38}, {0, 48}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Naturales\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 1), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]], 
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJztmkFOg0AUhom6cOkVvEHduXXptsYDtBEbN5hQAzIQhlm48QJzDC7BITgE
J3DznKExljrIpBn6Zlpe8reFTJP3hvd/eSRzvXydP595nre+FB/zRXwXhovk
4UpcPAbrl1XgP90Hb/7KD2+X5+LmTOhG6ML7jSzLgFIKeZ63KoqivWaMtb9t
1CbXAmT+cRz78p74BkJIZ53NNWzEYOs5fEVRBCR5b+tLksSC/P6X3F/GPsFD
CIAaSo0cyxqU+VV8ax2vUGqoy+H8edUoc+v+l4NYdvAamooP90nP3kJdaj2n
MQOaCvhgD6n39k//iQIOnb+MTh8fqQf69rbbfzge2O1jtUrRLYoe2um/Pq+P
mr8WR933gB5H1c9p7DDHUSQPaHHUXg/ImDiK6wEtjto8S0wcRfeAFkdtniUM
ctReD2hyFMkD5t7JXOeozR7Q46jzswSSB8xxFMkDJ8FRuz1gjKNIs4Q5jk4e
2Dcmjh6LB5BmCYMcxfKAMY667gHnOYrjARmmOOr8LIHkAedniRPhqM0ecH2W
kMFoPlyDpUrTFAih7dkY7Fz21c85nw/mbg1S8tzJN1kfm2o=
                    "], {{0, 48}, {49, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{49, 48},
                    PlotRange->{{0, 49}, {0, 48}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Enteros\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 2), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]], 
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJzNmslXU3kWxz3dvehl73rd/0C77UVvele9rT69r6pTdk0KIdObhwyQhAQC
JYOAKJMio8wyKCIEgijKIIOATMUgIJOiKIrf/r0EJC8MWkgS7zk/zkl4effz
7rv3/u79/X5/+y766//94dSpU7o/kz9ff0v9S6v9lvnPX8iH/0bpfvoh6sz3
/47Sn/nhjPYf3/2RfPlPMv5Oxp9OnbyMFGtwNkqDmJgYaDRRZBRjFEAIVB1L
tjGBeqcFVFQ0NApjdDSiydBRPHhBgLAzeJ6Czve/nWeJjgJjcaJxIrzP8qQ5
C3b+HKI1BtAcRxh5cKwAi90Jl8sFp9O5b/i+t1sgsJzvmXieB63XIEpvxvnS
ByHlf3InD275HLRGDoIoQ5YEcGYbEt2JcNqy0Ll6tP2w2oksm9N3fbxVAMsJ
EEXyDIwe0UY7MitPlv/NUi+qsp1gdBQ4hVdWhgSRZSGW9B5L14znEnkP8YgV
WPA7NmAMMbCkXEHbxOvP5l8dbMSlBA56moek8EoisbUIyacnHnUjq8fWgVfT
RS3ZhF1mwAmSzx4Ca0SMNRWld6ePfd9lwpybJMDICH4bK34hOeBOcCDWKoI2
2FE58OyzbfOwMgEOcr9ddpmjobNloOwY7Osjdwgzv8csi8QPZdhz2jB4vxLZ
KSYYdLYT4VZkqCkLccTu/K4fciQH2TJR3jX1yfffmutBVabd5xt+ZhkiT0O2
XUPX/Dts/XYL2W7pRLnfvZhu9VyzQSI6RXmPXUvs3jSw9FEdeLNwuqM4GYKR
3fu9yIOS7SjuGPf9HmMNuHjC3Io8H+9AoV0GzYsf7CUwBjiyatAz/+ZIPZOd
pUgSjAF5g/gHbUZ8kQcTL7Z9v307GhpuRUY9RXCYaX+e3dHPGngkVT88VM/m
0z5UuUkccnvPK4ksBFs+7jzeyxuh5N5eHcbN/DgSS6I/fylD4GCwZ+D20MG6
nnTkIk5POOW9HC3QHJJK2jC+gbBwKzJ5txIpxOYfYtTnLzrE5ZJ3vrat0vdq
qR81icSPd3PRjl/TllRUdk2qrg019/v5HlRnW0gNsffeZYnkNi4dLWMrKn3z
D0th1TF7sajkEJJHrZdq0LfwPqzcwNxX96qzYaG4AB7l3QtIqO1T6XtYaoGe
DXg+ch1Pcnd6uQfTm2gNJ7ci8901uBir9hVZZKCzlKB/6aVP58ZiL4rMerCB
15C5kZWSUXxnZB9XOLhfT7ajOE0Ewwf4rZJbSP1Y2rvo07kyVo9E4iNCgI8o
MUy5ctH4aDki3HgxiubCXyGR+lgK4OJJfCbVjfp0jjalgt2tm3bzH89CSi9B
x9T+2iwc3Ir01uYinuSzQHtKLAWm4K5Pp/LZ8KEO2ck7JCZdubUg5o4Y92Rb
KVJlUudKgX7AQO+uw/jaa99nI82qY5KVcaGMxORrdUyGk3u64zrSLYw6NiWO
sObj3rOX/pwniir/5xkLMq93YPYtkiPFvdxfhxyXUpsHcMsC6e9cqBtbJT2A
BJb0fYH/42gX8ur6D2QKF/faUD3yEul93IzBhqqhFb+/S3IQdyIK6ociyr0y
cAO5CdQB3HZUDa/AZDKpYnKPezCi3O+mvSi+YAHLi4dyq9kVbjeuNAxHlHt9
qBH57r3eM5jbbDYHcZNej7Eiq6ITpL35JlLcq4OH+XccKgZXgnxkN59Ennt9
uIHYO5ibzOO6bLQvbhzATWovlkbylQaMrEdu3pnprECGNSh/K9wxF+FZfLGT
TyQVu8gziM2qwL25dxHjHqq/AjdF+pig+VIXW4bB5Vc++yrcqvpEYEElFeDW
8Fpk6qrtWdpbkQkLw6t6AqVPtlf581x5QSosnKCuB0mvw1gyUd01Gxnu9ceo
L0gGxQkq/+WoGFxqnfPpXJtrQ7ay9hc097BUEgpv7s+F4eBeHWxCntugjklJ
icnLaH+67l8P2Vg43ZqjJ8+m9nGBNSDxahNGgtZZw8E901WFjKCaSuIo6C+3
YmEDp3ev+60tBwYjp/JxX/+fWICWxyth5cbWbLL3+gWYAteulBqKppDXNqPS
tzrjQR5Nk95M3RdxRgmZ1fdUeTzU3CvDt5Hv0oMRAvMEDWN8FQYWX+3T11+b
ACao71HWBU0ZVXgwuxW29ZOh5itwGQL6HInYj9SrSUG9/K6sTbUjj2PAiEH1
AKl385sHw8K9OdWFsnQZVEAtJfEUWDex9cLh6/m9ted9+wjqXE9DG5+PtlH/
Wtu7EHFja/6brspUiMaAdROJ9AnEX662jR+pZ3NxEHVpFoiqfE/qFUpGepkX
01so2h5vDAn3Qn8TLjsNYD/4tX+tx3y1FZPrb0c+9vv1qQ4UxpnAcYG+zoPS
xiOvfQrPxpqQkyyfKPfmzH2UpYgwBKw9KbElWgrgebL+yTqekryfqezbBbIT
fzG4r6G+PAfpCaSX1p/MPsn2+hhailMhBfiHyHO+vbqi9ie/+/5PHzUiy2Eh
NS25n7SX01mWhyD66/fP5X67NICG4jSIevpD/lCYBasDFxsfHfvec0MeXD3v
hIU/qO9woGbk099hsMz3tKA21wmtYXc9lfgzyWec2YFLhHkB+Otx763Iy9lB
dJZnISFOgpFR9lwlf6yysciuvo12bx/mN/f3F4fJbJ8XrbeuI03QEn/eqZtE
pTfkYHGmoNgzhLkNfPU5zIEy9MCDSlI72k0MjJSyX0p0sRR0GgEZ1S2EvxOd
Xi+8h4zOTi88LdW4IGigp/z7rZJvv5iCQYxDYnYF7g/NhKTeef984vlDbwua
bxTiV6sE2kj6KIWfoUFR1JHDaDRCr42B3rjzndEARrYhrfAGbnZ04/Gz/T1K
KGT0QRfa2yuRZSa1I69eNw0eEpmrTZZY5NZ3w9vWgpYWMm43487dHkw8f/88
HLzBsjjQhGzlfQvioewKt2yyIq/x6Hkv3LI4fBPZ/FHsku/sgyC4cK35+Hvv
oZDl7utw0Eq8HcEuCBDNmah5tPJFsc92l8NmUPoU6WD2nfMUsqsATf2hWws4
jjztKYdVayT9qnRwnO6y2y+jrn3yi2Jf6iuHfC6G1KBHsJMaWzKfR0nLwevV
kZKFmQGUyL8g2sgfzL7j7zKpn5KuNeDuzNYXw7+xOEvPNKfhJ8X2/MHsksiT
ucsEa3wGqj0HrwFHSuZmZ5Nvpv6IsxoDKNX+boDfkJpZttrhcmeh2vv769dQ
yvL8dFHXVQE/E/vrDYHnzHZtT+YAwm8i/AnuBMSnV6P3I2dPwi3zo+3I4X7G
OY0WWq0WOj0FxneWQOFX4pbzrVdZbQ44VecSHYgzp3wxz7Ix3Y3KdAa/nPOf
69wdGo3/HOjeOIsfv2fxf/+iugE=
                    "], {{0, 60}, {46, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{46, 60},
                    PlotRange->{{0, 46}, {0, 60}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Racionales\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 3), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]], 
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJzNl81OwkAQx4lePHr25t0H8OrRK8YHgIjExFBSSj/olm0liMaPeNHEqFGB
COrRxIOP4c038Kh3E5zuSGy7La1hDv6TEtid/namnZldFotKfnMml8vV5uAj
XzBWVLVgrc3Dj/VKbatcKW2sVrRSuaQuF2dhcAmuBbj87zVJjuPoui6PZxFr
/MpmzGly13UtyzINI3YqKNng6q7f6wr1+t3Ls+M9T1EUoDHG5KkIUDYYBfX5
9tLdhYXAknMuT1l2MwBrRgxGcfI8D0y9Vic4+PX++nzdDtG4HXt7RE2ho9On
FJpjZaT5YfCdFJptZqHB8/eD9chowjdOQkNbTasT0jipb7YdSoB/4htmL22k
kHWENM5dEhrEKKxDDWFqWouENs4QRkLD/sYch4SGVd85uCChQW4ArX3YS6FF
mnOCxrZp79R1kwhBwQ6YKd+y+QYbFmH2GoaRmr2QkzxcekmCjV4U/iSavw+F
UyhJmG9UvtXr9dTnhtWXhWaaJljqujGB5kotK0m47oRdBg2iR4sE4dKKUiXx
Dde1rEYSDdM7Y/bivqCqtSTaTwPM3N8gigm+/akW/OYmRELjQoQ0OA9DRZDQ
8K1R0TBSTdOmpX3AUbkN3QGSJFJZOJVKu318GA6EhveDm/OTfQ/C9Bum146Z
Cp7wbVM2sBuhvxBoL/oNi50K0mQDTRLayuNRVbflsW9tKH/2
                    "], {{0, 44}, {26, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{26, 44},
                    PlotRange->{{0, 26}, {0, 44}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Irracionales\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 4), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]], 
             TagBox[
              TagBox[
               TagBox[
                PaneBox[
                 TagBox[GridBox[{
                    {
                    PaneBox[
                    GraphicsBox[
                    TagBox[RasterBox[CompressedData["
1:eJzNmd9TE1cUx5m2D33sW5/7B7S+9rVv9tVO39WpdToqgSS72d+7IQSQHwIi
P6wiMQECah2tgh2sCFYtFQb83aEIKiX8EJV0pB0E67f3brICuwvZBMj0zFx+
JPduPjl77vecc/eT3a4d376Xk5Pj+ZD82LHL94XbvYv/6iPyz9e5nu/25u75
5stc7569e9yf736fvPgZGZ+S8QEZsiyDZVl4PJ5NHfm5+1DUMYa5uZltU1NT
O+mIxWJcbPoZl7NB0zQNPM+D8/kgCQKEFUOUJMiKCjrHdqgKJFGEaFqnr6W/
fQy8Xu/y8LiRz2soOzuA6Ynxa7HJ59WZMLtcLp1ZInyNrc2IhMMI0xFpRvh4
HQ6V+O25VQm8Uoq6xhCZG0msWTEiLa2oK2bg44zvr7z7njLvg8edD7mkBj/e
eorY9PO0fE+vR6+lqirM7+GvYXSFi8CLiomZfm7AMt9ss782ItQcRVu0Fc21
RWB8xDfK8nUUWYLPmw+togEXhp6lvJ5hfr9fX+8PFFvWvJm+i86moJVZFR1f
/933j/UhQu5HbREDTlx93xSRg7fgEE5cuuPouoqigI6K2gvOmWU+bWbDnl4P
4/sKFbxkijdZgE8sQf2FQcy8xrZUzPp3VQucMxO/0Pen5t7szIR7aqANZRLZ
86pm8QUTqEfHYGxdn9C9p8eHP33mWHwpI93CwuT2/vZDUHgZ6qp9okLmZJS1
9eBR/O2a3JQ54WfrHtwqZmpzY704KnNWXysC8XUI3Q9n12Q25nq9TFaZ/3k2
jIvVXvCyWfcViGwAoZ/vp2S207qtZF6Mj7dfjyhk35l1VIPEM6g9P4DYPGxz
jjHPR/JgNpmpPeioActLFmZZ8JGYvp7Sz6Jo1dytZn505TgYzspM9ToQ7v7f
xQbmZ7bdPldB/Czb+JlF5Zm+NZmNPJj1eH453t4b4iw5Ud+DnIamy/dS+pnm
lmwyxydILpdYiIpmYpYheCtxpm/UQWxoWWWevNUMgRVNOSWRCz3lrbgxEl+T
mcZEYr4/a8wLc0NoU2gtaxMXjIq687cQW7TXudXM1tpyK5ixFKu+XCORnsCc
t0l8CgyU2tP4bXxh3XpjWeukLWfGdA8Ok9pfJf2copp5WeQVH0Pnvecpa0aj
5pfIdbaKGfgD7QwP2U9qIMnMq0L0eSBUnkTP49eOalyjrisuO5Y28/qc/SjP
80IgjLRPpkMh8bsyHhRJgCfXi7KmLjxeguOanGocZQ6WR9LoU8hnyyIEntNz
vnUQ3eVF0kcm+gmdVU0O0k/xjBu5+/dBqWhE/5xzVsOWtS4N3UhyK++YbNjU
pE+Tf+v9U74LHvUgTo+kz7nS6D1LW5/t/MxxZJ6s1+GqunquTHqg0uijDXGu
NHpOkGlOMduLK0Gyx6QE96o6XoYoKwh2/rkp3NRH6eQU/Z4n87ydblwu0PR9
t6z7yXUkjmWSA0IDf2+Ym557JeokZ8x63CZ10Y4ZeIgTpGbgqQ6buKlO+IOl
6Hq8sXg29Hmz/Kxzv7iq15OSJTerkEj+C5aFMRjPnJthmLTi2fDdeszUZruD
pK8memfuUWlNwftReqQLY8iMmyP7nV6LZZ33VkoKPxt2r0kleiJZazf9rK8I
1e0DGTEbfnPSdxtzjf4gFTMWHyBarNr2qRrRSq6wHEe7hjPOKS5X3qb7Weee
7EWJQuoJy5mApp93sQXlaOweSYvb8BvPCymZjfyjOfSzYRO9NSgWOIiW2Caf
LZHa6WAtzg9OO+Y21jqNZ6qL6fjZsLtnqxBgBShmX2uJs4FgVQi9I8602+hh
3W6P43jOpH4Gxtt7qgrgsemz9XqUvF5Wfw63p9ev96kZ8ekkNjZa8y+O38Cx
chmc+RxXS/aubCEOt/RidH4pZZ9Ca2g6tpqZ2uzQGZSLrG1sUw3k5FI0XBxa
l9moG7PFTO1ORwOKaN9iE9u6lhRWIfrL2mcFlJc+G6M5PFvMb+dHcbWhCB6b
cy9DSySiJZfu2D9jMTQsm8zUXo3dRKRats83WuL8K1DZgptP5i1cRmzQ53fZ
ZKY20f8DqmQGguUsKVlP8RJKajpxP764ik0h9TjVOzt9Rpw+a9s6ZmDm49ud
x1Hi4SDZxTbVEi6AivqfMPxqmZvGhd6r+IM4efoU2qJRROloa0c0dBRVB22e
aW4SM7V/X43iWssRKD7RNt8kNFBDafNNTC5hO11j5ApFkazPgMU1nh1vIjO1
+Sd9OHVYBivYxzbVQEEsREXH7zCYE3Wd1/nI26+vHX+5cG0zmKlNDV1EfeEB
5OWv8ZluFw6wpF9o6MZ/gzS0zA==
                    "], {{0, 46}, {45, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True],
                    Selectable->False],
                    DefaultBaseStyle->"ImageGraphics",
                    ImageSize->{27, 27},
                    ImageSizeRaw->{45, 46},
                    PlotRange->{{0, 45}, {0, 46}}],
                    ImageSize->{27, 27}], 
                    StyleBox[
                    TagBox[GridBox[{
                    {"\<\"N\[UAcute]meros\"\>"},
                    {"\<\"Reales\"\>"}
                    },
                    DefaultBaseStyle->"Column",
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    StripOnInput->False,
                    FontFamily->"Arial",
                    FontSize->15,
                    FontWeight->Bold,
                    FontColor->GrayLevel[0.5]]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                   GridBoxSpacings->{"Columns" -> {{0.5}}, "Rows" -> {{0}}}],
                  "Grid"],
                 FrameMargins->6],
                Deploy,
                DefaultBaseStyle->"Deploy"],
               
               EventHandlerTag[{
                "MouseClicked" :> ($CellContext`page1$$ = 5), Method -> 
                 "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                 True}]],
              MouseAppearanceTag["LinkHand"]]}
           },
           AutoDelete->False,
           FrameStyle->GrayLevel[0.7],
           GridBoxBackground->{"Columns" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "Columns"]], 
             "ColumnsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "ColumnsIndexed"]], 
             "Rows" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "Rows"]], 
             "RowsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "RowsIndexed"]], 
             "ItemsIndexed" -> Dynamic[
               GridDump`Restructure[
               Background, {
                None, None, Dynamic[{1, $CellContext`page1$$}] -> 
                 RGBColor[0.9133333333333333, 0.96, 1]}, "ItemsIndexed"]]},
           GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0.7}}, "Rows" -> {{0.7}}}],
          "Grid"]},
        {
         FrameBox[
          PaneSelectorBox[{1->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {1, 
                    0}, $CellContext`scale$$ = 20, Typeset`show$$ = True, 
                    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                    Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 20, "m\[AAcute]ximo"}, {20, 
                    60, 100, 200, 1000}}, {{
                    Hold[$CellContext`pos$$], {1, 0}}}}, Typeset`size$$ = {
                    720., {37., 43.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$7603$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {1, 
                    0}, $CellContext`scale$$ = 20}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$7603$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    Max[1, 
                    Round[
                    Part[$CellContext`pos$$, 1]]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.003], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalN], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{(-0.05) $CellContext`scale$$, \
$CellContext`scale$$}, {-0.5, 0.5}}, Ticks -> {
                    Delete[
                    Range[0, $CellContext`scale$$, $CellContext`scale$$/20], 
                    1], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Max[1, 
                    Round[
                    Part[$CellContext`pos$$, 1]]], TraditionalForm], Red, 30],
                     ImageSize -> {350, 30}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 20, 
                    "m\[AAcute]ximo"}, {20, 60, 100, 200, 
                    1000}}, {{$CellContext`pos$$, {1, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{779., {88., 95.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"Los \\!\\(\\*StyleBox[\\\"n\[UAcute]meros\\\
\",FontSlant->\\\"Italic\\\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\
\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSlant->\\\"Italic\\\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\\)\\!\\(\\*StyleBox[\\\"naturales\\\",FontSlant->\\\"\
Italic\\\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\\) son aquellos \
que se utilizan para \\!\\(\\*StyleBox[\\\"contar\\\",FontSlant->\\\"Italic\\\
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\\), el conjunto de todos \
los n\[UAcute]meros naturales se denota por \[DoubleStruckCapitalN] y son: \
\\n \[DoubleStruckCapitalN]={1, 2, 3, 4, 5, 6, 7, 8, 9...}\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "552a62e4-5ad0-47a3-a7b1-b2b74f9aac97"],
                  TextCell[
                   Style[
                   "Los \!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"\
Italic\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\
\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\) son aquellos que se utilizan para \
\!\(\*StyleBox[\"contar\",FontSlant->\"Italic\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\), el conjunto de todos los n\[UAcute]meros naturales se \
denota por \[DoubleStruckCapitalN] y son: \n \[DoubleStruckCapitalN]={1, 2, \
3, 4, 5, 6, 7, 8, 9...}", {FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros naturales \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalN] , + )", "Text",
                    ExpressionUUID->"2ddc7cbf-da05-44bf-a696-194e0211ad25"],
                    TextCell[" ( \[DoubleStruckCapitalN] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros naturales es un n\
\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalN]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text",
                    ExpressionUUID->"02b96b46-9ab8-43cf-9787-c7f86cee56ac"],
                    TextCell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros naturales es \
un n\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalN]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros naturales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros naturales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero natural da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "a2636810-1f23-43b2-ad0d-b84006027c02"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La sustracci\[OAcute]n es el proceso inverso a la adici\
\[OAcute]n y no se considera una operaci\[OAcute]n porque no es cerrada, lo \
que quiere decir que no siempre se puede realizar la sustracci\[OAcute]n \
entre dos n\[UAcute]meros naturales.\nEn la sustracci\[OAcute]n \
\!\(TraditionalForm\`a - b = c\) el t\[EAcute]rmino \!\(TraditionalForm\`a\) \
se llama \!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\) y \
\!\(TraditionalForm\`c\) la \!\(\*StyleBox[\"diferencia\",FontSlant->\"Italic\
\"]\).\nLa sustracci\[OAcute]n se puede realizar dentro del conjunto de los n\
\[UAcute]meros naturales solo cuando el \
\!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\) es mayor que el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\), por ejemplo: \
\!\(TraditionalForm\`505 - 124 = 381\) , en el caso contrario, la operaci\
\[OAcute]n no da como resultado un n\[UAcute]mero natural: \
\!\(TraditionalForm\`124 - 505 = \(-381\) \[NotElement] \
\[DoubleStruckCapitalN]\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "5947769c-000e-451e-a5e3-2fe3c5d54f62"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]meros naturales. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros naturales solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \!\(TraditionalForm\`6\[Divide]2 = 3\) , \
en el caso contrario, la operaci\[OAcute]n no da como resultado un \
n\[UAcute]mero natural: \!\(TraditionalForm\`2\[Divide]6 = \
\(\*FractionBox[\(2\), \(6\)] = \*FractionBox[\(1\), \(3\)] \[NotElement] \
\[DoubleStruckCapitalN]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "7690ebdc-7e3d-46e3-9707-19105874ffab"]
                  }], "Multimedia",ExpressionUUID->
                   "475c5b45-d445-4ce9-859a-b36bcd069cd3"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros naturales \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalN] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros naturales es un n\
\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalN]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalN] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros naturales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros naturales es \
un n\[UAcute]mero natural\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalN]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros naturales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros naturales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero natural da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalN]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La sustracci\[OAcute]n es el proceso inverso a la adici\
\[OAcute]n y no se considera una operaci\[OAcute]n porque no es cerrada, lo \
que quiere decir que no siempre se puede realizar la sustracci\[OAcute]n \
entre dos n\[UAcute]meros naturales.\nEn la sustracci\[OAcute]n \
\!\(TraditionalForm\`a - b = c\) el t\[EAcute]rmino \!\(TraditionalForm\`a\) \
se llama \!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\) y \
\!\(TraditionalForm\`c\) la \!\(\*StyleBox[\"diferencia\",FontSlant->\"Italic\
\"]\).\nLa sustracci\[OAcute]n se puede realizar dentro del conjunto de los n\
\[UAcute]meros naturales solo cuando el \
\!\(\*StyleBox[\"minuendo\",FontSlant->\"Italic\"]\) es mayor que el \
\!\(\*StyleBox[\"sustraendo\",FontSlant->\"Italic\"]\), por ejemplo: \
\!\(TraditionalForm\`505 - 124 = 381\) , en el caso contrario, la operaci\
\[OAcute]n no da como resultado un n\[UAcute]mero natural: \
\!\(TraditionalForm\`124 - 505 = \(-381\) \[NotElement] \
\[DoubleStruckCapitalN]\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"naturales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]meros naturales. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros naturales solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \!\(TraditionalForm\`6\[Divide]2 = 3\) , \
en el caso contrario, la operaci\[OAcute]n no da como resultado un \
n\[UAcute]mero natural: \!\(TraditionalForm\`2\[Divide]6 = \
\(\*FractionBox[\(2\), \(6\)] = \*FractionBox[\(1\), \(3\)] \[NotElement] \
\[DoubleStruckCapitalN]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}], 2->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10, Typeset`show$$ = True, 
                    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = 
                    "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, 
                    Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 10, "m\[AAcute]ximo"}, {10, 
                    20, 50, 100}}, {{
                    Hold[$CellContext`pos$$], {0, 0}}}}, Typeset`size$$ = {
                    720., {37., 43.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$7623$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$7623$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    Round[
                    Part[$CellContext`pos$$, 1]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.003], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalZ], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{-$CellContext`scale$$, \
$CellContext`scale$$}, {-0.5, 0.5}}, Ticks -> {
                    
                    Range[-$CellContext`scale$$, $CellContext`scale$$, \
$CellContext`scale$$/10], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Round[
                    Part[$CellContext`pos$$, 1]], TraditionalForm], Red, 30], 
                    ImageSize -> {350, 30}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 10, 
                    "m\[AAcute]ximo"}, {10, 20, 50, 
                    100}}, {{$CellContext`pos$$, {0, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{779., {88., 95.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"El conjunto de los n\[UAcute]meros enteros \
es una extensi\[OAcute]n del conjunto de los n\[UAcute]meros naturales. Este \
conjunto est\[AAcute] conformado por el conjunto de los n\[UAcute]meros \
naturales, el cero (considerado como un punto de referencia o punto de \
origen) y los opuestos de los naturales (enteros negativos). Los \
n\[UAcute]meros enteros se representan con la letra \[DoubleStruckCapitalZ]: \
\\n \[DoubleStruckCapitalZ]={..., -4, -3 , -2 , -1, 0, 1, 2, 3, 4, ...}\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "4d241061-9c9c-48ab-b9ce-535d5886f195"],
                  TextCell[
                   Style[
                   "El conjunto de los n\[UAcute]meros enteros es una extensi\
\[OAcute]n del conjunto de los n\[UAcute]meros naturales. Este conjunto est\
\[AAcute] conformado por el conjunto de los n\[UAcute]meros naturales, el \
cero (considerado como un punto de referencia o punto de origen) y los \
opuestos de los naturales (enteros negativos). Los n\[UAcute]meros enteros se \
representan con la letra \[DoubleStruckCapitalZ]: \n \
\[DoubleStruckCapitalZ]={..., -4, -3 , -2 , -1, 0, 1, 2, 3, 4, ...}", {
                    FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros enteros \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalZ] , + )", "Text",
                    ExpressionUUID->"8de033c2-c1d6-46aa-a69d-84b38a3b3584"],
                    TextCell[" ( \[DoubleStruckCapitalZ] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un n\
\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalZ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros enteros el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
entero existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text",
                    ExpressionUUID->"33f0772f-1889-45e7-8e6a-1fbeb2f55833"],
                    TextCell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un \
n\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalZ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros enteros el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se puede distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "b4a96259-6cb6-4992-9389-104f1b61e990"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] que la sustracci\[OAcute]n es una \
adici\[OAcute]n de un n\[UAcute]mero con el opuesto de otro n\[UAcute]mero, \
sin embargo, es necesario recalcar que la sustracci\[OAcute]n no es \
conmutativa ni asociativa. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"2\", \"-\", \"5\"}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"5\", \"-\", \
\"2\"}]}]},{RowBox[{RowBox[{\"-\", \"3\"}], \"\[AlignmentMarker]\", \"\
\[NotEqual]\", \" \", \"3\"}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"Center\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{\"2\", \"-\", \"3\"}], \")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
\"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{\"2\", \"-\", RowBox[{\"(\", RowBox[{\"3\", \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \
\")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \"1\"}], \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{\"2\", \"-\", \"8\"}]}]},{RowBox[{\"4\", \
\"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"-\", \"6\"}]}]}\n   \
  },GridBoxAlignment->{\"Columns\" -> {{\"\[AlignmentMarker]\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es asociativa.\nSi se desea \
aplicar estas propiedades se debe escribir como una suma, por ejemplo \
\!\(TraditionalForm\`2 - 5\) se puede escribir como \!\(TraditionalForm\`2 + \
\((\(-5\))\)\) y \!\(TraditionalForm\`2 + \((\(-5\))\) = \(\((\(-5\))\) + 2 = \
\(-3\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "a1ab5536-3119-4b49-86d5-a42aad8bcf4a"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]mero enteros. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros enteros solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \
\!\(TraditionalForm\`\((\(-6\))\)\[Divide]2 = \(-3\)\) , en el caso \
contrario, la operaci\[OAcute]n no da como resultado un n\[UAcute]mero \
entero: \!\(TraditionalForm\`2\[Divide]\((\(-6\))\) = \
\(\(-\*FractionBox[\(2\), \(6\)]\) = \(-\*FractionBox[\(1\), \(3\)]\) \
\[NotElement] \[DoubleStruckCapitalZ]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "8e16fc12-4f8d-4a52-b108-da1a78489a2a"]
                  }], "Multimedia",ExpressionUUID->
                   "b2608f4a-4cf5-497f-b990-27e1a22882d7"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros enteros \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalZ] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un n\
\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalZ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros enteros el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
entero existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalZ] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros enteros se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros enteros es un \
n\[UAcute]mero entero\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalZ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros enteros, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros enteros el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero entero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se puede distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalZ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] que la sustracci\[OAcute]n es una \
adici\[OAcute]n de un n\[UAcute]mero con el opuesto de otro n\[UAcute]mero, \
sin embargo, es necesario recalcar que la sustracci\[OAcute]n no es \
conmutativa ni asociativa. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{\"2\", \"-\", \"5\"}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"5\", \"-\", \
\"2\"}]}]},{RowBox[{RowBox[{\"-\", \"3\"}], \"\[AlignmentMarker]\", \"\
\[NotEqual]\", \" \", \"3\"}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"Center\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{\"2\", \"-\", \"3\"}], \")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
\"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{\"2\", \"-\", RowBox[{\"(\", RowBox[{\"3\", \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \
\")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \"1\"}], \"-\", RowBox[{\"(\", \
RowBox[{\"-\", \"5\"}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{\"2\", \"-\", \"8\"}]}]},{RowBox[{\"4\", \
\"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{\"-\", \"6\"}]}]}\n   \
  },GridBoxAlignment->{\"Columns\" -> {{\"\[AlignmentMarker]\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es asociativa.\nSi se desea \
aplicar estas propiedades se debe escribir como una suma, por ejemplo \
\!\(TraditionalForm\`2 - 5\) se puede escribir como \!\(TraditionalForm\`2 + \
\((\(-5\))\)\) y \!\(TraditionalForm\`2 + \((\(-5\))\) = \(\((\(-5\))\) + 2 = \
\(-3\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"enteros\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "La divisi\[OAcute]n es el proceso inverso de la \
multiplicaci\[OAcute]n y no se considera como una operaci\[OAcute]n porque no \
es cerrada, lo que quiere decir que no siempre se puede realizar una divisi\
\[OAcute]n con dos n\[UAcute]mero enteros. \nEn la divisi\[OAcute]n \
\!\(TraditionalForm\`a\[Divide]b = c\) el t\[EAcute]rmino \!\(TraditionalForm\
\`a\) se llama \!\(\*StyleBox[\"dividendo\",FontSlant->\"Italic\"]\), \
\!\(TraditionalForm\`b\) es el \!\(\*StyleBox[\"divisor\",FontSlant->\"Italic\
\"]\) y \!\(TraditionalForm\`c\) el \
\!\(\*StyleBox[\"cociente\",FontSlant->\"Italic\"]\). Cuando la divisi\
\[OAcute]n es exacta no hay residuo.\nLa divisi\[OAcute]n se puede realizar \
dentro del conjunto de los n\[UAcute]meros enteros solo cuando la divisi\
\[OAcute]n es exacta, por ejemplo: \
\!\(TraditionalForm\`\((\(-6\))\)\[Divide]2 = \(-3\)\) , en el caso \
contrario, la operaci\[OAcute]n no da como resultado un n\[UAcute]mero \
entero: \!\(TraditionalForm\`2\[Divide]\((\(-6\))\) = \
\(\(-\*FractionBox[\(2\), \(6\)]\) = \(-\*FractionBox[\(1\), \(3\)]\) \
\[NotElement] \[DoubleStruckCapitalZ]\)\). "]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}], 3->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {-4.76, -0.01}, \
$CellContext`scale$$ = 10, Typeset`show$$ = True, Typeset`bookmarkList$$ = {},
                     Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                    Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                    Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 10, "m\[AAcute]ximo"}, {10, 
                    20, 50, 100}}, {{
                    Hold[$CellContext`pos$$], {0, 0}}}}, Typeset`size$$ = {
                    1008., {50., 62.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$7643$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$7643$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    $CellContext`rati$$[
                    Part[$CellContext`pos$$, 1]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.0022], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalQ], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{-$CellContext`scale$$, \
$CellContext`scale$$ 1.1}, {-0.01, 0.01}}, Ticks -> {
                    
                    Range[-$CellContext`scale$$, $CellContext`scale$$, \
$CellContext`scale$$/5], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    $CellContext`rati$$[
                    Part[$CellContext`pos$$, 1]], TraditionalForm], Red, 18], 
                    ImageSize -> {350, 50}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 10, 
                    "m\[AAcute]ximo"}, {10, 20, 50, 
                    100}}, {{$CellContext`pos$$, {0, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{1067., {104., 111.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"Los n\[UAcute]meros que se utilizan para \
expresar una parte de un todo son llamados \
\\!\\(\\*StyleBox[\\\"n\[UAcute]meros\\\",FontWeight->\\\"Bold\\\"]\\)\\!\\(\\\
*StyleBox[\\\" \
\\\",FontWeight->\\\"Bold\\\"]\\)\\!\\(\\*StyleBox[\\\"racionales\\\",\
FontWeight->\\\"Bold\\\"]\\) y son todos los n\[UAcute]meros de la forma \
\\!\\(TraditionalForm\\`\\*FractionBox[\\(a\\), \\(b\\)]\\), donde \
\\!\\(TraditionalForm\\`b \[NotEqual] 0\\), \\!\\(TraditionalForm\\`a\\) y \
\\!\\(TraditionalForm\\`b\\) son n\[UAcute]meros enteros. Se representan con \
la letra \[DoubleStruckCapitalQ]:\\n\\!\\(\\*FormBox[GridBox[{{GridBox[{{\
RowBox[{\\\"\[DoubleStruckCapitalQ]\\\", \\\"=\\\", RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"a\\\", \\\"b\\\"], \\\",\\\", \\\"a\\\", \\\",\\\", \
RowBox[{\\\"b\\\", \\\"\[Element]\\\", \\\"\[DoubleStruckCapitalZ]\\\"}], \
\\\",\\\", RowBox[{\\\"b\\\", \\\"\[NotEqual]\\\", \\\"0\\\"}]}], \
\\\"}\\\"}]}]}\\n     },GridBoxAlignment->{\\\"Columns\\\" -> \
{{\\\"=\\\"}}}]}\\n  },GridBoxItemSize->{\\\"Columns\\\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\\)\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "d58246ee-48d7-4396-a8ff-b2c3e6525e35"],
                  TextCell[
                   Style[
                   "Los n\[UAcute]meros que se utilizan para expresar una \
parte de un todo son llamados \!\(\*StyleBox[\"n\[UAcute]meros\",FontWeight->\
\"Bold\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\"]\)\!\(\*StyleBox[\"racionales\",FontWeight->\"Bold\"]\
\) y son todos los n\[UAcute]meros de la forma \
\!\(TraditionalForm\`\*FractionBox[\(a\), \(b\)]\), donde \!\(TraditionalForm\
\`b \[NotEqual] 0\), \!\(TraditionalForm\`a\) y \!\(TraditionalForm\`b\) son \
n\[UAcute]meros enteros. Se representan con la letra \[DoubleStruckCapitalQ]:\
\n\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{\"\[DoubleStruckCapitalQ]\", \
\"=\", RowBox[{\"{\", RowBox[{FractionBox[\"a\", \"b\"], \",\", \"a\", \",\", \
RowBox[{\"b\", \"\[Element]\", \"\[DoubleStruckCapitalZ]\"}], \",\", RowBox[{\
\"b\", \"\[NotEqual]\", \"0\"}]}], \"}\"}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)", {
                    FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros racionales \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalQ] , + )", "Text",
                    ExpressionUUID->"3cefcbdc-8f24-49bb-92a6-514faa963cc0"],
                    TextCell[" ( \[DoubleStruckCapitalQ] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros racionales es un n\
\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalQ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros racionales el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalQ] , \[CenterDot] )", "Text",
                    ExpressionUUID->"579188eb-a9d9-4d34-952c-d3751ca1eaca"],
                    TextCell[
                    " ( \[DoubleStruckCapitalQ] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros racionales es \
un n\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalQ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros racionales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"inverso\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\" \",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"o\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"rec\[IAcute]\
proco\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"(\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\")\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional a\[NotEqual]0 existe un rec\[IAcute]proco tal que la su multiplicaci\
\[OAcute]n es uno:\n\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \
\" \", \"a\"}], \"\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\", \" \", FractionBox[\"1\", \"a\"], \" \", \
\"tal\", \" \", \"que\", \" \", RowBox[{\"a\", \"(\", FractionBox[\"1\", \
\"a\"], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", FractionBox[\"1\", \
\"a\"], \")\"}], \"a\"}], \"=\", \"1\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "342ffb55-9172-42e9-81a9-6850fa785fdd"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] con anticipaci\[OAcute]n que la \
sustracci\[OAcute]n es una adici\[OAcute]n de un n\[UAcute]mero con el \
opuesto de otro n\[UAcute]mero, sin embargo, es necesario recalcar que la \
sustracci\[OAcute]n no es conmutativa ni asociativa en ning\[UAcute]n \
conjunto num\[EAcute]rico. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"2\", \"3\"], \
\"-\", FractionBox[\"5\", \"4\"]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{FractionBox[\"5\", \"4\"], \"-\", FractionBox[\"2\", \
\"3\"]}]}]},{RowBox[{RowBox[{\"-\", FractionBox[\"7\", \"12\"]}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", FractionBox[\"7\", \"12\"]}]}\n \
    },GridBoxAlignment->{\"Columns\" -> {{\"Center\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", FractionBox[\"3\", \"2\"]}], \
\")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \"2\"]}], \
\")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", RowBox[{\"(\", RowBox[{FractionBox[\
\"3\", \"2\"], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \
\"2\"]}], \")\"}]}], \")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \
FractionBox[\"11\", \"10\"]}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
FractionBox[\"5\", \"2\"]}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\
\", \" \", RowBox[{FractionBox[\"2\", \"5\"], \"-\", \
\"4\"}]}]},{RowBox[{FractionBox[RowBox[{\"7\", \"\[AlignmentMarker]\"}], \
\"5\"], \"\[NotEqual]\", \" \", RowBox[{\"-\", FractionBox[\"18\", \
\"5\"]}]}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"\[AlignmentMarker]\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es asociativa.\nSi se desea aplicar estas propiedades se debe \
escribir como una suma, por ejemplo \
\!\(TraditionalForm\`\(\*FractionBox[\(2\), \(3\)]\(-\)\*FractionBox[\(5\), \
\(4\)]\(\[AlignmentMarker]\)\)\) se puede escribir como \!\(TraditionalForm\`\
\(\*FractionBox[\(2\), \(3\)]\(+\)\((\(-\*FractionBox[\(5\), \(4\)]\))\)\(\
\[AlignmentMarker]\)\)\) y \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)] + \
\((\(-\*FractionBox[\(5\), \(4\)]\))\)\[AlignmentMarker] = \
\(\((\(-\*FractionBox[\(5\), \(4\)]\))\) + \*FractionBox[\(2\), \(3\)] = \
\(-\*FractionBox[\(7\), \(12\)]\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "0d199924-340b-4d99-afb0-f1682684e96d"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales, la divisi\[OAcute]n \
es una manera diferente de escribir una multiplicaci\[OAcute]n. En general, \
cuando se van a dividir dos n\[UAcute]meros racionales, se tiene que:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\
\"a\", \"b\"], \"\[Divide]\", FractionBox[\"c\", \"d\"]}], \"=\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], RowBox[{FractionBox[\"a\", \
\"b\"], \"\[CenterDot]\", FractionBox[\"d\", \"c\"]}]}], \"=\", \
FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \", \"c\"}]]}]}\n\
  },GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
es decir, en lugar de dividir se multiplica por el rec\[IAcute]proco del \
divisor.\nEs as\[IAcute] como todas las divisiones se pueden expresar como \
multiplicaci\[OAcute]n de racionales, por ejemplo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{\"7\", \"\[Divide]\", \"3\"}], \"=\", \
RowBox[{RowBox[{\"7\", \"\[CenterDot]\", FractionBox[\"1\", \"3\"]}], \"=\", \
FractionBox[\"7\", \"3\"]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "6b76d406-052a-4496-b486-2519519763fa"]
                  }], "Multimedia",ExpressionUUID->
                   "d4aecf48-4d66-42fb-9f01-c8d0f94cd1fa"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros racionales \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalQ] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros racionales es un n\
\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalQ]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros racionales el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional existe un opuesto tal que su suma es cero:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalQ] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"multiplicaci\[OAcute]n\",FontSlant->\"Italic\",\
FontColor->RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros racionales es \
un n\[UAcute]mero racional\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalQ]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros racionales, el \
resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros racionales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"inverso\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\" \",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"o\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"rec\[IAcute]\
proco\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"(\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"\
multiplicativo\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\
\")\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero \
racional a\[NotEqual]0 existe un rec\[IAcute]proco tal que la su multiplicaci\
\[OAcute]n es uno:\n\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \
\" \", \"a\"}], \"\[Element]\", RowBox[{\"\[DoubleStruckCapitalQ]\", \" \", \
\"entonces\", \" \", \"existe\", \" \", FractionBox[\"1\", \"a\"], \" \", \
\"tal\", \" \", \"que\", \" \", RowBox[{\"a\", \"(\", FractionBox[\"1\", \
\"a\"], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", FractionBox[\"1\", \
\"a\"], \")\"}], \"a\"}], \"=\", \"1\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se pueden distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalQ]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] con anticipaci\[OAcute]n que la \
sustracci\[OAcute]n es una adici\[OAcute]n de un n\[UAcute]mero con el \
opuesto de otro n\[UAcute]mero, sin embargo, es necesario recalcar que la \
sustracci\[OAcute]n no es conmutativa ni asociativa en ning\[UAcute]n \
conjunto num\[EAcute]rico. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{FractionBox[\"2\", \"3\"], \
\"-\", FractionBox[\"5\", \"4\"]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{FractionBox[\"5\", \"4\"], \"-\", FractionBox[\"2\", \
\"3\"]}]}]},{RowBox[{RowBox[{\"-\", FractionBox[\"7\", \"12\"]}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", FractionBox[\"7\", \"12\"]}]}\n \
    },GridBoxAlignment->{\"Columns\" -> {{\"Center\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
como puede observar, la sustracci\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", FractionBox[\"3\", \"2\"]}], \
\")\"}], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \"2\"]}], \
\")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{FractionBox[\"2\", \"5\"], \"-\", RowBox[{\"(\", RowBox[{FractionBox[\
\"3\", \"2\"], \"-\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[\"5\", \
\"2\"]}], \")\"}]}], \")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"-\", \
FractionBox[\"11\", \"10\"]}], \"-\", RowBox[{\"(\", RowBox[{\"-\", \
FractionBox[\"5\", \"2\"]}], \")\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\
\", \" \", RowBox[{FractionBox[\"2\", \"5\"], \"-\", \
\"4\"}]}]},{RowBox[{FractionBox[RowBox[{\"7\", \"\[AlignmentMarker]\"}], \
\"5\"], \"\[NotEqual]\", \" \", RowBox[{\"-\", FractionBox[\"18\", \
\"5\"]}]}]}\n     },GridBoxAlignment->{\"Columns\" -> \
{{\"\[AlignmentMarker]\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es asociativa.\nSi se desea aplicar estas propiedades se debe \
escribir como una suma, por ejemplo \
\!\(TraditionalForm\`\(\*FractionBox[\(2\), \(3\)]\(-\)\*FractionBox[\(5\), \
\(4\)]\(\[AlignmentMarker]\)\)\) se puede escribir como \!\(TraditionalForm\`\
\(\*FractionBox[\(2\), \(3\)]\(+\)\((\(-\*FractionBox[\(5\), \(4\)]\))\)\(\
\[AlignmentMarker]\)\)\) y \!\(TraditionalForm\`\*FractionBox[\(2\), \(3\)] + \
\((\(-\*FractionBox[\(5\), \(4\)]\))\)\[AlignmentMarker] = \
\(\((\(-\*FractionBox[\(5\), \(4\)]\))\) + \*FractionBox[\(2\), \(3\)] = \
\(-\*FractionBox[\(7\), \(12\)]\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"racionales\",FontSlant->\"Italic\",FontColor->RGBColor[\
0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros racionales, la divisi\[OAcute]n \
es una manera diferente de escribir una multiplicaci\[OAcute]n. En general, \
cuando se van a dividir dos n\[UAcute]meros racionales, se tiene que:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\
\"a\", \"b\"], \"\[Divide]\", FractionBox[\"c\", \"d\"]}], \"=\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], RowBox[{FractionBox[\"a\", \
\"b\"], \"\[CenterDot]\", FractionBox[\"d\", \"c\"]}]}], \"=\", \
FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \", \"c\"}]]}]}\n\
  },GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
es decir, en lugar de dividir se multiplica por el rec\[IAcute]proco del \
divisor.\nEs as\[IAcute] como todas las divisiones se pueden expresar como \
multiplicaci\[OAcute]n de racionales, por ejemplo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{\"7\", \"\[Divide]\", \"3\"}], \"=\", \
RowBox[{RowBox[{\"7\", \"\[CenterDot]\", FractionBox[\"1\", \"3\"]}], \"=\", \
FractionBox[\"7\", \"3\"]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}], 4->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {0, 0}, 
                    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                    Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                    Typeset`specs$$ = {{{
                    Hold[$CellContext`pos$$], {0, 0}}}}, Typeset`size$$ = {
                    1008., {50., 62.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {0, 0}}, 
                    "ControllerVariables" :> {}, 
                    "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{
                    AbsolutePointSize[6], Orange, 
                    Point[
                    
                    Table[{Pi $CellContext`i, 0.2}, {$CellContext`i, -3, 3, 
                    1}]], Green, 
                    Point[
                    
                    Table[{Sqrt[2] $CellContext`i, 0.2}, {$CellContext`i, -6, 
                    6, 1}]], Purple, 
                    Point[
                    
                    Table[{E $CellContext`i, 0.2}, {$CellContext`i, -3, 3, 
                    1}]], Blue, 
                    Point[
                    
                    Table[{Sqrt[3] $CellContext`i, 0.2}, {$CellContext`i, -5, 
                    5, 1}]], 
                    AbsolutePointSize[7], White, 
                    Point[{{0, 0.2}}], Red, 
                    AbsolutePointSize[10], 
                    Point[{{
                    $CellContext`rati$$[
                    Part[$CellContext`pos$$, 1]], 0}}]}, 
                    Axes -> {True, False}, AxesStyle -> Directive[
                    Thickness[0.003], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalI], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{-10, 11}, {-0.01, 0.01}}, Ticks -> {
                    Range[-10, 10, 10/5], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Row[{"Algunos irracionales:                  ", 
                    If[Abs[
                    Part[$CellContext`pos$$, 1]] <= 0.2, "", 
                    If[Abs[$CellContext`int$$[
                    Part[$CellContext`pos$$, 1], Pi] - 
                    Part[$CellContext`pos$$, 1]/Pi] <= 
                    0.05, $CellContext`int$$[
                    Part[$CellContext`pos$$, 1], Pi] Pi, 
                    If[Abs[$CellContext`int$$[
                    Part[$CellContext`pos$$, 1], 
                    Sqrt[2]] - Part[$CellContext`pos$$, 1]/Sqrt[2]] <= 
                    0.05, $CellContext`int$$[
                    Part[$CellContext`pos$$, 1], 
                    Sqrt[2]] Sqrt[2], 
                    If[Abs[$CellContext`int$$[
                    Part[$CellContext`pos$$, 1], 
                    Sqrt[3]] - Part[$CellContext`pos$$, 1]/Sqrt[3]] <= 
                    0.05, $CellContext`int$$[
                    Part[$CellContext`pos$$, 1], 
                    Sqrt[3]] Sqrt[3], 
                    If[Abs[$CellContext`int$$[
                    Part[$CellContext`pos$$, 1], E] - 
                    Part[$CellContext`pos$$, 1]/E] <= 0.05, $CellContext`int$$[
                    Part[$CellContext`pos$$, 1], E] E, ""]]]]]}], 
                    TraditionalForm], Red, 18], ImageSize -> {350, 50}, 
                    Alignment -> Center, ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`pos$$, {0, 0}}, 
                    ControlType -> Locator, Appearance -> Graphics[{}]}}, 
                    "Options" :> {}, "DefaultOptions" :> {}],
                    ImageSizeCache->{1067., {89., 96.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"N\[UAcute]meros que no se pueden expresarr \
mediante la raz\[OAcute]n de n\[UAcute]meros enteros, como por ejemplo \[Pi] \
(relaci\[OAcute]n entre una circunferencia y su di\[AAcute]metro) o \
\[ExponentialE] (n\[UAcute]mero de Euler utilizado frecuentemente en \
problemas de crecimiento y financieros).\\nSe caracterizan por tener cola \
decimal infinita y no peri\[OAcute]dica y su conjunto se representa con la \
letra \[DoubleStruckCapitalI].\"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "caadf198-3e45-4f41-a355-8265692206e8"],
                  TextCell[
                   Style[
                   "N\[UAcute]meros que no se pueden expresarr mediante la \
raz\[OAcute]n de n\[UAcute]meros enteros, como por ejemplo \[Pi] (relaci\
\[OAcute]n entre una circunferencia y su di\[AAcute]metro) o \[ExponentialE] \
(n\[UAcute]mero de Euler utilizado frecuentemente en problemas de crecimiento \
y financieros).\nSe caracterizan por tener cola decimal infinita y no peri\
\[OAcute]dica y su conjunto se representa con la letra \
\[DoubleStruckCapitalI].", {FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros irracionales \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalI] , + )", "Text",
                    ExpressionUUID->"7084ba22-080f-4e4d-af96-7ea02d63027c"],
                    TextCell[" ( \[DoubleStruckCapitalI] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros irracionales y la adici\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "La operaci\[OAcute]n de la adici\[OAcute]n en los n\
\[UAcute]meros irracionales no es cerrada, ya que no siempre dan como \
resultado un n\[UAcute]mero irracional. Por ejemplo, al sumar \
\!\(TraditionalForm\`3 \*SqrtBox[\(2\)]\) con \!\(TraditionalForm\`\(-3\) \
\*SqrtBox[\(2\)]\) da como resultado \!\(TraditionalForm\`0\) y \
\!\(TraditionalForm\`0 \[NotElement] \[DoubleStruckCapitalI]\).\nPara sumar n\
\[UAcute]meros irracionales se tienen en cuenta los t\[EAcute]rminos \
semejantes, es decir, solo se operan los t\[EAcute]rminos que tengan el mismo \
irracional, por ejemplo, al simplificar la siguiente expresi\[OAcute]n: \
\!\(TraditionalForm\`3 \*SqrtBox[\(5\)] - \[Pi] + 4 \*SqrtBox[\(5\)] - 7  \
\[Pi] + 2\), se obtiene como resultado, \!\(TraditionalForm\`7 \
\*SqrtBox[\(5\)] - 8  \[Pi] + 2\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalI] , \[CenterDot] )", "Text",
                    ExpressionUUID->"84b4edd8-997c-4a6c-a006-fd51f1e2e064"],
                    TextCell[
                    " ( \[DoubleStruckCapitalI] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros irracionales y la multiplicaci\
\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "La operaci\[OAcute]n de la multiplicaci\[OAcute]n en los \
n\[UAcute]meros irracionales no es cerrada, ya que no siempre dan como \
resultado un n\[UAcute]mero irracional. Por ejemplo, al multiplicar \
\!\(TraditionalForm\`3 \*SqrtBox[\(2\)]\) con \!\(TraditionalForm\`\(-3\) \
\*SqrtBox[\(2\)]\) da como resultado \!\(TraditionalForm\`\(-9\) \
\*SqrtBox[\(4\)] = \(\(-9\) \((2)\) = \(-18\)\)\) y -\!\(TraditionalForm\`18 \
\[NotElement] \[DoubleStruckCapitalI]\).\nAl multiplicar n\[UAcute]meros \
irracionales, se realizan las multiplicaciones posibles, las otras se quedan \
indicadas, por ejemplo, al realizar la operaci\[OAcute]n \
\!\(TraditionalForm\`\((\[Pi] - 3 \*SqrtBox[\(2\)])\) \((\*SqrtBox[\(2\)] - 4 \
+ 2  \[Pi])\)\) se tiene:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"\
\[Pi]\", \"-\", RowBox[{\"3\", SqrtBox[\"2\"]}]}], \")\"}], RowBox[{\"(\", \
RowBox[{SqrtBox[\"2\"], \"-\", \"4\", \"+\", RowBox[{\"2\", \"\[Pi]\"}]}], \
\")\"}]}], \"=\", RowBox[{RowBox[{SqrtBox[\"2\"], \"\[Pi]\"}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", RowBox[{\"3\", SuperscriptBox[RowBox[{\"(\", SqrtBox[\"2\"], \
\")\"}], \"2\"]}], \"+\", RowBox[{\"12\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"6\", \"\[Pi]\", SqrtBox[\"2\"]}]}]}]},{RowBox[{\"=\", \
RowBox[{RowBox[{RowBox[{\"-\", \"5\"}], \"\[Pi]\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", RowBox[{\"3\", RowBox[{\"(\", \"2\", \")\"}]}], \"+\", \
RowBox[{\"12\", SqrtBox[\"2\"]}]}]}]},{RowBox[{\"=\", \
RowBox[{RowBox[{RowBox[{\"-\", \"5\"}], \"\[Pi]\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", \"6\", \"+\", RowBox[{\"12\", SqrtBox[\"2\"]}]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "3abeb816-94e7-4f73-a853-1964880ec4db"]
                  }], "Multimedia",ExpressionUUID->
                   "742f8afc-1a10-4e55-ba13-5cea02c0b2c4"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros irracionales \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalI] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros irracionales y la adici\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "La operaci\[OAcute]n de la adici\[OAcute]n en los n\
\[UAcute]meros irracionales no es cerrada, ya que no siempre dan como \
resultado un n\[UAcute]mero irracional. Por ejemplo, al sumar \
\!\(TraditionalForm\`3 \*SqrtBox[\(2\)]\) con \!\(TraditionalForm\`\(-3\) \
\*SqrtBox[\(2\)]\) da como resultado \!\(TraditionalForm\`0\) y \
\!\(TraditionalForm\`0 \[NotElement] \[DoubleStruckCapitalI]\).\nPara sumar n\
\[UAcute]meros irracionales se tienen en cuenta los t\[EAcute]rminos \
semejantes, es decir, solo se operan los t\[EAcute]rminos que tengan el mismo \
irracional, por ejemplo, al simplificar la siguiente expresi\[OAcute]n: \
\!\(TraditionalForm\`3 \*SqrtBox[\(5\)] - \[Pi] + 4 \*SqrtBox[\(5\)] - 7  \
\[Pi] + 2\), se obtiene como resultado, \!\(TraditionalForm\`7 \
\*SqrtBox[\(5\)] - 8  \[Pi] + 2\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalI] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros irracionales y la multiplicaci\
\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "La operaci\[OAcute]n de la multiplicaci\[OAcute]n en los \
n\[UAcute]meros irracionales no es cerrada, ya que no siempre dan como \
resultado un n\[UAcute]mero irracional. Por ejemplo, al multiplicar \
\!\(TraditionalForm\`3 \*SqrtBox[\(2\)]\) con \!\(TraditionalForm\`\(-3\) \
\*SqrtBox[\(2\)]\) da como resultado \!\(TraditionalForm\`\(-9\) \
\*SqrtBox[\(4\)] = \(\(-9\) \((2)\) = \(-18\)\)\) y -\!\(TraditionalForm\`18 \
\[NotElement] \[DoubleStruckCapitalI]\).\nAl multiplicar n\[UAcute]meros \
irracionales, se realizan las multiplicaciones posibles, las otras se quedan \
indicadas, por ejemplo, al realizar la operaci\[OAcute]n \
\!\(TraditionalForm\`\((\[Pi] - 3 \*SqrtBox[\(2\)])\) \((\*SqrtBox[\(2\)] - 4 \
+ 2  \[Pi])\)\) se tiene:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"\
\[Pi]\", \"-\", RowBox[{\"3\", SqrtBox[\"2\"]}]}], \")\"}], RowBox[{\"(\", \
RowBox[{SqrtBox[\"2\"], \"-\", \"4\", \"+\", RowBox[{\"2\", \"\[Pi]\"}]}], \
\")\"}]}], \"=\", RowBox[{RowBox[{SqrtBox[\"2\"], \"\[Pi]\"}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", RowBox[{\"3\", SuperscriptBox[RowBox[{\"(\", SqrtBox[\"2\"], \
\")\"}], \"2\"]}], \"+\", RowBox[{\"12\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"6\", \"\[Pi]\", SqrtBox[\"2\"]}]}]}]},{RowBox[{\"=\", \
RowBox[{RowBox[{RowBox[{\"-\", \"5\"}], \"\[Pi]\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", RowBox[{\"3\", RowBox[{\"(\", \"2\", \")\"}]}], \"+\", \
RowBox[{\"12\", SqrtBox[\"2\"]}]}]}]},{RowBox[{\"=\", \
RowBox[{RowBox[{RowBox[{\"-\", \"5\"}], \"\[Pi]\", SqrtBox[\"2\"]}], \"-\", \
RowBox[{\"4\", \"\[Pi]\"}], \"+\", RowBox[{\"2\", SuperscriptBox[\"\[Pi]\", \
\"2\"]}], \"-\", \"6\", \"+\", RowBox[{\"12\", SqrtBox[\"2\"]}]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}], 5->
           PaneBox[
            TagBox[GridBox[{
               {
                TagBox[
                 FormBox[
                  StyleBox[
                   
                   DynamicModuleBox[{$CellContext`pos$$ = {
                    0.009999999999999787, -0.01}, $CellContext`scale$$ = 10, 
                    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                    Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                    Typeset`specs$$ = {{{
                    Hold[$CellContext`scale$$], 10, "m\[AAcute]ximo"}, {10, 
                    20, 50, 100}}, {{
                    Hold[$CellContext`pos$$], {0, 0}}}}, Typeset`size$$ = {
                    1008., {50., 62.}}, Typeset`update$$ = 0, 
                    Typeset`initDone$$, Typeset`skipInitDone$$ = 
                    True, $CellContext`scale$7680$$ = 0}, 
                    
                    DynamicBox[Manipulate`ManipulateBoxes[
                    1, TraditionalForm, 
                    "Variables" :> {$CellContext`pos$$ = {0, 
                    0}, $CellContext`scale$$ = 10}, "ControllerVariables" :> {
                    Hold[$CellContext`scale$$, $CellContext`scale$7680$$, 0]},
                     "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Graphics[{Red, 
                    AbsolutePointSize[13], 
                    Point[{{
                    Part[$CellContext`pos$$, 1], 0}}]}, Axes -> {True, False},
                     AxesStyle -> Directive[
                    Thickness[0.0022], 
                    Arrowheads[0.02]], 
                    AxesLabel -> {$CellContext`\[DoubleStruckCapitalR], {}}, 
                    LabelStyle -> Directive[15], AspectRatio -> Automatic, 
                    PlotRange -> {{-$CellContext`scale$$, \
$CellContext`scale$$ 1.1}, {-0.01, 0.01}}, Ticks -> {
                    
                    Range[-$CellContext`scale$$, $CellContext`scale$$, \
$CellContext`scale$$/5], {}}, TicksStyle -> Directive[
                    Thickness[0.006]], PlotLabel -> Pane[
                    Style[
                    ToString[
                    Part[$CellContext`pos$$, 1], TraditionalForm], Red, 18], 
                    ImageSize -> {350, 50}, Alignment -> Center, 
                    ImageSizeAction -> "ShrinkToFit"], 
                    ImageSize -> {720, 80}], 
                    "Specifications" :> {{{$CellContext`scale$$, 10, 
                    "m\[AAcute]ximo"}, {10, 20, 50, 
                    100}}, {{$CellContext`pos$$, {0, 0}}, ControlType -> 
                    Locator, Appearance -> Graphics[{}]}}, "Options" :> {}, 
                    "DefaultOptions" :> {}],
                    ImageSizeCache->{1067., {104., 111.}},
                    SingleEvaluation->True],
                    Deinitialization:>None,
                    DynamicModuleValues:>{},
                    SynchronousInitialization->True,
                    
                    UndoTrackedVariables:>{
                    Typeset`show$$, Typeset`bookmarkMode$$},
                    UnsavedVariables:>{Typeset`initDone$$},
                    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
                   Deployed->True,
                   StripOnInput->False],
                  TraditionalForm],
                 Manipulate`InterpretManipulate[1]]},
               {
                PaneBox[
                 InterpretationBox[Cell[BoxData[
                   FormBox[
                    
                    StyleBox["\<\"El conjunto de los n\[UAcute]meros reales \
es la uni\[OAcute]n del conjunto de los n\[UAcute]meros racionales \
\\!\\(TraditionalForm\\`\\((\[DoubleStruckCapitalQ])\\)\\) y del conjunto de \
n\[UAcute]meros irracionales \\!\\(TraditionalForm\\`\\((\
\[DoubleStruckCapitalI])\\)\\), en este conjunto se definen las operaciones \
de la adici\[OAcute]n y multiplicaci\[OAcute]n junto con sus propiedades. Se \
representa con la letra \[DoubleStruckCapitalR]. \"\>",
                    StripOnInput->False,
                    FontFamily->"Georgia",
                    FontSize->15], TraditionalForm]], "Cuadro/Titulo",
                   TextJustification->0,
                   LineIndent->0,
                   LinebreakAdjustments->{0.9, 100, 0, 0, 0},ExpressionUUID->
                   "500b40df-36ef-46e8-a401-2ecb968dc8de"],
                  TextCell[
                   Style[
                   "El conjunto de los n\[UAcute]meros reales es la uni\
\[OAcute]n del conjunto de los n\[UAcute]meros racionales \!\(TraditionalForm\
\`\((\[DoubleStruckCapitalQ])\)\) y del conjunto de n\[UAcute]meros \
irracionales \!\(TraditionalForm\`\((\[DoubleStruckCapitalI])\)\), en este \
conjunto se definen las operaciones de la adici\[OAcute]n y multiplicaci\
\[OAcute]n junto con sus propiedades. Se representa con la letra \
\[DoubleStruckCapitalR]. ", {FontFamily -> "Georgia", FontSize -> 15}], 
                   "Cuadro/Titulo", LineIndent -> 0, TextJustification -> 0, 
                   LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]]},
               {
                ItemBox[
                 InterpretationBox[Cell[TextData[{
                   
                   "Operaciones con los n\[UAcute]meros reales \
\[DoubleRightArrow]",
                   "   ",
                   Cell[BoxData[
                    FormBox[
                    TagBox[GridBox[{
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalR] , + )", "Text",
                    ExpressionUUID->"2a791cd9-0909-4ddb-890b-f25e92638865"],
                    TextCell[" ( \[DoubleStruckCapitalR] , + )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros reales y la adici\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros reales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros reales es un n\
\[UAcute]mero real.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalR]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros reales, el \
resultado es el mismo.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros reales el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero real \
existe un opuesto tal que su suma es cero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    " ( \[DoubleStruckCapitalR] , \[CenterDot] )", "Text",
                    ExpressionUUID->"6a075de8-1f2d-4059-a7d3-2f8de9c75c6d"],
                    TextCell[
                    " ( \[DoubleStruckCapitalR] , \[CenterDot] )", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros reales y la multiplicaci\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros reales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros reales es un n\
\[UAcute]mero real.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalR]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros reales, el \
resultado es el mismo.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros reales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"inverso\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero real \
existe un \!\(\*StyleBox[\"opuesto\",FontSlant->\"Italic\"]\) tal que la su \
multiplicaci\[OAcute]n es uno.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \
\", \"existe\", \" \", FractionBox[\"1\", \"a\"], \" \", \"tal\", \" \", \
\"que\", \" \", RowBox[{\"a\", \"(\", FractionBox[\"1\", \"a\"], \")\"}]}]}], \
\"=\", RowBox[{RowBox[{RowBox[{\"(\", FractionBox[\"1\", \"a\"], \")\"}], \"a\
\"}], \"=\", \"1\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se puede distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]},
                    {
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Sustracci\[OAcute]n", "Text",ExpressionUUID->
                    "027ec8db-e685-4935-8222-e89d368c7a76"],
                    TextCell["Sustracci\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"reales\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    
                    "Ya se mencion\[OAcute] con anticipaci\[OAcute]n que la \
sustracci\[OAcute]n es una adici\[OAcute]n de un n\[UAcute]mero con el \
opuesto de otro n\[UAcute]mero, sin embargo, es necesario recalcar que la \
sustracci\[OAcute]n no es conmutativa ni asociativa en ning\[UAcute]n \
conjunto num\[EAcute]rico. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"5\", \
SqrtBox[\"2\"]}], \"-\", RowBox[{\"3\", SqrtBox[\"2\"]}]}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{RowBox[{\"3\", SqrtBox[\
\"2\"]}], \"-\", RowBox[{\"5\", SqrtBox[\"2\"]}]}]}]},{RowBox[{RowBox[{\"2\", \
SqrtBox[\"2\"]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{RowBox[{\"-\", \"2\"}], SqrtBox[\"2\"]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"Center\"}}}]}\n  },GridBoxItemSize->{\
\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la \
sustracci\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{RowBox[{\"2\", \"\[Pi]\"}], \"-\", \"3\"}], \")\"}], \"-\", \
RowBox[{\"(\", RowBox[{RowBox[{\"-\", \"3\"}], \"\[Pi]\"}], \")\"}]}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{RowBox[{\"2\", \
\"\[Pi]\"}], \"-\", RowBox[{\"(\", RowBox[{\"3\", \"-\", RowBox[{\"(\", \
RowBox[{RowBox[{\"-\", \"3\"}], \"\[Pi]\"}], \")\"}]}], \
\")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"2\", \"\[Pi]\"}], \"-\", \"3\", \
\"+\", RowBox[{\"3\", \"\[Pi]\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{RowBox[{\"2\", \"\[Pi]\"}], \"-\", \"3\", \"-\", \
RowBox[{\"3\", \"\[Pi]\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"5\", \"\[Pi]\"}], \
\"-\", \"3\"}], \"\[NotEqual]\", \" \", RowBox[{RowBox[{\"-\", \"\[Pi]\"}], \
\"-\", \"3\"}]}]}\n     },GridBoxAlignment->{\"Columns\" -> {{\"\
\[AlignmentMarker]\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es asociativa.\nSi se desea aplicar estas propiedades se debe \
escribir como una suma, por ejemplo \!\(TraditionalForm\`5 \*SqrtBox[\(2\)] - \
\(\(3\) \*SqrtBox[\(2\)]\(\[AlignmentMarker]\)\)\) se puede escribir como \
\!\(TraditionalForm\`5 \*SqrtBox[\(2\)] + \((\(-3\) \*SqrtBox[\(2\)])\)\) y \
\!\(TraditionalForm\`5 \*SqrtBox[\(2\)] + \((\(-3\) \*SqrtBox[\(2\)])\)\
\[AlignmentMarker] = \(\(-3\) \*SqrtBox[\(2\)] + 5 \*SqrtBox[\(2\)] = \(\(2\) \
\*SqrtBox[\(2\)]\(\[AlignmentMarker]\)\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    ButtonBox[
                    
                    InterpretationBox[Cell[
                    "Divisi\[OAcute]n", "Text",ExpressionUUID->
                    "b945b43c-3c77-4a95-bd84-0d98b1ff5056"],
                    TextCell["Divisi\[OAcute]n", "Text"]],
                    Appearance->Automatic,
                    ButtonFunction:>CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"reales\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros reales (al igual que en los \
racionales), la divisi\[OAcute]n es una manera diferente de escribir una \
multiplicaci\[OAcute]n. En general, cuando se van a dividir dos \
n\[UAcute]meros reales se sigue la siguiente regla:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\
\"a\", \"b\"], \"\[Divide]\", FractionBox[\"c\", \"d\"]}], \"=\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], RowBox[{FractionBox[\"a\", \
\"b\"], \"\[CenterDot]\", FractionBox[\"d\", \"c\"]}]}], \"=\", \
FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \", \"c\"}]]}]}\n\
  },GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
es decir, en lugar de dividir se multiplica por el rec\[IAcute]proco del \
divisor.\nEs as\[IAcute] como todas las divisiones se pueden expresar como \
multiplicaci\[OAcute]n de reales, por ejemplo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{\"7\", \"\[Divide]\", \
SqrtBox[\"3\"]}], \"=\", RowBox[{RowBox[{\"7\", \"\[CenterDot]\", \
FractionBox[\"1\", SqrtBox[\"3\"]]}], \"=\", FractionBox[\"7\", \
SqrtBox[\"3\"]]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True],
                    Evaluator->Automatic,
                    ImageSize->All,
                    Method->"Preemptive"],
                    MouseAppearanceTag["LinkHand"]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"], TraditionalForm]],ExpressionUUID->
                    "c0bbe1e4-f798-4d73-9b52-b3c604696835"]
                  }], "Multimedia",ExpressionUUID->
                   "313125d0-34b4-4ea0-904b-74d9acfaa435"],
                  TextCell[
                   
                   Row[{"Operaciones con los n\[UAcute]meros reales \
\[DoubleRightArrow]", "   ", 
                    Grid[{{
                    MouseAppearance[
                    Button[
                    TextCell[" ( \[DoubleStruckCapitalR] , + )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros reales y la adici\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros reales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
adici\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la adici\[OAcute]n de cualquier par de n\[UAcute]meros reales es un n\
\[UAcute]mero real.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\
\[Element]\", \"\[DoubleStruckCapitalR]\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se adicionen dos n\[UAcute]meros reales, el \
resultado es el mismo.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", \
\"a\"}], \"+\", \"b\"}]}], \"=\", RowBox[{\"b\", \"+\", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la adici\[OAcute]n de n\
\[UAcute]meros reales el n\[UAcute]mero cero (0) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): cero sumado a cualquier n\
\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \
\"entonces\", \" \", \"a\"}], \"+\", \"0\"}]}], \"=\", RowBox[{RowBox[{\"0\", \
\"+\", \"a\"}], \"=\", \"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"opuesto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero real \
existe un opuesto tal que su suma es cero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \
\"entonces\", \" \", \"existe\"}], \" \", \"-\", RowBox[{\"a\", \" \", \
\"tal\", \" \", \"que\", \" \", \"a\"}], \"+\", RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{RowBox[{\"(\", RowBox[{\"-\", \
\"a\"}], \")\"}], \"+\", \"a\"}], \"=\", \"0\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", \
RowBox[{\"(\", RowBox[{\"a\", \"+\", \"b\"}], \")\"}]}], \"+\", \"c\"}]}], \
\"=\", RowBox[{RowBox[{\"a\", \"+\", RowBox[{\"(\", RowBox[{\"b\", \"+\", \"c\
\"}], \")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \"+\", \"c\"}], \
\")\"}], \"+\", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Recuerde\",FontWeight->\"Bold\",FontSlant->\"Italic\",\
FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\":\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"la\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontColor->\
RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \
\",FontColor->RGBColor[0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\"no\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"operaci\[OAcute]n\",\n\
FontVariations->{\"Underline\"->True},FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\",\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"solo\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"es\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"una\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"adici\[OAcute]n\",FontColor->RGBColor[\
0., 0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\"escrita\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"de\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"manera\",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\" \",FontColor->RGBColor[0., 0., \
0.5019607843137255]]\)\!\(\*StyleBox[\"diferente\",FontColor->RGBColor[0., \
0., 0.5019607843137255]]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell[
                    " ( \[DoubleStruckCapitalR] , \[CenterDot] )", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "Los n\[UAcute]meros reales y la multiplicaci\[OAcute]n"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros reales se cumplen ciertas \
propiedades aritm\[EAcute]ticas que permiten realizar operaciones como la \
multiplicaci\[OAcute]n. Estas son:\n\
\!\(\*StyleBox[\"Clausurativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 la multiplicaci\[OAcute]n de cualquier par de n\[UAcute]meros reales es un n\
\[UAcute]mero real.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \
\", \"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n     \
   },GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", \
RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", \"a\", \" \
\", \"b\"}]}], \"=\", \"c\"}], \",\", \" \", RowBox[{\"c\", \"\[Element]\", \
\"\[DoubleStruckCapitalR]\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Conmutativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se multipliquen dos n\[UAcute]meros reales, el \
resultado es el mismo.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{\"Si\", \" \", \
\"a\", \" \", StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"b\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", \"a\", \" \", \
\"b\"}]}], \"=\", RowBox[{\"b\", \" \", \"a\"}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"neutro\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en la multiplicaci\[OAcute]n \
de n\[UAcute]meros reales el n\[UAcute]mero uno (1) es \
\!\(\*StyleBox[\"neutro\",FontSlant->\"Italic\"]\): uno multiplicado por \
cualquier n\[UAcute]mero da el mismo n\[UAcute]mero.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \
\", \"a\", \" \", \"1\"}]}], \"=\", RowBox[{RowBox[{\"1\", \"a\"}], \"=\", \
\"a\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Existencia\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\
\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"elemento\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"inverso\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\): para todo n\[UAcute]mero real \
existe un \!\(\*StyleBox[\"opuesto\",FontSlant->\"Italic\"]\) tal que la su \
multiplicaci\[OAcute]n es uno.\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{RowBox[{\"Si\", \" \", \"a\"}], \"\
\[Element]\", RowBox[{\"\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \
\", \"existe\", \" \", FractionBox[\"1\", \"a\"], \" \", \"tal\", \" \", \
\"que\", \" \", RowBox[{\"a\", \"(\", FractionBox[\"1\", \"a\"], \")\"}]}]}], \
\"=\", RowBox[{RowBox[{RowBox[{\"(\", FractionBox[\"1\", \"a\"], \")\"}], \"a\
\"}], \"=\", \"1\"}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Asociativa\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): \
no importa el orden como se agrupen los elementos, el resultado es el mismo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", RowBox[{\"(\", \
RowBox[{\"a\", \" \", \"b\"}], \")\"}], \" \", \"c\"}]}], \"=\", \
RowBox[{RowBox[{\"a\", \" \", RowBox[{\"(\", RowBox[{\"b\", \" \", \"c\"}], \
\")\"}]}], \"=\", RowBox[{RowBox[{\"(\", RowBox[{\"a\", \" \", \"c\"}], \
\")\"}], \" \", \"b\"}]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\n\
\!\(\*StyleBox[\"Distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\):\
 al combinar las operaciones adici\[OAcute]n y multiplicaci\[OAcute]n resulta \
una nueva propiedad llamada propiedad \
\!\(\*StyleBox[\"distributiva\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\
\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"de\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"multiplicaci\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"con\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"respecto\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"a\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"la\",\
FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\" \
\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\)\!\(\*StyleBox[\"adici\
\[OAcute]n\",FontWeight->\"Bold\",FontSlant->\"Italic\"]\): en una \
multiplicaci\[OAcute]n en la cual un factor es la suma (o resta) de dos o m\
\[AAcute]s t\[EAcute]rminos se puede distribuir las multiplicaciones\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{\"Si\", \" \
\", \"a\"}], \",\", RowBox[{\"b\", \" \", \
StyleBox[\"y\",FontSlant->\"Plain\"], \" \", \"c\"}]}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], \"\[Element]\", RowBox[{\"\
\[DoubleStruckCapitalR]\", \" \", \"entonces\", \" \", RowBox[{\"a\", \"(\", \
RowBox[{\"b\", \"+\", \"c\"}], \")\"}]}]}], \"=\", RowBox[{RowBox[{\"a\", \" \
\", \"b\"}], \"+\", RowBox[{\"a\", \" \", \"c\"}]}]}]}\n  \
},GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}, {
                    MouseAppearance[
                    Button[
                    TextCell["Sustracci\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"reales\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, 0.]]\)\!\(\*StyleBox[\"sustracci\[OAcute]n\",FontSlant->\
\"Italic\",FontColor->RGBColor[0.796078431372549, 0.07058823529411765, \
0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "Ya se mencion\[OAcute] con anticipaci\[OAcute]n que la \
sustracci\[OAcute]n es una adici\[OAcute]n de un n\[UAcute]mero con el \
opuesto de otro n\[UAcute]mero, sin embargo, es necesario recalcar que la \
sustracci\[OAcute]n no es conmutativa ni asociativa en ning\[UAcute]n \
conjunto num\[EAcute]rico. Observe los siguientes ejemplos:\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"5\", \
SqrtBox[\"2\"]}], \"-\", RowBox[{\"3\", SqrtBox[\"2\"]}]}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{RowBox[{\"3\", SqrtBox[\
\"2\"]}], \"-\", RowBox[{\"5\", SqrtBox[\"2\"]}]}]}]},{RowBox[{RowBox[{\"2\", \
SqrtBox[\"2\"]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \" \", \
RowBox[{RowBox[{\"-\", \"2\"}], SqrtBox[\"2\"]}]}]}\n     \
},GridBoxAlignment->{\"Columns\" -> {{\"Center\"}}}]}\n  },GridBoxItemSize->{\
\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la \
sustracci\[OAcute]n no es conmutable.\n\
\!\(\*FormBox[GridBox[{{GridBox[{{RowBox[{RowBox[{RowBox[{\"(\", \
RowBox[{RowBox[{\"2\", \"\[Pi]\"}], \"-\", \"3\"}], \")\"}], \"-\", \
RowBox[{\"(\", RowBox[{RowBox[{\"-\", \"3\"}], \"\[Pi]\"}], \")\"}]}], \"\
\[AlignmentMarker]\", \"\[NotEqual]\", \" \", RowBox[{RowBox[{\"2\", \
\"\[Pi]\"}], \"-\", RowBox[{\"(\", RowBox[{\"3\", \"-\", RowBox[{\"(\", \
RowBox[{RowBox[{\"-\", \"3\"}], \"\[Pi]\"}], \")\"}]}], \
\")\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"2\", \"\[Pi]\"}], \"-\", \"3\", \
\"+\", RowBox[{\"3\", \"\[Pi]\"}]}], \"\[AlignmentMarker]\", \"\[NotEqual]\", \
\" \", RowBox[{RowBox[{\"2\", \"\[Pi]\"}], \"-\", \"3\", \"-\", \
RowBox[{\"3\", \"\[Pi]\"}]}]}]},{RowBox[{RowBox[{RowBox[{\"5\", \"\[Pi]\"}], \
\"-\", \"3\"}], \"\[NotEqual]\", \" \", RowBox[{RowBox[{\"-\", \"\[Pi]\"}], \
\"-\", \"3\"}]}]}\n     },GridBoxAlignment->{\"Columns\" -> {{\"\
\[AlignmentMarker]\"}}}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)\ncomo puede observar, la sustracci\
\[OAcute]n no es asociativa.\nSi se desea aplicar estas propiedades se debe \
escribir como una suma, por ejemplo \!\(TraditionalForm\`5 \*SqrtBox[\(2\)] - \
\(\(3\) \*SqrtBox[\(2\)]\(\[AlignmentMarker]\)\)\) se puede escribir como \
\!\(TraditionalForm\`5 \*SqrtBox[\(2\)] + \((\(-3\) \*SqrtBox[\(2\)])\)\) y \
\!\(TraditionalForm\`5 \*SqrtBox[\(2\)] + \((\(-3\) \*SqrtBox[\(2\)])\)\
\[AlignmentMarker] = \(\(-3\) \*SqrtBox[\(2\)] + 5 \*SqrtBox[\(2\)] = \(\(2\) \
\*SqrtBox[\(2\)]\(\[AlignmentMarker]\)\)\)\)."]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"], 
                    MouseAppearance[
                    Button[
                    TextCell["Divisi\[OAcute]n", "Text"], 
                    CreateDialog[{
                    Pane[
                    Column[{
                    $CellContext`titlePopUp$$[
                    "\!\(\*StyleBox[\"Los\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"n\[UAcute]meros\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"reales\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"y\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"la\",FontSlant->\"Italic\",FontColor->RGBColor[0.\
796078431372549, 0.07058823529411765, 0.]]\)\!\(\*StyleBox[\" \
\",FontSlant->\"Italic\",FontColor->RGBColor[0.796078431372549, \
0.07058823529411765, \
0.]]\)\!\(\*StyleBox[\"divisi\[OAcute]n\",FontSlant->\"Italic\",FontColor->\
RGBColor[0.796078431372549, 0.07058823529411765, 0.]]\)"], 
                    $CellContext`textPopUp$$[
                    "En los n\[UAcute]meros reales (al igual que en los \
racionales), la divisi\[OAcute]n es una manera diferente de escribir una \
multiplicaci\[OAcute]n. En general, cuando se van a dividir dos \
n\[UAcute]meros reales se sigue la siguiente regla:\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{GridBox[{{RowBox[{RowBox[{FractionBox[\
\"a\", \"b\"], \"\[Divide]\", FractionBox[\"c\", \"d\"]}], \"=\"}]}\n       \
},GridBoxAlignment->{\"Columns\" -> {{\"=\"}}}], RowBox[{FractionBox[\"a\", \
\"b\"], \"\[CenterDot]\", FractionBox[\"d\", \"c\"]}]}], \"=\", \
FractionBox[RowBox[{\"a\", \" \", \"d\"}], RowBox[{\"b\", \" \", \"c\"}]]}]}\n\
  },GridBoxItemSize->{\"Columns\" -> {{Scaled[0.96]}}}],TraditionalForm]\)\n\
es decir, en lugar de dividir se multiplica por el rec\[IAcute]proco del \
divisor.\nEs as\[IAcute] como todas las divisiones se pueden expresar como \
multiplicaci\[OAcute]n de reales, por ejemplo\n\
\!\(\*FormBox[GridBox[{{RowBox[{RowBox[{\"7\", \"\[Divide]\", \
SqrtBox[\"3\"]}], \"=\", RowBox[{RowBox[{\"7\", \"\[CenterDot]\", \
FractionBox[\"1\", SqrtBox[\"3\"]]}], \"=\", FractionBox[\"7\", \
SqrtBox[\"3\"]]}]}]}\n  },GridBoxItemSize->{\"Columns\" -> \
{{Scaled[0.96]}}}],TraditionalForm]\)"]}], 
                    ImageSize -> {$CellContext`panelWidth$$, \
$CellContext`bodyWidth$$}, Scrollbars -> {False, True}]}, Background -> White,
                     Deployed -> True], ImageSize -> All], "LinkHand"]}}]}], 
                   "Multimedia"]],
                 Alignment->Right,
                 StripOnInput->False]}
              },
              AutoDelete->False,
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            ImageSize->{790, Automatic}]}, Dynamic[$CellContext`page1$$]],
          FrameMargins->1,
          FrameStyle->GrayLevel[0.7],
          ImageMargins->{{1, 1}, {0, 0}},
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Top}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"],
     ImageSize->{800, Automatic}],
    DynamicModuleValues:>{{DownValues[$CellContext`framePane$$] = {HoldPattern[
           $CellContext`framePane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            $CellContext`style1$$[$CellContext`s$], "Cuadro/Titulo", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPane$$] = {HoldPattern[
           $CellContext`textPane$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            Style[$CellContext`s$, $CellContext`tama1$$], "EmphasisText", 
            LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`style1$$] = {HoldPattern[
           $CellContext`style1$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style2$$] = {HoldPattern[
           $CellContext`style2$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`style3$$] = {HoldPattern[
           $CellContext`style3$$[
            Pattern[$CellContext`txt$, 
             Blank[]]]] :> 
         Style[$CellContext`txt$, {
           FontFamily -> $CellContext`font1$$, FontSize -> 15}]}}, {
      DownValues[$CellContext`titlePopUp$$] = {HoldPattern[
           $CellContext`titlePopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama2$$, 
             FontFamily -> $CellContext`font1$$, $CellContext`color3$$, 
             Italic], "Text", LineIndent -> 0, TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`textPopUp$$] = {HoldPattern[
           $CellContext`textPopUp$$[
            Pattern[$CellContext`s$, 
             Blank[String]]]] :> Pane[
           TextCell[
            
            Style[$CellContext`s$, $CellContext`tama1$$, 
             FontFamily -> $CellContext`font1$$], "Text", LineIndent -> 0, 
            TextJustification -> 0, 
            LinebreakAdjustments -> {0.9, 100, 0, 0, 0}]]}}, {
      DownValues[$CellContext`rati$$] = {HoldPattern[
           $CellContext`rati$$[
            Pattern[$CellContext`x, 
             Blank[]]]] :> Rationalize[$CellContext`x, 0.1]}}, {
      DownValues[$CellContext`int$$] = {HoldPattern[
           $CellContext`int$$[
            Pattern[$CellContext`x, 
             Blank[]], 
            Pattern[$CellContext`y, 
             Blank[]]]] :> IntegerPart[$CellContext`x/$CellContext`y]}}}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 TextAlignment->Center,ExpressionUUID->"6374eedb-34e8-499d-a970-4e2901b2e552"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejercicios de refuerzo", "Section",ExpressionUUID->"7b4b0aab-99d4-4472-8097-8738ff704f8d"],

Cell[CellGroupData[{

Cell["Ejercicios num\[EAcute]ricos", "Subsection",ExpressionUUID->"6a9c297d-24fc-4bf5-8677-c76ce138b503"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"2", "\[Pi]"}], "-", 
     RowBox[{"2", 
      SqrtBox["3"]}]}], "4"], "+", 
   FractionBox[
    RowBox[{
     SqrtBox["3"], "-", "\[Pi]"}], "2"]}], 
  TraditionalForm]],ExpressionUUID->"7f16577d-3549-4e33-b9d4-4f8f2ca7a75e"]], \
"ItemNumbered",ExpressionUUID->"26a825c9-8a94-41d6-9178-febb09a56b04"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["3", "4"], ")"}], 
    RowBox[{"-", "2"}]], "\[CenterDot]", 
   FractionBox[
    SqrtBox["2"], "2"]}], 
  TraditionalForm]],ExpressionUUID->"ba23bc9f-6f47-49c0-862c-825b4f97526a"]], \
"ItemNumbered",ExpressionUUID->"08d5ba9e-df56-41e1-b1df-46fcffa19651"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SqrtBox["5"], 
   RowBox[{"{", 
    RowBox[{"3", "-", 
     RowBox[{"4", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox["5"], "-", "1"}], ")"}], 
      FractionBox["1", "2"]}]}], "}"}]}], 
  TraditionalForm]],ExpressionUUID->"1501763a-684c-4c16-b4d2-9b8e9318a0f1"]], \
"ItemNumbered",ExpressionUUID->"dffbd5c1-a2d6-4222-9ce6-298a3354089c"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"4", "-", 
     SqrtBox["3"]}], 
    RowBox[{
     SqrtBox["2"], "-", 
     SqrtBox["3"]}]], "\[CenterDot]", 
   FractionBox[
    RowBox[{
     SqrtBox["2"], "+", 
     SqrtBox["3"]}], 
    RowBox[{
     SqrtBox["2"], "+", 
     SqrtBox["3"]}]]}], 
  TraditionalForm]],ExpressionUUID->"17bc55ce-381c-4364-a4a6-fa47afc37094"]], \
"ItemNumbered",ExpressionUUID->"9db6fe93-d817-44f0-a19a-8b8208ef3419"],

Cell[CellGroupData[{

Cell["Soluciones a los ejercicios", "Subsubsection",ExpressionUUID->"06fbc493-9304-4f8f-9bdc-cb690ca917d2"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"2", "\[Pi]"}], "-", 
     RowBox[{"2", 
      SqrtBox["3"]}]}], "4"], "+", 
   FractionBox[
    RowBox[{
     SqrtBox["3"], "-", "\[Pi]"}], "2"]}], 
  TraditionalForm]],ExpressionUUID->"6500a895-2e27-475c-97a8-e2730647491e"]], \
"ItemNumbered",ExpressionUUID->"ee4237aa-2df6-4eee-a13b-facb14813f23"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"2", "\[Pi]"}], "-", 
            RowBox[{"2", 
             SqrtBox["3"]}]}], "4"], "+", 
          FractionBox[
           RowBox[{
            SqrtBox["3"], "-", "\[Pi]"}], "2"]}], "=", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"2", "\[Pi]"}], "-", 
            RowBox[{"2", 
             SqrtBox["3"]}]}], "4"], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              SqrtBox["3"], "-", "\[Pi]"}], ")"}]}], "4"]}]}]},
       {
        RowBox[{"=", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"2", "\[Pi]"}], "-", 
            RowBox[{"2", 
             SqrtBox["3"]}]}], "4"], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"2", 
             SqrtBox["3"]}], "-", 
            RowBox[{"2", "\[Pi]"}]}], "4"]}]}]},
       {
        RowBox[{"=", 
         FractionBox[
          RowBox[{
           RowBox[{"2", "\[Pi]"}], "-", 
           RowBox[{"2", 
            SqrtBox["3"]}], "+", 
           RowBox[{"2", 
            SqrtBox["3"]}], "-", 
           RowBox[{"2", "\[Pi]"}]}], "4"]}]},
       {
        RowBox[{"=", 
         FractionBox["0", "4"]}]},
       {
        RowBox[{"=", "0"}]}
      },
      GridBoxAlignment->{"Columns" -> {{"="}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"9a27c5e3-19c4-4dfe-a27b-f3e5e3f1c681"]], \
"Text",ExpressionUUID->"c08007f1-b501-4661-94dc-638e2068ebb1"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["3", "4"], ")"}], 
    RowBox[{"-", "2"}]], "\[CenterDot]", 
   FractionBox[
    SqrtBox["2"], 
    SuperscriptBox["2", "3"]]}], 
  TraditionalForm]],ExpressionUUID->"0f318c53-cbf3-4401-8385-48baa1095e51"]], \
"ItemNumbered",ExpressionUUID->"b4a1a15a-9fc1-4848-9e4b-9c1ad2d8a3e9"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["3", "4"], ")"}], 
           RowBox[{"-", "2"}]], "\[CenterDot]", 
          FractionBox[
           SqrtBox["2"], 
           SuperscriptBox["2", "3"]]}], "\[AlignmentMarker]", "=", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["4", "3"], ")"}], "2"], "\[CenterDot]", 
          FractionBox[
           SqrtBox["2"], "8"]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           FractionBox["16", "9"], "\[CenterDot]", 
           FractionBox[
            SqrtBox["2"], "8"]}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          FractionBox[
           RowBox[{"2", 
            SqrtBox["2"]}], "9"]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"\[TildeTilde]", "0.314"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"1155ed9d-f264-430a-8d93-c365fe25b5d7"]], \
"Text",ExpressionUUID->"c8f1ffc6-db89-4001-be09-0dd4f3829700"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SqrtBox["5"], 
   RowBox[{"{", 
    RowBox[{"3", "-", 
     RowBox[{"4", 
      RowBox[{"(", 
       RowBox[{
        SqrtBox["5"], "-", "1"}], ")"}], 
      FractionBox["1", "2"]}]}], "}"}]}], 
  TraditionalForm]],ExpressionUUID->"367cff40-e751-4953-a47e-64016c3cfbf4"]], \
"ItemNumbered",ExpressionUUID->"344bfc83-3f09-46d4-b8cd-c4a74d88dcc1"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          SqrtBox["5"], 
          RowBox[{"{", 
           RowBox[{"3", "-", 
            RowBox[{"4", 
             RowBox[{"(", 
              RowBox[{
               SqrtBox["5"], "-", "1"}], ")"}], 
             FractionBox["1", "2"]}]}], "}"}]}], "\[AlignmentMarker]", "=", 
         RowBox[{
          SqrtBox["5"], 
          RowBox[{"{", 
           RowBox[{"3", "-", 
            RowBox[{
             RowBox[{"(", "4", ")"}], 
             RowBox[{"(", 
              FractionBox["1", "2"], ")"}], 
             RowBox[{"(", 
              RowBox[{
               SqrtBox["5"], "-", "1"}], ")"}]}]}], "}"}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           SqrtBox["5"], 
           RowBox[{"{", 
            RowBox[{"3", "-", 
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{
                SqrtBox["5"], "-", "1"}], ")"}]}]}], "}"}]}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           SqrtBox["5"], 
           RowBox[{"{", 
            RowBox[{"3", "-", 
             RowBox[{"2", 
              SqrtBox["5"]}], "+", "2"}], "}"}]}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           SqrtBox["5"], 
           RowBox[{"{", 
            RowBox[{"5", "-", 
             RowBox[{"2", 
              SqrtBox["5"]}]}], "}"}]}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           RowBox[{"5", 
            SqrtBox["5"]}], "-", 
           RowBox[{"2", 
            RowBox[{"(", "5", ")"}]}]}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{
           RowBox[{"5", 
            SqrtBox["5"]}], "-", "10"}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"\[TildeTilde]", "1.180"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"6e17daca-1fa9-450a-a634-04c99d02cf7e"]], \
"Text",ExpressionUUID->"5702728f-7789-4924-9c1e-dc63ea8d8e01"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"4", "-", 
     SqrtBox["3"]}], 
    RowBox[{
     SqrtBox["2"], "-", 
     SqrtBox["3"]}]], "\[CenterDot]", 
   FractionBox[
    RowBox[{
     SqrtBox["2"], "+", 
     SqrtBox["3"]}], 
    RowBox[{
     SqrtBox["2"], "+", 
     SqrtBox["3"]}]]}], 
  TraditionalForm]],ExpressionUUID->"c84685f6-af32-43f2-99f7-431ddda29119"]], \
"ItemNumbered",ExpressionUUID->"2ef71dab-948f-43c9-b278-3bf63d2dddb4"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"4", "-", 
            SqrtBox["3"]}], 
           RowBox[{
            SqrtBox["2"], "-", 
            SqrtBox["3"]}]], "\[CenterDot]", 
          FractionBox[
           RowBox[{
            SqrtBox["2"], "+", 
            SqrtBox["3"]}], 
           RowBox[{
            SqrtBox["2"], "+", 
            SqrtBox["3"]}]]}], "\[AlignmentMarker]", "=", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"4", "-", 
             SqrtBox["3"]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             SqrtBox["2"], "+", 
             SqrtBox["3"]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SqrtBox["2"], "-", 
             SqrtBox["3"]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             SqrtBox["2"], "+", 
             SqrtBox["3"]}], ")"}]}]]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          FractionBox[
           RowBox[{
            RowBox[{"4", 
             SqrtBox["2"]}], "+", 
            RowBox[{"4", 
             SqrtBox["3"]}], "-", 
            SqrtBox["6"], "-", "3"}], 
           RowBox[{"2", "+", 
            SqrtBox["6"], "-", 
            SqrtBox["6"], "-", "3"}]]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          FractionBox[
           RowBox[{
            RowBox[{"4", 
             SqrtBox["2"]}], "+", 
            RowBox[{"4", 
             SqrtBox["3"]}], "-", 
            SqrtBox["6"], "-", "3"}], 
           RowBox[{"-", "1"}]]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"=", 
          RowBox[{"3", "+", 
           SqrtBox["6"], "-", 
           RowBox[{"4", 
            SqrtBox["3"]}], "-", 
           RowBox[{"4", 
            SqrtBox["2"]}]}]}]}]},
       {
        RowBox[{"\[AlignmentMarker]", 
         RowBox[{"\[TildeTilde]", 
          RowBox[{"-", "7.136"}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{"\[AlignmentMarker]"}}}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"40c22d8c-d992-4d22-9c73-42f554a4a3de"]], \
"Text",ExpressionUUID->"fe5e9d2c-d714-4753-95be-a95607d692b8"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problemas de aplicaci\[OAcute]n", "Subsection",ExpressionUUID->"bb38bc0f-2e6d-4e0c-83b0-a3bac62869ec"],

Cell["\<\
Luis va a embaldosar el piso de su local. Al hacer un plano del piso, \
\[EAcute]l realiza el siguiente dibujo:\
\>", "ItemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10001.},ExpressionUUID->"027fd08f-4bda-4a09-82af-28f7d57cd606"],

Cell[BoxData[
 FormBox[
  TagBox[
   GraphicsBox[{
     {Dashing[{Small, Small}], 
      LineBox[{{0, 2}, {0, -0.5}, {1.5, -0.5}, {1.5, 0}}], 
      LineBox[{{0, -0.5}, {0, -1}, {7, -1}, {7, 0}}], 
      LineBox[{{4, 7}, {4, -0.5}, {7, -0.5}}], 
      LineBox[{{4, 7}, {7.5, 7}, {7.5, 5}, {7, 5}}], 
      LineBox[{{7.5, 7}, {8, 7}, {8, 0}, {7, 0}}], 
      LineBox[{{0, 2}, {0.5, 2.5}, {2, 0.5}, {1.5, 0}}]}, {
      StyleBox[InsetBox["\<\"1.5 m\"\>", {0.75, -0.5}, {0, 0}],
       StripOnInput->False,
       FontSize->14,
       Background->GrayLevel[1]], 
      StyleBox[InsetBox["\<\"7 m\"\>", {3.5, -1}, {0, 0}],
       StripOnInput->False,
       FontSize->14,
       Background->GrayLevel[1]], 
      StyleBox[InsetBox["\<\"3 m\"\>", {5.5, -0.5}, {0, 0}],
       StripOnInput->False,
       FontSize->14,
       Background->GrayLevel[1]], 
      StyleBox[InsetBox["\<\"2 m\"\>", {7.5, 6}, {0, 0}],
       StripOnInput->False,
       FontSize->14,
       Background->GrayLevel[1]], 
      StyleBox[InsetBox["\<\"7 m\"\>", {8, 3.5}, {0, 0}],
       StripOnInput->False,
       FontSize->14,
       Background->GrayLevel[1]], 
      StyleBox[InsetBox["\<\"2.5 m\"\>", {1.25, 1.5}, {0, 0}],
       StripOnInput->False,
       FontSize->14,
       Background->GrayLevel[1]]}, 
     {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[{GrayLevel[0], Thickness[
      Large]}], 
      PolygonBox[{{0, 2}, {1.5, 0}, {7, 0}, {7, 5}, {4, 7}, {0, 7}}]}},
    ImageSize->{500, 500}],
   Deploy,
   DefaultBaseStyle->"Deploy"], TraditionalForm]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 TextAlignment->Center,ExpressionUUID->"68e54efd-79ac-4aff-9ee5-9265730e1a96"],

Cell[TextData[{
 "\[DownQuestion]Cu\[AAcute]ntos metros cuadrados de baldosa debe comprar? (",
 StyleBox["redondee a la siguiente undidad",
  FontSlant->"Italic"],
 ")"
}], "SubitemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10001.},ExpressionUUID->"94268551-a224-4387-b3fe-a8f8eaf47cea"],

Cell[TextData[{
 "Si cada baldosa tiene una medida de ",
 Cell[BoxData[
  FormBox[
   RowBox[{"60", " ", "cm", "\[Times]", "60", " ", "cm"}], TraditionalForm]],
  ExpressionUUID->"fdcfaf1c-bced-45dc-b99c-4cca03690739"],
 " y tiene un costo de $98,000 por metro cuadrado, \
\[DownQuestion]cu\[AAcute]ntas baldosa se necesitan? "
}], "SubitemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10001.},ExpressionUUID->"97b79377-0350-4af5-a0b6-3eaf36951e5d"],

Cell["\[DownQuestion]Cu\[AAcute]l es el costo de las baldosas compradas?", \
"SubitemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10001.},ExpressionUUID->"77bb0d9d-a058-4216-a593-6ab07abfff56"],

Cell["\<\
A Juana le dejaron la siguiente tarea en su clase de matem\[AAcute]ticas: \
dibujar un cuadrado de lado un cent\[IAcute]metro y con base en este, dibujar \
otro cuadrado que tenga tres veces su \[AAcute]rea. \
\[DownQuestion]Qu\[EAcute] relaci\[OAcute]n existe entre el lado del segundo \
cuadrado respecto al primer cuadrado?\[LineSeparator]\
\>", "ItemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10002.},ExpressionUUID->"2edbe0e5-aa6c-4358-ace4-91ef8427cd60"],

Cell["\<\
Simplifique lo m\[AAcute]s posible la siguiente expresi\[OAcute]n algebraica:\
\>", "ItemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10002.},ExpressionUUID->"d994f17b-31a3-4d8d-b990-50b4e5515de3"],

Cell[TextData[{
 "\t",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{
       FractionBox[GridBox[{
          {
           RadicalBox[
            RowBox[{"-", "27"}], "3"]}
         },
         GridBoxAlignment->{"Columns" -> {{"="}}}], 
        SqrtBox[
         StyleBox[
          FractionBox["81", "16"],
          FontSize->18]]], "+", 
       FractionBox["1", 
        StyleBox[
         RowBox[{
          FractionBox["3", "4"], "-", 
          FractionBox["1", "2"]}],
         FontSize->16]], "+", 
       FractionBox[
        SqrtBox["2"], 
        SqrtBox["8"]]}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "3dd78099-389a-4afa-99e4-2a5cf4ed121c"]
}], "Text",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10002.},ExpressionUUID->"9a82bc16-0542-4158-a8c1-e0a9a2fc4c79"],

Cell[CellGroupData[{

Cell["Soluciones a los ejercicios", "Subsubsection",ExpressionUUID->"1fa03cc1-1a64-4bd8-b3d7-20d07255783a"],

Cell["Luis va a embaldosar el piso de su local.", "ItemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10001.},ExpressionUUID->"c6639c02-fbf9-45f5-85b8-4fee7b780e4a"],

Cell[TextData[{
 "\[DownQuestion]Cu\[AAcute]ntos metros cuadrados de baldosa debe comprar?\
\[LineSeparator]Esta pregunta se puede solucionar encontrando el \[AAcute]rea \
del pol\[IAcute]gono dibujado, para esto se halla el \[AAcute]rea un  \
cuadrado de 7 metros y se quita el \[AAcute]rea de las esquinas:\
\[LineSeparator]\[CapitalAAcute]rea del cuadrado: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"7", "\[Times]", "7"}], "=", 
    RowBox[{"49", 
     SuperscriptBox["m", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "493b3b31-6fae-4811-92de-00231ac18b0a"],
 ".\[LineSeparator]El \[AAcute]rea a remover de la esquina superior derecha \
es la de un tri\[AAcute]ngulo cuya base mide ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "m"}], TraditionalForm]],ExpressionUUID->
  "434cbaa0-f9f8-4b46-b512-bddf7669df5a"],
 " y altura ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "m"}], TraditionalForm]],ExpressionUUID->
  "5ddac869-0b65-4c64-9bc6-612d8b2deac3"],
 ", por tanto, el \[AAcute]rea es: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"2", "\[Times]", "3"}], "2"], "=", 
    RowBox[{"3", "m"}]}], TraditionalForm]],ExpressionUUID->
  "e6574afd-771f-46ee-aa85-1f4053802bcd"],
 ".\[LineSeparator]El \[AAcute]rea a remover de la esquina inferior izquierda \
es la de un tri\[AAcute]ngulo cuya base mide ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1.5", "m"}], TraditionalForm]],ExpressionUUID->
  "8a85940c-d71a-4ec1-b5f2-165209832b5b"],
 ". Se debe encontrar la altura, ya que se conoce la medida de la base e \
hipotenusa del tri\[AAcute]ngulo se puede hallar la medida de la altura:\
\[LineSeparator]",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{"x", "=", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["2.5", "2"], "-", 
            SuperscriptBox["1.5", "2"]}]]}]},
        {
         RowBox[{"=", 
          SqrtBox[
           RowBox[{"6.25", "-", "2.25"}]]}]},
        {
         RowBox[{"=", 
          SqrtBox["4"]}]},
        {
         RowBox[{"=", "2"}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "722886e9-aa9d-4467-89cd-da34b0015139"],
 "\[LineSeparator]Por tanto, el \[AAcute]rea es: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"1.5", " ", "\[Times]", "2"}], "2"], "=", 
    RowBox[{"1.5", 
     SuperscriptBox["m", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "3f40397f-afb4-41f0-9315-5fbb1a3ddc4f"],
 ".\[LineSeparator]As\[IAcute], el \[AAcute]rea del pol\[IAcute]gono es ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"49", 
      SuperscriptBox["m", "2"]}], "-", 
     RowBox[{"3", 
      SuperscriptBox["m", "2"]}], "-", 
     RowBox[{"1.5", 
      SuperscriptBox["m", "2"]}]}], "=", 
    RowBox[{"44.5", 
     SuperscriptBox["m", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "168092ad-a609-4cfb-acf8-7b5e675611ce"],
 ". \[LineSeparator]Redondeando, Luis debe comprar ",
 Cell[BoxData[
  FormBox[
   RowBox[{"45", 
    SuperscriptBox["m", "2"]}], TraditionalForm]],ExpressionUUID->
  "5fc73d0a-3e84-4631-8dd2-661c70aa5def"],
 " de baldosa."
}], "SubitemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10001.},ExpressionUUID->"91ebe1e9-7bdb-4f80-adb7-1770f3a86b40"],

Cell[TextData[{
 "Si cada baldosa tiene una medida de ",
 Cell[BoxData[
  FormBox[
   RowBox[{"60", " ", "cm", "\[Times]", "60", " ", "cm"}], TraditionalForm]],
  ExpressionUUID->"4ba1b728-ad74-4944-b8b2-46bc5ce3cbaf"],
 " y tiene un costo de $ 98,000 por metro cuadrado, \
\[DownQuestion]cu\[AAcute]ntas baldosa se necesitan? \[LineSeparator]El \
\[AAcute]rea que cubre cada baldosa (en metros cuadrados) es ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"0.6", "\[Times]", "0.6"}], "=", 
    RowBox[{"0.36", 
     SuperscriptBox["m", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "52b320f1-4288-4f21-97d5-014f6e6c0b47"],
 ", el n\[UAcute]mero de baldosas necesarias resulta de dividir el \
\[AAcute]rea en donde se van a poner las baldosas entre el \[AAcute]rea de \
cada baldosa:\[LineSeparator]",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{GridBox[{
         {
          FractionBox["45", "0.36"]}
        },
        GridBoxAlignment->{"Columns" -> {{"="}}}], "\[TildeTilde]", "125"}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "98e7849d-e971-47c6-bd6e-92778c1adb13"],
 "\[LineSeparator]es decir, son necesarias 125 baldosas."
}], "SubitemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10001.},ExpressionUUID->"e3ec102d-a157-40a5-ba9e-807f39b6daed"],

Cell[TextData[{
 "\[DownQuestion]Cu\[AAcute]l es el costo de las baldosas compradas?\
\[LineSeparator]Si se necesitan ",
 Cell[BoxData[
  FormBox[
   RowBox[{"45", " ", 
    SuperscriptBox["m", "2"]}], TraditionalForm]],ExpressionUUID->
  "ffbfb14b-6bba-43fb-847d-416a3c4997d9"],
 " , y cada una metro cuadrado $ 98,000, entonces se debe multiplicar los \
metros cuadrados por su valor: \[LineSeparator]",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{
       RowBox[{"45", "\[Times]", "98000"}], "=", "4410000"}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "7ad6ce74-e003-4788-a943-d2e2e735b6d7"],
 "\[LineSeparator]El costo es de $ 4,410,000 para embaldosar el local."
}], "SubitemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10001.},ExpressionUUID->"e06bdfc2-bd18-4574-b7df-ee060faabbf7"],

Cell["\<\
A Juana le dejaron la siguiente tarea en su clase de matem\[AAcute]ticas: \
dibujar un cuadrado de lado un cent\[IAcute]metro y con base en este, dibujar \
otro cuadrado que tenga tres veces su \[AAcute]rea. \
\[DownQuestion]Qu\[EAcute] relaci\[OAcute]n existe entre el lado del segundo \
cuadrado respecto al primer cuadrado?\
\>", "ItemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10002.},ExpressionUUID->"8befdee3-4234-443e-8641-bfb75ca7bad1"],

Cell[TextData[{
 "Al construirlo y hallar sus \[AAcute]reas se tiene que el \[AAcute]rea del \
cuadrado de lado 1 es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", 
    SuperscriptBox["cm", "2"]}], TraditionalForm]],ExpressionUUID->
  "ee94c24b-9d37-421d-8acd-041678bd1b96"],
 ".  Como el segundo cuadrado debe tener tres veces el \[AAcute]rea del \
primero, el \[AAcute]rea del segundo cuadrado es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", 
    SuperscriptBox["cm", "2"]}], TraditionalForm]],ExpressionUUID->
  "2eab171a-0e2b-424c-aabd-3e99d2575f63"],
 ". Si se llama ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "6871020b-a440-4fba-afb9-4888ed1126bc"],
 " a la longitud del lado del segundo cuadrado, se tiene que:\[LineSeparator]",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{"A", "=", 
          RowBox[{
           SuperscriptBox["x", "2"], "=", 
           RowBox[{"3", 
            SuperscriptBox["cm", "2"]}]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "17698e14-8e9d-468b-8646-5a2a909b95b3"],
 "\[LineSeparator]Por lo que ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     SqrtBox["3"], "cm"}]}], TraditionalForm]],ExpressionUUID->
  "36397eaf-63a9-4547-a0da-f249a085f694"],
 ".\[LineSeparator]La medida del lado del segundo cuadrado es ",
 Cell[BoxData[
  FormBox[
   SqrtBox["3"], TraditionalForm]],ExpressionUUID->
  "3691dee1-4f2f-4e5c-94e5-b9be2ab821b8"],
 " veces la medida del lado del primero."
}], "ItemParagraph",ExpressionUUID->"6c10be1c-a847-4685-8ff2-61238d875b95"],

Cell[TextData[{
 "Simplifique lo m\[AAcute]s posible la siguiente expresi\[OAcute]n \
algebraica: \[LineSeparator]",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox[GridBox[{
              {
               RadicalBox[
                RowBox[{"-", "27"}], "3"]}
             },
             GridBoxAlignment->{"Columns" -> {{"="}}}], 
            SqrtBox[
             StyleBox[
              FractionBox["81", "16"],
              FontSize->18]]], "+", 
           FractionBox["1", 
            StyleBox[
             RowBox[{
              FractionBox["3", "4"], "-", 
              FractionBox["1", "2"]}],
             FontSize->16]], "+", 
           FractionBox[
            SqrtBox["2"], 
            SqrtBox["8"]]}], "=", 
          RowBox[{
           FractionBox[GridBox[{
              {
               RowBox[{"-", "3"}]}
             },
             GridBoxAlignment->{"Columns" -> {{"="}}}], 
            FractionBox["9", "4"]], "+", 
           FractionBox["1", 
            StyleBox[
             RowBox[{
              FractionBox["3", "4"], "-", 
              FractionBox["2", "4"]}],
             FontSize->16]], "+", 
           FractionBox[
            SqrtBox["2"], 
            SqrtBox[
             RowBox[{"2", 
              RowBox[{"(", "4", ")"}]}]]]}]}]},
        {
         RowBox[{"=", 
          RowBox[{
           FractionBox[GridBox[{
              {
               RowBox[{"-", "12"}]}
             },
             GridBoxAlignment->{"Columns" -> {{"="}}}], "9"], "+", 
           FractionBox["1", 
            FractionBox[
             StyleBox["1",
              FontSize->16], "4"]], "+", 
           FractionBox[
            SqrtBox["2"], 
            RowBox[{"2", 
             SqrtBox["2"]}]]}]}]},
        {
         RowBox[{"=", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[GridBox[{
               {"4"}
              },
              GridBoxAlignment->{"Columns" -> {{"="}}}], "3"]}], "+", "4", 
           "+", 
           FractionBox["1", "2"]}]}]},
        {
         RowBox[{"=", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["8", "6"]}], "+", 
           FractionBox["24", "6"], "+", 
           FractionBox["3", "6"]}]}]},
        {
         RowBox[{"=", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "8"}], "+", "24", "+", "3"}], "6"]}]},
        {
         RowBox[{"=", 
          FractionBox["19", "6"]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]],ExpressionUUID->
  "1de1f86f-8421-46bc-844f-08085d6dbf38"]
}], "ItemNumbered",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10002.},ExpressionUUID->"91eed54a-12b6-481e-b52c-4ff83fd0bf7a"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{1228, 709},
Visible->True,
ScrollingOptions->{"VerticalScrollRange"->Fit},
ShowCellBracket->Automatic,
ShowGroupOpener->True,
Deployed->True,
CellContext->Notebook,
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Notebook Options Settings", "Section", 
       CellChangeTimes -> {3.6972161744559107`*^9}], 
      Cell[
      "The options defined for the style below will be used at the Notebook \
level.", "Text"], 
      Cell[
       StyleData["Notebook"], PageHeaders -> {{
          Cell[
           TextData[{
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"], "   ", 
             Cell[
             " ", "Header", CellFrame -> {{0.5, 0}, {0, 0}}, CellFrameMargins -> 
              4], 
             Cell[
              TextData[{
                ValueBox["FileName"]}], "Header"]}], 
           CellMargins -> {{0, Inherited}, {Inherited, Inherited}}], None, 
          None}, {None, None, 
          Cell[
           TextData[{
             Cell[
              TextData[{
                ValueBox["FileName"]}], "Header"], 
             Cell[
             " ", "Header", CellFrame -> {{0, 0.5}, {0, 0}}, CellFrameMargins -> 
              4], "   ", 
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"]}], 
           CellMargins -> {{Inherited, 0}, {Inherited, Inherited}}]}}, 
       PageHeaderLines -> {False, False}, PageFooterLines -> {False, False}, 
       PrintingOptions -> {
        "FacingPages" -> True, "FirstPageFace" -> Right, "FirstPageFooter" -> 
         True, "FirstPageHeader" -> False}, DefaultNewCellStyle -> "Text"]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell["Style Environment Names", "Section"], 
      Cell[
       StyleData[All, "Working"], CellInsertionPointCell -> 
       FEPrivate`FrontEndResource["FEExpressions", "CellInsertionMenu"], 
       GhostCellInEmptyNotebook -> False], 
      Cell[
       StyleData[
       All, "SlideShow", StyleDefinitions -> StyleData[All, "Presentation"]], 
       PageWidth -> WindowWidth, DockedCells -> 
       FEPrivate`FrontEndResource["FEExpressions", "SlideshowToolbar"], 
       ScrollingOptions -> {
        "PagewiseDisplay" -> True, "VerticalScrollRange" -> Fit}, 
       ShowGroupOpener -> False, 
       PrivateCellOptions -> {"EvaluationUnmatchedStyle" -> {}}, 
       MenuSortingValue -> 1300], 
      Cell[
       StyleData[All, "Printout"], Magnification -> 0.72], 
      Cell[
       StyleData[
       All, "PrintoutGray", StyleDefinitions -> StyleData[All, "Printout"]], 
       MenuSortingValue -> 1500]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection", CellFrameMargins -> {{120, 50}, {8, 8}}], 
         Cell[
          StyleData["Book"], PageWidth -> 300, CellFrame -> {{6, 0}, {0, 0}}, 
          ShowCellBracket -> True, ShowGroupOpener -> False, 
          CellMargins -> {{12, 0}, {14, 0}}, 
          CellBracketOptions -> {"Widths" -> {0, 7}}, 
          CellElementSpacings -> {"CellMinHeight" -> 12}, CellGroupingRules -> 
          "TitleGrouping", ConversionRules :> {"TeX" -> {"", Automatic, ""}}, 
          PageBreakAbove -> True, PageBreakBelow -> False, 
          CellFrameMargins -> {{4, 4}, {30, 30}}, 
          CounterAssignments -> {{"Section", 0}, {"Subsection", 0}, {
            "Subsubsection", 0}, {"EquationNumbered", 0}, {
            "FigureCaption", 0}, {"PictureCaption", 0}, {
            "ProgramCaption", 0}, {"TableTitle", 0}, {"Figure", 0}, {
            "Picture", 0}, {"Program", 0}, {"Table", 0}}, MenuSortingValue -> 
          1, StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 
          60, FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
          RGBColor[0.643137, 0.0627451, 0]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellMargins -> {{25, 0}, {30, 5}}, 
             CellBracketOptions -> {"Margins" -> {0, 2}, "Widths" -> {0, 7}}, 
             StyleKeyMapping -> {"Tab" -> "Subtitle"}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{120, 50}, {8, 8}}, 
             LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
             CounterIncrements -> "Title", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 2, 
             MenuCommandKey -> "1", FontFamily -> "Georgia", FontSize -> 28, 
             FontColor -> 
             RGBColor[0.796078431372549, 0.07058823529411765, 0.]], 
            Cell[
             StyleData["Title", "Presentation"], 
             CellMargins -> {{10, Inherited}, {30, 0}}, 
             LineSpacing -> {1, 18}, FontSize -> 40], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{
               0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               30, 0.12 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 40], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{10, Inherited}, {10, 30}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{27, Inherited}, {0, 0}}, 
             StyleKeyMapping -> {
              "Tab" -> "Subsubtitle", "Backspace" -> "Title", 
               KeyEvent["Tab", Modifiers -> {Shift}] -> "Title"}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, CellFrameMargins -> {{120, 50}, {8, 8}}, TextAlignment -> 
             Right, LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
               "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
               "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, 
             MenuSortingValue -> 5, StyleMenuListing -> None, FontFamily -> 
             "Georgia", FontSize -> 18, FontSlant -> "Italic", FontColor -> 
             GrayLevel[0.3]], 
            Cell[
             StyleData["Subtitle", "Presentation"], 
             CellMargins -> {{20, Inherited}, {30, 3}}, 
             LineSpacing -> {1, 16}, FontSize -> 32], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{
               0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {30, 12}}, 
             LineSpacing -> {1, 2}, FontSize -> 32], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{10, Inherited}, {10, 2}}, TextJustification -> 
             1]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], 
             CellMargins -> {{27, Inherited}, {0, 0}}, 
             StyleKeyMapping -> {
              "Backspace" -> "Subtitle", 
               KeyEvent["Tab", Modifiers -> {Shift}] -> "Subtitle"}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, CellFrameMargins -> {{120, 50}, {8, 8}}, TextAlignment -> 
             Right, LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
             "Subsubtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 10, 
             StyleMenuListing -> None, FontFamily -> "Georgia", FontSize -> 
             16, FontSlant -> "Italic", FontColor -> GrayLevel[0.3]], 
            Cell[
             StyleData["Subsubtitle", "Presentation"], 
             CellMargins -> {{25, Inherited}, {30, 3}}, 
             LineSpacing -> {1, 14}, FontSize -> 30], 
            Cell[
             StyleData["Subsubtitle", "SlideShow"], 
             CellMargins -> {{
               0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {12, 12}}, 
             LineSpacing -> {1, 2}, FontSize -> 30], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{10, Inherited}, {10, 2}}]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Chapter", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Chapter"], CellFrame -> {{0, 0}, {3, 3}}, 
             CellMargins -> {{28, Inherited}, {20, 10}}, 
             StyleKeyMapping -> {
              "Tab" -> "Subsubtitle", "Backspace" -> "Title", 
               KeyEvent["Tab", Modifiers -> {Shift}] -> "Title"}, 
             CellGroupingRules -> {"SectionGrouping", 10}, PageBreakBelow -> 
             False, CellFrameColor -> GrayLevel[0.3], 
             CellFrameLabels -> {{None, None}, {None, None}}, 
             CellFrameLabelMargins -> 0, LanguageCategory -> 
             "NaturalLanguage", LineIndent -> 1., CounterIncrements -> 
             "Chapter", 
             CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
               "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 20, 
             MenuCommandKey -> "2", FontFamily -> "Georgia", FontSize -> 24, 
             FontColor -> 
             RGBColor[0.796078431372549, 0.07058823529411765, 0.], 
             GridBoxOptions -> {BaselinePosition -> Top}], 
            Cell[
             StyleData["Chapter", "Presentation"], 
             CellMargins -> {{35, Inherited}, {10, 15}}, 
             LineSpacing -> {1, 16}, FontSize -> 34], 
            Cell[
             StyleData["Chapter", "SlideShow"], 
             CellMargins -> {{35, Inherited}, {10, 15}}, 
             LineSpacing -> {1, 2}, FontSize -> 34], 
            Cell[
             StyleData["Chapter", "Printout"], 
             CellMargins -> {{15, Inherited}, {10, 15}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subchapter"], CellFrame -> {{0, 0}, {0, 2}}, 
             CellDingbat -> None, CellMargins -> {{30, Inherited}, {20, 10}}, 
             StyleKeyMapping -> {
              "Backspace" -> "Subtitle", 
               KeyEvent["Tab", Modifiers -> {Shift}] -> "Subtitle"}, 
             CellGroupingRules -> {"SectionGrouping", 20}, PageBreakBelow -> 
             False, TextAlignment -> Left, LanguageCategory -> 
             "NaturalLanguage", CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 30, 
             MenuCommandKey -> None, FontFamily -> "Georgia", FontSize -> 22, 
             FontSlant -> "Italic", FontColor -> 
             RGBColor[0.796078431372549, 0.07058823529411765, 0.]], 
            Cell[
             StyleData["Subchapter", "Presentation"], 
             CellMargins -> {{40, Inherited}, {8, 20}}, 
             LineSpacing -> {1, 14}, FontSize -> 30], 
            Cell[
             StyleData["Subchapter", "SlideShow"], 
             CellMargins -> {{40, Inherited}, {10, 15}}, 
             LineSpacing -> {1, 2}, FontSize -> 30], 
            Cell[
             StyleData["Subchapter", "Printout"], 
             CellMargins -> {{10, Inherited}, {0, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subchapter_ii"], CellFrame -> {{1, 0}, {0, 1}}, 
             CellDingbat -> None, CellMargins -> {{33, Inherited}, {20, 10}}, 
             StyleKeyMapping -> {
              "Backspace" -> "Subtitle", 
               KeyEvent["Tab", Modifiers -> {Shift}] -> "Subtitle"}, 
             CellGroupingRules -> {"SectionGrouping", 25}, PageBreakBelow -> 
             False, TextAlignment -> Left, LanguageCategory -> 
             "NaturalLanguage", CounterIncrements -> "Subchapter", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 35, 
             MenuCommandKey -> None, FontFamily -> "Georgia", FontSize -> 22, 
             FontSlant -> "Italic", FontColor -> 
             RGBColor[0.796078431372549, 0.07058823529411765, 0.]], 
            Cell[
             StyleData["Subchapter_ii", "Presentation"], 
             CellMargins -> {{40, Inherited}, {8, 20}}, 
             LineSpacing -> {1, 14}, FontSize -> 30], 
            Cell[
             StyleData["Subchapter_ii", "SlideShow"], 
             CellMargins -> {{40, Inherited}, {10, 15}}, 
             LineSpacing -> {1, 2}, FontSize -> 30], 
            Cell[
             StyleData["Subchapter_ii", "Printout"], 
             CellMargins -> {{10, Inherited}, {0, 10}}]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          StyleData["Section_ii"], CellFrame -> {{3, 3}, {3, 3}}, 
          CellMargins -> {{42, 42}, {5, 5}}, 
          StyleKeyMapping -> {"Tab" -> "Subsection"}, 
          CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
          False, CellLabelMargins -> {{40, Inherited}, {
            Inherited, Inherited}}, CellFrameMargins -> 6, CellFrameColor -> 
          RGBColor[0, 0.270588, 0.486275], TextAlignment -> Center, 
          TextJustification -> 0., LanguageCategory -> "NaturalLanguage", 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
            "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 40, MenuCommandKey -> 
          None, FontFamily -> "Georgia", FontSize -> 16, FontWeight -> 
          "Medium", FontSlant -> "Italic", FontColor -> 
          RGBColor[0, 0.270588, 0.486275], Background -> GrayLevel[1]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{35, Inherited}, {15, 25}}, 
             StyleKeyMapping -> {"Tab" -> "Subsection"}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> 4, CellFrameColor -> GrayLevel[0.7], 
             LineSpacing -> {1, 2}, LanguageCategory -> "NaturalLanguage", 
             CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {
               "ItemNumbered", 0}, {"SubitemNumbered", 0}, {
               "SubsubitemNumbered", 0}}, MenuSortingValue -> 40, 
             MenuCommandKey -> "3", FontFamily -> "Georgia", FontSize -> 20, 
             FontColor -> 
             RGBColor[0.796078431372549, 0.07058823529411765, 0.]], 
            Cell[
             StyleData["Section", "Presentation"], 
             CellFrame -> {{0, 0}, {0, 2}}, 
             CellMargins -> {{45, Inherited}, {12, 24}}, CellFrameMargins -> 
             8, LineSpacing -> {1, 10}, FontFamily -> "Times New Roman", 
             FontSize -> 28], 
            Cell[
             StyleData["Section", "SlideShow"], 
             CellMargins -> {{45, Inherited}, {12, 24}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Times New Roman", FontSize -> 
             28], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{10, Inherited}, {0, 10}}], 
            Cell[
             StyleData["Section", "Presentation"], 
             CellFrame -> {{0, 0}, {0, 2}}, 
             CellMargins -> {{45, Inherited}, {12, 24}}, CellFrameMargins -> 
             8, LineSpacing -> {1, 10}, FontFamily -> "Times New Roman", 
             FontSize -> 28], 
            Cell[
             StyleData["Section", "SlideShow"], 
             CellMargins -> {{45, Inherited}, {12, 24}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Times New Roman", FontSize -> 
             28], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{10, Inherited}, {0, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "\[RightGuillemet]", 
             CellMargins -> {{42, Inherited}, {10, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, MenuSortingValue -> 
             50, MenuCommandKey -> "4", FontFamily -> "Georgia", FontSize -> 
             18, FontWeight -> Plain, FontColor -> GrayLevel[0.25]], 
            Cell[
             StyleData["Subsection", "Presentation"], 
             CellMargins -> {{50, Inherited}, {5, 5}}, FontSize -> 26], 
            Cell[
             StyleData["Subsection", "SlideShow"], 
             CellMargins -> {{50, Inherited}, {5, 5}}, FontSize -> 26], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{10, Inherited}, {0, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[RightGuillemet]", 
             CellMargins -> {{42, Inherited}, {10, 0}}, MenuSortingValue -> 
             60, MenuCommandKey -> "5", FontFamily -> "Georgia", FontSize -> 
             17, FontWeight -> "Plain", FontSlant -> "Italic", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             GrayLevel[0.3]], 
            Cell[
             StyleData["Subsubsection", "Presentation"], 
             CellMargins -> {{55, Inherited}, {3, 15}}, LineSpacing -> {1, 6},
              FontSize -> 24], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], 
             CellMargins -> {{55, Inherited}, {3, 15}}, LineSpacing -> {1, 2},
              FontSize -> 24], 
            Cell[
             StyleData["Subsubsection", "Condensed"], 
             CellMargins -> {{18, Inherited}, {6, 12}}, FontSize -> 11], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{49, Inherited}, {6, 16}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsection"], 
             CellMargins -> {{42, Inherited}, {10, 0}}, 
             StyleKeyMapping -> {
              "Tab" -> "Subsubsubsubsection", "Backspace" -> "Subsubsection", 
               KeyEvent["Tab", Modifiers -> {Shift}] -> "Subsubsection"}, 
             CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
             False, TextAlignment -> Right, LanguageCategory -> 
             "NaturalLanguage", CounterIncrements -> "Subsubsubsection", 
             CounterAssignments -> {{"Subsubsubsubsection", 0}, {"Item", 0}, {
               "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
               "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, 
             MenuSortingValue -> 70, StyleMenuListing -> None, FontFamily -> 
             "Georgia", FontSize -> 16, FontWeight -> "Plain", FontSlant -> 
             "Italic", 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}, FontColor -> 
             RGBColor[0.796078431372549, 0.07058823529411765, 0.]], 
            Cell[
             StyleData["Subsubsubsection", "Presentation"], 
             CellMargins -> {{55, Inherited}, {5, 5}}, LineSpacing -> {1, 7}, 
             FontSize -> 20], 
            Cell[
             StyleData["Subsubsubsection", "SlideShow"], 
             CellMargins -> {{55, Inherited}, {5, 5}}, LineSpacing -> {1, 2}, 
             FontFamily -> "Times", FontSize -> 20], 
            Cell[
             StyleData["Subsubsubsection", "Printout"], 
             CellMargins -> {{10, Inherited}, {0, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsubsection"], 
             CellMargins -> {{42, Inherited}, {10, 0}}, 
             StyleKeyMapping -> {
              "Backspace" -> "Subsubsubsection", 
               KeyEvent["Tab", Modifiers -> {Shift}] -> "Subsubsubsection"}, 
             CellGroupingRules -> {"SectionGrouping", 70}, PageBreakBelow -> 
             False, TextAlignment -> Right, LanguageCategory -> 
             "NaturalLanguage", CounterIncrements -> "Subsubsubsubsection", 
             CounterAssignments -> {{"Item", 0}, {"Subitem", 0}, {
               "Subsubitem", 0}, {"ItemNumbered", 0}, {
               "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, 
             MenuSortingValue -> 80, StyleMenuListing -> None, FontFamily -> 
             "Arial", FontSize -> 16, FontSlant -> "Italic", FontColor -> 
             RGBColor[0.5875944151979858, 0.053406576638437474`, 0.]], 
            Cell[
             StyleData["Subsubsubsubsection", "Presentation"], 
             CellMargins -> {{60, Inherited}, {3, 15}}, LineSpacing -> {1, 7},
              FontSize -> 20], 
            Cell[
             StyleData["Subsubsubsubsection", "SlideShow"], 
             CellMargins -> {{60, Inherited}, {3, 15}}, LineSpacing -> {1, 2},
              FontSize -> 20], 
            Cell[
             StyleData["Subsubsubsubsection", "Printout"], 
             CellMargins -> {{10, Inherited}, {0, 10}}]}, Closed]]}, 
        Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{35, 0}, {10, 10}}, 
             LineSpacing -> {1, 3}, CounterIncrements -> "Text", 
             MenuSortingValue -> 100, MenuCommandKey -> "7", FontFamily -> 
             "Georgia", FontSize -> 16, 
             FontVariations -> {
              "StrikeThrough" -> False, "Underline" -> False}], 
            Cell[
             StyleData["Text", "Presentation"], 
             CellMargins -> {{80, 10}, {10, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 20], 
            Cell[
             StyleData["Text", "SlideShow"], 
             CellMargins -> {{80, 10}, {10, 10}}, FontSize -> 20], 
            Cell[
             StyleData["Text", "Condensed"], 
             CellMargins -> {{18, 10}, {6, 6}}, LineSpacing -> {1, 1}, 
             FontSize -> 12], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
             Hyphenation -> True]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], CellMargins -> {{35, 0}, {10, 10}}, 
             LineSpacing -> {1, 3}, LanguageCategory -> "NaturalLanguage", 
             CounterIncrements -> "SmallText", MenuSortingValue -> 1750, 
             StyleMenuListing -> None, FontFamily -> "Georgia", FontSize -> 
             16, FontColor -> GrayLevel[0.2]], 
            Cell[
             StyleData["SmallText", "Presentation"], 
             CellMargins -> {{80, 10}, {9, 9}}, LineSpacing -> {1, 5}, 
             FontSize -> 20], 
            Cell[
             StyleData["SmallText", "SlideShow"], 
             CellMargins -> {{80, 10}, {9, 9}}, FontSize -> 20], 
            Cell[
             StyleData["SmallText", "Condensed"], 
             CellMargins -> {{18, 10}, {5, 5}}, LineSpacing -> {1, 2}, 
             FontSize -> 14], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{33, Inherited}, {Inherited, Inherited}}, 
             Hyphenation -> True, FontSize -> 14], 
            Cell[
             StyleData["SmallText", "PrintoutGray"], 
             CellMargins -> {{33, Inherited}, {Inherited, Inherited}}, 
             Hyphenation -> True]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MathCaption"], CellMargins -> {{35, 0}, {10, 10}}, 
             MenuSortingValue -> 200, MenuCommandKey -> "8", FontFamily -> 
             "Georgia", FontSize -> 16, FontColor -> 
             RGBColor[
              0.2901960784313726, 0.2901960784313726, 0.2901960784313726]], 
            Cell[
             StyleData["MathCaption", "Presentation"], 
             CellMargins -> {{80, 12}, {6, 30}}, LineSpacing -> {1.25, 1}, 
             FontSize -> 20], 
            Cell[
             StyleData["MathCaption", "SlideShow"], 
             CellMargins -> {{80, 12}, {6, 30}}, FontSize -> 20]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData[
             "AutomationMathCaption", StyleDefinitions -> 
              StyleData["IntegrationMathCaption"]], 
             CellMargins -> {{0, 12}, {2, 24}}, 
             CellFrameMargins -> {{0, 0}, {0, 3}}, CellFrameLabels -> {{
                PaneBox[
                 FrameBox[
                  StyleBox[
                  "Automation", FontFamily -> "Helvetica", FontSize -> 9, 
                   FontColor -> GrayLevel[1], FontWeight -> Plain], 
                  Background -> RGBColor[0.811765, 0.117647, 0.145098], 
                  BoxFrame -> 0, FrameStyle -> None, 
                  FrameMargins -> {{3, 3}, {1, 1}}], ImageSize -> 56, 
                 Alignment -> Left, FrameMargins -> 0], None}, {None, None}}, 
             FontFamily -> "Georgia", FontSize -> 16], 
            Cell[
             StyleData["AutomationMathCaption", "Presentation"], 
             CellMargins -> {{80, 12}, {12, 12}}, FontSize -> 20], 
            Cell[
             StyleData["AutomationMathCaption", "SlideShow"], 
             CellMargins -> {{80, 12}, {12, 12}}, FontSize -> 20]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
             CellMargins -> {{0, 12}, {2, 24}}, 
             CellFrameMargins -> {{0, 0}, {0, 3}}, CellFrameLabels -> {{
                PaneBox[
                 FrameBox[
                  StyleBox[
                  "Commentario", FontFamily -> "Helvetica", FontSize -> 9, 
                   FontColor -> GrayLevel[1], FontWeight -> Plain], 
                  Background -> RGBColor[1., 0.647059, 0], BoxFrame -> 1, 
                  FrameStyle -> RGBColor[1., 0.647059, 0], 
                  FrameMargins -> {{3, 3}, {1, 1}}], Alignment -> Left, 
                 FrameMargins -> 0], None}, {None, None}}, MenuSortingValue -> 
             8000, MenuCommandKey -> None, StyleMenuListing -> None, 
             FontFamily -> "Georgia", FontSize -> 16], 
            Cell[
             StyleData["Comment", "Presentation"], 
             CellMargins -> {{80, 12}, {12, 12}}, FontSize -> 20], 
            Cell[
             StyleData["Comment", "SlideShow"], 
             CellMargins -> {{80, 12}, {12, 12}}, FontSize -> 20]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell["Lists", "Subsubsection"], 
            Cell[
             CellGroupData[{
               Cell["Bulleted", "Subsubsubsection"], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData["Item"], CellDingbat -> 
                   StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
                    RGBColor[0.5875944151979858, 0.053406576638437474`, 0.]], 
                   ShowGroupOpener -> False, 
                   CellMargins -> {{50, 0}, {10, 10}}, ReturnCreatesNewCell -> 
                   True, StyleKeyMapping -> {"Tab" -> "Subitem"}, 
                   CellGroupingRules -> {
                    "GroupTogetherNestedGrouping", 15000}, 
                   CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
                   CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
                   MenuSortingValue -> 3000, FontFamily -> "Georgia", 
                   FontSize -> 16], 
                  Cell[
                   StyleData["Item", "Presentation"], 
                   CellMargins -> {{95, 10}, {7, 7}}, CellFrameLabelMargins -> 
                   6, FontSize -> 20], 
                  Cell[
                   StyleData["Item", "SlideShow"], 
                   CellMargins -> {{95, 10}, {7, 7}}, CellFrameLabelMargins -> 
                   8, FontSize -> 20], 
                  Cell[
                   StyleData["Item", "Printout"], CellDingbat -> 
                   StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
                    GrayLevel[0.2]], 
                   CellMargins -> {{65, Inherited}, {Inherited, Inherited}}]},
                  Closed]], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData["ItemParagraph"], ShowGroupOpener -> False, 
                   CellMargins -> {{50, 0}, {10, 10}}, ReturnCreatesNewCell -> 
                   True, StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
                   CellGroupingRules -> {
                    "GroupTogetherNestedGrouping", 15000}, MenuSortingValue -> 
                   3100, FontFamily -> "Georgia", FontSize -> 16, FontColor -> 
                   GrayLevel[0.2]], 
                  Cell[
                   StyleData["ItemParagraph", "Presentation"], 
                   CellMargins -> {{95, 10}, {7, 2}}, FontSize -> 20], 
                  Cell[
                   StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> 
                   False, CellMargins -> {{95, 10}, {7, 2}}, FontSize -> 20], 
                  Cell[
                   StyleData["ItemParagraph", "Printout"], 
                   CellMargins -> {{65, Inherited}, {
                    Inherited, 0.5 Inherited}}]}, Closed]], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData["Subitem"], CellDingbat -> 
                   StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
                    RGBColor[0.5875944151979858, 0.053406576638437474`, 0.]], 
                   ShowGroupOpener -> False, 
                   CellMargins -> {{70, 0}, {10, 10}}, ReturnCreatesNewCell -> 
                   True, StyleKeyMapping -> {
                    "Tab" -> "Subsubitem", "Backspace" -> "Item", 
                    KeyEvent["Tab", Modifiers -> {Shift}] -> "Item"}, 
                   CellGroupingRules -> {
                    "GroupTogetherNestedGrouping", 15100}, 
                   CellFrameLabelMargins -> 4, CounterIncrements -> "Subitem",
                    CounterAssignments -> {{"Subsubitem", 0}}, 
                   MenuSortingValue -> 3200, StyleMenuListing -> None, 
                   FontFamily -> "Georgia", FontSize -> 16], 
                  Cell[
                   StyleData["Subitem", "Presentation"], 
                   CellMargins -> {{119, 12}, {7, 7}}, CellFrameLabelMargins -> 
                   6, FontSize -> 20], 
                  Cell[
                   StyleData["Subitem", "SlideShow"], 
                   CellMargins -> {{119, 12}, {7, 7}}, CellFrameLabelMargins -> 
                   8, FontSize -> 20], 
                  Cell[
                   StyleData["Subitem", "Printout"], 
                   CellMargins -> {{92, Inherited}, {Inherited, Inherited}}]},
                  Closed]], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData["SubitemParagraph"], ShowGroupOpener -> False, 
                   CellMargins -> {{70, 0}, {10, 10}}, ReturnCreatesNewCell -> 
                   True, StyleKeyMapping -> {
                    "Tab" -> "SubsubitemParagraph", "Backspace" -> 
                    "ItemParagraph", KeyEvent["Tab", Modifiers -> {Shift}] -> 
                    "ItemParagraph"}, 
                   CellGroupingRules -> {
                    "GroupTogetherNestedGrouping", 15100}, 
                   CellFrameLabelMargins -> 4, MenuSortingValue -> 3300, 
                   StyleMenuListing -> None, FontFamily -> "Georgia", 
                   FontSize -> 16, FontColor -> GrayLevel[0.2]], 
                  Cell[
                   StyleData["SubitemParagraph", "Presentation"], 
                   CellMargins -> {{119, 12}, {7, 2}}, FontSize -> 20], 
                  Cell[
                   StyleData["SubitemParagraph", "SlideShow"], 
                   CellMargins -> {{119, 12}, {7, 2}}, FontSize -> 20], 
                  Cell[
                   StyleData["SubitemParagraph", "Condensed"], 
                   CellMargins -> {{60, 2}, {2, 1}}], 
                  Cell[
                   StyleData["SubitemParagraph", "Printout"], 
                   CellMargins -> {{92, Inherited}, {
                    Inherited, 0.1 Inherited}}], 
                  Cell[
                   StyleData["SubitemParagraph", "PrintoutGray"], 
                   CellMargins -> {{92, Inherited}, {
                    Inherited, 0.1 Inherited}}]}, Closed]], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData["Subsubitem"], CellDingbat -> 
                   StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
                    RGBColor[0.5875944151979858, 0.053406576638437474`, 0.]], 
                   ShowGroupOpener -> False, 
                   CellMargins -> {{90, 0}, {10, 10}}, ReturnCreatesNewCell -> 
                   True, StyleKeyMapping -> {
                    "Backspace" -> "Subitem", 
                    KeyEvent["Tab", Modifiers -> {Shift}] -> "Subitem"}, 
                   CellGroupingRules -> {
                    "GroupTogetherNestedGrouping", 15200}, 
                   CellFrameLabelMargins -> 4, CounterIncrements -> 
                   "Subsubitem", MenuSortingValue -> 3400, StyleMenuListing -> 
                   None, FontFamily -> "Georgia", FontSize -> 16], 
                  Cell[
                   StyleData["Subsubitem", "Presentation"], 
                   CellMargins -> {{143, 12}, {7, 7}}, CellFrameLabelMargins -> 
                   6, FontSize -> 20], 
                  Cell[
                   StyleData["Subsubitem", "SlideShow"], 
                   CellMargins -> {{143, 12}, {7, 7}}, CellFrameLabelMargins -> 
                   8, FontSize -> 20], 
                  Cell[
                   StyleData["Subsubitem", "Printout"], CellDingbat -> 
                   StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
                    GrayLevel[0.4]], 
                   CellMargins -> {{119, Inherited}, {
                    Inherited, Inherited}}]}, Closed]], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData["SubsubitemParagraph"], ShowGroupOpener -> False,
                    CellMargins -> {{70, 0}, {10, 10}}, ReturnCreatesNewCell -> 
                   True, StyleKeyMapping -> {
                    "Backspace" -> "SubitemParagraph", 
                    KeyEvent["Tab", Modifiers -> {Shift}] -> 
                    "SubitemParagraph"}, 
                   CellGroupingRules -> {
                    "GroupTogetherNestedGrouping", 15200}, 
                   CellFrameLabelMargins -> 4, CounterIncrements -> 
                   "Subsubitem", MenuSortingValue -> 3500, StyleMenuListing -> 
                   None, FontFamily -> "Georgia", FontSize -> 16, FontColor -> 
                   GrayLevel[0.2]], 
                  Cell[
                   StyleData["SubsubitemParagraph", "Presentation"], 
                   CellMargins -> {{143, 12}, {7, 2}}, FontSize -> 20], 
                  Cell[
                   StyleData["SubsubitemParagraph", "SlideShow"], 
                   CellMargins -> {{143, 12}, {7, 2}}, FontSize -> 20], 
                  Cell[
                   StyleData["SubsubitemParagraph", "Printout"], 
                   CellMargins -> {{119, Inherited}, {
                    Inherited, 0.1 Inherited}}]}, Closed]]}, Closed]], 
            Cell[
             CellGroupData[{
               Cell["Numbered", "Subsubsubsection"], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData["ItemNumbered"], CellDingbat -> Cell[
                    TextData[{
                    CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold", 
                    Alignment -> Baseline], ShowGroupOpener -> False, 
                   CellMargins -> {{70, 0}, {10, 10}}, ReturnCreatesNewCell -> 
                   True, StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
                   CellGroupingRules -> {
                    "GroupTogetherNestedGrouping", 15000}, 
                   CellFrameLabelMargins -> 4, CounterIncrements -> 
                   "ItemNumbered", 
                   CounterAssignments -> {{"SubitemNumbered", 0}, {
                    "SubsubitemNumbered", 0}}, MenuSortingValue -> 4000, 
                   FontFamily -> "Georgia", FontSize -> 16], 
                  Cell[
                   StyleData["ItemNumbered", "Presentation"], 
                   CellMargins -> {{95, 10}, {7, 7}}, CellFrameLabelMargins -> 
                   6, FontSize -> 20], 
                  Cell[
                   StyleData["ItemNumbered", "SlideShow"], 
                   CellMargins -> {{95, 10}, {7, 7}}, CellFrameLabelMargins -> 
                   6, FontSize -> 20], 
                  Cell[
                   StyleData["ItemNumbered", "Printout"], 
                   CellMargins -> {{65, Inherited}, {Inherited, Inherited}}]},
                  Closed]], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData["SubitemNumbered"], CellDingbat -> Cell[
                    TextData[{
                    CounterBox["ItemNumbered"], ".", 
                    CounterBox["SubitemNumbered"], "."}], FontWeight -> 
                    "Bold"], ShowGroupOpener -> False, 
                   CellMargins -> {{90, 0}, {10, 10}}, ReturnCreatesNewCell -> 
                   True, StyleKeyMapping -> {
                    "Tab" -> "SubsubitemNumbered", "Backspace" -> 
                    "ItemNumbered", KeyEvent["Tab", Modifiers -> {Shift}] -> 
                    "ItemNumbered"}, 
                   CellGroupingRules -> {
                    "GroupTogetherNestedGrouping", 15100}, 
                   CellFrameLabelMargins -> 4, CounterIncrements -> 
                   "SubitemNumbered", 
                   CounterAssignments -> {{"SubsubitemNumbered", 0}}, 
                   MenuSortingValue -> 4100, FontFamily -> "Georgia", 
                   FontSize -> 16], 
                  Cell[
                   StyleData["SubitemNumbered", "Presentation"], 
                   CellMargins -> {{119, 12}, {7, 7}}, CellFrameLabelMargins -> 
                   6, FontSize -> 20], 
                  Cell[
                   StyleData["SubitemNumbered", "SlideShow"], 
                   CellMargins -> {{119, 12}, {7, 7}}, CellFrameLabelMargins -> 
                   6, FontSize -> 20], 
                  Cell[
                   StyleData["SubitemNumbered", "Printout"], 
                   CellMargins -> {{92, Inherited}, {Inherited, Inherited}}]},
                  Closed]], 
               Cell[
                CellGroupData[{
                  Cell[
                   StyleData["SubsubitemNumbered"], CellDingbat -> Cell[
                    TextData[{
                    CounterBox["ItemNumbered"], ".", 
                    CounterBox["SubitemNumbered"], ".", 
                    CounterBox["SubsubitemNumbered"], "."}], FontWeight -> 
                    "Bold"], ShowGroupOpener -> False, 
                   CellMargins -> {{110, 0}, {10, 10}}, ReturnCreatesNewCell -> 
                   True, StyleKeyMapping -> {
                    "Backspace" -> "SubitemNumbered", 
                    KeyEvent["Tab", Modifiers -> {Shift}] -> 
                    "SubitemNumbered"}, 
                   CellGroupingRules -> {
                    "GroupTogetherNestedGrouping", 15200}, 
                   CellFrameLabelMargins -> 4, CounterIncrements -> 
                   "SubsubitemNumbered", MenuSortingValue -> 4200, 
                   StyleMenuListing -> None, FontFamily -> "Georgia", 
                   FontSize -> 16], 
                  Cell[
                   StyleData["SubsubitemNumbered", "Presentation"], 
                   CellMargins -> {{143, 12}, {7, 7}}, CellFrameLabelMargins -> 
                   6, FontSize -> 20], 
                  Cell[
                   StyleData["SubsubitemNumbered", "SlideShow"], 
                   CellMargins -> {{143, 12}, {7, 7}}, CellFrameLabelMargins -> 
                   6, FontSize -> 20], 
                  Cell[
                   StyleData["SubsubitemNumbered", "Printout"], 
                   CellMargins -> {{119, Inherited}, {
                    Inherited, Inherited}}]}, Closed]]}, Closed]]}, Closed]]},
         Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InlineFormula"], CellMargins -> {{35, 0}, {5, 0}}, 
          StripStyleOnPaste -> True, CellFrameMargins -> 8, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           LanguageCategory -> "Formula", ScriptLevel -> 1, 
          SingleLetterItalics -> True, MenuSortingValue -> 1650, 
          StyleMenuListing -> None, FontFamily -> "Georgia", FontSize -> 16], 
         Cell[
          StyleData["InlineFormula", "Presentation"], 
          CellMargins -> {{10, 4}, {0, 12}}, LineSpacing -> {1, 5}, FontSize -> 
          20], 
         Cell[
          StyleData["InlineFormula", "SlideShow"], FontSize -> 20], 
         Cell[
          StyleData["InlineFormula", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DisplayFormula"], CellMargins -> {{35, 0}, {5, 0}}, 
          StripStyleOnPaste -> True, DefaultFormatType -> 
          DefaultInputFormatType, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           LanguageCategory -> "Formula", ScriptLevel -> 0, 
          SingleLetterItalics -> True, MenuSortingValue -> 1700, 
          StyleMenuListing -> None, FontFamily -> "Georgia", FontSize -> 16, 
          UnderoverscriptBoxOptions -> {LimitsPositioning -> True}], 
         Cell[
          StyleData["DisplayFormula", "Presentation"], 
          CellMargins -> {{80, Inherited}, {Inherited 1.75, Inherited 1.75}}, 
          LineSpacing -> {1, 5}, FontSize -> 20], 
         Cell[
          StyleData["DisplayFormula", "SlideShow"], 
          CellMargins -> {{80, Inherited}, {Inherited 1.75, Inherited 1.75}}, 
          FontSize -> 20]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "DisplayFormulaNumbered", StyleDefinitions -> 
           StyleData["DisplayFormula"]], CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["DisplayFormulaNumbered"], ")"}], 
              "DisplayFormulaEquationNumber"]}, {None, None}}, 
          CounterIncrements -> "DisplayFormulaNumbered", MenuSortingValue -> 
          1710, StyleMenuListing -> None, FontFamily -> "Georgia", FontSize -> 
          16], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Presentation"], 
          CellMargins -> {{100, Inherited}, {1.5 Inherited, 1.5 Inherited}}, 
          LineSpacing -> {1, 5}, FontSize -> 20], 
         Cell[
          StyleData["DisplayFormulaNumbered", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
            1.5 Inherited, 1.5 Inherited}}, FontSize -> 20], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       StyleData["DisplayFormulaEquationNumber"], FontFamily -> "Arial", 
       FontSize -> -1 + Inherited], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Program"], CellFrame -> {{0, 0}, {0.5, 0.5}}, 
          CellMargins -> {{35, 0}, {5, 5}}, StripStyleOnPaste -> True, 
          Hyphenation -> False, AutoQuoteCharacters -> {}, 
          PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Formula", 
          ScriptLevel -> 1, MenuSortingValue -> 5000, FontFamily -> "Courier",
           FontSize -> 15], 
         Cell[
          StyleData["Program", "Presentation"], CellFrame -> {{0, 0}, {1, 1}},
           CellMargins -> {{100, 4}, {0, 12}}, LineSpacing -> {1, 5}, 
          FontSize -> 20], 
         Cell[
          StyleData["Program", "SlideShow"], CellFrame -> {{0, 0}, {1, 1}}, 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {12, 12}}, 
          FontSize -> 20], 
         Cell[
          StyleData["Program", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}]}, 
        Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{35, 0}, {5, 0}}, 
          MenuSortingValue -> 500, FontSize -> 11], 
         Cell[
          StyleData["Input", "Presentation"], 
          CellMargins -> {{80, 10}, {8, 15}}, FontSize -> 20], 
         Cell[
          StyleData["Input", "SlideShow"], CellMargins -> {{80, 10}, {8, 15}},
           LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Input", "Condensed"], CellMargins -> {{50, 10}, {2, 3}}, 
          FontSize -> 18], 
         Cell[
          StyleData["Input", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, 8}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 18], 
         Cell[
          StyleData["Input", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, 8}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 18]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{35, 0}, {5, 0}}, FontSize -> 
          16], 
         Cell[
          StyleData["InputOnly", "Presentation"], 
          CellMargins -> {{80, 10}, {8, 15}}, FontSize -> 20], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{80, 10}, {8, 15}}, FontSize -> 20], 
         Cell[
          StyleData["InputOnly", "Condensed"], 
          CellMargins -> {{50, 10}, {2, 3}}, FontSize -> 12], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 12], 
         Cell[
          StyleData["InputOnly", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 12]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"], CellMargins -> {{35, 0}, {5, 0}}, 
          MenuSortingValue -> 6000, MenuCommandKey -> None, FontSize -> 16], 
         Cell[
          StyleData["Code", "Presentation"], 
          CellMargins -> {{80, 10}, {8, 15}}, FontSize -> 20], 
         Cell[
          StyleData["Code", "SlideShow"], CellMargins -> {{80, 10}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Code", "Condensed"], CellMargins -> {{50, 10}, {2, 3}}, 
          FontSize -> 22], 
         Cell[
          StyleData["Code", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, FontSize -> 
          22], 
         Cell[
          StyleData["Code", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, FontSize -> 
          22]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CellLabel"], 
          CellMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontSize -> 9, FontColor -> 
          RGBColor[0.269993, 0.308507, 0.6]], 
         Cell[
          StyleData["CellLabel", "Presentation"], 
          CellMargins -> {{12, Inherited}, {Inherited 1.5, Inherited 1.5}}, 
          FontSize -> 11], 
         Cell[
          StyleData["CellLabel", "SlideShow"], 
          CellMargins -> {{12, Inherited}, {Inherited 1.5, Inherited 1.5}}, 
          FontSize -> 11]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframAlphaShort"], CellMargins -> {{35, 0}, {5, 0}}, 
          FontSize -> 16], 
         Cell[
          StyleData["WolframAlphaShort", "Presentation"], 
          CellMargins -> {{100, 10}, {7, 12}}, FontSize -> 20], 
         Cell[
          StyleData["WolframAlphaShort", "SlideShow"], 
          CellMargins -> {{100, 10}, {7, 12}}, FontSize -> 20]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframAlphaShortInput"], 
          CellMargins -> {{35, 0}, {5, 0}}, FontSize -> 16], 
         Cell[
          StyleData["WolframAlphaShortInput", "Presentation"], 
          CellMargins -> {{100, 10}, {7, 12}}, FontSize -> 20], 
         Cell[
          StyleData["WolframAlphaShortInput", "SlideShow"], 
          CellMargins -> {{100, 10}, {7, 12}}, FontSize -> 20]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframAlphaLong"], CellMargins -> {{35, 0}, {5, 0}}, 
          FontFamily -> "Helvetica", FontSize -> 16], 
         Cell[
          StyleData["WolframAlphaLong", "Presentation"], 
          CellMargins -> {{100, 10}, {7, 12}}, FontSize -> 20], 
         Cell[
          StyleData["WolframAlphaLong", "SlideShow"], 
          CellMargins -> {{100, 10}, {7, 12}}, FontSize -> 20]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframAlphaLongInput"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, FontSize -> 
          16], 
         Cell[
          StyleData["WolframAlphaLongInput", "Presentation"], 
          CellMargins -> {{100, 10}, {7, 12}}, FontSize -> 20], 
         Cell[
          StyleData["WolframAlphaLongInput", "SlideShow"], 
          CellMargins -> {{100, 10}, {7, 12}}, FontSize -> 20]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{35, 0}, {5, 0}}, 
          ShowCellLabel -> False, MenuSortingValue -> 5000, StyleMenuListing -> 
          None, FontSize -> 16], 
         Cell[
          StyleData["Output", "Presentation"], 
          CellMargins -> {{80, 10}, {7, 12}}, FontSize -> 20], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{80, 10}, {7, 12}}, FontSize -> 20]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Print"], CellMargins -> {{35, 0}, {5, 0}}, FontFamily -> 
          "Georgia", FontSize -> 16, FontWeight -> "Plain", FontSlant -> 
          "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
         Cell[
          StyleData["Print", "Presentation"], 
          CellMargins -> {{80, 10}, {7, 12}}, FontSize -> 20], 
         Cell[
          StyleData["Print", "SlideShow"], CellMargins -> {{80, 10}, {7, 12}},
           FontSize -> 20]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Special Styles", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{100, 100}, {20, 20}}, 
          ShowStringCharacters -> False, MenuSortingValue -> 7000, FontFamily -> 
          "Georgia", FontWeight -> "Plain", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
          Magnification -> 1], 
         Cell[
          StyleData["Picture", "Presentation"], 
          CellMargins -> {{100, 100}, {20, 20}}, FontSize -> 15, 
          Magnification -> 1], 
         Cell[
          StyleData["Picture", "SlideShow"], FontSize -> 15]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["PictureCaption", StyleDefinitions -> StyleData["Text"]], 
          CellDingbat -> "\[FilledUpTriangle]", 
          CellMargins -> {{114, 100}, {15, 4}}, ShowStringCharacters -> False,
           MenuSortingValue -> 7500, FontFamily -> "Georgia", FontSize -> 14, 
          FontColor -> GrayLevel[0.3]], 
         Cell[
          StyleData["PictureCaption", "Presentation"], 
          CellMargins -> {{114, 100}, {20, 0}}, FontSize -> 15], 
         Cell[
          StyleData["PictureCaption", "SlideShow"], 
          CellMargins -> {{114, 100}, {20, 0}}, FontSize -> 15]}, Closed]], 
      Cell[
       StyleData["PlotLabel"], FontFamily -> "Georgia", FontSize -> 14], 
      Cell[
       StyleData["Editorial"], ShowCellBracket -> Automatic, 
       CellMargins -> {{24, 10}, {6, 6}}, 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.786999, 0.0386053, 0.0571756]}, 
       CellFrameLabels -> {{
          Cell[
           TextData[{"Editar:"}], FontFamily -> "Helvetica", FontSize -> 16, 
           FontWeight -> "Bold", CellBaseline -> Baseline], None}, {
         None, None}}, Hyphenation -> True, LineSpacing -> {1, 3}, 
       LanguageCategory -> "NaturalLanguage", CounterStyleMenuListing -> None,
        FontFamily -> "Helvetica", FontSize -> 18, FontColor -> 
       RGBColor[1, 0, 0]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Boxes y varios", "Section", 
       CellChangeTimes -> {{3.6409809377744045`*^9, 3.640980940526238*^9}, {
        3.6439810230002327`*^9, 3.643981024159643*^9}}], 
      Cell[
       StyleData["Ejercicio"], CellFrame -> {{1.25, 0}, {1.25, 0}}, 
       CellMargins -> {{150, 10}, {4, 4}}, 
       CellGroupingRules -> {"SectionGrouping", 90}, CellFrameLabels -> {{
          PaneBox[
           FrameBox[
            StyleBox[
            "\[DoubleRightArrow]", FontSize -> 25, FontColor -> GrayLevel[1]],
             Background -> GrayLevel[0.3], BoxFrame -> False, FrameStyle -> 
            None], Alignment -> Left, FrameMargins -> None], None}, {
         None, None}}, TextAlignment -> Right, LineSpacing -> {1, 3}, 
       CounterIncrements -> "Text", MenuSortingValue -> 510, MenuCommandKey -> 
       None, FontFamily -> "Georgia", FontSize -> 16, FontSlant -> "Italic", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
      Cell[
       StyleData["Solucion"], CellFrame -> {{0, 1.25}, {0, 1.25}}, 
       CellMargins -> {{35, Inherited}, {25, 0}}, 
       CellGroupingRules -> {"SectionGrouping", 90}, TextAlignment -> Right, 
       MenuSortingValue -> 520, MenuCommandKey -> None, FontFamily -> 
       "Georgia", FontSize -> 16, FontWeight -> Plain, FontSlant -> "Italic", 
       FontColor -> GrayLevel[0.25]], 
      Cell[
       StyleData["Answer"], CellFrame -> {{0, 1.25}, {0, 1.25}}, 
       CellMargins -> {{35, 0}, {5, 0}}, CellFrameMargins -> 5, 
       CellFrameColor -> RGBColor[0.796078431372549, 0.07058823529411765, 0.],
        CellFrameLabels -> {{None, 
          PaneBox[
           FrameBox[
            StyleBox[
            "\[LeftSkeleton] Respuesta", FontFamily -> "Helvetica", FontSize -> 
             15, FontColor -> GrayLevel[1], FontWeight -> Plain], Background -> 
            RGBColor[0.796078431372549, 0.07058823529411765, 0.], BoxFrame -> 
            0, FrameStyle -> None, FrameMargins -> {{2, 2}, {2, 2}}], 
           Alignment -> Right, FrameMargins -> 0]}, {None, None}}, 
       MenuSortingValue -> 520, MenuCommandKey -> None, FontFamily -> 
       "Georgia", FontSize -> 16, FontColor -> GrayLevel[0.2]], 
      Cell[
       StyleData["Cuadro/Titulo"], CellFrame -> 0.25, 
       CellMargins -> {{60, 40}, {0, 15}}, MenuSortingValue -> 2000, 
       FontFamily -> "Georgia", FontSize -> 16, Background -> 
       RGBColor[0.95, 0.95, 0.95]], 
      Cell[
       StyleData["Cuadro/Contenido"], CellFrame -> {{0.25, 0.25}, {0.25, 0}}, 
       CellMargins -> {{60, 40}, {15, 0}}, MenuSortingValue -> 2100, 
       FontFamily -> "Georgia", FontSize -> 16, Background -> 
       RGBColor[0.9999, 0.9999, 0.9999]], 
      Cell[
       StyleData["EmphasisText"], CellFrame -> True, 
       CellMargins -> {{50, 10}, {5, 0}}, MenuSortingValue -> 90, 
       MenuCommandKey -> "6", FontFamily -> "Georgia", FontSize -> 16, 
       Background -> GrayLevel[1]], 
      Cell[
       StyleData["PildIzq"], CellFrame -> {{1.5, 1.5}, {3, 1.5}}, 
       CellMargins -> {{10, 100}, {4, 4}}, CellFrameLabels -> {{
          PaneBox[
           FrameBox[
            StyleBox[
            "P\[IAcute]ldora", FontFamily -> "Helvetica", FontSize -> 12, 
             FontColor -> GrayLevel[1], FontWeight -> Plain], Background -> 
            RGBColor[0., 0.24, 0.76, 0.8], BoxFrame -> 0, FrameStyle -> None, 
            FrameMargins -> {{2, 10}, {5, 5}}], Alignment -> Left, 
           FrameMargins -> 0], None}, {None, None}}, CellFrameLabelMargins -> 
       1, MenuSortingValue -> 2300, FontFamily -> "Georgia", FontSize -> 16, 
       Background -> RGBColor[0., 0.24, 0.76, 0.1]], 
      Cell[
       StyleData["PildDer"], CellFrame -> {{1.5, 1.5}, {3, 1.5}}, 
       CellMargins -> {{100, 10}, {4, 4}}, CellFrameLabels -> {{None, 
          PaneBox[
           FrameBox[
            StyleBox[
            "P\[IAcute]ldora", FontFamily -> "Helvetica", FontSize -> 12, 
             FontColor -> GrayLevel[1], FontWeight -> Plain], Background -> 
            RGBColor[0., 0.24, 0.76, 0.8], BoxFrame -> 0, FrameStyle -> None, 
            FrameMargins -> {{10, 2}, {5, 5}}], Alignment -> Right, 
           FrameMargins -> 0]}, {None, None}}, CellFrameLabelMargins -> 3, 
       MenuSortingValue -> 2400, FontFamily -> "Georgia", FontSize -> 16, 
       Background -> RGBColor[0., 0.24, 0.76, 0.1]], 
      Cell[
       StyleData["Multimedia"], CellFrame -> {{1.5, 1.5}, {3, 1.5}}, 
       CellMargins -> {{70, 70}, {4, 4}}, CellFrameLabels -> {{None, None}, {
          PaneBox[
           FrameBox[
            StyleBox[
            "Multimedia", FontFamily -> "Helvetica", FontSize -> 12, 
             FontColor -> GrayLevel[1], FontWeight -> Plain], Background -> 
            RGBColor[0., 0.28, 0.17, 0.8], BoxFrame -> 1, FrameStyle -> None, 
            FrameMargins -> {{30, 30}, {1, 1}}, Alignment -> Right], 
           FrameMargins -> 0], None}}, CellFrameLabelMargins -> 1, 
       MenuSortingValue -> 2500, FontFamily -> "Georgia", FontSize -> 16, 
       Background -> RGBColor[0., 0.28, 0.17, 0.2]], 
      Cell[
       StyleData["Resumen"], CellFrame -> {{1.5, 1.5}, {3, 1.5}}, 
       CellMargins -> {{50, 10}, {5, 0}}, MenuSortingValue -> 2600, 
       MenuCommandKey -> None, StyleMenuListing -> Automatic, FontFamily -> 
       "Georgia", FontSize -> 16, Background -> GrayLevel[0.95]]}, Closed]]}, 
  WindowSize -> {775, 872}, WindowMargins -> {{0, Automatic}, {Automatic, 0}},
   FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[1510, 35, 79, 0, 144, "Book",ExpressionUUID->"39fa89f6-e6f1-43cc-8506-adc311f022c6"],
Cell[1592, 37, 99, 0, 67, "Title",ExpressionUUID->"cc75dd0c-4423-4b10-800e-16924e3d5aff"],
Cell[CellGroupData[{
Cell[1716, 41, 142, 4, 81, "Chapter",ExpressionUUID->"0a866ca4-bf05-4950-9ab0-88cc915ae365"],
Cell[CellGroupData[{
Cell[1883, 49, 99, 0, 61, "Subchapter",ExpressionUUID->"6978bfa9-91d0-44bf-8a0f-a612667de848"],
Cell[1985, 51, 1864, 27, 237, "Resumen",ExpressionUUID->"1218192f-8c88-44a9-b9ad-80d7c3b3d943"]
}, Closed]],
Cell[CellGroupData[{
Cell[3886, 83, 117, 0, 61, "Subchapter",ExpressionUUID->"2a7a54ad-3737-443a-9dff-c97a5c9e608e"],
Cell[4006, 85, 668, 17, 74, "Text",ExpressionUUID->"25aa8028-ce11-4e99-89b2-b0e40f32e37a"],
Cell[4677, 104, 314827, 5165, 322, "Input",ExpressionUUID->"7e52e36a-baec-4bea-b0c3-339126bd6d60"],
Cell[319507, 5271, 386, 7, 59, "Text",ExpressionUUID->"72c589f8-7d16-427c-b3e1-0901a672fc3e"],
Cell[319896, 5280, 144858, 2379, 185, "Input",ExpressionUUID->"da8d1d44-30a0-4699-b818-c5a15c1776ec"],
Cell[464757, 7661, 91792, 1509, 134, "Input",ExpressionUUID->"9a796c0b-a62e-4f90-8f43-911d01941f6a"],
Cell[556552, 9172, 539, 10, 80, "Text",ExpressionUUID->"2be851b7-0015-4449-940e-87a958324a83"],
Cell[557094, 9184, 340549, 5666, 560, "Output",ExpressionUUID->"12e43662-5570-4a41-916f-61558371caca"]
}, Closed]],
Cell[CellGroupData[{
Cell[897680, 14855, 86, 0, 48, "Section",ExpressionUUID->"2da7ae99-aa78-45fb-a18e-c5b7177669dc"],
Cell[897769, 14857, 176, 3, 32, "Text",ExpressionUUID->"4ed9ced9-b467-4190-8891-682a1daad0f5"],
Cell[897948, 14862, 270, 6, 39, "Item",ExpressionUUID->"e4a2c752-20dd-4eee-89a6-70b122083081",
 CellGroupingRules->"NormalGrouping"],
Cell[898221, 14870, 269, 6, 39, "Item",ExpressionUUID->"2bd60a17-e052-46d3-8c27-77e2350dfa6c",
 CellGroupingRules->"NormalGrouping"],
Cell[898493, 14878, 273, 6, 39, "Item",ExpressionUUID->"57604931-6345-4dcb-a1d3-9c406a42884f",
 CellGroupingRules->"NormalGrouping"],
Cell[898769, 14886, 323, 8, 47, "Ejercicio",ExpressionUUID->"0a8f4cfa-ac7f-4131-bc96-63d345009ecc"],
Cell[CellGroupData[{
Cell[899117, 14898, 91, 0, 52, "Solucion",ExpressionUUID->"24a45c2a-dc1f-4558-8492-f85d7e1a597b"],
Cell[899211, 14900, 129, 0, 32, "Text",ExpressionUUID->"f80dbed0-d9ad-4cd8-8321-98734b18f601"],
Cell[899343, 14902, 1798, 51, 162, "Output",ExpressionUUID->"5e0b5d23-5cbc-47ff-ae9d-be1b5f6f149b"],
Cell[901144, 14955, 414, 9, 77, "Text",ExpressionUUID->"6d0bbe29-7fd7-4508-b452-7c4dfea1435a"],
Cell[901561, 14966, 194, 3, 29, "Answer",ExpressionUUID->"20a5131c-4352-42af-9860-d710ee1bfc6d"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[901804, 14975, 86, 0, 48, "Section",ExpressionUUID->"590dd343-54e4-4d76-a506-a93311560f20"],
Cell[901893, 14977, 180, 3, 32, "Text",ExpressionUUID->"4f1d7f71-67b6-4990-b928-91de2bec7c6d"],
Cell[902076, 14982, 232, 5, 39, "Item",ExpressionUUID->"c3d71fc1-14f7-425f-9698-175a0ef824b4",
 CellGroupingRules->"NormalGrouping"],
Cell[902311, 14989, 528, 9, 76, "Item",ExpressionUUID->"21c7e0ef-71bc-4513-bbd6-982f8bb024a6",
 CellGroupingRules->"NormalGrouping"],
Cell[902842, 15000, 372, 7, 57, "Item",ExpressionUUID->"19da55f2-0486-4ba5-b8fa-a30213a0273f",
 CellGroupingRules->"NormalGrouping"],
Cell[903217, 15009, 205, 3, 39, "Item",ExpressionUUID->"69835c4c-9234-4021-810d-410823474f95",
 CellGroupingRules->"NormalGrouping"],
Cell[903425, 15014, 585, 10, 76, "Item",ExpressionUUID->"2835083a-d8b1-4763-a854-fc927a579d9e",
 CellGroupingRules->"NormalGrouping"],
Cell[904013, 15026, 219, 3, 47, "Ejercicio",ExpressionUUID->"65dfcae5-3b97-4f39-968d-31b08b974729"],
Cell[CellGroupData[{
Cell[904257, 15033, 91, 0, 52, "Solucion",ExpressionUUID->"555d3ed9-a122-430e-969a-7a050bef4b75"],
Cell[904351, 15035, 435, 9, 71, "Text",ExpressionUUID->"5271e95c-9cf2-4e8b-8afc-2d9767f3272a"],
Cell[904789, 15046, 154, 1, 29, "Answer",ExpressionUUID->"6d08b74f-5690-4c2d-b966-6f38a206d6bc"]
}, Closed]],
Cell[904958, 15050, 259, 5, 47, "Ejercicio",ExpressionUUID->"a39b7d38-f8b0-4ea6-940c-59d93af3690a"],
Cell[CellGroupData[{
Cell[905242, 15059, 91, 0, 52, "Solucion",ExpressionUUID->"228d5e27-e0be-416b-b24f-66745c42015b"],
Cell[905336, 15061, 129, 0, 32, "Text",ExpressionUUID->"d42d6445-52a6-459e-bbf3-5cd7c5e2a7c1"],
Cell[905468, 15063, 2207, 61, 206, "Output",ExpressionUUID->"166179f3-76b5-410c-a51c-c498725cecad"],
Cell[907678, 15126, 413, 9, 77, "Text",ExpressionUUID->"17676935-de93-4213-a0e9-15cbbac8810a"],
Cell[908094, 15137, 124, 0, 29, "Answer",ExpressionUUID->"be73074f-de1d-4199-a600-5b6fd2890f1f"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[908267, 15143, 984, 22, 56, "Section",ExpressionUUID->"f57eda7f-96eb-40fd-b5b9-b3add4375f50"],
Cell[909254, 15167, 374, 5, 53, "Text",ExpressionUUID->"8504a0ae-1f1a-4ca2-906c-11611d7e37fe"],
Cell[909631, 15174, 244, 4, 38, "Text",ExpressionUUID->"dc686209-3afe-40e0-83b2-ea4a30e62a29"],
Cell[CellGroupData[{
Cell[909900, 15182, 126, 0, 39, "Item",ExpressionUUID->"022999dc-4582-4e7b-ab9f-8ce916bfd93d"],
Cell[910029, 15184, 492, 7, 76, "Item",ExpressionUUID->"f7f267a7-9111-40bd-9b4a-c1bf1bfcee85"],
Cell[910524, 15193, 365, 5, 57, "Item",ExpressionUUID->"7b154561-2c2b-4660-a59a-26cf447ba5b0"],
Cell[910892, 15200, 1018, 18, 114, "Item",ExpressionUUID->"022a0334-07dc-4658-bc91-bde120d51bf6"],
Cell[911913, 15220, 449, 6, 76, "Item",ExpressionUUID->"a31c43a3-db8b-4a64-8ad7-dc2b92a66483"]
}, Open  ]],
Cell[912377, 15229, 426, 6, 59, "Text",ExpressionUUID->"3a8f326c-881c-442c-ac8c-bb1f82b97e4b"],
Cell[912806, 15237, 763, 10, 101, "Text",ExpressionUUID->"41d81833-a7c5-452a-b1f3-0268fde44aa3"],
Cell[913572, 15249, 53147, 952, 442, "Output",ExpressionUUID->"e94b4a5f-19dd-4360-a6be-329835fe37f5"],
Cell[966722, 16203, 138, 1, 71, "Multimedia",ExpressionUUID->"c17c20a7-6d1a-4763-a910-d6fc5e58f6bc"]
}, Closed]],
Cell[CellGroupData[{
Cell[966897, 16209, 96, 0, 48, "Section",ExpressionUUID->"68cd1f20-57c6-4146-8a1f-079e0633acd9"],
Cell[CellGroupData[{
Cell[967018, 16213, 105, 0, 31, "Subsection",ExpressionUUID->"65e69c19-1d05-4ca5-89fb-70dca046c93b"],
Cell[CellGroupData[{
Cell[967148, 16217, 151, 2, 32, "ItemNumbered",ExpressionUUID->"2ebd757d-c17c-4d11-bb81-16d139019e18"],
Cell[CellGroupData[{
Cell[967324, 16223, 401, 11, 38, "SubitemNumbered",ExpressionUUID->"f0816069-0ca0-4ff8-bead-be4860c3c0d5"],
Cell[967728, 16236, 402, 11, 38, "SubitemNumbered",ExpressionUUID->"e79a412c-f6eb-4b18-a558-350eebdee8a9"],
Cell[968133, 16249, 297, 6, 38, "SubitemNumbered",ExpressionUUID->"477e3f65-ee2a-4c71-bfd7-3f1c52a1b475"],
Cell[968433, 16257, 297, 6, 38, "SubitemNumbered",ExpressionUUID->"7d5a5fd3-fecc-4c15-956c-7446e75b30bd"],
Cell[968733, 16265, 340, 8, 38, "SubitemNumbered",ExpressionUUID->"762401a4-e704-4dd3-8873-e5dd5f039583"],
Cell[969076, 16275, 389, 10, 38, "SubitemNumbered",ExpressionUUID->"b2e7195d-6414-4481-9b6e-c89b92c54f4f"],
Cell[969468, 16287, 286, 6, 38, "SubitemNumbered",ExpressionUUID->"e6df58aa-8ac5-4218-87b7-9faaa8df218f"],
Cell[969757, 16295, 115, 0, 38, "SubitemNumbered",ExpressionUUID->"f38fd781-abf9-43ce-8376-55939ffa4b99"],
Cell[969875, 16297, 117, 0, 38, "SubitemNumbered",ExpressionUUID->"fc51ac89-362d-4b07-bb82-c18b9f042d34"],
Cell[969995, 16299, 117, 0, 38, "SubitemNumbered",ExpressionUUID->"762c055d-2d3a-49a9-9a02-7d4b18c59d65"],
Cell[970115, 16301, 117, 0, 38, "SubitemNumbered",ExpressionUUID->"f1c055ed-0062-4e31-a588-ebb2dbd68c65"],
Cell[970235, 16303, 125, 0, 38, "SubitemNumbered",ExpressionUUID->"9d5fc8c9-e725-49ac-a8ff-c5f05a10da7f"],
Cell[970363, 16305, 127, 0, 38, "SubitemNumbered",ExpressionUUID->"e1673e4f-8664-4576-b9a5-209e33ad5182"],
Cell[970493, 16307, 123, 0, 38, "SubitemNumbered",ExpressionUUID->"2cd7e6bd-2585-4bb0-834c-3927432ae7f3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[970665, 16313, 107, 0, 30, "Subsubsection",ExpressionUUID->"21d70013-bb6b-4de3-8692-53f8407d24b3"],
Cell[CellGroupData[{
Cell[970797, 16317, 151, 2, 32, "ItemNumbered",ExpressionUUID->"36003e80-e65c-42a0-b1af-bbc922ef045a"],
Cell[CellGroupData[{
Cell[970973, 16323, 459, 13, 38, "SubitemNumbered",ExpressionUUID->"f4639ba8-8a33-4b69-a91c-a808f0d546e1",
 CellGroupingRules->{GroupTogetherGrouping, 15001.}],
Cell[971435, 16338, 1366, 45, 122, "Text",ExpressionUUID->"3203eb9d-0153-46dd-b0d2-6801c5447d29",
 CellGroupingRules->{GroupTogetherGrouping, 15001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[972838, 16388, 460, 13, 38, "SubitemNumbered",ExpressionUUID->"5d6d5c38-f79a-49ff-834d-2a0220b7b7ce",
 CellGroupingRules->{GroupTogetherGrouping, 15002.}],
Cell[973301, 16403, 1369, 45, 122, "Text",ExpressionUUID->"1a48efdc-dd65-4c04-a81d-40db39a86cd7",
 CellGroupingRules->{GroupTogetherGrouping, 15002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[974707, 16453, 357, 9, 38, "SubitemNumbered",ExpressionUUID->"6f0944c5-5b97-435d-b9f9-5f16c7ed79fc",
 CellGroupingRules->{GroupTogetherGrouping, 15003.}],
Cell[975067, 16464, 634, 20, 58, "Text",ExpressionUUID->"92ec4244-c973-46f7-b325-5fab15782133",
 CellGroupingRules->{GroupTogetherGrouping, 15003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[975738, 16489, 357, 9, 38, "SubitemNumbered",ExpressionUUID->"1725a742-2733-4069-91db-beeb65418a84",
 CellGroupingRules->{GroupTogetherGrouping, 15004.}],
Cell[976098, 16500, 636, 20, 58, "Text",ExpressionUUID->"e3130ddf-56f1-4fb7-a5fc-b9d3e623c446",
 CellGroupingRules->{GroupTogetherGrouping, 15004.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[976771, 16525, 400, 11, 38, "SubitemNumbered",ExpressionUUID->"390cdc16-6a14-43aa-b618-8b0be5aa931f",
 CellGroupingRules->{GroupTogetherGrouping, 15005.}],
Cell[977174, 16538, 1010, 33, 100, "Text",ExpressionUUID->"87712edc-5bdf-45db-bdf8-b243ccd1544e",
 CellGroupingRules->{GroupTogetherGrouping, 15005.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[978221, 16576, 449, 13, 38, "SubitemNumbered",ExpressionUUID->"1c313e97-db17-4460-8513-e9f105d493d3",
 CellGroupingRules->{GroupTogetherGrouping, 15006.}],
Cell[978673, 16591, 1328, 44, 122, "Text",ExpressionUUID->"e5a47bb4-3ef5-4477-8a7f-3ddd93b6a87c",
 CellGroupingRules->{GroupTogetherGrouping, 15006.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[980038, 16640, 346, 9, 38, "SubitemNumbered",ExpressionUUID->"b3148c38-9aea-49b5-a232-d41b92633283",
 CellGroupingRules->{GroupTogetherGrouping, 15007.}],
Cell[980387, 16651, 773, 25, 80, "Text",ExpressionUUID->"a74aec75-1f91-499f-b5fb-c48a9cad2f92",
 CellGroupingRules->{GroupTogetherGrouping, 15007.}]
}, Open  ]],
Cell[981175, 16679, 115, 0, 38, "SubitemNumbered",ExpressionUUID->"611df5f3-f477-4ef2-a9f3-129d4af0bda1"],
Cell[981293, 16681, 616, 20, 58, "Text",ExpressionUUID->"ebe22fb6-a529-4acd-a173-1d19be71eee1",
 CellGroupingRules->{GroupTogetherGrouping, 15007.}],
Cell[981912, 16703, 117, 0, 38, "SubitemNumbered",ExpressionUUID->"9ea24656-4559-451b-86f2-9e2fb4c618db"],
Cell[982032, 16705, 778, 25, 80, "Text",ExpressionUUID->"0a1abdc3-8205-4980-98f1-7f3aa40f782a",
 CellGroupingRules->{GroupTogetherGrouping, 15007.}],
Cell[982813, 16732, 117, 0, 38, "SubitemNumbered",ExpressionUUID->"ec627866-cdde-43ee-9752-9745a64a8468"],
Cell[982933, 16734, 799, 26, 80, "Text",ExpressionUUID->"39f9de22-8d40-434d-9c64-9e5319ba15f2",
 CellGroupingRules->{GroupTogetherGrouping, 15007.}],
Cell[983735, 16762, 117, 0, 38, "SubitemNumbered",ExpressionUUID->"ed3527b7-3d13-481a-afd2-8ef6406c726e"],
Cell[983855, 16764, 813, 27, 80, "Text",ExpressionUUID->"cd41203c-9720-4121-997d-dbff36b49bcd",
 CellGroupingRules->{GroupTogetherGrouping, 15007.}],
Cell[984671, 16793, 125, 0, 38, "SubitemNumbered",ExpressionUUID->"a130486a-488b-4de2-ad40-bc6a45b939c0"],
Cell[984799, 16795, 811, 26, 80, "Text",ExpressionUUID->"589d7b55-1d1c-4e51-b52a-6fa642e056ef",
 CellGroupingRules->{GroupTogetherGrouping, 15007.}],
Cell[985613, 16823, 127, 0, 38, "SubitemNumbered",ExpressionUUID->"2c9bdb6a-7575-4532-ac5b-4a00a90b575b"],
Cell[985743, 16825, 897, 29, 80, "Text",ExpressionUUID->"047cb2f2-e46a-4d46-8f3c-21f44a78d68d",
 CellGroupingRules->{GroupTogetherGrouping, 15007.}],
Cell[986643, 16856, 123, 0, 38, "SubitemNumbered",ExpressionUUID->"9aebca7c-8c68-43f2-b4a2-53a321c4a633"],
Cell[986769, 16858, 656, 20, 58, "Text",ExpressionUUID->"726a3c10-021f-47b7-9de0-989357ff8ee8",
 CellGroupingRules->{GroupTogetherGrouping, 15007.}]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[987486, 16885, 108, 0, 31, "Subsection",ExpressionUUID->"e55c66a7-1a0a-49bc-8b7a-c7a6a59717c9"],
Cell[CellGroupData[{
Cell[987619, 16889, 756, 10, 93, "ItemNumbered",ExpressionUUID->"e783e71c-6ca5-4070-865b-812c6c117513"],
Cell[CellGroupData[{
Cell[988400, 16903, 323, 7, 57, "ItemNumbered",ExpressionUUID->"e575b021-0dc5-47f2-b239-42debe5daa89",
 CellGroupingRules->{GroupTogetherGrouping, 15001.}],
Cell[988726, 16912, 918, 22, 184, "Output",ExpressionUUID->"95e5ee82-8313-438f-af2e-e7c7286ea46e",
 CellGroupingRules->{GroupTogetherGrouping, 15001.}],
Cell[989647, 16936, 471, 10, 46, "Text",ExpressionUUID->"f6035291-7a99-44c5-bdba-c6697ee18144",
 CellGroupingRules->{GroupTogetherGrouping, 15001.}]
}, Open  ]],
Cell[990133, 16949, 250, 4, 38, "ItemNumbered",ExpressionUUID->"195291d8-8735-4872-b5d8-b83fb8913383"],
Cell[CellGroupData[{
Cell[990408, 16957, 138, 1, 39, "SubitemNumbered",ExpressionUUID->"30802c71-1146-4d58-8109-d829c2c6a93e"],
Cell[990549, 16960, 203, 3, 39, "SubitemNumbered",ExpressionUUID->"9b50cd50-22da-497a-984d-325a301d9bba"]
}, Open  ]],
Cell[990767, 16966, 515, 7, 79, "ItemNumbered",ExpressionUUID->"96b8ac73-9613-4708-a03d-8dd4436d9621"],
Cell[991285, 16975, 261, 4, 38, "ItemNumbered",ExpressionUUID->"cebcf469-18fe-496b-8ed7-1bbe5dcbe435"],
Cell[CellGroupData[{
Cell[991571, 16983, 225, 2, 39, "SubitemNumbered",ExpressionUUID->"bbf8f1f5-afac-4a99-abb1-cda93a632a8a"],
Cell[991799, 16987, 238, 3, 39, "SubitemNumbered",ExpressionUUID->"52ff456d-9bfc-4b5a-b22e-b8039cc23203"]
}, Open  ]],
Cell[992052, 16993, 438, 6, 59, "ItemNumbered",ExpressionUUID->"1b6414bb-1a3b-42d8-b800-2b217d4e4ca7"],
Cell[992493, 17001, 302, 4, 58, "ItemNumbered",ExpressionUUID->"6337bba4-b53a-4051-b650-8d60cc9b2cb0"],
Cell[992798, 17007, 404, 6, 58, "ItemNumbered",ExpressionUUID->"a3c6ddee-da8c-421c-b10d-14099fcf6cef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[993239, 17018, 134, 0, 30, "Subsubsection",ExpressionUUID->"7df87e7a-3b16-40b0-8167-a2665c3421bb"],
Cell[993376, 17020, 756, 10, 93, "ItemNumbered",ExpressionUUID->"2dddf882-f204-4cf6-909e-3f2028a43a1f"],
Cell[994135, 17032, 597, 18, 38, "ItemParagraph",ExpressionUUID->"5f4c2a56-ea78-474a-9c65-5c4f4fa7fe01",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[994735, 17052, 609, 18, 38, "ItemParagraph",ExpressionUUID->"7b3f9243-a770-4db1-b3ca-9206a9d073b8",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[995347, 17072, 729, 21, 38, "ItemParagraph",ExpressionUUID->"7ffc29e5-932c-47bc-b674-17398ba448ec",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[996079, 17095, 323, 7, 38, "ItemNumbered",ExpressionUUID->"1b23095e-e8f9-4bd5-ab11-5dd4dbf8b460",
 CellGroupingRules->{GroupTogetherGrouping, 15001.}],
Cell[996405, 17104, 918, 22, 184, "Output",ExpressionUUID->"9df75b40-1040-4701-b521-654c2fc9954a",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[997326, 17128, 471, 10, 46, "Text",ExpressionUUID->"1628ea51-64f5-400d-9f8b-2aa4027c4567",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[997800, 17140, 516, 14, 57, "ItemParagraph",ExpressionUUID->"36e8fe08-1045-4e2c-8c00-ae21922ddb74",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[998319, 17156, 695, 17, 57, "ItemParagraph",ExpressionUUID->"c24fa250-7387-4a90-867d-7c25e2611fa8",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[999017, 17175, 1440, 31, 222, "ItemParagraph",ExpressionUUID->"6451a94f-d162-44a0-b2d1-041641d324b7",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[1000460, 17208, 359, 7, 57, "ItemParagraph",ExpressionUUID->"88241938-f401-4d3e-bbec-d1f806e3248e",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[1000822, 17217, 250, 4, 38, "ItemNumbered",ExpressionUUID->"a0d6139b-7986-472e-8381-776557c96c2f"],
Cell[CellGroupData[{
Cell[1001097, 17225, 198, 4, 39, "SubitemNumbered",ExpressionUUID->"5993d9ad-2a43-4273-9ca5-8751ab752896",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[1001298, 17231, 618, 17, 38, "ItemParagraph",ExpressionUUID->"2acd701d-4503-4fc3-b2f1-2a2217a439bc",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[1001919, 17250, 263, 6, 39, "SubitemNumbered",ExpressionUUID->"19738adb-a9cf-4830-b1b1-3f4acae8e435",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[1002185, 17258, 690, 23, 76, "ItemParagraph",ExpressionUUID->"cfef18f6-3a38-45f6-9e4f-f2d345ec4493",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[1002878, 17283, 374, 11, 38, "ItemParagraph",ExpressionUUID->"fd801930-1539-4fa0-bd09-c8c0dd0e367b",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}]
}, Open  ]],
Cell[1003267, 17297, 515, 7, 79, "ItemNumbered",ExpressionUUID->"0b8d9eaf-c453-4f73-aa04-b2e9c69aa186"],
Cell[1003785, 17306, 1919, 48, 209, "ItemParagraph",ExpressionUUID->"9f193bd5-6301-489c-ab15-ef9f1f437996",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[CellGroupData[{
Cell[1005729, 17358, 321, 7, 38, "ItemNumbered",ExpressionUUID->"ea809c8f-f8d3-4622-b69e-084c274ca0c4",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[1006053, 17367, 285, 5, 39, "SubitemNumbered",ExpressionUUID->"ad7d9654-f31b-4ba4-b267-fc94d6c2c778",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[1006341, 17374, 698, 15, 76, "ItemParagraph",ExpressionUUID->"765b7362-c10a-44cf-af76-b1bd3a9e9095",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[1007042, 17391, 298, 6, 39, "SubitemNumbered",ExpressionUUID->"c28fbaca-d4bb-43a8-ace9-28f6cad1648d",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[1007343, 17399, 774, 19, 76, "ItemParagraph",ExpressionUUID->"7a59743d-093a-4320-8652-641250af56f7",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}]
}, Open  ]],
Cell[1008132, 17421, 438, 6, 59, "ItemNumbered",ExpressionUUID->"9c3ff3e3-5f75-4d8b-b78e-48145cdabd7c"],
Cell[CellGroupData[{
Cell[1008595, 17431, 274, 8, 95, "ItemParagraph",ExpressionUUID->"9758b2dc-2dba-4f4a-93be-d85350f16766",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[1008872, 17441, 390, 11, 38, "ItemParagraph",ExpressionUUID->"e034b747-d1fe-4c3c-a007-1ab15eb21d24",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009299, 17457, 362, 7, 58, "ItemNumbered",ExpressionUUID->"bbef0f46-bf65-41ad-9726-afecbce2507a",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[1009664, 17466, 612, 17, 38, "ItemParagraph",ExpressionUUID->"859ee59f-fbd0-40af-940a-93090124cbc8",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}]
}, Open  ]],
Cell[1010291, 17486, 405, 6, 58, "ItemNumbered",ExpressionUUID->"76e9ecf0-5556-4f34-8d0e-c62c07259619"],
Cell[1010699, 17494, 812, 23, 76, "ItemParagraph",ExpressionUUID->"ce818725-a683-43f0-9b9f-a6ceaf8ba2ba",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1011584, 17525, 140, 4, 75, "Chapter",ExpressionUUID->"4d15697d-dc6e-4682-91a8-9ac14348cde4"],
Cell[CellGroupData[{
Cell[1011749, 17533, 99, 0, 61, "Subchapter",ExpressionUUID->"55a17a44-c419-47dd-a4f7-6da98d05ed4e"],
Cell[1011851, 17535, 1156, 19, 196, "Resumen",ExpressionUUID->"f46f93a5-971e-4d7e-be50-392e46d052ac"],
Cell[1013010, 17556, 280, 4, 59, "Text",ExpressionUUID->"8d8a2483-373d-4810-945c-4d6f484eb690"]
}, Closed]],
Cell[CellGroupData[{
Cell[1013327, 17565, 124, 4, 48, "Section",ExpressionUUID->"f5563df7-0188-44b9-b6e1-b124df0d4bd4"],
Cell[1013454, 17571, 202, 3, 32, "Text",ExpressionUUID->"5ac8d921-32db-4821-acfe-80c866e5a360"],
Cell[1013659, 17576, 383, 5, 59, "Text",ExpressionUUID->"98b59512-f4b2-4bb1-926c-e13577d7de97"],
Cell[1014045, 17583, 401, 7, 57, "Ejercicio",ExpressionUUID->"48e614b9-64f9-4a0b-97ae-ba1697a11eb8"],
Cell[CellGroupData[{
Cell[1014471, 17594, 137, 2, 47, "Solucion",ExpressionUUID->"b9b76f44-791e-49c2-ab5d-1fd6f22d9220"],
Cell[1014611, 17598, 129, 0, 32, "Text",ExpressionUUID->"20436fd4-3b24-4a6a-bd25-cf5adab3f355"],
Cell[1014743, 17600, 1733, 46, 162, "Output",ExpressionUUID->"dc4dd98f-3897-4d88-8ecc-607e1138bd78"],
Cell[1016479, 17648, 505, 10, 48, "Answer",ExpressionUUID->"74363d58-1cec-4637-890c-217afcd4798c"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1017033, 17664, 124, 4, 48, "Section",ExpressionUUID->"7c160334-12c8-4ec3-b28f-f29edb7a471c"],
Cell[1017160, 17670, 233, 3, 47, "Ejercicio",ExpressionUUID->"3851e17a-9c5b-46db-8dad-de29947d9023"],
Cell[CellGroupData[{
Cell[1017418, 17677, 137, 2, 47, "Solucion",ExpressionUUID->"b14e9792-8a37-4b40-ba25-8b2ee1f55210"],
Cell[1017558, 17681, 277, 8, 29, "Answer",ExpressionUUID->"4eef0250-e6d3-4e67-8970-f44849aa36f2"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1017884, 17695, 124, 4, 48, "Section",ExpressionUUID->"ecb5a028-b60f-43e9-916d-cd2900978b45"],
Cell[1018011, 17701, 723, 16, 96, "Text",ExpressionUUID->"603e723f-7bb9-45e0-9fdd-3f94a3399581"],
Cell[CellGroupData[{
Cell[1018759, 17721, 137, 2, 47, "Solucion",ExpressionUUID->"2876f2cc-7fd6-4775-8901-bf62f27b9644"],
Cell[1018899, 17725, 961, 27, 74, "Text",ExpressionUUID->"379c079c-9cf9-446b-a890-eb867cca069c"],
Cell[1019863, 17754, 118, 0, 29, "Answer",ExpressionUUID->"bd8893fb-cc40-4ad9-a6a1-59d114e93ead"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1020030, 17760, 984, 22, 56, "Section",ExpressionUUID->"e57b853b-70f0-4b29-a8c9-d6b3c0012d62"],
Cell[1021017, 17784, 475, 8, 53, "Text",ExpressionUUID->"1bcf6813-6643-43a1-be0d-f98cf00f49e3"],
Cell[1021495, 17794, 411, 6, 59, "Text",ExpressionUUID->"3bd619b7-9eaf-4528-b3f3-63942dae37bb"],
Cell[1021909, 17802, 1156, 25, 101, "Text",ExpressionUUID->"33368047-85a9-45ed-8a14-e4680a63ad65"],
Cell[1023068, 17829, 703, 12, 80, "Text",ExpressionUUID->"7d6a5a17-cb14-4505-96f2-bb258657358b"],
Cell[1023774, 17843, 557, 18, 58, "Text",ExpressionUUID->"d6610dd5-b595-45f5-83da-9f734bd98a96"],
Cell[1024334, 17863, 303, 4, 59, "Text",ExpressionUUID->"6b348fd0-a698-4b2b-90ff-610c42846600"],
Cell[1024640, 17869, 254, 4, 38, "Text",ExpressionUUID->"62aeeeb1-d348-40b1-bfbf-307f342833b8"],
Cell[1024897, 17875, 110511, 1919, 488, "Output",ExpressionUUID->"76acd88a-c8a2-43de-9be8-de9fbad94db0"],
Cell[1135411, 19796, 126, 0, 71, "Multimedia",ExpressionUUID->"ef389cb1-3dff-46f2-b4f2-51a453085893"],
Cell[1135540, 19798, 1058, 29, 80, "Text",ExpressionUUID->"5d8d3155-0363-4eb7-acf6-7a987698ea05"],
Cell[1136601, 19829, 625, 9, 80, "Text",ExpressionUUID->"e1fde836-80ca-4829-9961-5a1dab731d2a"]
}, Closed]],
Cell[CellGroupData[{
Cell[1137263, 19843, 96, 0, 48, "Section",ExpressionUUID->"91d84647-e145-46c0-a6ed-4d4cec561235"],
Cell[CellGroupData[{
Cell[1137384, 19847, 105, 0, 31, "Subsection",ExpressionUUID->"15504ff2-c1be-4c91-87d9-b08505ea3f6d"],
Cell[CellGroupData[{
Cell[1137514, 19851, 151, 2, 32, "ItemNumbered",ExpressionUUID->"3d5b082d-a81e-4187-9cd0-6a468ec9d659"],
Cell[CellGroupData[{
Cell[1137690, 19857, 432, 12, 38, "SubitemNumbered",ExpressionUUID->"410a9762-bc88-41b6-937e-67a28898193f"],
Cell[1138125, 19871, 476, 14, 38, "SubitemNumbered",ExpressionUUID->"18d2ca88-8716-4511-9ea7-24d3703c2167"],
Cell[1138604, 19887, 454, 13, 38, "SubitemNumbered",ExpressionUUID->"3c39f59c-cb46-488b-8627-1f04b1b2dd88"],
Cell[1139061, 19902, 460, 13, 38, "SubitemNumbered",ExpressionUUID->"324f64aa-baf0-4eff-bd9e-7fa925ac82e4"],
Cell[1139524, 19917, 473, 14, 38, "SubitemNumbered",ExpressionUUID->"517a30a1-91c3-4881-b30d-3f2ee8cac591"],
Cell[1140000, 19933, 407, 11, 38, "SubitemNumbered",ExpressionUUID->"66dc5b27-78c9-430a-99b9-ec4d93b5dac3"],
Cell[1140410, 19946, 403, 11, 38, "SubitemNumbered",ExpressionUUID->"8cc497b5-1d3d-4ef4-a7d7-5b31f82e08e5"],
Cell[1140816, 19959, 480, 13, 38, "SubitemNumbered",ExpressionUUID->"b701348e-fcc7-4d8c-973e-df13e2f66c8e"],
Cell[1141299, 19974, 386, 10, 38, "SubitemNumbered",ExpressionUUID->"f2f7ac73-54db-40e7-b41a-b14507783bc2"],
Cell[1141688, 19986, 406, 12, 38, "SubitemNumbered",ExpressionUUID->"99d78c2e-f48c-4e72-80b5-5eae4b6a89f6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1142143, 20004, 107, 0, 30, "Subsubsection",ExpressionUUID->"b40c3b78-4d74-4f9f-a444-922b52d93af3"],
Cell[CellGroupData[{
Cell[1142275, 20008, 151, 2, 32, "ItemNumbered",ExpressionUUID->"457e751e-0d57-4131-941a-93ac3c5d9916"],
Cell[1142429, 20012, 432, 12, 38, "SubitemNumbered",ExpressionUUID->"3998833d-23b9-479e-8981-b79510b57cf6"]
}, Open  ]],
Cell[1142876, 20027, 1315, 43, 100, "Text",ExpressionUUID->"ff40f8df-bb5c-4c72-8ecd-3c5e7a57d6f7"],
Cell[1144194, 20072, 476, 14, 38, "SubitemNumbered",ExpressionUUID->"e757638b-c079-49c3-872b-90e430b874dd"],
Cell[1144673, 20088, 1273, 42, 100, "Text",ExpressionUUID->"33ea99cf-5b17-4b85-b465-aad5d6065adb"],
Cell[1145949, 20132, 454, 13, 38, "SubitemNumbered",ExpressionUUID->"11daca84-3850-48fd-82a0-3cd0938e794f"],
Cell[1146406, 20147, 1083, 35, 80, "Text",ExpressionUUID->"0b0a88d1-f5db-4b30-a39c-67af9ef61d4e"],
Cell[1147492, 20184, 460, 13, 38, "SubitemNumbered",ExpressionUUID->"874df1aa-1df2-4c92-9a5c-24839c56e45c"],
Cell[1147955, 20199, 1316, 42, 100, "Text",ExpressionUUID->"7c9b84f3-700e-4139-9e65-d5a92e5bfb9c"],
Cell[1149274, 20243, 473, 14, 38, "SubitemNumbered",ExpressionUUID->"be2a5807-9234-40ad-a878-bf1ffa726fde"],
Cell[1149750, 20259, 1517, 51, 100, "Text",ExpressionUUID->"fc3e3179-a35e-43f1-8c1a-5e7f5d9a90ac"],
Cell[1151270, 20312, 407, 11, 38, "SubitemNumbered",ExpressionUUID->"b7b932b2-595c-4e62-9e7b-7265377d3872"],
Cell[1151680, 20325, 1797, 60, 122, "Text",ExpressionUUID->"e1f74090-bba6-429a-8c13-8c85c6cc1788"],
Cell[1153480, 20387, 403, 11, 38, "SubitemNumbered",ExpressionUUID->"47101a29-59fb-42be-b90b-6af13ba36ed2"],
Cell[1153886, 20400, 850, 27, 58, "Text",ExpressionUUID->"d6faa87f-db87-474e-b38b-0b2f5d02fc78"],
Cell[1154739, 20429, 480, 13, 38, "SubitemNumbered",ExpressionUUID->"acc51f68-8dc6-4f2c-b1ff-940b7992643a"],
Cell[1155222, 20444, 1730, 57, 122, "Text",ExpressionUUID->"090b0e0f-d558-4fd5-8f7e-0deeda9f27fa"],
Cell[1156955, 20503, 386, 10, 38, "SubitemNumbered",ExpressionUUID->"5ea88e4f-965a-4061-92d0-ddf3865ab2be"],
Cell[1157344, 20515, 1137, 38, 100, "Text",ExpressionUUID->"6ed2d0d1-4416-4cac-b1ef-cb0dac488675"],
Cell[1158484, 20555, 406, 12, 38, "SubitemNumbered",ExpressionUUID->"75474bb3-495b-4bc5-ac33-1c30eb71810c"],
Cell[1158893, 20569, 1386, 47, 100, "Text",ExpressionUUID->"7e4144cb-2813-430c-a3aa-8977f0fac3fe"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1160328, 20622, 108, 0, 31, "Subsection",ExpressionUUID->"25d8dabd-ebd3-4fbd-91de-a9d70794eb70"],
Cell[CellGroupData[{
Cell[1160461, 20626, 340, 7, 51, "ItemNumbered",ExpressionUUID->"f1744746-55e4-4597-b4e3-719103d21dc5",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1160804, 20635, 244, 6, 39, "SubitemNumbered",ExpressionUUID->"7c0a5963-3cb3-49f3-bbbf-040482ca86e0",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1161051, 20643, 215, 4, 39, "SubitemNumbered",ExpressionUUID->"09a775d4-8822-412d-b3ff-808fd0a1006e",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1161269, 20649, 258, 6, 39, "SubitemNumbered",ExpressionUUID->"e78d76cb-c0ce-4c72-91d4-c8de722bbe5e",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[1161542, 20658, 564, 10, 78, "ItemNumbered",ExpressionUUID->"7e6eab6a-1016-47e0-a097-50bd5cf35cb1",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[1162109, 20670, 773, 13, 79, "ItemNumbered",ExpressionUUID->"9d3e5ed4-0db3-47b6-ab91-18c748f5f5b1",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[1162885, 20685, 404, 8, 59, "ItemNumbered",ExpressionUUID->"066f7dce-d5f4-4ac7-8f8e-f478f0ee6fea",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[CellGroupData[{
Cell[1163314, 20697, 366, 7, 57, "ItemNumbered",ExpressionUUID->"e689267e-fb69-41f6-b0fb-2da3be318c86",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[1163683, 20706, 204, 4, 39, "SubitemNumbered",ExpressionUUID->"5fb46e4e-0bef-4218-8ddb-2b594a0ff347",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[1163890, 20712, 299, 7, 39, "SubitemNumbered",ExpressionUUID->"2616e68e-97b8-4fca-89ce-6cf5e503d20b",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}]
}, Open  ]],
Cell[1164204, 20722, 371, 7, 58, "ItemNumbered",ExpressionUUID->"9e4baf54-44f5-4fae-b9b5-47f854651de8",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[1164578, 20731, 383, 8, 59, "ItemNumbered",ExpressionUUID->"0e3ce146-ee54-42fd-ba12-3d3a105da3b7",
 CellGroupingRules->{GroupTogetherGrouping, 10005.}],
Cell[CellGroupData[{
Cell[1164986, 20743, 107, 0, 30, "Subsubsection",ExpressionUUID->"8f5db014-35ef-4424-b91a-f107f6661db1"],
Cell[CellGroupData[{
Cell[1165118, 20747, 340, 7, 51, "ItemNumbered",ExpressionUUID->"0852fee2-2181-43c9-91ef-8b429b828ccf",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1165461, 20756, 244, 6, 39, "SubitemNumbered",ExpressionUUID->"31b6f07e-37f9-434f-b9cb-98639571c249",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1165708, 20764, 1131, 33, 57, "ItemParagraph",ExpressionUUID->"6208e03b-8bb8-48c5-b765-ea010b5b0eaa",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1166842, 20799, 215, 4, 39, "SubitemNumbered",ExpressionUUID->"72d72d48-d39f-487f-bbca-6bca056f6940",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1167060, 20805, 263, 6, 38, "ItemParagraph",ExpressionUUID->"28f08983-6b5c-4590-b07c-0a790f73ea9a",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1167326, 20813, 258, 6, 39, "SubitemNumbered",ExpressionUUID->"3d058294-5354-41c1-914c-3e1800062a09",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1167587, 20821, 291, 6, 38, "ItemParagraph",ExpressionUUID->"975084ee-c00d-4151-b486-5ca32af24404",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[1167893, 20830, 564, 10, 78, "ItemNumbered",ExpressionUUID->"b9982893-1a40-4665-ac05-d299791e8575",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[1168460, 20842, 1396, 43, 114, "ItemParagraph",ExpressionUUID->"81710567-86f1-462e-9b6f-2b3e407ab091",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[1169859, 20887, 773, 13, 79, "ItemNumbered",ExpressionUUID->"9d1d2ce7-2c36-41b2-ba32-40ed4972a3d7",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[1170635, 20902, 2217, 66, 228, "ItemParagraph",ExpressionUUID->"0e3938dc-9c48-4bd5-818a-cf14af7e12aa",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[1172855, 20970, 404, 8, 59, "ItemNumbered",ExpressionUUID->"0118fbf2-937d-4305-afe0-6b949f4937b9",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[1173262, 20980, 1810, 54, 133, "ItemParagraph",ExpressionUUID->"a4a7f8dd-48fa-4b82-ae44-ef0311cdc1bf",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[1175075, 21036, 366, 7, 57, "ItemNumbered",ExpressionUUID->"71fba268-d6c5-45c1-87c3-1fb856b225d5",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[1175444, 21045, 204, 4, 39, "SubitemNumbered",ExpressionUUID->"fe7eeb62-1d2b-41dd-9e55-d0dadcc00a3d",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[1175651, 21051, 666, 18, 95, "ItemParagraph",ExpressionUUID->"92d40734-ed99-4bb2-84b6-901a1df0e557",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[1176320, 21071, 299, 7, 39, "SubitemNumbered",ExpressionUUID->"c8e3534f-5188-4a50-b7a6-64fda85c1016",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[1176622, 21080, 648, 14, 57, "ItemParagraph",ExpressionUUID->"ab3331fc-3ef8-4485-be5e-28993c667d6b",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[1177273, 21096, 371, 7, 58, "ItemNumbered",ExpressionUUID->"ffaef68f-3c79-43f3-986f-985de4bf6c1c",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[1177647, 21105, 760, 20, 76, "ItemParagraph",ExpressionUUID->"8f3d7e21-a0ef-42ca-9453-79cb59654f56",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[1178410, 21127, 383, 8, 59, "ItemNumbered",ExpressionUUID->"dd140f4d-3502-45c5-ae76-c8193411ed6c",
 CellGroupingRules->{GroupTogetherGrouping, 10005.}],
Cell[1178796, 21137, 927, 26, 95, "ItemParagraph",ExpressionUUID->"f8752e98-3c81-49b3-8e77-4d64f013b236",
 CellGroupingRules->{GroupTogetherGrouping, 10005.}]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1179796, 21171, 143, 4, 75, "Chapter",ExpressionUUID->"09da38fa-55ac-47fa-8c33-a6ba3d43bcb1"],
Cell[CellGroupData[{
Cell[1179964, 21179, 99, 0, 61, "Subchapter",ExpressionUUID->"9a7d07df-a6e8-4849-a63d-4e921f493230"],
Cell[1180066, 21181, 2211, 32, 300, "Resumen",ExpressionUUID->"92373a9d-8e16-4c3d-9094-b37635588367"]
}, Closed]],
Cell[CellGroupData[{
Cell[1182314, 21218, 128, 0, 61, "Subchapter",ExpressionUUID->"04ea1b47-8681-4362-9c48-d182b01c7738"],
Cell[1182445, 21220, 382, 8, 53, "Text",ExpressionUUID->"267b656e-f67e-41fd-ba27-9a45eb4c71bb"]
}, Closed]],
Cell[CellGroupData[{
Cell[1182864, 21233, 124, 4, 48, "Section",ExpressionUUID->"88bb9f53-5b26-458d-b670-1fea1119408d"],
Cell[1182991, 21239, 895, 19, 95, "Text",ExpressionUUID->"e4cc85fb-e7df-4034-9f57-feb2f8ced15a"],
Cell[1183889, 21260, 8019, 196, 526, "Output",ExpressionUUID->"e75530f8-1fa5-4370-815a-be0461272420"],
Cell[1191911, 21458, 140, 1, 47, "Ejercicio",ExpressionUUID->"d39c0916-847a-4d42-ad0f-6a662c6b23a1"],
Cell[1192054, 21461, 18494, 386, 81, "Output",ExpressionUUID->"be4b66bd-f23f-4146-a8a9-b6bb9feea1da"],
Cell[1210551, 21849, 14604, 264, 81, "Output",ExpressionUUID->"1810d36c-6970-4304-85d0-7191ce3ecbea"],
Cell[CellGroupData[{
Cell[1225180, 22117, 137, 2, 47, "Solucion",ExpressionUUID->"3c322ca8-db4c-4978-9207-489418c3705b"],
Cell[1225320, 22121, 521, 10, 53, "Text",ExpressionUUID->"119770d8-452b-436f-820b-f3683e607556"],
Cell[1225844, 22133, 683, 22, 80, "Text",ExpressionUUID->"5f6cb209-762d-4dec-93af-da202cc5ed13"],
Cell[1226530, 22157, 879, 24, 59, "Text",ExpressionUUID->"7146e24d-b498-457c-ab1c-dcdbb8d98c24"],
Cell[1227412, 22183, 14604, 264, 81, "Output",ExpressionUUID->"f4636958-8b5e-4447-929f-bdffd37927c7"],
Cell[1242019, 22449, 579, 16, 38, "Text",ExpressionUUID->"e0218d29-42e4-41a7-a944-507b15930b25"],
Cell[1242601, 22467, 577, 18, 60, "Text",ExpressionUUID->"77121447-e321-463d-bf52-4e165e635e17"],
Cell[1243181, 22487, 470, 10, 59, "Text",ExpressionUUID->"c982524e-c5ae-4b1f-953d-99c80d7e8026"],
Cell[1243654, 22499, 931, 26, 60, "Text",ExpressionUUID->"ad060da4-7049-4801-96ed-0a8f2a9b6b7e"],
Cell[1244588, 22527, 12545, 210, 431, "Answer",ExpressionUUID->"38e49cdd-d77e-49f6-930e-c0f61af61d6a"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1257182, 22743, 124, 4, 48, "Section",ExpressionUUID->"7b665c53-6bfc-4669-98e2-a13e82233c88"],
Cell[1257309, 22749, 240, 4, 32, "Text",ExpressionUUID->"a3341e01-f29a-4469-843b-1e0886d19d39"],
Cell[1257552, 22755, 190, 3, 47, "Ejercicio",ExpressionUUID->"90efae9a-6bdc-414d-99c6-ec34f29ffee7"],
Cell[CellGroupData[{
Cell[1257767, 22762, 137, 2, 47, "Solucion",ExpressionUUID->"c42eb4d9-84b4-4317-b6d4-4ab7feb45018"],
Cell[1257907, 22766, 886, 21, 53, "Text",ExpressionUUID->"ca332b4f-5b10-4fdd-b9c1-300532078824"],
Cell[1258796, 22789, 384, 8, 38, "Text",ExpressionUUID->"824baea9-760d-40f9-a60c-b420a6532be2"],
Cell[1259183, 22799, 10503, 247, 602, "Answer",ExpressionUUID->"f2f00a8b-8d3d-4d4c-87b5-a782dd36c51b"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1269735, 23052, 167, 5, 48, "Section",ExpressionUUID->"1b16df54-8a28-444c-acf1-4cea00671fd8"],
Cell[1269905, 23059, 466, 6, 74, "Text",ExpressionUUID->"6c059eba-bca0-4506-a7f2-65e7bd564b24"],
Cell[1270374, 23067, 142, 1, 47, "Ejercicio",ExpressionUUID->"221ef595-bec3-4c54-b55a-5bbd1c3ca917"],
Cell[1270519, 23070, 43830, 734, 126, "Output",ExpressionUUID->"89c7d376-9db2-439d-91a3-c4610d6718cc"],
Cell[CellGroupData[{
Cell[1314374, 23808, 137, 2, 47, "Solucion",ExpressionUUID->"99f1d00a-f54d-497c-ad93-15fbca5a7459"],
Cell[1314514, 23812, 832, 19, 62, "Text",ExpressionUUID->"18159425-1813-4096-a8c5-96ec3c2932b7"],
Cell[1315349, 23833, 16872, 370, 602, "Answer",ExpressionUUID->"9572f4ec-0d9d-4d2b-ad17-de6e1d81e302"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1332270, 24209, 168, 5, 48, "Section",ExpressionUUID->"6b371664-4488-4bb7-8e2d-b742550aa6bc"],
Cell[1332441, 24216, 496, 7, 74, "Text",ExpressionUUID->"210565e9-b4b4-4585-9a3d-c6a9b2fba6f8"],
Cell[1332940, 24225, 97, 0, 38, "Text",ExpressionUUID->"1536b16b-83f2-4743-8044-57e2462c86f2"],
Cell[1333040, 24227, 1648, 41, 262, "Output",ExpressionUUID->"928d3ba8-1155-4a27-ad53-0a6a45d13280"],
Cell[1334691, 24270, 142, 1, 47, "Ejercicio",ExpressionUUID->"e6936e0d-4dde-42f9-b080-39e06b5158e5"],
Cell[1334836, 24273, 19460, 350, 58, "Output",ExpressionUUID->"6165f02a-0135-4798-ad46-e1ea1980b7c5"],
Cell[CellGroupData[{
Cell[1354321, 24627, 137, 2, 47, "Solucion",ExpressionUUID->"d77d49bf-be0e-456d-a809-c1b7bca268a6"],
Cell[1354461, 24631, 421, 10, 53, "Text",ExpressionUUID->"87cc5a04-fc47-4dbd-9c5a-b17c7624e2c1"],
Cell[1354885, 24643, 582, 11, 89, "Text",ExpressionUUID->"58ecea7e-e521-4249-b349-f1aa086bc1bc"],
Cell[1355470, 24656, 406, 6, 61, "Text",ExpressionUUID->"80a5b0e9-f95b-4203-a356-864ed577db61"],
Cell[1355879, 24664, 6509, 120, 386, "Output",ExpressionUUID->"40851dea-e15c-409d-a33b-483f7c721a7f"],
Cell[1362391, 24786, 112, 0, 38, "Text",ExpressionUUID->"7e45c7bb-101f-493d-9a4b-020590e744a7"],
Cell[1362506, 24788, 1590, 39, 251, "Output",ExpressionUUID->"5e6d8289-e0c2-46b2-868b-8b491d64ec38"],
Cell[1364099, 24829, 180, 3, 38, "Text",ExpressionUUID->"958224b3-0fb8-4a42-ac53-0225b8beb6cf"],
Cell[CellGroupData[{
Cell[1364304, 24836, 101, 0, 39, "Item",ExpressionUUID->"bece8b87-dadf-453b-bff1-b3af948acea5"],
Cell[1364408, 24838, 106, 0, 39, "Item",ExpressionUUID->"e082378e-92c7-413a-911c-e77eb240a21d"],
Cell[1364517, 24840, 90, 0, 39, "Item",ExpressionUUID->"5960d7d7-14c6-4003-b38b-a2b269de9b55"]
}, Open  ]],
Cell[1364622, 24843, 645, 20, 47, "Text",ExpressionUUID->"b9741235-45b4-4938-ba2a-8b652d1d5a9c"],
Cell[1365270, 24865, 476, 13, 50, "Text",ExpressionUUID->"1ea38985-27b9-441a-bc2c-8fcaeea0a02e"],
Cell[1365749, 24880, 717, 21, 47, "Text",ExpressionUUID->"ac5aadfe-45ce-423f-a9b5-44626a552484"],
Cell[1366469, 24903, 727897, 12047, 602, "Answer",ExpressionUUID->"3208113f-6768-42f0-a07f-03bd50fa097d"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2094415, 36956, 165, 5, 48, "Section",ExpressionUUID->"0779930c-f5d8-4834-bd7d-033f323dcae0"],
Cell[2094583, 36963, 205, 3, 32, "Text",ExpressionUUID->"3d046369-e1a8-4ba7-869f-734b2a96d813"],
Cell[2094791, 36968, 1530, 55, 101, "Ejercicio",ExpressionUUID->"1263209f-5e95-4dce-b0b2-a304fb1fb7eb"],
Cell[2096324, 37025, 49833, 828, 92, "Output",ExpressionUUID->"42f7b687-6f4e-401e-bdc8-d24a922575d0"],
Cell[CellGroupData[{
Cell[2146182, 37857, 137, 2, 47, "Solucion",ExpressionUUID->"c7fec79a-7599-41c2-84b6-b724a7757e09"],
Cell[2146322, 37861, 181, 3, 32, "Text",ExpressionUUID->"bb0e4cc8-cf92-467f-ba65-35ed3ef5e101"],
Cell[2146506, 37866, 584, 18, 50, "ItemNumbered",ExpressionUUID->"6042dc79-3dfe-4379-a383-33b68c85d000"],
Cell[2147093, 37886, 2192, 73, 206, "Text",ExpressionUUID->"435d1c96-ff42-4497-8073-a6af4f02de1b"],
Cell[2149288, 37961, 71, 0, 38, "Text",ExpressionUUID->"858a52f1-51a8-48d9-b815-65e0195d7614"],
Cell[2149362, 37963, 891, 33, 50, "ItemNumbered",ExpressionUUID->"3f5177fc-fff0-4c43-a1fb-1f52b1ed303c"],
Cell[2150256, 37998, 2064, 70, 110, "Text",ExpressionUUID->"0b9da39e-1e18-4585-b384-0081085e4338"],
Cell[2152323, 38070, 102, 0, 38, "Text",ExpressionUUID->"8862c48c-8df7-47f3-9478-f4068e33d3af"],
Cell[2152428, 38072, 739454, 12242, 602, "Answer",ExpressionUUID->"c3df68af-a094-4ada-844f-7a521407064c"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2891931, 50320, 974, 22, 55, "Section",ExpressionUUID->"ddffb911-82ad-4060-a43b-89e8d6592e4a"],
Cell[2892908, 50344, 964, 26, 60, "Text",ExpressionUUID->"3e70d6cd-7e75-437e-a73f-bb613fa1fa0c"],
Cell[CellGroupData[{
Cell[2893897, 50374, 488, 9, 57, "Item",ExpressionUUID->"0806ef34-8e05-4bab-8ba1-6e8e994b02a9",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2894388, 50385, 739, 19, 71, "Item",ExpressionUUID->"a3b62239-0a49-407f-bd92-ab42e6a5ade6",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2895130, 50406, 756, 19, 72, "Item",ExpressionUUID->"3497274e-c01d-4d4f-8e09-13db98d0ff6c",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2895889, 50427, 1340, 39, 85, "Item",ExpressionUUID->"40d793e6-dbd6-4099-bb09-a5dfb6a2db47",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2897232, 50468, 638, 12, 76, "Item",ExpressionUUID->"8798b67f-2fe4-4ffa-9479-23dcc685ea5b",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2897873, 50482, 929, 26, 121, "PildDer",ExpressionUUID->"ac92c971-b6e0-4135-bf31-ea1a279334f2",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2898805, 50510, 320, 7, 39, "Item",ExpressionUUID->"bd4d3f84-ff73-46b7-84fe-02b156094018",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2899128, 50519, 222, 8, 38, "ItemNumbered",ExpressionUUID->"6cc212c4-6108-4e44-8e8b-442545b4e42e",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2899353, 50529, 254, 8, 38, "ItemNumbered",ExpressionUUID->"a40f9d0e-a6f7-4d44-aeb4-83b983a4705c",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2899610, 50539, 267, 8, 38, "ItemNumbered",ExpressionUUID->"4ab3374c-96bc-4e38-98d3-1036c5a70542",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2899880, 50549, 218, 7, 38, "ItemNumbered",ExpressionUUID->"9b364dd1-3a9e-468a-a1ab-b9ec80e20883",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[2900101, 50558, 268, 8, 38, "ItemNumbered",ExpressionUUID->"233b0fa3-7ecb-4b0b-9dae-adc8def2cd27",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[2900384, 50569, 173, 3, 72, "Multimedia",ExpressionUUID->"927eb87b-d462-4609-8335-7d2c239ba0cf"],
Cell[2900560, 50574, 177440, 3026, 520, "Output",ExpressionUUID->"bb797d71-da87-4eeb-b8e2-8648e6372431"]
}, Closed]],
Cell[CellGroupData[{
Cell[3078037, 53605, 96, 0, 48, "Section",ExpressionUUID->"b9a14b96-6801-4ccf-ab20-cec0aff50123"],
Cell[CellGroupData[{
Cell[3078158, 53609, 105, 0, 31, "Subsection",ExpressionUUID->"3dc42486-499a-4f52-bb9c-9b21d0140b51"],
Cell[CellGroupData[{
Cell[3078288, 53613, 151, 2, 32, "ItemNumbered",ExpressionUUID->"6ca03050-895f-40c6-b9c5-58590eb12b26"],
Cell[CellGroupData[{
Cell[3078464, 53619, 452, 13, 50, "SubitemNumbered",ExpressionUUID->"11c63035-62d6-4dcd-9833-ea6f37853df1"],
Cell[3078919, 53634, 613, 18, 50, "SubitemNumbered",ExpressionUUID->"2875b9e0-5ba9-42aa-b6e7-3cfc37f4c490"],
Cell[3079535, 53654, 389, 10, 47, "SubitemNumbered",ExpressionUUID->"046eb7b0-1a55-48c3-a406-2a1d2d3840df"],
Cell[3079927, 53666, 340, 8, 45, "SubitemNumbered",ExpressionUUID->"901b0b5a-2ffa-418e-9043-4183d8c9d0f4"],
Cell[3080270, 53676, 680, 23, 51, "SubitemNumbered",ExpressionUUID->"b27caf68-5d98-4df1-8f98-daea0f2a2c54"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3080999, 53705, 107, 0, 30, "Subsubsection",ExpressionUUID->"f856b9e7-79dd-4e43-8185-bf37989a0122"],
Cell[3081109, 53707, 211, 5, 32, "ItemNumbered",ExpressionUUID->"38ed4b5b-ac8a-4ab9-82bb-79e2ff03f44a",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[3081345, 53716, 512, 16, 50, "SubitemNumbered",ExpressionUUID->"2cec5b77-6163-43f5-b0a9-fa2331b6fb04",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[3081860, 53734, 2075, 69, 208, "Text",ExpressionUUID->"1bec73b3-0487-45d2-8a03-21f0c03cfbef",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[3083972, 53808, 673, 21, 50, "SubitemNumbered",ExpressionUUID->"42676e6f-0297-448a-a676-84e041d2f2b2",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[3084648, 53831, 2304, 73, 178, "Text",ExpressionUUID->"bc4b7b76-4363-484c-9d15-8126d733d83d",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[3086989, 53909, 449, 13, 47, "SubitemNumbered",ExpressionUUID->"81d1c21e-a729-49c3-990f-18d6acbaf47f",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[3087441, 53924, 1014, 33, 112, "Text",ExpressionUUID->"473ad791-35fd-4454-a9e7-d58ed6588d83",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[3088492, 53962, 400, 11, 45, "SubitemNumbered",ExpressionUUID->"d17f6a3f-0b6d-40d8-aef3-0e9304b2b2b1",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[3088895, 53975, 1008, 33, 108, "Text",ExpressionUUID->"da0b41b6-0386-4e81-81a4-8cffe0be3361",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[3089940, 54013, 755, 25, 51, "SubitemNumbered",ExpressionUUID->"773f9723-c1a7-40d4-9de9-44a09d23411e",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3090698, 54040, 1788, 63, 115, "Text",ExpressionUUID->"503a75db-a4fd-4fa3-94f6-07b910b492b9",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3092547, 54110, 108, 0, 31, "Subsection",ExpressionUUID->"0a0fe31b-f81b-4636-8ae2-8c0054a84130"],
Cell[CellGroupData[{
Cell[3092680, 54114, 410, 6, 53, "ItemNumbered",ExpressionUUID->"43f1cd94-e89e-4a47-81c9-b2c8021a01cf"],
Cell[3093093, 54122, 621, 9, 96, "ItemNumbered",ExpressionUUID->"0ec180ee-cd98-41d7-bf50-4fa562ee132a"],
Cell[3093717, 54133, 660, 14, 69, "ItemNumbered",ExpressionUUID->"235760c2-28ac-4850-bca7-43e60f2e622f"],
Cell[3094380, 54149, 627, 8, 78, "ItemNumbered",ExpressionUUID->"0fbaad99-14d7-4ec1-afae-88b0f271f521"],
Cell[3095010, 54159, 8301, 142, 181, "ItemNumbered",ExpressionUUID->"1eda6b5e-b470-4a83-9bde-0c5556ad8c58"],
Cell[3103314, 54303, 284, 4, 58, "ItemNumbered",ExpressionUUID->"143cd452-392b-447c-8827-46e5b7d3fe02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3103635, 54312, 107, 0, 30, "Subsubsection",ExpressionUUID->"7b3dde16-bbc9-487e-8258-c6452b8601e2"],
Cell[3103745, 54314, 410, 6, 53, "ItemNumbered",ExpressionUUID->"2e69dff6-b4fd-454b-85d9-e83746d469c5"],
Cell[3104158, 54322, 235, 6, 38, "ItemParagraph",ExpressionUUID->"368f6eb0-c545-47f6-ba39-aa52974149bc",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3104396, 54330, 524, 14, 51, "ItemParagraph",ExpressionUUID->"148bd60a-31cf-481f-b618-12c088f4c625",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3104923, 54346, 267, 6, 38, "ItemParagraph",ExpressionUUID->"17badced-6c54-417f-b30c-9508d675f986",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3105193, 54354, 610, 19, 51, "ItemParagraph",ExpressionUUID->"96a12d4a-e3e9-4f6b-acc5-8c52914e764c",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3105806, 54375, 255, 6, 38, "ItemParagraph",ExpressionUUID->"564c3c40-6326-4bf8-b226-c96a7170dd5b",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3106064, 54383, 659, 22, 49, "ItemParagraph",ExpressionUUID->"85e01b76-787f-48ed-bad8-e8b5c64309ca",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3106726, 54407, 621, 9, 96, "ItemNumbered",ExpressionUUID->"7274faa5-ce56-4eaa-ba9b-f13a77f9780b"],
Cell[3107350, 54418, 266, 6, 38, "ItemParagraph",ExpressionUUID->"74bd5675-f6bd-4df6-aba0-449786754b5b",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[3107619, 54426, 178, 3, 39, "Item",ExpressionUUID->"48b2763e-f72c-4dc3-890d-1e0e4edaf49d",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[3107800, 54431, 443, 13, 50, "Item",ExpressionUUID->"fedd6438-2458-4431-8b8b-9c7ba0a0bbd8",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[3108246, 54446, 519, 16, 50, "Item",ExpressionUUID->"d5d7f7ae-be4c-49f6-8f3b-76cf8c2b5ee9",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[3108768, 54464, 760, 25, 50, "Item",ExpressionUUID->"c5c9b629-ed4b-4539-bdda-441fc076c91c",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[3109531, 54491, 343, 10, 45, "ItemParagraph",ExpressionUUID->"62185706-bd7c-47c3-bd62-59854c3c7c6a",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[3109877, 54503, 249, 6, 38, "ItemParagraph",ExpressionUUID->"9abdb937-548f-4bac-9780-f36d7d53f7d4",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[3110129, 54511, 660, 14, 69, "ItemNumbered",ExpressionUUID->"ea1ee2bb-5e0b-476d-90ef-5fb77b49bafa"],
Cell[CellGroupData[{
Cell[3110814, 54529, 324, 7, 57, "ItemParagraph",ExpressionUUID->"7b562138-cc6c-4334-bd48-b22905395dd0",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[3111141, 54538, 523, 13, 56, "ItemParagraph",ExpressionUUID->"5ac1af79-5dfe-470f-aa70-8704d268c0a9",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[3111667, 54553, 1041, 37, 51, "ItemParagraph",ExpressionUUID->"736ccfd4-f019-4c4b-a4f9-fe0c02dd818a",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[3112711, 54592, 220, 5, 38, "ItemParagraph",ExpressionUUID->"7b837bba-9053-4fa7-b9ee-13a519ce45c2",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}]
}, Open  ]],
Cell[3112946, 54600, 627, 8, 78, "ItemNumbered",ExpressionUUID->"e4d78ded-668f-4f14-a2a5-4486e9710b3c"],
Cell[3113576, 54610, 614, 14, 57, "ItemParagraph",ExpressionUUID->"99ddde0f-8028-4124-8e8b-6a76ea089a30",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[3114193, 54626, 17246, 289, 91, "ItemParagraph",ExpressionUUID->"6a0033d5-9b1e-4a29-b0ac-dc7adfd46c78",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[3131442, 54917, 467, 11, 38, "ItemParagraph",ExpressionUUID->"19e6c36c-4b7b-4d1b-b533-bafea1c3c990",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[3131912, 54930, 21313, 356, 85, "ItemParagraph",ExpressionUUID->"d7dfef7e-4b33-4ca1-b7ea-cc99b91207df",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[3153228, 55288, 619, 13, 76, "ItemParagraph",ExpressionUUID->"9494bbc1-e625-4f5e-a427-112ab257ab38",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[3153850, 55303, 24655, 410, 90, "ItemParagraph",ExpressionUUID->"294003e4-21cf-4a91-8d95-6822635409b6",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[3178508, 55715, 416, 9, 76, "ItemParagraph",ExpressionUUID->"c72f33d3-3271-42c4-b12b-6e3b86828d97",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[3178927, 55726, 27596, 459, 83, "ItemParagraph",ExpressionUUID->"240d7ace-fe87-471e-bdc1-49d11c41b0c4",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[3206526, 56187, 651, 14, 58, "ItemParagraph",ExpressionUUID->"a6ea9130-c798-43aa-8ed5-d4a253c93c75",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[CellGroupData[{
Cell[3207202, 56205, 8325, 145, 165, "ItemNumbered",ExpressionUUID->"3442f842-4ab5-4f4f-b81f-0ec5b2d7c1bc",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[3215530, 56352, 580, 18, 50, "ItemParagraph",ExpressionUUID->"710fb614-ea68-4067-bf55-6bf0ffaed8c2",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[3216113, 56372, 604, 17, 50, "ItemParagraph",ExpressionUUID->"4cb29f36-79c9-4e80-a572-03695044ff7a",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[3216720, 56391, 543, 18, 50, "ItemParagraph",ExpressionUUID->"8b768377-b937-4eca-806d-5d4fad57346d",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}],
Cell[3217266, 56411, 199, 4, 38, "ItemParagraph",ExpressionUUID->"58bb7d8c-2c8f-407d-8d29-d974ef4b2091",
 CellGroupingRules->{GroupTogetherGrouping, 10004.}]
}, Open  ]],
Cell[3217480, 56418, 284, 4, 58, "ItemNumbered",ExpressionUUID->"6c29d342-6700-4933-a98b-76400bb86ddf"],
Cell[3217767, 56424, 213, 3, 38, "ItemParagraph",ExpressionUUID->"8117e6c2-8d7e-4a4f-a3b7-aea0c0b97dc4"],
Cell[3217983, 56429, 398, 11, 50, "ItemParagraph",ExpressionUUID->"f6433b83-cb28-49c5-9367-c5b8b4f2d6e3"],
Cell[3218384, 56442, 534, 16, 50, "ItemParagraph",ExpressionUUID->"da56c835-43b0-4e5d-960b-181e239b8415"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3218991, 56466, 145, 4, 75, "Chapter",ExpressionUUID->"24ec93b5-fb99-41fe-89e3-f4dc4d416bd7"],
Cell[CellGroupData[{
Cell[3219161, 56474, 99, 0, 61, "Subchapter",ExpressionUUID->"ad0a0915-7cdb-46d0-a01e-7c47817227fc"],
Cell[3219263, 56476, 2240, 40, 244, "Resumen",ExpressionUUID->"0b31464f-daf9-4a41-bea9-d2dedaeffbcb"],
Cell[3221506, 56518, 406, 8, 68, "Resumen",ExpressionUUID->"1eec7e06-8a37-47eb-84a0-2bbc3247eb82"],
Cell[3221915, 56528, 721, 12, 82, "Resumen",ExpressionUUID->"aa4a0ccd-d83d-4311-9310-b3b0bb1f6b81"],
Cell[3222639, 56542, 823, 14, 101, "Resumen",ExpressionUUID->"93a2959f-59bf-415a-a2fd-9ffa1465f251"],
Cell[3223465, 56558, 1395, 19, 158, "Resumen",ExpressionUUID->"eae281a1-7d83-462c-9c7c-01eea32bf652"]
}, Closed]],
Cell[CellGroupData[{
Cell[3224897, 56582, 130, 0, 61, "Subchapter",ExpressionUUID->"25189776-b51d-4f21-bd36-b1dfa95e26fe"],
Cell[3225030, 56584, 520, 7, 74, "Text",ExpressionUUID->"ece4b8c1-034a-49dd-b606-ba07181da630"],
Cell[3225553, 56593, 7088, 120, 117, "Text",ExpressionUUID->"f35c5a4e-4f1e-437b-a62a-eff252c3214b"],
Cell[3232644, 56715, 154, 2, 38, "Text",ExpressionUUID->"b1b17f23-c919-4423-a1bb-b8a89e93060b"],
Cell[CellGroupData[{
Cell[3232823, 56721, 279, 4, 57, "Item",ExpressionUUID->"d0efc809-d811-4c0f-8ca7-2e0c9624bdaf"],
Cell[3233105, 56727, 250, 4, 39, "Item",ExpressionUUID->"339884bb-f0bc-413b-9aec-d541494024f0"]
}, Open  ]],
Cell[3233370, 56734, 7943, 135, 455, "Output",ExpressionUUID->"ea8d238a-5683-4eda-b1f6-7d740a97e0a8"],
Cell[CellGroupData[{
Cell[3241338, 56873, 126, 0, 39, "Item",ExpressionUUID->"1bd0a800-59ce-4c9f-bc7e-25c9783011a9"],
Cell[3241467, 56875, 204, 3, 39, "Item",ExpressionUUID->"9ba314cb-2d9d-40d8-8ab1-0d20f7be2f12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3241708, 56883, 86, 0, 69, "Section",ExpressionUUID->"323857d0-e000-4c77-b4ce-1cbe62234a15"],
Cell[3241797, 56885, 297, 6, 47, "Ejercicio",ExpressionUUID->"58e384cb-d67b-437f-a0f2-2e0ad727d173"],
Cell[CellGroupData[{
Cell[3242119, 56895, 137, 2, 47, "Solucion",ExpressionUUID->"61dba381-ada5-492d-9fbc-4182cb5a1f0a"],
Cell[3242259, 56899, 326, 5, 53, "Text",ExpressionUUID->"2d27742e-1839-462a-b5c3-b49548090082"],
Cell[3242588, 56906, 19198, 382, 670, "Output",ExpressionUUID->"411ed81a-2536-40ce-8904-5a63acdc1565"],
Cell[3261789, 57290, 1424, 43, 87, "Answer",ExpressionUUID->"e190f9a0-907e-46d0-a266-b473bdfb5f89"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3263262, 57339, 105, 0, 48, "Section",ExpressionUUID->"ee6efc1a-fbe9-495e-8241-c110a130b5b9"],
Cell[3263370, 57341, 151, 2, 40, "Cuadro/Titulo",ExpressionUUID->"57a85bd4-a35b-49fe-a5ab-655c8d048366"],
Cell[3263524, 57345, 8327, 166, 329, "Cuadro/Contenido",ExpressionUUID->"97277eac-f508-4f85-8176-e10661970b3c"]
}, Closed]],
Cell[CellGroupData[{
Cell[3271888, 57516, 86, 0, 48, "Section",ExpressionUUID->"88c99d76-d36e-41ab-904d-4809dc9c55a0"],
Cell[3271977, 57518, 225, 5, 47, "Ejercicio",ExpressionUUID->"03aebb68-39eb-4d45-b327-0c5a9c4bb82f"],
Cell[3272205, 57525, 286, 4, 53, "Text",ExpressionUUID->"f6b27ab3-cf4e-4c7f-833c-796291b1a744"],
Cell[3272494, 57531, 2839, 62, 440, "Output",ExpressionUUID->"887ba9b4-e86d-4738-96a0-181bba478d6a"],
Cell[3275336, 57595, 117, 0, 38, "Text",ExpressionUUID->"82f1aebc-cf34-4cbe-93da-12e313f7b6c6"],
Cell[3275456, 57597, 1953, 56, 196, "Output",ExpressionUUID->"4a6c261a-2bbe-4f25-80d8-c5d4e8b1c7e5"],
Cell[CellGroupData[{
Cell[3277434, 57657, 137, 2, 47, "Solucion",ExpressionUUID->"64404e76-e514-423b-8a1a-418e46672ad5"],
Cell[CellGroupData[{
Cell[3277596, 57663, 94, 0, 30, "Subsubsection",ExpressionUUID->"26130554-14c1-47a7-b4d8-2b4b7465a9fd"],
Cell[3277693, 57665, 123, 0, 32, "Text",ExpressionUUID->"a6a97fb9-0ed3-413c-ba5d-8edbac482ed2"],
Cell[3277819, 57667, 4142, 89, 500, "Output",ExpressionUUID->"d4c23366-63c4-4dca-8bf0-05efb87722b4"],
Cell[3281964, 57758, 130, 0, 38, "Text",ExpressionUUID->"3ed00e8f-52c4-4a8f-83cf-da357dee88a5"],
Cell[3282097, 57760, 3330, 86, 251, "Output",ExpressionUUID->"8d1f2e12-75da-458f-9289-caf3a68ff9ce"],
Cell[3285430, 57848, 335, 5, 59, "Text",ExpressionUUID->"35a4308d-046d-4837-a31d-23b31a5ddce1"]
}, Closed]],
Cell[CellGroupData[{
Cell[3285802, 57858, 112, 0, 30, "Subsubsection",ExpressionUUID->"06b3c4a1-f343-4e7b-b7ea-3e5ffe663ecf"],
Cell[3285917, 57860, 125, 0, 32, "Text",ExpressionUUID->"aebd37b9-59d8-41d9-b382-4e7c34469cca"],
Cell[3286045, 57862, 3640, 64, 239, "Text",ExpressionUUID->"0a5886df-7a20-4031-a166-8ac59fd5f312"],
Cell[3289688, 57928, 283, 8, 38, "Text",ExpressionUUID->"a59dc7ee-ec2c-4497-842a-e78e3bc0b9ed"],
Cell[3289974, 57938, 680, 22, 82, "Text",ExpressionUUID->"759ed06d-5219-4957-a920-32787aea75b4"],
Cell[3290657, 57962, 206, 3, 38, "Text",ExpressionUUID->"509c252e-cb3c-414f-aa27-80727b213338"],
Cell[3290866, 57967, 469, 15, 66, "Text",ExpressionUUID->"71195e2a-d162-41b4-a02d-340481e3af2e"],
Cell[3291338, 57984, 326, 7, 59, "Text",ExpressionUUID->"11e1a80b-aa62-418d-80c7-8a4568b8b08c"],
Cell[3291667, 57993, 516, 14, 64, "Text",ExpressionUUID->"d30c031b-4cd8-42fe-9f0c-4c16b260ecb1"],
Cell[3292186, 58009, 141, 1, 38, "Text",ExpressionUUID->"5f7e04c1-3132-4503-b4a7-bad2868ea2da"],
Cell[3292330, 58012, 392, 12, 56, "Text",ExpressionUUID->"0b535d26-bb35-4ac5-91c5-9299e5d92eb7"],
Cell[3292725, 58026, 179, 3, 38, "Text",ExpressionUUID->"7114a5ed-4212-44cd-8e09-97cfc9b0076e"],
Cell[3292907, 58031, 441, 13, 56, "Text",ExpressionUUID->"78a0f2be-f9d7-49fa-9a61-c74f9a2ce718"],
Cell[3293351, 58046, 474, 14, 43, "Text",ExpressionUUID->"1e26be50-7d7d-46ad-863c-7d8099d07345"],
Cell[3293828, 58062, 536, 18, 57, "Text",ExpressionUUID->"7eb53a90-0244-4f6b-8534-7aee6f3fc967"],
Cell[3294367, 58082, 386, 11, 43, "Text",ExpressionUUID->"2d37129b-8bd2-4654-bcf9-7e8aa9c4cb3c"],
Cell[3294756, 58095, 411, 12, 43, "Text",ExpressionUUID->"271b1187-d3cf-4d70-a8cd-fc4ee865a58f"],
Cell[3295170, 58109, 459, 12, 64, "Text",ExpressionUUID->"ec52bdb3-f04b-4cd8-86c7-02bdfa1d3320"]
}, Closed]],
Cell[CellGroupData[{
Cell[3295666, 58126, 101, 0, 30, "Subsubsection",ExpressionUUID->"71e60012-2c68-4195-84aa-ff456de6d999"],
Cell[3295770, 58128, 258, 6, 32, "Text",ExpressionUUID->"51ad64cc-1f2b-4f86-9894-f1552068a156"],
Cell[3296031, 58136, 2719, 48, 174, "Text",ExpressionUUID->"39fb5089-0e0e-4491-b0c9-cdf2b670591f"],
Cell[3298753, 58186, 283, 8, 38, "Text",ExpressionUUID->"95ab402c-89b6-4603-8848-18dd223b67d8"],
Cell[3299039, 58196, 635, 20, 60, "Text",ExpressionUUID->"fc01fc91-b235-450f-9b52-45377f16cf4d"],
Cell[3299677, 58218, 295, 7, 38, "Text",ExpressionUUID->"166e4a45-e3d6-4867-9dc9-b544a3df559c"],
Cell[3299975, 58227, 550, 18, 66, "Text",ExpressionUUID->"deeec4f0-89f2-42cf-a806-6b0439c272eb"],
Cell[3300528, 58247, 161, 3, 38, "Text",ExpressionUUID->"c8b74010-e78b-46ac-8115-48f664b6e3b3"],
Cell[3300692, 58252, 465, 15, 54, "Text",ExpressionUUID->"ff02c077-69f3-406c-8536-0e4d2b16d0a6"],
Cell[3301160, 58269, 407, 13, 34, "Answer",ExpressionUUID->"c0af8962-7835-4868-8314-02329de4b90c"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3301640, 58290, 279, 7, 61, "Subchapter",ExpressionUUID->"368590f4-59cb-4037-a378-487afad6d1a4"],
Cell[3301922, 58299, 435, 6, 53, "Text",ExpressionUUID->"9e3b8cf7-8e74-478b-8c36-b8773742d5d7"],
Cell[3302360, 58307, 269, 5, 255, "Output",ExpressionUUID->"cd1afad0-a6c2-4f7d-9724-d1973c080c67"],
Cell[3302632, 58314, 761, 16, 101, "Text",ExpressionUUID->"1ac77b54-e76d-4213-96e1-0ef2a7260317"],
Cell[3303396, 58332, 1573, 30, 363, "Text",ExpressionUUID->"62a0df88-6087-41cb-987b-093895d54c62"],
Cell[CellGroupData[{
Cell[3304994, 58366, 86, 0, 69, "Section",ExpressionUUID->"968e0fc8-89a6-4de1-beaf-f7739d46e5fe"],
Cell[3305083, 58368, 270, 4, 53, "Text",ExpressionUUID->"a7f4aa6e-7013-453f-9a76-74de2f2f0e12"],
Cell[3305356, 58374, 1679, 51, 153, "Output",ExpressionUUID->"77de0cad-6df6-4932-812a-540486309226"],
Cell[3307038, 58427, 365, 7, 58, "Ejercicio",ExpressionUUID->"e764b4bf-40e9-40fb-be2a-c2c0226cc185"],
Cell[CellGroupData[{
Cell[3307428, 58438, 137, 2, 47, "Solucion",ExpressionUUID->"7c0f7ac9-589a-49cc-86e8-63785a0f307a"],
Cell[CellGroupData[{
Cell[3307590, 58444, 85, 0, 30, "Subsubsection",ExpressionUUID->"b2ccffdb-3720-4b62-9cfe-384255641b21"],
Cell[3307678, 58446, 123, 0, 32, "Text",ExpressionUUID->"55d2627c-a0d0-4e65-877e-89d234a0052e"],
Cell[3307804, 58448, 4579, 99, 408, "Output",ExpressionUUID->"3aff32df-2661-4c83-8b72-77c729b38b32"],
Cell[3312386, 58549, 108, 1, 38, "Text",ExpressionUUID->"3c92dca9-58a0-40d4-a6df-d9b0aff6c585"],
Cell[3312497, 58552, 1821, 51, 153, "Output",ExpressionUUID->"bc31bf10-6f62-49e6-95ff-6300be47b502"]
}, Closed]],
Cell[CellGroupData[{
Cell[3314355, 58608, 96, 0, 30, "Subsubsection",ExpressionUUID->"071d5ba5-b1f2-4f71-bee2-946a66cc2a2f"],
Cell[3314454, 58610, 410, 6, 53, "Text",ExpressionUUID->"41c1ffd3-22ba-458a-9b2f-084062df79cd"],
Cell[3314867, 58618, 744, 21, 67, "Answer",ExpressionUUID->"17936ae7-3030-4cab-9092-3d59ccd0c087"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3315672, 58646, 97, 0, 48, "Section",ExpressionUUID->"32650f26-486b-4f8e-b584-f8748d18995a"],
Cell[3315772, 58648, 347, 5, 53, "Text",ExpressionUUID->"f4e05c50-bc3e-4c97-93aa-a7c4fef9af1a"],
Cell[3316122, 58655, 979, 18, 119, "Text",ExpressionUUID->"a9e0b634-5327-437e-b725-ed3e557d5352"],
Cell[3317104, 58675, 132, 0, 38, "Text",ExpressionUUID->"4487aa88-3c25-48fd-a92f-536884618d7c"],
Cell[3317239, 58677, 516, 15, 40, "Text",ExpressionUUID->"47d8ede1-788d-427a-a181-6bfe5eab07a4"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3317804, 58698, 126, 0, 61, "Subchapter",ExpressionUUID->"8d75dfbc-2d4e-424b-9435-9f9f3ebdd3cb"],
Cell[3317933, 58700, 311, 4, 53, "Text",ExpressionUUID->"2b0bd7c8-a465-492d-af68-552623145ae4"],
Cell[CellGroupData[{
Cell[3318269, 58708, 85, 0, 69, "Section",ExpressionUUID->"c84d16c6-5483-40d5-b0e6-bf5020afabb2"],
Cell[3318357, 58710, 329, 9, 37, "Text",ExpressionUUID->"cd1d4dbd-b8af-477f-bbbd-146f1c4945fb"],
Cell[CellGroupData[{
Cell[3318711, 58723, 137, 2, 47, "Solucion",ExpressionUUID->"00f8955e-26df-4bcb-bfbe-4f89fada3255"],
Cell[3318851, 58727, 568, 18, 37, "Text",ExpressionUUID->"bd6c80dd-05b5-43d9-87d4-5a95751996e4"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3319468, 58751, 85, 0, 48, "Section",ExpressionUUID->"97ca66b1-3602-4417-b457-53f8e428c828"],
Cell[3319556, 58753, 463, 15, 50, "Text",ExpressionUUID->"f7d6c6fc-19fe-42dd-8a79-2a046c431abc"],
Cell[CellGroupData[{
Cell[3320044, 58772, 137, 2, 47, "Solucion",ExpressionUUID->"219b281f-0802-417b-b093-6e8208e945e5"],
Cell[3320184, 58776, 1342, 46, 122, "Text",ExpressionUUID->"86fe65aa-8da6-48d2-81e5-c468a1a45fbd"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3321575, 58828, 85, 0, 48, "Section",ExpressionUUID->"bca53e32-bb9c-43a7-82cf-6df6dc348704"],
Cell[3321663, 58830, 365, 10, 32, "Text",ExpressionUUID->"bc9827a3-5c99-42be-b7d6-49b9e9c950e8"],
Cell[CellGroupData[{
Cell[3322053, 58844, 137, 2, 47, "Solucion",ExpressionUUID->"1e6cbb28-9811-4507-8938-28fbe5c832ff"],
Cell[3322193, 58848, 797, 24, 54, "Text",ExpressionUUID->"21e1ab57-9ea3-4653-90a1-78c25c7e24d5"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3323051, 58879, 974, 22, 55, "Section",ExpressionUUID->"d0e1d613-dd78-408c-b00d-02f7b2a49ef8"],
Cell[3324028, 58903, 348, 6, 32, "Text",ExpressionUUID->"70fc07e7-cc24-4d6c-929b-bd4289c6eb83"],
Cell[CellGroupData[{
Cell[3324401, 58913, 430, 8, 57, "Item",ExpressionUUID->"8f5fed36-bc01-4cbb-bfcf-3e78d0f1306f"],
Cell[3324834, 58923, 2112, 58, 125, "Item",ExpressionUUID->"e61e856b-d3ec-4200-9fdf-6a6e21f3c91a"]
}, Open  ]],
Cell[3326961, 58984, 197694, 3412, 520, "Output",ExpressionUUID->"1a0a6e37-e5fa-42a5-8d05-27ffc85c2388"]
}, Closed]],
Cell[CellGroupData[{
Cell[3524692, 62401, 96, 0, 48, "Section",ExpressionUUID->"96e3774f-d2a4-4b43-8d62-302214b5c34a"],
Cell[CellGroupData[{
Cell[3524813, 62405, 105, 0, 31, "Subsection",ExpressionUUID->"339fd1dd-c1f5-4f87-aa38-2ce14b3079ad"],
Cell[3524921, 62407, 109, 0, 32, "Text",ExpressionUUID->"83dd5f51-3425-410f-bf07-839a34e0d555"],
Cell[3525033, 62409, 501, 15, 51, "ItemNumbered",ExpressionUUID->"efb16166-6960-4b98-b33e-e805b2b22e0f"],
Cell[3525537, 62426, 338, 9, 38, "ItemNumbered",ExpressionUUID->"2c45318a-5a47-4ee7-8e1d-d5c9acdd9da0"],
Cell[3525878, 62437, 373, 9, 38, "ItemNumbered",ExpressionUUID->"2ffa0a8b-82b7-407d-b45d-53b42065eb1f"],
Cell[3526254, 62448, 270, 6, 38, "ItemNumbered",ExpressionUUID->"b9e2130d-05cf-4434-b28e-05be6db015d3"],
Cell[3526527, 62456, 336, 10, 43, "ItemNumbered",ExpressionUUID->"cdd0969b-97bc-4bd2-8bc4-032b6f1df413"],
Cell[CellGroupData[{
Cell[3526888, 62470, 107, 0, 30, "Subsubsection",ExpressionUUID->"663da399-cf5d-4858-a8d2-713ce79e6d0e"],
Cell[CellGroupData[{
Cell[3527020, 62474, 501, 15, 45, "ItemNumbered",ExpressionUUID->"bb6901b1-f3fa-4d75-a086-6c338c4a0d5f"],
Cell[3527524, 62491, 1344, 40, 100, "Text",ExpressionUUID->"385cb4b7-9d0c-4694-a590-0f3865afdc52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3528905, 62536, 338, 9, 38, "ItemNumbered",ExpressionUUID->"4fcc8032-c43c-45c1-9208-3b635e597ba3"],
Cell[3529246, 62547, 1115, 33, 82, "Text",ExpressionUUID->"b7fda0b5-7a4d-40cd-aa46-8c9bd73bd857"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3530398, 62585, 373, 9, 38, "ItemNumbered",ExpressionUUID->"70fad394-493b-4273-bbbb-5e66c6020376"],
Cell[3530774, 62596, 1377, 38, 130, "Text",ExpressionUUID->"f7279bf4-2c3f-4343-aa66-e824007edcb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3532188, 62639, 270, 6, 38, "ItemNumbered",ExpressionUUID->"a5b3e5dd-20f0-4f0d-ae82-8042d5ef853b"],
Cell[3532461, 62647, 723, 21, 60, "Text",ExpressionUUID->"67bbbe92-10b8-4e64-adec-0c2bc8d279b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3533221, 62673, 336, 10, 43, "ItemNumbered",ExpressionUUID->"e78aeaeb-f8db-456f-975c-f6e3338c3448"],
Cell[3533560, 62685, 1962, 63, 152, "Text",ExpressionUUID->"e24cfb62-2c3b-49b9-98e3-9c15dd303934"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3535583, 62755, 108, 0, 31, "Subsection",ExpressionUUID->"267eda7d-26fa-414b-a7ec-ad686846ad71"],
Cell[3535694, 62757, 227, 3, 32, "ItemNumbered",ExpressionUUID->"05514859-83c0-4fcb-9392-9098026fe374"],
Cell[3535924, 62762, 149, 2, 38, "ItemNumbered",ExpressionUUID->"f9ce881b-74d8-48ba-a9bf-d197312ba7e3"],
Cell[3536076, 62766, 156, 2, 38, "ItemNumbered",ExpressionUUID->"3904ab2b-bc78-4ce9-8505-df041850e0d3"],
Cell[3536235, 62770, 150, 2, 38, "ItemNumbered",ExpressionUUID->"80a3d296-539d-43a0-bf11-627a5b61be16"],
Cell[3536388, 62774, 201, 3, 38, "ItemNumbered",ExpressionUUID->"b5e389be-a327-45c5-9997-9e838826bca2"],
Cell[CellGroupData[{
Cell[3536614, 62781, 107, 0, 30, "Subsubsection",ExpressionUUID->"fb3d85f6-c540-478e-8815-e63ec2c8b6ec"],
Cell[3536724, 62783, 227, 3, 32, "ItemNumbered",ExpressionUUID->"69a169a8-07f1-4bc2-a258-3989999992ac"],
Cell[3536954, 62788, 771, 21, 57, "ItemParagraph",ExpressionUUID->"46f04e3c-5ad9-4319-956f-11a44b4ba2d4",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3537728, 62811, 149, 2, 38, "ItemNumbered",ExpressionUUID->"a2bf950a-7e52-4700-85b6-efc3b463c11f"],
Cell[3537880, 62815, 1316, 42, 62, "ItemParagraph",ExpressionUUID->"ddbb12fc-6f74-4eca-a63d-9e34b1621a2e",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3539199, 62859, 156, 2, 38, "ItemNumbered",ExpressionUUID->"de703737-417a-4a96-8533-01b2baf7261c"],
Cell[3539358, 62863, 1437, 48, 95, "ItemParagraph",ExpressionUUID->"e2f735ea-c5f3-49b7-9859-415b24ebc0f7",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3540798, 62913, 150, 2, 38, "ItemNumbered",ExpressionUUID->"dbe238e3-887d-4aad-99c8-b833ba4b099a"],
Cell[3540951, 62917, 1384, 45, 62, "ItemParagraph",ExpressionUUID->"eabbc238-96f9-4e16-bc96-ee4c58da29ff",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[3542338, 62964, 201, 3, 38, "ItemNumbered",ExpressionUUID->"a43f4aa4-90c5-4915-b3f3-4c65726e6f37"],
Cell[3542542, 62969, 1843, 59, 62, "ItemParagraph",ExpressionUUID->"75376f7c-8913-4148-bb72-30ad8f1ff647",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3544458, 63036, 139, 4, 75, "Chapter",ExpressionUUID->"7ace26c7-4d49-466c-a986-59fd3d4d883a"],
Cell[CellGroupData[{
Cell[3544622, 63044, 99, 0, 61, "Subchapter",ExpressionUUID->"ad804378-7210-4fef-b71f-674c82bbfcb4"],
Cell[3544724, 63046, 6802, 90, 199, "Resumen",ExpressionUUID->"aa943cfb-ced1-4019-84cd-0512338a2016"]
}, Closed]],
Cell[CellGroupData[{
Cell[3551563, 63141, 86, 0, 61, "Subchapter",ExpressionUUID->"db4e7cbc-2951-46d8-91b4-274e2c40c8dd"],
Cell[3551652, 63143, 1047, 30, 53, "Text",ExpressionUUID->"aa90bb58-fcae-416d-9149-d531a30473a8"],
Cell[3552702, 63175, 1040, 35, 38, "Text",ExpressionUUID->"38af4fd2-d1ea-4e67-b2fd-ff4ae5c3b4a5"],
Cell[3553745, 63212, 1594, 34, 305, "Output",ExpressionUUID->"db1e8061-8e22-4c72-87b6-29eda12e0818"],
Cell[3555342, 63248, 1706, 47, 156, "Output",ExpressionUUID->"f1be0690-b36a-41e4-a6ce-cbf251b0d065"],
Cell[CellGroupData[{
Cell[3557073, 63299, 137, 2, 47, "Solucion",ExpressionUUID->"07bf8129-1003-4b13-899e-3df21a470ea6"],
Cell[CellGroupData[{
Cell[3557235, 63305, 250, 6, 30, "Subsubsection",ExpressionUUID->"a9d6b2cd-e7ac-4b45-a1f9-8b526592f217"],
Cell[3557488, 63313, 662, 19, 32, "Text",ExpressionUUID->"db011e2f-0a26-4b54-88f7-201efe8ac1d8"],
Cell[3558153, 63334, 864, 32, 162, "Text",ExpressionUUID->"b5da9cdb-681c-4bca-9a6e-bc2a58d860cc"],
Cell[3559020, 63368, 281, 8, 43, "Text",ExpressionUUID->"563104da-3828-445d-88f4-bc2048a81187"]
}, Closed]],
Cell[CellGroupData[{
Cell[3559338, 63381, 250, 6, 30, "Subsubsection",ExpressionUUID->"73ca23bd-d39a-4365-96a8-606a9f338e9e"],
Cell[3559591, 63389, 668, 19, 32, "Text",ExpressionUUID->"471ee864-0a39-4483-9abe-bcbf05de2f1c"],
Cell[3560262, 63410, 866, 32, 162, "Text",ExpressionUUID->"3980c956-ccd7-4aff-90f4-e1b58df3f741"],
Cell[3561131, 63444, 281, 8, 43, "Text",ExpressionUUID->"d41fd7e6-db03-467d-a56e-d821a6b9ad75"]
}, Closed]],
Cell[CellGroupData[{
Cell[3561449, 63457, 250, 6, 30, "Subsubsection",ExpressionUUID->"fb1fbbc6-6806-44be-a72b-4b60c5d29c49"],
Cell[3561702, 63465, 669, 19, 32, "Text",ExpressionUUID->"8f446119-3c07-4ee8-9d3f-8b9da7a7e1dc"],
Cell[3562374, 63486, 868, 32, 162, "Text",ExpressionUUID->"950eba52-7dd5-426b-8b1c-d5694888d581"],
Cell[3563245, 63520, 282, 8, 43, "Text",ExpressionUUID->"58a924c7-c23f-4c28-8767-15cbb1913d54"]
}, Closed]],
Cell[CellGroupData[{
Cell[3563564, 63533, 250, 6, 30, "Subsubsection",ExpressionUUID->"31cd1eff-fa28-41a9-9101-e3f6f2ba4cad"],
Cell[3563817, 63541, 1548, 49, 67, "Text",ExpressionUUID->"f11b046d-9d92-4d81-bc28-aedfcd078839"],
Cell[3565368, 63592, 726, 26, 128, "Text",ExpressionUUID->"f861d1ea-b80a-4b5a-94e0-93d763c0247b"],
Cell[3566097, 63620, 246, 6, 38, "Text",ExpressionUUID->"76574bae-e185-4a4f-8d05-dcc7ec112ae9"]
}, Closed]],
Cell[CellGroupData[{
Cell[3566380, 63631, 250, 6, 30, "Subsubsection",ExpressionUUID->"a9f32bc9-fd2c-4bdf-a6ef-77829e4b0498"],
Cell[3566633, 63639, 1661, 53, 74, "Text",ExpressionUUID->"7863af7d-3cb6-4f24-8a81-9904f866fc43"],
Cell[3568297, 63694, 1129, 40, 264, "Text",ExpressionUUID->"9502cd87-fb6c-45c4-a87a-1d8dec9a5249"],
Cell[3569429, 63736, 268, 7, 47, "Text",ExpressionUUID->"db2d05c0-1f6e-40e8-9109-0b8723ef12a2"]
}, Closed]],
Cell[CellGroupData[{
Cell[3569734, 63748, 85, 0, 30, "Subsubsection",ExpressionUUID->"372f8b1b-f705-4c8e-895c-64326843d55a"],
Cell[3569822, 63750, 1965, 54, 173, "Output",ExpressionUUID->"27cba75e-5d1f-4e72-b926-7219baf8c8b8"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3571848, 63811, 974, 22, 55, "Section",ExpressionUUID->"144c9443-485c-451c-9295-6cf4077b7257"],
Cell[3572825, 63835, 452, 14, 32, "Text",ExpressionUUID->"f1c7b079-3243-43f9-8af7-ca42e4628eb3"],
Cell[3573280, 63851, 255467, 4375, 498, "Output",ExpressionUUID->"6374eedb-34e8-499d-a970-4e2901b2e552"]
}, Closed]],
Cell[CellGroupData[{
Cell[3828784, 68231, 96, 0, 48, "Section",ExpressionUUID->"7b4b0aab-99d4-4472-8097-8738ff704f8d"],
Cell[CellGroupData[{
Cell[3828905, 68235, 105, 0, 31, "Subsection",ExpressionUUID->"6a9c297d-24fc-4bf5-8677-c76ce138b503"],
Cell[3829013, 68237, 391, 12, 48, "ItemNumbered",ExpressionUUID->"26a825c9-8a94-41d6-9178-febb09a56b04"],
Cell[3829407, 68251, 357, 10, 55, "ItemNumbered",ExpressionUUID->"08d5ba9e-df56-41e1-b1df-46fcffa19651"],
Cell[3829767, 68263, 397, 12, 50, "ItemNumbered",ExpressionUUID->"dffbd5c1-a2d6-4222-9ce6-298a3354089c"],
Cell[3830167, 68277, 476, 17, 58, "ItemNumbered",ExpressionUUID->"9db6fe93-d817-44f0-a19a-8b8208ef3419"],
Cell[CellGroupData[{
Cell[3830668, 68298, 107, 0, 30, "Subsubsection",ExpressionUUID->"06fbc493-9304-4f8f-9bdc-cb690ca917d2"],
Cell[3830778, 68300, 391, 12, 48, "ItemNumbered",ExpressionUUID->"ee4237aa-2df6-4eee-a13b-facb14813f23"],
Cell[3831172, 68314, 1697, 59, 192, "Text",ExpressionUUID->"c08007f1-b501-4661-94dc-638e2068ebb1"],
Cell[3832872, 68375, 383, 11, 55, "ItemNumbered",ExpressionUUID->"b4a1a15a-9fc1-4848-9e4b-9c1ad2d8a3e9"],
Cell[3833258, 68388, 1304, 41, 154, "Text",ExpressionUUID->"c8f1ffc6-db89-4001-be09-0dd4f3829700"],
Cell[3834565, 68431, 397, 12, 50, "ItemNumbered",ExpressionUUID->"344bfc83-3f09-46d4-b8cd-c4a74d88dcc1"],
Cell[3834965, 68445, 2311, 77, 224, "Text",ExpressionUUID->"5702728f-7789-4924-9c1e-dc63ea8d8e01"],
Cell[3837279, 68524, 476, 17, 58, "ItemNumbered",ExpressionUUID->"2ef71dab-948f-43c9-b278-3bf63d2dddb4"],
Cell[3837758, 68543, 2360, 80, 214, "Text",ExpressionUUID->"fe5e9d2c-d714-4753-95be-a95607d692b8"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3840167, 68629, 108, 0, 31, "Subsection",ExpressionUUID->"bb38bc0f-2e6d-4e0c-83b0-a3bac62869ec"],
Cell[3840278, 68631, 260, 6, 32, "ItemNumbered",ExpressionUUID->"027fd08f-4bda-4a09-82af-28f7d57cd606",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[3840541, 68639, 1676, 42, 505, "Output",ExpressionUUID->"68e54efd-79ac-4aff-9ee5-9265730e1a96",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[3842220, 68683, 308, 8, 39, "SubitemNumbered",ExpressionUUID->"94268551-a224-4387-b3fe-a8f8eaf47cea",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[3842531, 68693, 467, 11, 39, "SubitemNumbered",ExpressionUUID->"97b79377-0350-4af5-a0b6-3eaf36951e5d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[3843001, 68706, 212, 4, 39, "SubitemNumbered",ExpressionUUID->"77bb0d9d-a058-4216-a593-6ab07abfff56",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[3843216, 68712, 491, 9, 78, "ItemNumbered",ExpressionUUID->"2edbe0e5-aa6c-4358-ace4-91ef8427cd60",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[3843710, 68723, 226, 5, 38, "ItemNumbered",ExpressionUUID->"d994f17b-31a3-4d8d-b990-50b4e5515de3",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[3843939, 68730, 863, 32, 80, "Text",ExpressionUUID->"9a82bc16-0542-4158-a8c1-e0a9a2fc4c79",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[3844827, 68766, 107, 0, 30, "Subsubsection",ExpressionUUID->"1fa03cc1-1a64-4bd8-b3d7-20d07255783a"],
Cell[3844937, 68768, 182, 3, 32, "ItemNumbered",ExpressionUUID->"c6639c02-fbf9-45f5-85b8-4fee7b780e4a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[3845122, 68773, 3369, 98, 332, "SubitemNumbered",ExpressionUUID->"91ebe1e9-7bdb-4f80-adb7-1770f3a86b40",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[3848494, 68873, 1357, 35, 124, "SubitemNumbered",ExpressionUUID->"e3ec102d-a157-40a5-ba9e-807f39b6daed",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[3849854, 68910, 886, 23, 97, "SubitemNumbered",ExpressionUUID->"e06bdfc2-bd18-4574-b7df-ee060faabbf7",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[3850743, 68935, 475, 9, 59, "ItemNumbered",ExpressionUUID->"8befdee3-4234-443e-8641-bfb75ca7bad1",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[3851221, 68946, 1695, 48, 125, "ItemParagraph",ExpressionUUID->"6c10be1c-a847-4685-8ff2-61238d875b95"],
Cell[3852919, 68996, 2849, 96, 282, "ItemNumbered",ExpressionUUID->"91eed54a-12b6-481e-b52c-4ff83fd0bf7a",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

(* NotebookSignature zwTySHbEY3UHNBKYKTAoGhtz *)
